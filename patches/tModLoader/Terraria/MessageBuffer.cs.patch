--- src/Terraria\Terraria\MessageBuffer.cs
+++ src/tModLoader\Terraria\MessageBuffer.cs
@@ -15,6 +_,9 @@
 using Terraria.Localization;
 using Terraria.Net;
 using Terraria.UI;
+using Terraria.ModLoader;
+using Terraria.ModLoader.Exceptions;
+using Terraria.ModLoader.IO;
 
 namespace Terraria
 {
@@ -86,14 +_,13 @@
 			int num = start + 1;
 			byte b = this.readBuffer[start];
 			messageType = (int)b;
-			if (b >= 119)
-			{
-				return;
-			}
 			Main.rxMsg++;
 			Main.rxData += length;
-			Main.rxMsgType[(int)b]++;
-			Main.rxDataType[(int)b] += length;
+			if (b < Main.maxMsg)
+			{
+				Main.rxMsgType[(int)b]++;
+				Main.rxDataType[(int)b] += length;
+			}
 			if (Main.netMode == 1 && Netplay.Connection.StatusMax > 0)
 			{
 				Netplay.Connection.StatusCount++;
@@ -113,7 +_,7 @@
 				NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[1], 0, 0f, 0f, 0f, 0, 0, 0);
 				return;
 			}
-			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68)
+			if (Main.netMode == 2 && Netplay.Clients[this.whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68 && b < 250)
 			{
 				NetMessage.BootPlayer(this.whoAmI, Lang.mp[2]);
 			}
@@ -122,6 +_,10 @@
 				this.ResetReader();
 			}
 			this.reader.BaseStream.Position = (long)num;
+			if (ModNet.HijackGetData(ref b, ref this.reader, this.whoAmI))
+			{
+				return;
+			}
 			switch (b)
 			{
 				case 1:
@@ -140,7 +_,8 @@
 							return;
 						}
 						string a = this.reader.ReadString();
-						if (!(a == "Terraria" + 188))
+						ModNet.isModdedClient[whoAmI] = a == ModLoader.ModLoader.versionedName;
+						if (!ModNet.isModdedClient[whoAmI] && !(a == "Terraria" + 188 && ModNet.AllowVanillaClients))
 						{
 							NetMessage.SendData(2, this.whoAmI, -1, Lang.mp[4], 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
@@ -148,6 +_,11 @@
 						if (string.IsNullOrEmpty(Netplay.ServerPassword))
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -220,6 +_,7 @@
 						{
 							NetMessage.SendData(5, -1, -1, "", num2, (float)(58 + player.armor.Length + player.dye.Length + player.miscEquips.Length + player.miscDyes.Length + player.bank.item.Length + player.bank2.item.Length + 2 + num6), (float)player.bank3.item[num6].prefix, 0f, 0, 0, 0);
 						}
+						PlayerHooks.SyncPlayer(player, -1, -1, true);
 						NetMessage.SendData(6, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 						if (Netplay.Connection.State == 2)
 						{
@@ -540,6 +_,10 @@
 							Main.StopSlimeRain(true);
 						}
 						Main.invasionType = (int)this.reader.ReadSByte();
+						if (!ModNet.AllowVanillaClients)
+						{
+							WorldIO.ReceiveModData(reader);
+						}
 						Main.LobbyId = this.reader.ReadUInt64();
 						Sandstorm.IntendedSeverity = this.reader.ReadSingle();
 						if (Netplay.Connection.State == 3)
@@ -1150,7 +_,7 @@
 								tile.wire4(bitsByte12[7]);
 								if (tile.wall > 0)
 								{
-									tile.wall = this.reader.ReadByte();
+									tile.wall = ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16();
 								}
 								if (flag9)
 								{
@@ -1186,7 +_,7 @@
 							}
 							int num64 = num61;
 							Item item = Main.item[num64];
-							bool newAndShiny = (item.newAndShiny || item.netID != num63) && ItemSlot.Options.HighlightNewItems && (num63 < 0 || num63 >= 3884 || !ItemID.Sets.NeverShiny[num63]);
+							bool newAndShiny = (item.newAndShiny || item.netID != num63) && ItemSlot.Options.HighlightNewItems && (num63 < 0 || !ItemID.Sets.NeverShiny[num63]);
 							item.netDefaults(num63);
 							item.newAndShiny = newAndShiny;
 							item.Prefix(pre);
@@ -1194,6 +_,7 @@
 							item.position = position;
 							item.velocity = velocity;
 							item.active = true;
+							ItemIO.ReceiveModData(item, reader);
 							if (b == 90)
 							{
 								item.instanced = true;
@@ -1239,6 +_,7 @@
 								item3.position = position;
 								item3.velocity = velocity;
 								item3.active = true;
+								ItemIO.ReceiveModData(item3, reader);
 								item3.owner = Main.myPlayer;
 								if (flag10)
 								{
@@ -1376,8 +_,8 @@
 						if (nPC.type >= 0 && nPC.type < 580 && Main.npcCatchable[nPC.type])
 						{
 							nPC.releaseOwner = (short)this.reader.ReadByte();
-							return;
-						}
+						}
+						NPCLoader.ReceiveExtraAI(nPC, reader);
 						return;
 					}
 				case 24:
@@ -1426,6 +_,8 @@
 						{
 							return;
 						}
+						if (CommandManager.HandleCommand(text, new PlayerCommandCaller(Main.player[this.whoAmI])))
+							return;
 						string text3 = text.ToLower();
 						if (text3 == Lang.mp[6] || text3 == Lang.mp[21])
 						{
@@ -1544,6 +_,7 @@
 						int num84 = (int)this.reader.ReadInt16();
 						BitsByte bitsByte15 = this.reader.ReadByte();
 						float[] array3 = new float[Projectile.maxAI];
+						//patch file: bitsByte15
 						for (int num85 = 0; num85 < Projectile.maxAI; num85++)
 						{
 							if (bitsByte15[num85])
@@ -1560,6 +_,7 @@
 						{
 							num86 = -1;
 						}
+						byte[] extraAI = ProjectileLoader.ReadExtraAI(reader, bitsByte15);
 						if (Main.netMode == 2)
 						{
 							num83 = this.whoAmI;
@@ -1613,6 +_,7 @@
 							projectile.projUUID = num86;
 							Main.projectileIdentity[num83, num86] = num87;
 						}
+						ProjectileLoader.ReceiveExtraAI(projectile, extraAI);
 						projectile.ProjectileFixDesperation();
 						if (Main.netMode == 2)
 						{
@@ -1757,6 +_,7 @@
 						Main.chest[num101].item[num102].netDefaults(type5);
 						Main.chest[num101].item[num102].Prefix(pre2);
 						Main.chest[num101].item[num102].stack = stack4;
+						ItemIO.ReceiveModData(Main.chest[num101].item[num102], reader);
 						Recipe.FindRecipes();
 						return;
 					}
@@ -1820,7 +_,7 @@
 						}
 						return;
 					}
-				case 34:
+				case 34: // TODO, check that this didn't get messed up...why % 100?
 					{
 						byte b8 = this.reader.ReadByte();
 						int num107 = (int)this.reader.ReadInt16();
@@ -1831,36 +_,57 @@
 						{
 							num110 = 0;
 						}
-						if (Main.netMode == 2)
-						{
-							if (b8 == 0)
-							{
-								int num111 = WorldGen.PlaceChest(num107, num108, 21, false, num109);
+						ushort modType = 0;
+						if (b8 >= 100)
+						{
+							modType = this.reader.ReadUInt16();
+						}
+						if (Main.netMode == 2)
+						{
+							if (b8 % 100 == 0)
+							{
+								if (modType == 0)
+								{
+									modType = TileID.Containers;
+								}
+								int num111 = WorldGen.PlaceChest(num107, num108, modType, false, num109);
 								if (num111 == -1)
 								{
-									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num111, 0, 0);
-									Item.NewItem(num107 * 16, num108 * 16, 32, 32, Chest.chestItemSpawn[num109], 1, true, 0, false, false);
+									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num111, modType, 0);
+									int itemSpawn = b8 < 100 ? Chest.chestItemSpawn[num109] : TileLoader.GetTile(modType).chestDrop;
+									if (itemSpawn > 0)
+									{
+										Item.NewItem(num107 * 16, num108 * 16, 32, 32, itemSpawn, 1, true, 0, false, false);
+									}
 									return;
 								}
-								NetMessage.SendData(34, -1, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num111, 0, 0);
+								NetMessage.SendData(34, -1, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num111, modType, 0);
 								return;
 							}
-							else if (b8 == 2)
-							{
-								int num112 = WorldGen.PlaceChest(num107, num108, 88, false, num109);
+							else if (b8 % 100 == 2)
+							{
+								if (modType == 0)
+								{
+									modType = TileID.Dressers;
+								}
+								int num112 = WorldGen.PlaceChest(num107, num108, modType, false, num109);
 								if (num112 == -1)
 								{
-									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num112, 0, 0);
-									Item.NewItem(num107 * 16, num108 * 16, 32, 32, Chest.dresserItemSpawn[num109], 1, true, 0, false, false);
+									NetMessage.SendData(34, this.whoAmI, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num112, modType, 0);
+									int itemSpawn = b8 < 100 ? Chest.dresserItemSpawn[num109] : TileLoader.GetTile(modType).dresserDrop;
+									if (itemSpawn > 0)
+									{
+										Item.NewItem(num107 * 16, num108 * 16, 32, 32, itemSpawn, 1, true, 0, false, false);
+									}
 									return;
 								}
-								NetMessage.SendData(34, -1, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num112, 0, 0);
+								NetMessage.SendData(34, -1, -1, "", (int)b8, (float)num107, (float)num108, (float)num109, num112, modType, 0);
 								return;
 							}
 							else
 							{
 								Tile tile2 = Main.tile[num107, num108];
-								if (tile2.type == 21 && b8 == 1)
+								if (TileLoader.IsChest(tile2.type) && b8 == 1)
 								{
 									if (tile2.frameX % 36 != 0)
 									{
@@ -1881,7 +_,7 @@
 								}
 								else
 								{
-									if (tile2.type != 88 || b8 != 3)
+									if (!TileLoader.IsDresser(tile2.type) || b8 != 3)
 									{
 										return;
 									}
@@ -1901,19 +_,23 @@
 								}
 							}
 						}
-						else if (b8 == 0)
+						else if (b8 % 100 == 0)
 						{
 							if (num110 == -1)
 							{
 								WorldGen.KillTile(num107, num108, false, false, false);
 								return;
 							}
-							WorldGen.PlaceChestDirect(num107, num108, 21, num109, num110);
+							if (modType == 0)
+							{
+								modType = TileID.Containers;
+							}
+							WorldGen.PlaceChestDirect(num107, num108, modType, num109, num110);
 							return;
 						}
 						else
 						{
-							if (b8 != 2)
+							if (b8 % 100 != 2)
 							{
 								Chest.DestroyChestDirect(num107, num108, num110);
 								WorldGen.KillTile(num107, num108, false, false, false);
@@ -1924,7 +_,11 @@
 								WorldGen.KillTile(num107, num108, false, false, false);
 								return;
 							}
-							WorldGen.PlaceDresserDirect(num107, num108, 88, num109, num110);
+							if (modType == 0)
+							{
+								modType = TileID.Dressers;
+							}
+							WorldGen.PlaceDresserDirect(num107, num108, modType, num109, num110);
 							return;
 						}
 						break;
@@ -1960,6 +_,10 @@
 						player9.zone2 = this.reader.ReadByte();
 						player9.zone3 = this.reader.ReadByte();
 						player9.zone4 = this.reader.ReadByte();
+						if (!ModNet.AllowVanillaClients)
+						{
+							PlayerHooks.ReceiveCustomBiomes(player9, reader);
+						}
 						if (Main.netMode == 2)
 						{
 							NetMessage.SendData(36, -1, this.whoAmI, "", num115, 0f, 0f, 0f, 0, 0, 0);
@@ -1991,6 +_,11 @@
 						if (a2 == Netplay.ServerPassword)
 						{
 							Netplay.Clients[this.whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI])
+							{
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
 							NetMessage.SendData(3, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 							return;
 						}
@@ -2234,7 +_,7 @@
 						Player player12 = Main.player[num141];
 						for (int num142 = 0; num142 < 22; num142++)
 						{
-							player12.buffType[num142] = (int)this.reader.ReadByte();
+							player12.buffType[num142] = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 							if (player12.buffType[num142] > 0)
 							{
 								player12.buffTime[num142] = 60;
@@ -2320,9 +_,9 @@
 				case 53:
 					{
 						int num146 = (int)this.reader.ReadInt16();
-						int type6 = (int)this.reader.ReadByte();
+						int type5 = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 						int time = (int)this.reader.ReadInt16();
-						Main.npc[num146].AddBuff(type6, time, true);
+						Main.npc[num146].AddBuff(type5, time, true);
 						if (Main.netMode == 2)
 						{
 							NetMessage.SendData(54, -1, -1, "", num146, 0f, 0f, 0f, 0, 0, 0);
@@ -2340,7 +_,7 @@
 						NPC nPC2 = Main.npc[num147];
 						for (int num148 = 0; num148 < 5; num148++)
 						{
-							nPC2.buffType[num148] = (int)this.reader.ReadByte();
+							nPC2.buffType[num148] = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 							nPC2.buffTime[num148] = (int)this.reader.ReadInt16();
 						}
 						return;
@@ -2348,7 +_,7 @@
 				case 55:
 					{
 						int num149 = (int)this.reader.ReadByte();
-						int num150 = (int)this.reader.ReadByte();
+						int num150 = (int)(ModNet.AllowVanillaClients ? reader.ReadByte() : reader.ReadUInt16());
 						int num151 = this.reader.ReadInt32();
 						if (Main.netMode == 2 && num149 != this.whoAmI && !Main.pvpBuff[num150])
 						{
@@ -2974,7 +_,7 @@
 							return;
 						}
 						TileEntity tileEntity2;
-						if (TileEntity.ByID.TryGetValue(num189, out tileEntity2) && (tileEntity2 is TETrainingDummy || tileEntity2 is TEItemFrame || tileEntity2 is TELogicSensor))
+						if (TileEntity.ByID.TryGetValue(num189, out tileEntity2) && (tileEntity2 is TETrainingDummy || tileEntity2 is TEItemFrame || tileEntity2 is TELogicSensor || tileEntity2 is ModTileEntity))
 						{
 							TileEntity.ByID.Remove(num189);
 							TileEntity.ByPosition.Remove(tileEntity2.Position);
@@ -3562,9 +_,34 @@
 						}
 						return;
 					}
+				case 250:
+					ModNet.HandleModPacket(reader, whoAmI);
+					return;
+				case 251:
+					if (Main.netMode == 1)
+					{
+						ModNet.SyncClientMods(reader);
+					}
+					else
+					{
+						ModNet.SendNetIDs(whoAmI);
+						NetMessage.SendData(3, whoAmI);
+					}
+					return;
+				case 252:
+					if (Main.netMode == 1)
+					{
+						ModNet.ReceiveMod(reader);
+					}
+					else
+					{
+						ModNet.SendMod(reader.ReadString(), whoAmI);
+					}
+					return;
 				default:
 					return;
 			}
+			//case 6
 			if (Main.netMode != 2)
 			{
 				return;
@@ -3576,7 +_,7 @@
 			NetMessage.SendData(7, this.whoAmI, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
 			Main.SyncAnInvasion(this.whoAmI);
 			return;
-			IL_4C6D:
+			IL_4C6D: //case 49
 			if (Netplay.Connection.State == 6)
 			{
 				Netplay.Connection.State = 10;
@@ -3586,7 +_,7 @@
 				return;
 			}
 			return;
-			IL_67C4:
+			IL_67C4: //case 92
 			int num227 = (int)this.reader.ReadInt16();
 			float num228 = this.reader.ReadSingle();
 			float num229 = this.reader.ReadSingle();

