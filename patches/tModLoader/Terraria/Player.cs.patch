--- src/Terraria\Terraria\Player.cs
+++ src/tModLoader\Terraria\Player.cs
@@ -27,6 +_,9 @@
 using Terraria.UI.Gamepad;
 using Terraria.Utilities;
 using Terraria.World.Generation;
+using Terraria.ModLoader;
+using Terraria.ModLoader.Exceptions;
+using Terraria.ModLoader.IO;
 
 namespace Terraria
 {
@@ -39,11 +_,13 @@
 			public static void PlayerConnect(int playerIndex)
 			{
 				PressurePlateHelper.ResetPlayer(playerIndex);
+				PlayerHooks.PlayerConnect(playerIndex);
 			}
 
 			public static void PlayerDisconnect(int playerIndex)
 			{
 				PressurePlateHelper.ResetPlayer(playerIndex);
+				PlayerHooks.PlayerDisconnect(playerIndex);
 			}
 
 			public static void EnterWorld(int playerIndex)
@@ -52,6 +_,7 @@
 				{
 					Player.Hooks.OnEnterWorld(Main.player[playerIndex]);
 				}
+				PlayerHooks.OnEnterWorld(playerIndex);
 			}
 		}
 
@@ -303,7 +_,7 @@
 		public const int SHIELD_PARRY_DURATION = 20;
 		public const int SHIELD_PARRY_DURATION_DRAWING_TWEAKER = 20;
 		public const int SHIELD_PARRY_DAMAGE_BUFF_MULTIPLIER = 5;
-		private static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
+		internal static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
 		public Player.OverheadMessage chatOverhead = default(Player.OverheadMessage);
 		public Player.SelectionRadial DpadRadial = new Player.SelectionRadial(Player.SelectionRadial.SelectionMode.Dpad4);
 		public Player.SelectionRadial CircularRadial = new Player.SelectionRadial(Player.SelectionRadial.SelectionMode.RadialCircular);
@@ -864,8 +_,28 @@
 		public bool oldAdjWater;
 		public bool oldAdjHoney;
 		public bool oldAdjLava;
-		public bool[] adjTile;
-		public bool[] oldAdjTile;
+		private bool[] _adjTile = new bool[TileLoader.TileCount];
+		public bool[] adjTile
+		{
+			get
+			{
+				if (_adjTile.Length != TileLoader.TileCount)
+					Array.Resize(ref _adjTile, TileLoader.TileCount);
+				return _adjTile;
+			}
+			set { _adjTile = value; }
+		}
+		private bool[] _oldAdjTile = new bool[TileLoader.TileCount];
+		public bool[] oldAdjTile
+		{
+			get
+			{
+				if (_oldAdjTile.Length != TileLoader.TileCount)
+					Array.Resize(ref _oldAdjTile, TileLoader.TileCount);
+				return _oldAdjTile;
+			}
+			set { _oldAdjTile = value; }
+		}
 		public static int defaultItemGrabRange = 38;
 		private static float itemGrabSpeed = 0.45f;
 		private static float itemGrabSpeedMax = 4f;
@@ -1806,7 +_,7 @@
 				return;
 			}
 			int num = time1;
-			if (Main.expertMode && this.whoAmI == Main.myPlayer && (type == 20 || type == 22 || type == 23 || type == 24 || type == 30 || type == 31 || type == 32 || type == 33 || type == 35 || type == 36 || type == 39 || type == 44 || type == 46 || type == 47 || type == 69 || type == 70 || type == 80))
+			if (Main.expertMode && this.whoAmI == Main.myPlayer && BuffLoader.LongerExpertDebuff(type))
 			{
 				num = (int)(Main.expertDebuffTime * (float)num);
 			}
@@ -1831,7 +_,10 @@
 			{
 				if (this.buffType[j] == type)
 				{
-					if (type == 94)
+					if (BuffLoader.ReApply(type, this, num, j))
+					{
+					}
+					else if (type == 94)
 					{
 						this.buffTime[j] += num;
 						if (this.buffTime[j] > Player.manaSickTimeMax)
@@ -1975,6 +_,7 @@
 					this.AddBuff(21, this.potionDelay, true);
 				}
 			}
+			ItemLoader.UseItem(item, this);
 			this.statLife += item.healLife;
 			this.statMana += item.healMana;
 			if (this.statLife > this.statLifeMax2)
@@ -1993,7 +_,10 @@
 			{
 				this.ManaEffect(item.healMana);
 			}
-			item.stack--;
+			if (ItemLoader.ConsumeItem(item, this))
+			{
+				item.stack--;
+			}
 			if (item.stack <= 0)
 			{
 				item.TurnToAir();
@@ -2009,7 +_,7 @@
 			for (int i = 0; i < 58; i++)
 			{
 				Item item = this.inventory[i];
-				if (item.stack > 0 && item.type > 0 && item.potion && item.healLife > 0)
+				if (item.stack > 0 && item.type > 0 && item.potion && item.healLife > 0 && ItemLoader.CanUseItem(item, this))
 				{
 					int num3 = item.healLife - num;
 					if (num2 < 0)
@@ -2042,7 +_,7 @@
 			}
 			for (int i = 0; i < 58; i++)
 			{
-				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion))
+				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion) && ItemLoader.CanUseItem(this.inventory[i], this))
 				{
 					Main.PlaySound(this.inventory[i].UseSound, this.position);
 					if (this.inventory[i].potion)
@@ -2058,6 +_,7 @@
 							this.AddBuff(21, this.potionDelay, true);
 						}
 					}
+					ItemLoader.UseItem(this.inventory[i], this);
 					this.statLife += this.inventory[i].healLife;
 					this.statMana += this.inventory[i].healMana;
 					if (this.statLife > this.statLifeMax2)
@@ -2080,7 +_,10 @@
 							this.ManaEffect(this.inventory[i].healMana);
 						}
 					}
-					this.inventory[i].stack--;
+					if (ItemLoader.ConsumeItem(this.inventory[i], this))
+					{
+						this.inventory[i].stack--;
+					}
 					if (this.inventory[i].stack <= 0)
 					{
 						this.inventory[i].TurnToAir();
@@ -2095,7 +_,7 @@
 		{
 			for (int i = 0; i < 58; i++)
 			{
-				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion))
+				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion) && ItemLoader.CanUseItem(this.inventory[i], this))
 				{
 					return this.inventory[i];
 				}
@@ -2119,7 +_,7 @@
 				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].buffType > 0 && !this.inventory[i].summon && this.inventory[i].buffType != 90)
 				{
 					int num = this.inventory[i].buffType;
-					bool flag = true;
+					bool flag = ItemLoader.CanUseItem(this.inventory[i], this);
 					for (int j = 0; j < 22; j++)
 					{
 						if (num == 27 && (this.buffType[j] == num || this.buffType[j] == 101 || this.buffType[j] == 102))
@@ -2186,6 +_,7 @@
 					}
 					if (flag)
 					{
+						ItemLoader.UseItem(this.inventory[i], this);
 						legacySoundStyle = this.inventory[i].UseSound;
 						int num2 = this.inventory[i].buffTime;
 						if (num2 == 0)
@@ -2195,7 +_,10 @@
 						this.AddBuff(num, num2, true);
 						if (this.inventory[i].consumable)
 						{
-							this.inventory[i].stack--;
+							if (ItemLoader.ConsumeItem(this.inventory[i], this))
+							{
+								this.inventory[i].stack--;
+							}
 							if (this.inventory[i].stack <= 0)
 							{
 								this.inventory[i].TurnToAir();
@@ -2257,6 +_,7 @@
 				if (!flag)
 				{
 					this.mount.SetMount(item.mountType, this, false);
+					ItemLoader.UseItem(item, this);
 					if (item.UseSound != null)
 					{
 						Main.PlaySound(item.UseSound, base.Center);
@@ -2304,7 +_,7 @@
 		public Item QuickMount_GetItemToUse()
 		{
 			Item item = null;
-			if (item == null && this.miscEquips[3].mountType != -1 && !MountID.Sets.Cart[this.miscEquips[3].mountType])
+			if (item == null && this.miscEquips[3].mountType != -1 && !MountID.Sets.Cart[this.miscEquips[3].mountType] && ItemLoader.CanUseItem(this.miscEquips[3], this))
 			{
 				item = this.miscEquips[3];
 			}
@@ -2312,7 +_,7 @@
 			{
 				for (int i = 0; i < 58; i++)
 				{
-					if (this.inventory[i].mountType != -1 && !MountID.Sets.Cart[this.inventory[i].mountType])
+					if (this.inventory[i].mountType != -1 && !MountID.Sets.Cart[this.inventory[i].mountType] && ItemLoader.CanUseItem(this.inventory[i], this))
 					{
 						item = this.inventory[i];
 						break;
@@ -2390,7 +_,15 @@
 			{
 				return;
 			}
-			if (item.shoot == 73)
+			bool? modCanGrapple = ProjectileLoader.CanUseGrapple(item.shoot, this);
+			if (modCanGrapple.HasValue)
+			{
+				if (!modCanGrapple.Value)
+				{
+					item = null;
+				}
+			}
+			else if (item.shoot == 73)
 			{
 				int num = 0;
 				for (int j = 0; j < 1000; j++)
@@ -2492,7 +_,10 @@
 				float shootSpeed = item.shootSpeed;
 				int damage = item.damage;
 				float knockBack = item.knockBack;
-				if (num7 == 13 || num7 == 32 || num7 == 315 || (num7 >= 230 && num7 <= 235) || num7 == 331)
+				bool? modSingleHook = ProjectileLoader.SingleGrappleHook(num7, this);
+				bool modSingleHookFalse = modSingleHook.HasValue ? !modSingleHook.Value : false;
+				bool modSingleHookTrue = modSingleHook.HasValue ? modSingleHook.Value : false;
+				if ((num7 == 13 || num7 == 32 || num7 == 315 || (num7 >= 230 && num7 <= 235) || num7 == 331 || modSingleHookTrue) && !modSingleHookFalse)
 				{
 					this.grappling[0] = -1;
 					this.grapCount = 0;
@@ -2500,6 +_,11 @@
 					{
 						if (Main.projectile[num8].active && Main.projectile[num8].owner == this.whoAmI)
 						{
+							bool? modSingleHook2 = ProjectileLoader.SingleGrappleHook(Main.projectile[num8].type, this);
+							if (modSingleHook2.HasValue && !modSingleHook2.Value)
+							{
+								continue;
+							}
 							if (Main.projectile[num8].type == 13)
 							{
 								Main.projectile[num8].Kill();
@@ -2513,6 +_,10 @@
 								Main.projectile[num8].Kill();
 							}
 							if (Main.projectile[num8].type >= 230 && Main.projectile[num8].type <= 235)
+							{
+								Main.projectile[num8].Kill();
+							}
+							if (modSingleHook2.HasValue && modSingleHook2.Value)
 							{
 								Main.projectile[num8].Kill();
 							}
@@ -2609,6 +_,7 @@
 					num7 = 646;
 				}
 				IL_828:
+				ProjectileLoader.UseGrapple(this, ref num7);
 				Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
 				float num22 = (float)Main.mouseX + Main.screenPosition.X - vector.X;
 				float num23 = (float)Main.mouseY + Main.screenPosition.Y - vector.Y;
@@ -3078,10 +_,16 @@
 					}
 				}
 			}
+			PlayerHooks.OnHitAnything(this, x, y, victim);
 		}
 
 		public void openPresent()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("present", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("present", this, 0);
 			if (Main.rand.Next(15) == 0 && Main.hardMode)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 602, 1, false, 0, false, false);
@@ -3357,6 +_,11 @@
 
 		public void OpenBossBag(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("bossBag", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("bossBag", this, type);
 			if (type == 3318)
 			{
 				if (Main.rand.Next(2) == 0)
@@ -3851,6 +_,7 @@
 			{
 				num15 = 564;
 			}
+			ItemLoader.OpenBossBag(type, this, ref num15);
 			if (num15 > 0)
 			{
 				NPC nPC = new NPC();
@@ -3907,7 +_,7 @@
 			}
 		}
 
-		private void TryGettingDevArmor()
+		public void TryGettingDevArmor()
 		{
 			if (Main.rand.Next(20) != 0)
 			{
@@ -3996,6 +_,11 @@
 
 		public void openCrate(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("crate", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("crate", this, type);
 			int num = type - 2334;
 			if (type >= 3203)
 			{
@@ -5055,6 +_,11 @@
 
 		public void openLockBox()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("lockBox", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("lockBox", this, 0);
 			bool flag = true;
 			while (flag)
 			{
@@ -5189,6 +_,11 @@
 
 		public void openHerbBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("herbBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("herbBag", this, 0);
 			int num = Main.rand.Next(2, 5);
 			if (Main.rand.Next(3) == 0)
 			{
@@ -5268,6 +_,11 @@
 
 		public void openGoodieBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("goodieBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("goodieBag", this, 0);
 			if (Main.rand.Next(150) == 0)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1810, 1, false, 0, false, false);
@@ -5689,47 +_,47 @@
 				int num = i % 10;
 				if (this.dye[num] != null && this.armor[i].type > 0 && this.armor[i].stack > 0 && (i / 10 >= 1 || !this.hideVisual[num] || this.armor[i].wingSlot > 0 || this.armor[i].type == 934))
 				{
-					if (this.armor[i].handOnSlot > 0 && this.armor[i].handOnSlot < 20)
+					if (this.armor[i].handOnSlot > 0)
 					{
 						this.cHandOn = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].handOffSlot > 0 && this.armor[i].handOffSlot < 12)
+					if (this.armor[i].handOffSlot > 0)
 					{
 						this.cHandOff = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].backSlot > 0 && this.armor[i].backSlot < 14)
+					if (this.armor[i].backSlot > 0)
 					{
 						this.cBack = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].frontSlot > 0 && this.armor[i].frontSlot < 5)
+					if (this.armor[i].frontSlot > 0)
 					{
 						this.cFront = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].shoeSlot > 0 && this.armor[i].shoeSlot < 18)
+					if (this.armor[i].shoeSlot > 0)
 					{
 						this.cShoe = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].waistSlot > 0 && this.armor[i].waistSlot < 13)
+					if (this.armor[i].waistSlot > 0)
 					{
 						this.cWaist = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].shieldSlot > 0 && this.armor[i].shieldSlot < 7)
+					if (this.armor[i].shieldSlot > 0)
 					{
 						this.cShield = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].neckSlot > 0 && this.armor[i].neckSlot < 10)
+					if (this.armor[i].neckSlot > 0)
 					{
 						this.cNeck = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].faceSlot > 0 && this.armor[i].faceSlot < 9)
+					if (this.armor[i].faceSlot > 0)
 					{
 						this.cFace = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].balloonSlot > 0 && this.armor[i].balloonSlot < 18)
+					if (this.armor[i].balloonSlot > 0)
 					{
 						this.cBalloon = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].wingSlot > 0 && this.armor[i].wingSlot < 38)
+					if (this.armor[i].wingSlot > 0)
 					{
 						this.cWings = (int)this.dye[num].dye;
 					}
@@ -5778,6 +_,7 @@
 					{
 						this.buffTime[k]--;
 					}
+					int originalIndex = k;
 					if (this.buffType[k] == 1)
 					{
 						this.lavaImmune = true;
@@ -7360,6 +_,10 @@
 					else if (this.buffType[k] == 79)
 					{
 						this.meleeEnchant = 8;
+					}
+					if (k == originalIndex)
+					{
+						BuffLoader.Update(this.buffType[k], this, ref k);
 					}
 				}
 			}
@@ -7550,11 +_,12 @@
 			}
 		}
 
-		public void UpdateEquips(int i)
+		//public void UpdateEquips(int i)
+		public void VanillaUpdateInventory(Item item)
 		{
-			for (int j = 0; j < 58; j++)
-			{
-				int type = this.inventory[j].type;
+			//for (int j = 0; j < 58; j++)
+			{
+				int type = item.type;
 				if ((type == 15 || type == 707) && this.accWatch < 1)
 				{
 					this.accWatch = 1;
@@ -7637,12 +_,17 @@
 				{
 					this.autoActuator = true;
 				}
-			}
-			for (int k = 0; k < 8 + this.extraAccessorySlots; k++)
-			{
-				if (!this.armor[k].expertOnly || Main.expertMode)
-				{
-					int type2 = this.armor[k].type;
+				ItemLoader.UpdateInventory(item, this);
+			}
+		}
+
+		public void VanillaUpdateEquip(Item item)
+		{
+			//for (int k = 0; k < 8 + this.extraAccessorySlots; k++)
+			{
+				if (!item.expertOnly || Main.expertMode)
+				{
+					int type2 = item.type;
 					if ((type2 == 15 || type2 == 707) && this.accWatch < 1)
 					{
 						this.accWatch = 1;
@@ -7709,7 +_,7 @@
 					{
 						this.InfoAccMechShowWires = true;
 					}
-					if (this.armor[k].type == 3017 && this.whoAmI == Main.myPlayer && this.velocity.Y == 0f && this.grappling[0] == -1)
+					if (item.type == 3017 && this.whoAmI == Main.myPlayer && this.velocity.Y == 0f && this.grappling[0] == -1)
 					{
 						int num = (int)base.Center.X / 16;
 						int num2 = (int)(this.position.Y + (float)this.height - 1f) / 16;
@@ -7788,13 +_,13 @@
 							}
 						}
 					}
-					this.statDefense += this.armor[k].defense;
-					this.lifeRegen += this.armor[k].lifeRegen;
-					if (this.armor[k].shieldSlot > 0)
+					this.statDefense += item.defense;
+					this.lifeRegen += item.lifeRegen;
+					if (item.shieldSlot > 0)
 					{
 						this.hasRaisableShield = true;
 					}
-					int type3 = this.armor[k].type;
+					int type3 = item.type;
 					int num3 = type3;
 					switch (num3)
 					{
@@ -7907,36 +_,36 @@
 							}
 							break;
 					}
-					if (this.armor[k].type == 268)
+					if (item.type == 268)
 					{
 						this.accDivingHelm = true;
 					}
-					if (this.armor[k].type == 238)
+					if (item.type == 238)
 					{
 						this.magicDamage += 0.15f;
 					}
-					if (this.armor[k].type == 3770)
+					if (item.type == 3770)
 					{
 						this.slowFall = true;
 					}
-					if (this.armor[k].type == 3776)
+					if (item.type == 3776)
 					{
 						this.magicDamage += 0.15f;
 						this.minionDamage += 0.15f;
 					}
-					if (this.armor[k].type == 3777)
+					if (item.type == 3777)
 					{
 						this.statManaMax2 += 80;
 					}
-					if (this.armor[k].type == 3778)
+					if (item.type == 3778)
 					{
 						this.maxMinions += 2;
 					}
-					if (this.armor[k].type == 3212)
+					if (item.type == 3212)
 					{
 						this.armorPenetration += 5;
 					}
-					if (this.armor[k].type == 2277)
+					if (item.type == 2277)
 					{
 						this.magicDamage += 0.05f;
 						this.meleeDamage += 0.05f;
@@ -7949,182 +_,182 @@
 						this.meleeSpeed += 0.1f;
 						this.moveSpeed += 0.1f;
 					}
-					if (this.armor[k].type == 2279)
+					if (item.type == 2279)
 					{
 						this.magicDamage += 0.06f;
 						this.magicCrit += 6;
 						this.manaCost -= 0.1f;
 					}
-					if (this.armor[k].type == 3109)
+					if (item.type == 3109)
 					{
 						this.nightVision = true;
 					}
-					if (this.armor[k].type == 256)
+					if (item.type == 256)
 					{
 						this.thrownVelocity += 0.15f;
 					}
-					if (this.armor[k].type == 257)
+					if (item.type == 257)
 					{
 						this.thrownDamage += 0.15f;
 					}
-					if (this.armor[k].type == 258)
+					if (item.type == 258)
 					{
 						this.thrownCrit += 10;
 					}
-					if (this.armor[k].type == 3374)
+					if (item.type == 3374)
 					{
 						this.thrownVelocity += 0.2f;
 					}
-					if (this.armor[k].type == 3375)
+					if (item.type == 3375)
 					{
 						this.thrownDamage += 0.2f;
 					}
-					if (this.armor[k].type == 3376)
+					if (item.type == 3376)
 					{
 						this.thrownCrit += 15;
 					}
-					if (this.armor[k].type == 2275)
+					if (item.type == 2275)
 					{
 						this.magicDamage += 0.07f;
 						this.magicCrit += 7;
 					}
-					if (this.armor[k].type == 123 || this.armor[k].type == 124 || this.armor[k].type == 125)
+					if (item.type == 123 || item.type == 124 || item.type == 125)
 					{
 						this.magicDamage += 0.07f;
 					}
-					if (this.armor[k].type == 151 || this.armor[k].type == 152 || this.armor[k].type == 153 || this.armor[k].type == 959)
+					if (item.type == 151 || item.type == 152 || item.type == 153 || item.type == 959)
 					{
 						this.rangedDamage += 0.05f;
 					}
-					if (this.armor[k].type == 111 || this.armor[k].type == 228 || this.armor[k].type == 229 || this.armor[k].type == 230 || this.armor[k].type == 960 || this.armor[k].type == 961 || this.armor[k].type == 962)
+					if (item.type == 111 || item.type == 228 || item.type == 229 || item.type == 230 || item.type == 960 || item.type == 961 || item.type == 962)
 					{
 						this.statManaMax2 += 20;
 					}
-					if (this.armor[k].type == 228 || this.armor[k].type == 960)
+					if (item.type == 228 || item.type == 960)
 					{
 						this.statManaMax2 += 20;
 					}
-					if (this.armor[k].type == 228 || this.armor[k].type == 229 || this.armor[k].type == 230 || this.armor[k].type == 960 || this.armor[k].type == 961 || this.armor[k].type == 962)
+					if (item.type == 228 || item.type == 229 || item.type == 230 || item.type == 960 || item.type == 961 || item.type == 962)
 					{
 						this.magicCrit += 4;
 					}
-					if (this.armor[k].type == 100 || this.armor[k].type == 101 || this.armor[k].type == 102)
+					if (item.type == 100 || item.type == 101 || item.type == 102)
 					{
 						this.meleeSpeed += 0.07f;
 					}
-					if (this.armor[k].type == 956 || this.armor[k].type == 957 || this.armor[k].type == 958)
+					if (item.type == 956 || item.type == 957 || item.type == 958)
 					{
 						this.meleeSpeed += 0.07f;
 					}
-					if (this.armor[k].type == 792 || this.armor[k].type == 793 || this.armor[k].type == 794)
+					if (item.type == 792 || item.type == 793 || item.type == 794)
 					{
 						this.meleeDamage += 0.02f;
 						this.rangedDamage += 0.02f;
 						this.magicDamage += 0.02f;
 						this.thrownDamage += 0.02f;
 					}
-					if (this.armor[k].type == 371)
+					if (item.type == 371)
 					{
 						this.magicCrit += 9;
 						this.statManaMax2 += 40;
 					}
-					if (this.armor[k].type == 372)
+					if (item.type == 372)
 					{
 						this.moveSpeed += 0.07f;
 						this.meleeSpeed += 0.12f;
 					}
-					if (this.armor[k].type == 373)
+					if (item.type == 373)
 					{
 						this.rangedDamage += 0.1f;
 						this.rangedCrit += 6;
 					}
-					if (this.armor[k].type == 374)
+					if (item.type == 374)
 					{
 						this.magicCrit += 3;
 						this.meleeCrit += 3;
 						this.rangedCrit += 3;
 					}
-					if (this.armor[k].type == 375)
+					if (item.type == 375)
 					{
 						this.moveSpeed += 0.1f;
 					}
-					if (this.armor[k].type == 376)
+					if (item.type == 376)
 					{
 						this.magicDamage += 0.15f;
 						this.statManaMax2 += 60;
 					}
-					if (this.armor[k].type == 377)
+					if (item.type == 377)
 					{
 						this.meleeCrit += 5;
 						this.meleeDamage += 0.1f;
 					}
-					if (this.armor[k].type == 378)
+					if (item.type == 378)
 					{
 						this.rangedDamage += 0.12f;
 						this.rangedCrit += 7;
 					}
-					if (this.armor[k].type == 379)
+					if (item.type == 379)
 					{
 						this.rangedDamage += 0.05f;
 						this.meleeDamage += 0.05f;
 						this.magicDamage += 0.05f;
 					}
-					if (this.armor[k].type == 380)
+					if (item.type == 380)
 					{
 						this.magicCrit += 3;
 						this.meleeCrit += 3;
 						this.rangedCrit += 3;
 					}
-					if (this.armor[k].type >= 2367 && this.armor[k].type <= 2369)
+					if (item.type >= 2367 && item.type <= 2369)
 					{
 						this.fishingSkill += 5;
 					}
-					if (this.armor[k].type == 400)
+					if (item.type == 400)
 					{
 						this.magicDamage += 0.11f;
 						this.magicCrit += 11;
 						this.statManaMax2 += 80;
 					}
-					if (this.armor[k].type == 401)
+					if (item.type == 401)
 					{
 						this.meleeCrit += 7;
 						this.meleeDamage += 0.14f;
 					}
-					if (this.armor[k].type == 402)
+					if (item.type == 402)
 					{
 						this.rangedDamage += 0.14f;
 						this.rangedCrit += 8;
 					}
-					if (this.armor[k].type == 403)
+					if (item.type == 403)
 					{
 						this.rangedDamage += 0.06f;
 						this.meleeDamage += 0.06f;
 						this.magicDamage += 0.06f;
 					}
-					if (this.armor[k].type == 404)
+					if (item.type == 404)
 					{
 						this.magicCrit += 4;
 						this.meleeCrit += 4;
 						this.rangedCrit += 4;
 						this.moveSpeed += 0.05f;
 					}
-					if (this.armor[k].type == 1205)
+					if (item.type == 1205)
 					{
 						this.meleeDamage += 0.08f;
 						this.meleeSpeed += 0.12f;
 					}
-					if (this.armor[k].type == 1206)
+					if (item.type == 1206)
 					{
 						this.rangedDamage += 0.09f;
 						this.rangedCrit += 9;
 					}
-					if (this.armor[k].type == 1207)
+					if (item.type == 1207)
 					{
 						this.magicDamage += 0.07f;
 						this.magicCrit += 7;
 						this.statManaMax2 += 60;
 					}
-					if (this.armor[k].type == 1208)
+					if (item.type == 1208)
 					{
 						this.meleeDamage += 0.03f;
 						this.rangedDamage += 0.03f;
@@ -8133,7 +_,7 @@
 						this.meleeCrit += 2;
 						this.rangedCrit += 2;
 					}
-					if (this.armor[k].type == 1209)
+					if (item.type == 1209)
 					{
 						this.meleeDamage += 0.02f;
 						this.rangedDamage += 0.02f;
@@ -8142,50 +_,50 @@
 						this.meleeCrit++;
 						this.rangedCrit++;
 					}
-					if (this.armor[k].type == 1210)
+					if (item.type == 1210)
 					{
 						this.meleeDamage += 0.07f;
 						this.meleeSpeed += 0.07f;
 						this.moveSpeed += 0.07f;
 					}
-					if (this.armor[k].type == 1211)
+					if (item.type == 1211)
 					{
 						this.rangedCrit += 15;
 						this.moveSpeed += 0.08f;
 					}
-					if (this.armor[k].type == 1212)
+					if (item.type == 1212)
 					{
 						this.magicCrit += 18;
 						this.statManaMax2 += 80;
 					}
-					if (this.armor[k].type == 1213)
+					if (item.type == 1213)
 					{
 						this.magicCrit += 6;
 						this.meleeCrit += 6;
 						this.rangedCrit += 6;
 					}
-					if (this.armor[k].type == 1214)
+					if (item.type == 1214)
 					{
 						this.moveSpeed += 0.11f;
 					}
-					if (this.armor[k].type == 1215)
+					if (item.type == 1215)
 					{
 						this.meleeDamage += 0.08f;
 						this.meleeCrit += 8;
 						this.meleeSpeed += 0.08f;
 					}
-					if (this.armor[k].type == 1216)
+					if (item.type == 1216)
 					{
 						this.rangedDamage += 0.16f;
 						this.rangedCrit += 7;
 					}
-					if (this.armor[k].type == 1217)
+					if (item.type == 1217)
 					{
 						this.magicDamage += 0.16f;
 						this.magicCrit += 7;
 						this.statManaMax2 += 100;
 					}
-					if (this.armor[k].type == 1218)
+					if (item.type == 1218)
 					{
 						this.meleeDamage += 0.04f;
 						this.rangedDamage += 0.04f;
@@ -8194,7 +_,7 @@
 						this.meleeCrit += 3;
 						this.rangedCrit += 3;
 					}
-					if (this.armor[k].type == 1219)
+					if (item.type == 1219)
 					{
 						this.meleeDamage += 0.03f;
 						this.rangedDamage += 0.03f;
@@ -8204,53 +_,53 @@
 						this.rangedCrit += 3;
 						this.moveSpeed += 0.06f;
 					}
-					if (this.armor[k].type == 558)
+					if (item.type == 558)
 					{
 						this.magicDamage += 0.12f;
 						this.magicCrit += 12;
 						this.statManaMax2 += 100;
 					}
-					if (this.armor[k].type == 559)
+					if (item.type == 559)
 					{
 						this.meleeCrit += 10;
 						this.meleeDamage += 0.1f;
 						this.meleeSpeed += 0.1f;
 					}
-					if (this.armor[k].type == 553)
+					if (item.type == 553)
 					{
 						this.rangedDamage += 0.15f;
 						this.rangedCrit += 8;
 					}
-					if (this.armor[k].type == 551)
+					if (item.type == 551)
 					{
 						this.magicCrit += 7;
 						this.meleeCrit += 7;
 						this.rangedCrit += 7;
 					}
-					if (this.armor[k].type == 552)
+					if (item.type == 552)
 					{
 						this.rangedDamage += 0.07f;
 						this.meleeDamage += 0.07f;
 						this.magicDamage += 0.07f;
 						this.moveSpeed += 0.08f;
 					}
-					if (this.armor[k].type == 1001)
+					if (item.type == 1001)
 					{
 						this.meleeDamage += 0.16f;
 						this.meleeCrit += 6;
 					}
-					if (this.armor[k].type == 1002)
+					if (item.type == 1002)
 					{
 						this.rangedDamage += 0.16f;
 						this.ammoCost80 = true;
 					}
-					if (this.armor[k].type == 1003)
+					if (item.type == 1003)
 					{
 						this.statManaMax2 += 80;
 						this.manaCost -= 0.17f;
 						this.magicDamage += 0.16f;
 					}
-					if (this.armor[k].type == 1004)
+					if (item.type == 1004)
 					{
 						this.meleeDamage += 0.05f;
 						this.magicDamage += 0.05f;
@@ -8259,285 +_,285 @@
 						this.meleeCrit += 7;
 						this.rangedCrit += 7;
 					}
-					if (this.armor[k].type == 1005)
+					if (item.type == 1005)
 					{
 						this.magicCrit += 8;
 						this.meleeCrit += 8;
 						this.rangedCrit += 8;
 						this.moveSpeed += 0.05f;
 					}
-					if (this.armor[k].type == 2189)
+					if (item.type == 2189)
 					{
 						this.statManaMax2 += 60;
 						this.manaCost -= 0.13f;
 						this.magicDamage += 0.05f;
 						this.magicCrit += 5;
 					}
-					if (this.armor[k].type == 1503)
+					if (item.type == 1503)
 					{
 						this.magicDamage -= 0.4f;
 					}
-					if (this.armor[k].type == 1504)
+					if (item.type == 1504)
 					{
 						this.magicDamage += 0.07f;
 						this.magicCrit += 7;
 					}
-					if (this.armor[k].type == 1505)
+					if (item.type == 1505)
 					{
 						this.magicDamage += 0.08f;
 						this.moveSpeed += 0.08f;
 					}
-					if (this.armor[k].type == 1546)
+					if (item.type == 1546)
 					{
 						this.rangedCrit += 5;
 						this.arrowDamage += 0.15f;
 					}
-					if (this.armor[k].type == 1547)
+					if (item.type == 1547)
 					{
 						this.rangedCrit += 5;
 						this.bulletDamage += 0.15f;
 					}
-					if (this.armor[k].type == 1548)
+					if (item.type == 1548)
 					{
 						this.rangedCrit += 5;
 						this.rocketDamage += 0.15f;
 					}
-					if (this.armor[k].type == 1549)
+					if (item.type == 1549)
 					{
 						this.rangedCrit += 13;
 						this.rangedDamage += 0.13f;
 						this.ammoCost80 = true;
 					}
-					if (this.armor[k].type == 1550)
+					if (item.type == 1550)
 					{
 						this.rangedCrit += 7;
 						this.moveSpeed += 0.12f;
 					}
-					if (this.armor[k].type == 1282)
+					if (item.type == 1282)
 					{
 						this.statManaMax2 += 20;
 						this.manaCost -= 0.05f;
 					}
-					if (this.armor[k].type == 1283)
+					if (item.type == 1283)
 					{
 						this.statManaMax2 += 40;
 						this.manaCost -= 0.07f;
 					}
-					if (this.armor[k].type == 1284)
+					if (item.type == 1284)
 					{
 						this.statManaMax2 += 40;
 						this.manaCost -= 0.09f;
 					}
-					if (this.armor[k].type == 1285)
+					if (item.type == 1285)
 					{
 						this.statManaMax2 += 60;
 						this.manaCost -= 0.11f;
 					}
-					if (this.armor[k].type == 1286)
+					if (item.type == 1286)
 					{
 						this.statManaMax2 += 60;
 						this.manaCost -= 0.13f;
 					}
-					if (this.armor[k].type == 1287)
+					if (item.type == 1287)
 					{
 						this.statManaMax2 += 80;
 						this.manaCost -= 0.15f;
 					}
-					if (this.armor[k].type == 1316 || this.armor[k].type == 1317 || this.armor[k].type == 1318)
+					if (item.type == 1316 || item.type == 1317 || item.type == 1318)
 					{
 						this.aggro += 250;
 					}
-					if (this.armor[k].type == 1316)
+					if (item.type == 1316)
 					{
 						this.meleeDamage += 0.06f;
 					}
-					if (this.armor[k].type == 1317)
+					if (item.type == 1317)
 					{
 						this.meleeDamage += 0.08f;
 						this.meleeCrit += 8;
 					}
-					if (this.armor[k].type == 1318)
+					if (item.type == 1318)
 					{
 						this.meleeCrit += 4;
 					}
-					if (this.armor[k].type == 2199 || this.armor[k].type == 2202)
+					if (item.type == 2199 || item.type == 2202)
 					{
 						this.aggro += 250;
 					}
-					if (this.armor[k].type == 2201)
+					if (item.type == 2201)
 					{
 						this.aggro += 400;
 					}
-					if (this.armor[k].type == 2199)
+					if (item.type == 2199)
 					{
 						this.meleeDamage += 0.06f;
 					}
-					if (this.armor[k].type == 2200)
+					if (item.type == 2200)
 					{
 						this.meleeDamage += 0.08f;
 						this.meleeCrit += 8;
 						this.meleeSpeed += 0.06f;
 						this.moveSpeed += 0.06f;
 					}
-					if (this.armor[k].type == 2201)
+					if (item.type == 2201)
 					{
 						this.meleeDamage += 0.05f;
 						this.meleeCrit += 5;
 					}
-					if (this.armor[k].type == 2202)
+					if (item.type == 2202)
 					{
 						this.meleeSpeed += 0.06f;
 						this.moveSpeed += 0.06f;
 					}
-					if (this.armor[k].type == 684)
+					if (item.type == 684)
 					{
 						this.rangedDamage += 0.16f;
 						this.meleeDamage += 0.16f;
 					}
-					if (this.armor[k].type == 685)
+					if (item.type == 685)
 					{
 						this.meleeCrit += 11;
 						this.rangedCrit += 11;
 					}
-					if (this.armor[k].type == 686)
+					if (item.type == 686)
 					{
 						this.moveSpeed += 0.08f;
 						this.meleeSpeed += 0.07f;
 					}
-					if (this.armor[k].type == 2361)
+					if (item.type == 2361)
 					{
 						this.maxMinions++;
 						this.minionDamage += 0.04f;
 					}
-					if (this.armor[k].type == 2362)
+					if (item.type == 2362)
 					{
 						this.maxMinions++;
 						this.minionDamage += 0.04f;
 					}
-					if (this.armor[k].type == 2363)
+					if (item.type == 2363)
 					{
 						this.minionDamage += 0.05f;
 					}
-					if (this.armor[k].type >= 1158 && this.armor[k].type <= 1161)
+					if (item.type >= 1158 && item.type <= 1161)
 					{
 						this.maxMinions++;
 					}
-					if (this.armor[k].type >= 1159 && this.armor[k].type <= 1161)
+					if (item.type >= 1159 && item.type <= 1161)
 					{
 						this.minionDamage += 0.1f;
 					}
-					if (this.armor[k].type >= 2370 && this.armor[k].type <= 2371)
+					if (item.type >= 2370 && item.type <= 2371)
 					{
 						this.minionDamage += 0.05f;
 						this.maxMinions++;
 					}
-					if (this.armor[k].type == 2372)
+					if (item.type == 2372)
 					{
 						this.minionDamage += 0.06f;
 						this.maxMinions++;
 					}
-					if (this.armor[k].type == 3381 || this.armor[k].type == 3382 || this.armor[k].type == 3383)
-					{
-						if (this.armor[k].type != 3381)
+					if (item.type == 3381 || item.type == 3382 || item.type == 3383)
+					{
+						if (item.type != 3381)
 						{
 							this.maxMinions++;
 						}
 						this.maxMinions++;
 						this.minionDamage += 0.22f;
 					}
-					if (this.armor[k].type == 2763)
+					if (item.type == 2763)
 					{
 						this.aggro += 300;
 						this.meleeCrit += 17;
 					}
-					if (this.armor[k].type == 2764)
+					if (item.type == 2764)
 					{
 						this.aggro += 300;
 						this.meleeDamage += 0.22f;
 					}
-					if (this.armor[k].type == 2765)
+					if (item.type == 2765)
 					{
 						this.aggro += 300;
 						this.meleeSpeed += 0.15f;
 						this.moveSpeed += 0.15f;
 					}
-					if (this.armor[k].type == 2757)
+					if (item.type == 2757)
 					{
 						this.rangedCrit += 7;
 						this.rangedDamage += 0.16f;
 					}
-					if (this.armor[k].type == 2758)
+					if (item.type == 2758)
 					{
 						this.ammoCost75 = true;
 						this.rangedCrit += 12;
 						this.rangedDamage += 0.12f;
 					}
-					if (this.armor[k].type == 2759)
+					if (item.type == 2759)
 					{
 						this.rangedCrit += 8;
 						this.rangedDamage += 0.08f;
 						this.moveSpeed += 0.1f;
 					}
-					if (this.armor[k].type == 2760)
+					if (item.type == 2760)
 					{
 						this.statManaMax2 += 60;
 						this.manaCost -= 0.15f;
 						this.magicCrit += 7;
 						this.magicDamage += 0.07f;
 					}
-					if (this.armor[k].type == 2761)
+					if (item.type == 2761)
 					{
 						this.magicDamage += 0.09f;
 						this.magicCrit += 9;
 					}
-					if (this.armor[k].type == 2762)
+					if (item.type == 2762)
 					{
 						this.moveSpeed += 0.1f;
 						this.magicDamage += 0.1f;
 					}
-					if (this.armor[k].type >= 1832 && this.armor[k].type <= 1834)
+					if (item.type >= 1832 && item.type <= 1834)
 					{
 						this.maxMinions++;
 					}
-					if (this.armor[k].type >= 1832 && this.armor[k].type <= 1834)
+					if (item.type >= 1832 && item.type <= 1834)
 					{
 						this.minionDamage += 0.11f;
 					}
-					if (this.armor[k].prefix == 62)
+					if (item.prefix == 62)
 					{
 						this.statDefense++;
 					}
-					if (this.armor[k].prefix == 63)
+					if (item.prefix == 63)
 					{
 						this.statDefense += 2;
 					}
-					if (this.armor[k].prefix == 64)
+					if (item.prefix == 64)
 					{
 						this.statDefense += 3;
 					}
-					if (this.armor[k].prefix == 65)
+					if (item.prefix == 65)
 					{
 						this.statDefense += 4;
 					}
-					if (this.armor[k].prefix == 66)
+					if (item.prefix == 66)
 					{
 						this.statManaMax2 += 20;
 					}
-					if (this.armor[k].prefix == 67)
+					if (item.prefix == 67)
 					{
 						this.meleeCrit += 2;
 						this.rangedCrit += 2;
 						this.magicCrit += 2;
 						this.thrownCrit += 2;
 					}
-					if (this.armor[k].prefix == 68)
+					if (item.prefix == 68)
 					{
 						this.meleeCrit += 4;
 						this.rangedCrit += 4;
 						this.magicCrit += 4;
 						this.thrownCrit += 4;
 					}
-					if (this.armor[k].prefix == 69)
+					if (item.prefix == 69)
 					{
 						this.meleeDamage += 0.01f;
 						this.rangedDamage += 0.01f;
@@ -8545,7 +_,7 @@
 						this.minionDamage += 0.01f;
 						this.thrownDamage += 0.01f;
 					}
-					if (this.armor[k].prefix == 70)
+					if (item.prefix == 70)
 					{
 						this.meleeDamage += 0.02f;
 						this.rangedDamage += 0.02f;
@@ -8553,7 +_,7 @@
 						this.minionDamage += 0.02f;
 						this.thrownDamage += 0.02f;
 					}
-					if (this.armor[k].prefix == 71)
+					if (item.prefix == 71)
 					{
 						this.meleeDamage += 0.03f;
 						this.rangedDamage += 0.03f;
@@ -8561,7 +_,7 @@
 						this.minionDamage += 0.03f;
 						this.thrownDamage += 0.03f;
 					}
-					if (this.armor[k].prefix == 72)
+					if (item.prefix == 72)
 					{
 						this.meleeDamage += 0.04f;
 						this.rangedDamage += 0.04f;
@@ -8569,52 +_,54 @@
 						this.minionDamage += 0.04f;
 						this.thrownDamage += 0.04f;
 					}
-					if (this.armor[k].prefix == 73)
+					if (item.prefix == 73)
 					{
 						this.moveSpeed += 0.01f;
 					}
-					if (this.armor[k].prefix == 74)
+					if (item.prefix == 74)
 					{
 						this.moveSpeed += 0.02f;
 					}
-					if (this.armor[k].prefix == 75)
+					if (item.prefix == 75)
 					{
 						this.moveSpeed += 0.03f;
 					}
-					if (this.armor[k].prefix == 76)
+					if (item.prefix == 76)
 					{
 						this.moveSpeed += 0.04f;
 					}
-					if (this.armor[k].prefix == 77)
+					if (item.prefix == 77)
 					{
 						this.meleeSpeed += 0.01f;
 					}
-					if (this.armor[k].prefix == 78)
+					if (item.prefix == 78)
 					{
 						this.meleeSpeed += 0.02f;
 					}
-					if (this.armor[k].prefix == 79)
+					if (item.prefix == 79)
 					{
 						this.meleeSpeed += 0.03f;
 					}
-					if (this.armor[k].prefix == 80)
+					if (item.prefix == 80)
 					{
 						this.meleeSpeed += 0.04f;
 					}
-				}
-			}
-			bool flag = false;
-			bool flag2 = false;
-			bool flag3 = false;
-			for (int l = 3; l < 8 + this.extraAccessorySlots; l++)
-			{
-				if (!this.armor[l].expertOnly || Main.expertMode)
-				{
-					if (this.armor[l].type == 3810 || this.armor[l].type == 3809 || this.armor[l].type == 3812 || this.armor[l].type == 3811)
+					ItemLoader.UpdateEquip(item, this);
+				}
+			}
+		}
+
+		public void VanillaUpdateAccessory(int i, Item item, bool hideVisual, ref bool flag, ref bool flag2, ref bool flag3)
+		{
+			//for (int l = 3; l < 8 + this.extraAccessorySlots; l++)
+			{
+				if (!item.expertOnly || Main.expertMode)
+				{
+					if (item.type == 3810 || item.type == 3809 || item.type == 3812 || item.type == 3811)
 					{
 						this.dd2Accessory = true;
 					}
-					if (this.armor[l].type == 3015)
+					if (item.type == 3015)
 					{
 						this.aggro -= 400;
 						this.meleeCrit += 5;
@@ -8627,29 +_,29 @@
 						this.thrownDamage += 0.05f;
 						this.minionDamage += 0.05f;
 					}
-					if (this.armor[l].type == 3016)
+					if (item.type == 3016)
 					{
 						this.aggro += 400;
 					}
-					if (this.armor[l].type == 2373)
+					if (item.type == 2373)
 					{
 						this.accFishingLine = true;
 					}
-					if (this.armor[l].type == 2374)
+					if (item.type == 2374)
 					{
 						this.fishingSkill += 10;
 					}
-					if (this.armor[l].type == 2375)
+					if (item.type == 2375)
 					{
 						this.accTackleBox = true;
 					}
-					if (this.armor[l].type == 3721)
+					if (item.type == 3721)
 					{
 						this.accFishingLine = true;
 						this.accTackleBox = true;
 						this.fishingSkill += 10;
 					}
-					if (this.armor[l].type == 3090)
+					if (item.type == 3090)
 					{
 						this.npcTypeNoAggro[1] = true;
 						this.npcTypeNoAggro[16] = true;
@@ -8673,141 +_,141 @@
 						this.npcTypeNoAggro[336] = true;
 						this.npcTypeNoAggro[537] = true;
 					}
-					if (this.armor[l].stringColor > 0)
+					if (item.stringColor > 0)
 					{
 						this.yoyoString = true;
 					}
-					if (this.armor[l].type == 3366)
+					if (item.type == 3366)
 					{
 						this.counterWeight = 556 + Main.rand.Next(6);
 						this.yoyoGlove = true;
 						this.yoyoString = true;
 					}
-					if (this.armor[l].type >= 3309 && this.armor[l].type <= 3314)
-					{
-						this.counterWeight = 556 + this.armor[l].type - 3309;
-					}
-					if (this.armor[l].type == 3334)
+					if (item.type >= 3309 && item.type <= 3314)
+					{
+						this.counterWeight = 556 + item.type - 3309;
+					}
+					if (item.type == 3334)
 					{
 						this.yoyoGlove = true;
 					}
-					if (this.armor[l].type == 3337)
+					if (item.type == 3337)
 					{
 						this.shinyStone = true;
 					}
-					if (this.armor[l].type == 3336)
+					if (item.type == 3336)
 					{
 						this.SporeSac();
 						this.sporeSac = true;
 					}
-					if (this.armor[l].type == 2423)
+					if (item.type == 2423)
 					{
 						this.autoJump = true;
 						this.jumpSpeedBoost += 2.4f;
 						this.extraFall += 15;
 					}
-					if (this.armor[l].type == 857)
+					if (item.type == 857)
 					{
 						this.doubleJumpSandstorm = true;
 					}
-					if (this.armor[l].type == 983)
+					if (item.type == 983)
 					{
 						this.doubleJumpSandstorm = true;
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 987)
+					if (item.type == 987)
 					{
 						this.doubleJumpBlizzard = true;
 					}
-					if (this.armor[l].type == 1163)
+					if (item.type == 1163)
 					{
 						this.doubleJumpBlizzard = true;
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 1724)
+					if (item.type == 1724)
 					{
 						this.doubleJumpFart = true;
 					}
-					if (this.armor[l].type == 1863)
+					if (item.type == 1863)
 					{
 						this.doubleJumpFart = true;
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 1164)
+					if (item.type == 1164)
 					{
 						this.doubleJumpCloud = true;
 						this.doubleJumpSandstorm = true;
 						this.doubleJumpBlizzard = true;
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 1250)
+					if (item.type == 1250)
 					{
 						this.jumpBoost = true;
 						this.doubleJumpCloud = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 1252)
+					if (item.type == 1252)
 					{
 						this.doubleJumpSandstorm = true;
 						this.jumpBoost = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 1251)
+					if (item.type == 1251)
 					{
 						this.doubleJumpBlizzard = true;
 						this.jumpBoost = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 3250)
+					if (item.type == 3250)
 					{
 						this.doubleJumpFart = true;
 						this.jumpBoost = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 3252)
+					if (item.type == 3252)
 					{
 						this.doubleJumpSail = true;
 						this.jumpBoost = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 3251)
+					if (item.type == 3251)
 					{
 						this.jumpBoost = true;
 						this.bee = true;
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 1249)
+					if (item.type == 1249)
 					{
 						this.jumpBoost = true;
 						this.bee = true;
 					}
-					if (this.armor[l].type == 3241)
+					if (item.type == 3241)
 					{
 						this.jumpBoost = true;
 						this.doubleJumpSail = true;
 					}
-					if (this.armor[l].type == 1253 && (double)this.statLife <= (double)this.statLifeMax2 * 0.5)
+					if (item.type == 1253 && (double)this.statLife <= (double)this.statLifeMax2 * 0.5)
 					{
 						this.AddBuff(62, 5, true);
 					}
-					if (this.armor[l].type == 1290)
+					if (item.type == 1290)
 					{
 						this.panic = true;
 					}
-					if ((this.armor[l].type == 1300 || this.armor[l].type == 1858) && (this.inventory[this.selectedItem].useAmmo == AmmoID.Bullet || this.inventory[this.selectedItem].useAmmo == AmmoID.CandyCorn || this.inventory[this.selectedItem].useAmmo == AmmoID.Stake || this.inventory[this.selectedItem].useAmmo == 23))
+					if ((item.type == 1300 || item.type == 1858) && (this.inventory[this.selectedItem].useAmmo == AmmoID.Bullet || this.inventory[this.selectedItem].useAmmo == AmmoID.CandyCorn || this.inventory[this.selectedItem].useAmmo == AmmoID.Stake || this.inventory[this.selectedItem].useAmmo == 23))
 					{
 						this.scope = true;
 					}
-					if (this.armor[l].type == 1858)
+					if (item.type == 1858)
 					{
 						this.rangedCrit += 10;
 						this.rangedDamage += 0.1f;
 					}
-					if (this.armor[l].type == 1303 && this.wet)
+					if (item.type == 1303 && this.wet)
 					{
 						Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.2f, 0.6f);
 					}
-					if (this.armor[l].type == 1301)
+					if (item.type == 1301)
 					{
 						this.meleeCrit += 8;
 						this.rangedCrit += 8;
@@ -8819,288 +_,288 @@
 						this.minionDamage += 0.1f;
 						this.thrownDamage += 0.1f;
 					}
-					if (this.armor[l].type == 982)
+					if (item.type == 982)
 					{
 						this.statManaMax2 += 20;
 						this.manaRegenDelayBonus++;
 						this.manaRegenBonus += 25;
 					}
-					if (this.armor[l].type == 1595)
+					if (item.type == 1595)
 					{
 						this.statManaMax2 += 20;
 						this.magicCuffs = true;
 					}
-					if (this.armor[l].type == 2219)
+					if (item.type == 2219)
 					{
 						this.manaMagnet = true;
 					}
-					if (this.armor[l].type == 2220)
+					if (item.type == 2220)
 					{
 						this.manaMagnet = true;
 						this.magicDamage += 0.15f;
 					}
-					if (this.armor[l].type == 2221)
+					if (item.type == 2221)
 					{
 						this.manaMagnet = true;
 						this.magicCuffs = true;
 					}
-					if (this.whoAmI == Main.myPlayer && this.armor[l].type == 1923)
+					if (this.whoAmI == Main.myPlayer && item.type == 1923)
 					{
 						Player.tileRangeX++;
 						Player.tileRangeY++;
 					}
-					if (this.armor[l].type == 1247)
+					if (item.type == 1247)
 					{
 						this.starCloak = true;
 						this.bee = true;
 					}
-					if (this.armor[l].type == 1248)
+					if (item.type == 1248)
 					{
 						this.meleeCrit += 10;
 						this.rangedCrit += 10;
 						this.magicCrit += 10;
 						this.thrownCrit += 10;
 					}
-					if (this.armor[l].type == 854)
+					if (item.type == 854)
 					{
 						this.discount = true;
 					}
-					if (this.armor[l].type == 855)
+					if (item.type == 855)
 					{
 						this.coins = true;
 					}
-					if (this.armor[l].type == 3033)
+					if (item.type == 3033)
 					{
 						this.goldRing = true;
 					}
-					if (this.armor[l].type == 3034)
+					if (item.type == 3034)
 					{
 						this.goldRing = true;
 						this.coins = true;
 					}
-					if (this.armor[l].type == 3035)
+					if (item.type == 3035)
 					{
 						this.goldRing = true;
 						this.coins = true;
 						this.discount = true;
 					}
-					if (this.armor[l].type == 53)
+					if (item.type == 53)
 					{
 						this.doubleJumpCloud = true;
 					}
-					if (this.armor[l].type == 3201)
+					if (item.type == 3201)
 					{
 						this.doubleJumpSail = true;
 					}
-					if (this.armor[l].type == 54)
+					if (item.type == 54)
 					{
 						this.accRunSpeed = 6f;
 					}
-					if (this.armor[l].type == 3068)
+					if (item.type == 3068)
 					{
 						this.cordage = true;
 					}
-					if (this.armor[l].type == 1579)
+					if (item.type == 1579)
 					{
 						this.accRunSpeed = 6f;
 						this.coldDash = true;
 					}
-					if (this.armor[l].type == 3200)
+					if (item.type == 3200)
 					{
 						this.accRunSpeed = 6f;
 						this.sailDash = true;
 					}
-					if (this.armor[l].type == 128)
+					if (item.type == 128)
 					{
 						this.rocketBoots = 1;
 					}
-					if (this.armor[l].type == 156)
+					if (item.type == 156)
 					{
 						this.noKnockback = true;
 					}
-					if (this.armor[l].type == 158)
+					if (item.type == 158)
 					{
 						this.noFallDmg = true;
 					}
-					if (this.armor[l].type == 934)
+					if (item.type == 934)
 					{
 						this.carpet = true;
 					}
-					if (this.armor[l].type == 953)
+					if (item.type == 953)
 					{
 						this.spikedBoots++;
 					}
-					if (this.armor[l].type == 975)
+					if (item.type == 975)
 					{
 						this.spikedBoots++;
 					}
-					if (this.armor[l].type == 976)
+					if (item.type == 976)
 					{
 						this.spikedBoots += 2;
 					}
-					if (this.armor[l].type == 977)
+					if (item.type == 977)
 					{
 						this.dash = 1;
 					}
-					if (this.armor[l].type == 3097)
+					if (item.type == 3097)
 					{
 						this.dash = 2;
 					}
-					if (this.armor[l].type == 963)
+					if (item.type == 963)
 					{
 						this.blackBelt = true;
 					}
-					if (this.armor[l].type == 984)
+					if (item.type == 984)
 					{
 						this.blackBelt = true;
 						this.dash = 1;
 						this.spikedBoots = 2;
 					}
-					if (this.armor[l].type == 1131)
+					if (item.type == 1131)
 					{
 						this.gravControl2 = true;
 					}
-					if (this.armor[l].type == 1132)
+					if (item.type == 1132)
 					{
 						this.bee = true;
 					}
-					if (this.armor[l].type == 1578)
+					if (item.type == 1578)
 					{
 						this.bee = true;
 						this.panic = true;
 					}
-					if (this.armor[l].type == 3224)
+					if (item.type == 3224)
 					{
 						this.endurance += 0.17f;
 					}
-					if (this.armor[l].type == 3223)
+					if (item.type == 3223)
 					{
 						this.brainOfConfusion = true;
 					}
-					if (this.armor[l].type == 950)
+					if (item.type == 950)
 					{
 						this.iceSkate = true;
 					}
-					if (this.armor[l].type == 159)
+					if (item.type == 159)
 					{
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 3225)
+					if (item.type == 3225)
 					{
 						this.jumpBoost = true;
 					}
-					if (this.armor[l].type == 187)
+					if (item.type == 187)
 					{
 						this.accFlipper = true;
 					}
-					if (this.armor[l].type == 211)
+					if (item.type == 211)
 					{
 						this.meleeSpeed += 0.12f;
 					}
-					if (this.armor[l].type == 223)
+					if (item.type == 223)
 					{
 						this.manaCost -= 0.06f;
 					}
-					if (this.armor[l].type == 285)
+					if (item.type == 285)
 					{
 						this.moveSpeed += 0.05f;
 					}
-					if (this.armor[l].type == 212)
+					if (item.type == 212)
 					{
 						this.moveSpeed += 0.1f;
 					}
-					if (this.armor[l].type == 267)
+					if (item.type == 267)
 					{
 						this.killGuide = true;
 					}
-					if (this.armor[l].type == 1307)
+					if (item.type == 1307)
 					{
 						this.killClothier = true;
 					}
-					if (this.armor[l].type == 193)
+					if (item.type == 193)
 					{
 						this.fireWalk = true;
 					}
-					if (this.armor[l].type == 861)
+					if (item.type == 861)
 					{
 						this.accMerman = true;
 						this.wolfAcc = true;
-						if (this.hideVisual[l])
+						if (hideVisual)
 						{
 							this.hideMerman = true;
 							this.hideWolf = true;
 						}
 					}
-					if (this.armor[l].type == 862)
+					if (item.type == 862)
 					{
 						this.starCloak = true;
 						this.longInvince = true;
 					}
-					if (this.armor[l].type == 860)
+					if (item.type == 860)
 					{
 						this.pStone = true;
 					}
-					if (this.armor[l].type == 863)
+					if (item.type == 863)
 					{
 						this.waterWalk2 = true;
 					}
-					if (this.armor[l].type == 907)
+					if (item.type == 907)
 					{
 						this.waterWalk2 = true;
 						this.fireWalk = true;
 					}
-					if (this.armor[l].type == 908)
+					if (item.type == 908)
 					{
 						this.waterWalk = true;
 						this.fireWalk = true;
 						this.lavaMax += 420;
 					}
-					if (this.armor[l].type == 906)
+					if (item.type == 906)
 					{
 						this.lavaMax += 420;
 					}
-					if (this.armor[l].type == 485)
+					if (item.type == 485)
 					{
 						this.wolfAcc = true;
-						if (this.hideVisual[l])
+						if (hideVisual)
 						{
 							this.hideWolf = true;
 						}
 					}
-					if (this.armor[l].type == 486)
+					if (item.type == 486)
 					{
 						this.rulerLine = true;
 					}
-					if (this.armor[l].type == 2799)
+					if (item.type == 2799)
 					{
 						this.rulerGrid = true;
 					}
-					if (this.armor[l].type == 394)
+					if (item.type == 394)
 					{
 						this.accFlipper = true;
 						this.accDivingHelm = true;
 					}
-					if (this.armor[l].type == 396)
+					if (item.type == 396)
 					{
 						this.noFallDmg = true;
 						this.fireWalk = true;
 					}
-					if (this.armor[l].type == 397)
+					if (item.type == 397)
 					{
 						this.noKnockback = true;
 						this.fireWalk = true;
 					}
-					if (this.armor[l].type == 399)
+					if (item.type == 399)
 					{
 						this.jumpBoost = true;
 						this.doubleJumpCloud = true;
 					}
-					if (this.armor[l].type == 405)
+					if (item.type == 405)
 					{
 						this.accRunSpeed = 6f;
 						this.rocketBoots = 2;
 					}
-					if (this.armor[l].type == 1860)
+					if (item.type == 1860)
 					{
 						this.accFlipper = true;
 						this.accDivingHelm = true;
@@ -9109,7 +_,7 @@
 							Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.2f, 0.6f);
 						}
 					}
-					if (this.armor[l].type == 1861)
+					if (item.type == 1861)
 					{
 						this.arcticDivingGear = true;
 						this.accFlipper = true;
@@ -9120,79 +_,79 @@
 							Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.2f, 0.8f, 0.9f);
 						}
 					}
-					if (this.armor[l].type == 2214)
+					if (item.type == 2214)
 					{
 						flag2 = true;
 					}
-					if (this.armor[l].type == 2215)
+					if (item.type == 2215)
 					{
 						flag3 = true;
 					}
-					if (this.armor[l].type == 2216)
+					if (item.type == 2216)
 					{
 						this.autoPaint = true;
 					}
-					if (this.armor[l].type == 2217)
+					if (item.type == 2217)
 					{
 						flag = true;
 					}
-					if (this.armor[l].type == 3061)
+					if (item.type == 3061)
 					{
 						flag = true;
 						flag2 = true;
 						this.autoPaint = true;
 						flag3 = true;
 					}
-					if (this.armor[l].type == 3624)
+					if (item.type == 3624)
 					{
 						this.autoActuator = true;
 					}
-					if (this.armor[l].type == 897)
+					if (item.type == 897)
 					{
 						this.kbGlove = true;
 						this.meleeSpeed += 0.12f;
 					}
-					if (this.armor[l].type == 1343)
+					if (item.type == 1343)
 					{
 						this.kbGlove = true;
 						this.meleeSpeed += 0.1f;
 						this.meleeDamage += 0.1f;
 						this.magmaStone = true;
 					}
-					if (this.armor[l].type == 1167)
+					if (item.type == 1167)
 					{
 						this.minionKB += 2f;
 						this.minionDamage += 0.15f;
 					}
-					if (this.armor[l].type == 1864)
+					if (item.type == 1864)
 					{
 						this.minionKB += 2f;
 						this.minionDamage += 0.15f;
 						this.maxMinions++;
 					}
-					if (this.armor[l].type == 1845)
+					if (item.type == 1845)
 					{
 						this.minionDamage += 0.1f;
 						this.maxMinions++;
 					}
-					if (this.armor[l].type == 1321)
+					if (item.type == 1321)
 					{
 						this.magicQuiver = true;
 						this.arrowDamage += 0.1f;
 					}
-					if (this.armor[l].type == 1322)
+					if (item.type == 1322)
 					{
 						this.magmaStone = true;
 					}
-					if (this.armor[l].type == 1323)
+					if (item.type == 1323)
 					{
 						this.lavaRose = true;
 					}
-					if (this.armor[l].type == 3333)
+					if (item.type == 3333)
 					{
 						this.strongBees = true;
 					}
-					if (this.armor[l].type == 938)
+					if (item.type == 938)
 					{
 						this.noKnockback = true;
 						if ((float)this.statLife > (float)this.statLifeMax2 * 0.25f)
@@ -9214,36 +_,36 @@
 							}
 						}
 					}
-					if (this.armor[l].type == 936)
+					if (item.type == 936)
 					{
 						this.kbGlove = true;
 						this.meleeSpeed += 0.12f;
 						this.meleeDamage += 0.12f;
 					}
-					if (this.armor[l].type == 898)
+					if (item.type == 898)
 					{
 						this.accRunSpeed = 6.75f;
 						this.rocketBoots = 2;
 						this.moveSpeed += 0.08f;
 					}
-					if (this.armor[l].type == 1862)
+					if (item.type == 1862)
 					{
 						this.accRunSpeed = 6.75f;
 						this.rocketBoots = 3;
 						this.moveSpeed += 0.08f;
 						this.iceSkate = true;
 					}
-					if (this.armor[l].type == 3110)
+					if (item.type == 3110)
 					{
 						this.accMerman = true;
 						this.wolfAcc = true;
-						if (this.hideVisual[l])
+						if (hideVisual)
 						{
 							this.hideMerman = true;
 							this.hideWolf = true;
 						}
 					}
-					if (this.armor[l].type == 1865 || this.armor[l].type == 3110)
+					if (item.type == 1865 || item.type == 3110)
 					{
 						this.lifeRegen += 2;
 						this.statDefense += 4;
@@ -9260,7 +_,7 @@
 						this.thrownDamage += 0.1f;
 						this.thrownCrit += 2;
 					}
-					if (this.armor[l].type == 899 && Main.dayTime)
+					if (item.type == 899 && Main.dayTime)
 					{
 						this.lifeRegen += 2;
 						this.statDefense += 4;
@@ -9277,7 +_,7 @@
 						this.thrownDamage += 0.1f;
 						this.thrownCrit += 2;
 					}
-					if (this.armor[l].type == 900 && (!Main.dayTime || Main.eclipse))
+					if (item.type == 900 && (!Main.dayTime || Main.eclipse))
 					{
 						this.lifeRegen += 2;
 						this.statDefense += 4;
@@ -9294,27 +_,27 @@
 						this.thrownDamage += 0.1f;
 						this.thrownCrit += 2;
 					}
-					if (this.armor[l].type == 407)
+					if (item.type == 407)
 					{
 						this.blockRange = 1;
 					}
-					if (this.armor[l].type == 489)
+					if (item.type == 489)
 					{
 						this.magicDamage += 0.15f;
 					}
-					if (this.armor[l].type == 490)
+					if (item.type == 490)
 					{
 						this.meleeDamage += 0.15f;
 					}
-					if (this.armor[l].type == 491)
+					if (item.type == 491)
 					{
 						this.rangedDamage += 0.15f;
 					}
-					if (this.armor[l].type == 2998)
+					if (item.type == 2998)
 					{
 						this.minionDamage += 0.15f;
 					}
-					if (this.armor[l].type == 935)
+					if (item.type == 935)
 					{
 						this.magicDamage += 0.12f;
 						this.meleeDamage += 0.12f;
@@ -9322,221 +_,221 @@
 						this.minionDamage += 0.12f;
 						this.thrownDamage += 0.12f;
 					}
-					if (this.armor[l].type == 492)
+					if (item.type == 492)
 					{
 						this.wingTimeMax = 100;
 					}
-					if (this.armor[l].type == 493)
+					if (item.type == 493)
 					{
 						this.wingTimeMax = 100;
 					}
-					if (this.armor[l].type == 748)
+					if (item.type == 748)
 					{
 						this.wingTimeMax = 115;
 					}
-					if (this.armor[l].type == 749)
+					if (item.type == 749)
 					{
 						this.wingTimeMax = 130;
 					}
-					if (this.armor[l].type == 761)
+					if (item.type == 761)
 					{
 						this.wingTimeMax = 130;
 					}
-					if (this.armor[l].type == 785)
+					if (item.type == 785)
 					{
 						this.wingTimeMax = 140;
 					}
-					if (this.armor[l].type == 786)
+					if (item.type == 786)
 					{
 						this.wingTimeMax = 140;
 					}
-					if (this.armor[l].type == 821)
+					if (item.type == 821)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 822)
+					if (item.type == 822)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 823)
+					if (item.type == 823)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 2280)
+					if (item.type == 2280)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 2494)
+					if (item.type == 2494)
 					{
 						this.wingTimeMax = 100;
 					}
-					if (this.armor[l].type == 2609)
+					if (item.type == 2609)
 					{
 						this.wingTimeMax = 180;
 						this.ignoreWater = true;
 					}
-					if (this.armor[l].type == 948)
+					if (item.type == 948)
 					{
 						this.wingTimeMax = 180;
 					}
-					if (this.armor[l].type == 1162)
+					if (item.type == 1162)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 1165)
+					if (item.type == 1165)
 					{
 						this.wingTimeMax = 140;
 					}
-					if (this.armor[l].type == 1515)
+					if (item.type == 1515)
 					{
 						this.wingTimeMax = 130;
 					}
-					if (this.armor[l].type == 665)
+					if (item.type == 665)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 1583)
+					if (item.type == 1583)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 1584)
+					if (item.type == 1584)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 1585)
+					if (item.type == 1585)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 1586)
+					if (item.type == 1586)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 3228)
+					if (item.type == 3228)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 3580)
+					if (item.type == 3580)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 3582)
+					if (item.type == 3582)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 3588)
+					if (item.type == 3588)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 3592)
+					if (item.type == 3592)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 1797)
+					if (item.type == 1797)
 					{
 						this.wingTimeMax = 180;
 					}
-					if (this.armor[l].type == 1830)
+					if (item.type == 1830)
 					{
 						this.wingTimeMax = 180;
 					}
-					if (this.armor[l].type == 1866)
+					if (item.type == 1866)
 					{
 						this.wingTimeMax = 170;
 					}
-					if (this.armor[l].type == 1871)
+					if (item.type == 1871)
 					{
 						this.wingTimeMax = 170;
 					}
-					if (this.armor[l].type == 2770)
+					if (item.type == 2770)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 3468)
+					if (item.type == 3468)
 					{
 						this.wingTimeMax = 180;
 					}
-					if (this.armor[l].type == 3469)
+					if (item.type == 3469)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 3470)
+					if (item.type == 3470)
 					{
 						this.wingTimeMax = 160;
 					}
-					if (this.armor[l].type == 3471)
+					if (item.type == 3471)
 					{
 						this.wingTimeMax = 180;
 					}
-					if (this.armor[l].type == 3883)
+					if (item.type == 3883)
 					{
 						this.wingTimeMax = 150;
 					}
-					if (this.armor[l].type == 885)
+					if (item.type == 885)
 					{
 						this.buffImmune[30] = true;
 					}
-					if (this.armor[l].type == 886)
+					if (item.type == 886)
 					{
 						this.buffImmune[36] = true;
 					}
-					if (this.armor[l].type == 887)
+					if (item.type == 887)
 					{
 						this.buffImmune[20] = true;
 					}
-					if (this.armor[l].type == 888)
+					if (item.type == 888)
 					{
 						this.buffImmune[22] = true;
 					}
-					if (this.armor[l].type == 889)
+					if (item.type == 889)
 					{
 						this.buffImmune[32] = true;
 					}
-					if (this.armor[l].type == 890)
+					if (item.type == 890)
 					{
 						this.buffImmune[35] = true;
 					}
-					if (this.armor[l].type == 891)
+					if (item.type == 891)
 					{
 						this.buffImmune[23] = true;
 					}
-					if (this.armor[l].type == 892)
+					if (item.type == 892)
 					{
 						this.buffImmune[33] = true;
 					}
-					if (this.armor[l].type == 893)
+					if (item.type == 893)
 					{
 						this.buffImmune[31] = true;
 					}
-					if (this.armor[l].type == 3781)
+					if (item.type == 3781)
 					{
 						this.buffImmune[156] = true;
 					}
-					if (this.armor[l].type == 901)
+					if (item.type == 901)
 					{
 						this.buffImmune[33] = true;
 						this.buffImmune[36] = true;
 					}
-					if (this.armor[l].type == 902)
+					if (item.type == 902)
 					{
 						this.buffImmune[30] = true;
 						this.buffImmune[20] = true;
 					}
-					if (this.armor[l].type == 903)
+					if (item.type == 903)
 					{
 						this.buffImmune[32] = true;
 						this.buffImmune[31] = true;
 					}
-					if (this.armor[l].type == 904)
+					if (item.type == 904)
 					{
 						this.buffImmune[35] = true;
 						this.buffImmune[23] = true;
 					}
-					if (this.armor[l].type == 1921)
+					if (item.type == 1921)
 					{
 						this.buffImmune[46] = true;
 						this.buffImmune[47] = true;
 					}
-					if (this.armor[l].type == 1612)
+					if (item.type == 1612)
 					{
 						this.buffImmune[33] = true;
 						this.buffImmune[36] = true;
@@ -9548,7 +_,7 @@
 						this.buffImmune[23] = true;
 						this.buffImmune[22] = true;
 					}
-					if (this.armor[l].type == 1613)
+					if (item.type == 1613)
 					{
 						this.buffImmune[46] = true;
 						this.noKnockback = true;
@@ -9563,38 +_,38 @@
 						this.buffImmune[23] = true;
 						this.buffImmune[22] = true;
 					}
-					if (this.armor[l].type == 497)
+					if (item.type == 497)
 					{
 						this.accMerman = true;
-						if (this.hideVisual[l])
+						if (hideVisual)
 						{
 							this.hideMerman = true;
 						}
 					}
-					if (this.armor[l].type == 535)
+					if (item.type == 535)
 					{
 						this.pStone = true;
 					}
-					if (this.armor[l].type == 536)
+					if (item.type == 536)
 					{
 						this.kbGlove = true;
 					}
-					if (this.armor[l].type == 532)
+					if (item.type == 532)
 					{
 						this.starCloak = true;
 					}
-					if (this.armor[l].type == 554)
+					if (item.type == 554)
 					{
 						this.longInvince = true;
 					}
-					if (this.armor[l].type == 555)
+					if (item.type == 555)
 					{
 						this.manaFlower = true;
 						this.manaCost -= 0.08f;
 					}
 					if (Main.myPlayer == this.whoAmI)
 					{
-						if (this.armor[l].type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0 && Main.curMusic <= 41)
+						if (item.type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0 && Main.curMusic <= 41)
 						{
 							int num7 = 0;
 							if (Main.curMusic == 1)
@@ -9651,154 +_,160 @@
 							}
 							if (Main.curMusic == 28)
 							{
-								this.armor[l].SetDefaults(1963, false);
+								item.SetDefaults(1963, false);
 							}
 							else if (Main.curMusic == 29)
 							{
-								this.armor[l].SetDefaults(1610, false);
+								item.SetDefaults(1610, false);
 							}
 							else if (Main.curMusic == 30)
 							{
-								this.armor[l].SetDefaults(1963, false);
+								item.SetDefaults(1963, false);
 							}
 							else if (Main.curMusic == 31)
 							{
-								this.armor[l].SetDefaults(1964, false);
+								item.SetDefaults(1964, false);
 							}
 							else if (Main.curMusic == 32)
 							{
-								this.armor[l].SetDefaults(1965, false);
+								item.SetDefaults(1965, false);
 							}
 							else if (Main.curMusic == 33)
 							{
-								this.armor[l].SetDefaults(2742, false);
+								item.SetDefaults(2742, false);
 							}
 							else if (Main.curMusic == 34)
 							{
-								this.armor[l].SetDefaults(3370, false);
+								item.SetDefaults(3370, false);
 							}
 							else if (Main.curMusic == 35)
 							{
-								this.armor[l].SetDefaults(3236, false);
+								item.SetDefaults(3236, false);
 							}
 							else if (Main.curMusic == 36)
 							{
-								this.armor[l].SetDefaults(3237, false);
+								item.SetDefaults(3237, false);
 							}
 							else if (Main.curMusic == 37)
 							{
-								this.armor[l].SetDefaults(3235, false);
+								item.SetDefaults(3235, false);
 							}
 							else if (Main.curMusic == 38)
 							{
-								this.armor[l].SetDefaults(3044, false);
+								item.SetDefaults(3044, false);
 							}
 							else if (Main.curMusic == 39)
 							{
-								this.armor[l].SetDefaults(3371, false);
+								item.SetDefaults(3371, false);
 							}
 							else if (Main.curMusic == 40)
 							{
-								this.armor[l].SetDefaults(3796, false);
+								item.SetDefaults(3796, false);
 							}
 							else if (Main.curMusic == 41)
 							{
-								this.armor[l].SetDefaults(3869, false);
+								item.SetDefaults(3869, false);
 							}
 							else if (Main.curMusic > 13)
 							{
-								this.armor[l].SetDefaults(1596 + Main.curMusic - 14, false);
+								item.SetDefaults(1596 + Main.curMusic - 14, false);
 							}
 							else
 							{
-								this.armor[l].SetDefaults(num7 + 562, false);
-							}
-						}
-						if (this.armor[l].type >= 562 && this.armor[l].type <= 574)
-						{
-							Main.musicBox2 = this.armor[l].type - 562;
-						}
-						if (this.armor[l].type >= 1596 && this.armor[l].type <= 1609)
-						{
-							Main.musicBox2 = this.armor[l].type - 1596 + 13;
-						}
-						if (this.armor[l].type == 1610)
+								item.SetDefaults(num7 + 562, false);
+							}
+						}
+						if (item.type >= 562 && item.type <= 574)
+						{
+							Main.musicBox2 = item.type - 562;
+						}
+						if (item.type >= 1596 && item.type <= 1609)
+						{
+							Main.musicBox2 = item.type - 1596 + 13;
+						}
+						if (item.type == 1610)
 						{
 							Main.musicBox2 = 27;
 						}
-						if (this.armor[l].type == 1963)
+						if (item.type == 1963)
 						{
 							Main.musicBox2 = 28;
 						}
-						if (this.armor[l].type == 1964)
+						if (item.type == 1964)
 						{
 							Main.musicBox2 = 29;
 						}
-						if (this.armor[l].type == 1965)
+						if (item.type == 1965)
 						{
 							Main.musicBox2 = 30;
 						}
-						if (this.armor[l].type == 2742)
+						if (item.type == 2742)
 						{
 							Main.musicBox2 = 31;
 						}
-						if (this.armor[l].type == 3044)
+						if (item.type == 3044)
 						{
 							Main.musicBox2 = 32;
 						}
-						if (this.armor[l].type == 3235)
+						if (item.type == 3235)
 						{
 							Main.musicBox2 = 33;
 						}
-						if (this.armor[l].type == 3236)
+						if (item.type == 3236)
 						{
 							Main.musicBox2 = 34;
 						}
-						if (this.armor[l].type == 3237)
+						if (item.type == 3237)
 						{
 							Main.musicBox2 = 35;
 						}
-						if (this.armor[l].type == 3370)
+						if (item.type == 3370)
 						{
 							Main.musicBox2 = 36;
 						}
-						if (this.armor[l].type == 3371)
+						if (item.type == 3371)
 						{
 							Main.musicBox2 = 37;
 						}
-						if (this.armor[l].type == 3796)
+						if (item.type == 3796)
 						{
 							Main.musicBox2 = 38;
 						}
-						if (this.armor[l].type == 3869)
+						if (item.type == 3869)
 						{
 							Main.musicBox2 = 39;
 						}
-					}
-				}
-			}
-			if (this.dd2Accessory)
-			{
-				this.minionDamage += 0.1f;
-				this.maxTurrets++;
-			}
-			for (int m = 3; m < 8 + this.extraAccessorySlots; m++)
-			{
-				if (this.armor[m].wingSlot > 0)
-				{
-					if (!this.hideVisual[m] || (this.velocity.Y != 0f && !this.mount.Active))
-					{
-						this.wings = (int)this.armor[m].wingSlot;
-					}
-					this.wingsLogic = (int)this.armor[m].wingSlot;
-				}
-			}
-			for (int n = 13; n < 18 + this.extraAccessorySlots; n++)
-			{
-				int type4 = this.armor[n].type;
-				if (this.armor[n].wingSlot > 0)
-				{
-					this.wings = (int)this.armor[n].wingSlot;
+						if (SoundLoader.itemToMusic.ContainsKey(item.type))
+						{
+							Main.musicBox2 = SoundLoader.itemToMusic[item.type];
+						}
+					}
+					if (this.dd2Accessory)
+					{
+						this.minionDamage += 0.1f;
+						this.maxTurrets++;
+					}
+					if (item.wingSlot > 0)
+					{
+						if (!hideVisual || (this.velocity.Y != 0f && !this.mount.Active))
+						{
+							this.wings = item.wingSlot;
+						}
+						this.wingsLogic = item.wingSlot;
+					}
+					ItemLoader.UpdateAccessory(item, this, hideVisual);
+				}
+			}
+		}
+
+		public void VanillaUpdateVanityAccessory(Item item)
+		{
+			//for (int n = 13; n < 18 + this.extraAccessorySlots; n++)
+			{
+				int type4 = item.type;
+				if (item.wingSlot > 0)
+				{
+					this.wings = item.wingSlot;
 				}
 				if (type4 == 861 || type4 == 3110 || type4 == 485)
 				{
@@ -9811,6 +_,32 @@
 					this.forceMerman = true;
 				}
 			}
+		}
+
+		public void UpdateEquips(int i) //Noise for the Diff
+		{
+			for (int j = 0; j < 58; j++)
+			{
+				VanillaUpdateInventory(this.inventory[j]);
+			}
+			for (int k = 0; k < 8 + this.extraAccessorySlots; k++)
+			{
+				VanillaUpdateEquip(this.armor[k]);
+			}
+			bool flag = false;
+			bool flag2 = false;
+			bool flag3 = false;
+			for (int l = 3; l < 8 + this.extraAccessorySlots; l++)
+			{
+				VanillaUpdateAccessory(i, this.armor[l], this.hideVisual[l], ref flag, ref flag2, ref flag3);
+			}
+			PlayerHooks.UpdateEquips(this, ref flag, ref flag2, ref flag3);
+			//wing loop merged into VanillaUpdateAccessory
+			for (int n = 13; n < 18 + this.extraAccessorySlots; n++)
+			{
+				VanillaUpdateVanityAccessory(this.armor[n]);
+			}
+			PlayerHooks.UpdateVanityAccessories(this);
 			if (this.whoAmI == Main.myPlayer && Main.clock && this.accWatch < 3)
 			{
 				this.accWatch++;
@@ -10445,6 +_,7 @@
 				this.setMonkT2 = true;
 				this.maxTurrets++;
 			}
+			ItemLoader.UpdateArmorSet(this, this.armor[0], this.armor[1], this.armor[2]);
 		}
 
 		public void UpdateSocialShadow()
@@ -10630,6 +_,8 @@
 			bool flag = this.ZoneRain && this.ZoneSnow;
 			bool flag2 = point.Y > Main.maxTilesY - 320;
 			bool flag3 = this.ZoneOverworldHeight && (point.X < 380 || point.X > Main.maxTilesX - 380);
+			// TODO, are these flags a problem?
+			PlayerHooks.UpdateBiomes(this);
 			this.ManageSpecialBiomeVisuals("Stardust", this.ZoneTowerStardust, value4 - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("Nebula", this.ZoneTowerNebula, value3 - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("Vortex", this.ZoneTowerVortex, value2 - new Vector2(0f, 10f));
@@ -10757,6 +_,7 @@
 					Player._insideBlizzardSound = SlotId.Invalid;
 				}
 			}
+			PlayerHooks.UpdateBiomeVisuals(this);
 			if (!this.dead)
 			{
 				Point point2 = base.Center.ToTileCoordinates();
@@ -10883,6 +_,7 @@
 			this.trapDebuffSource = false;
 			this.yoraiz0rEye = 0;
 			this.yoraiz0rDarkness = false;
+			PlayerHooks.UpdateDead(this);
 			this.gravDir = 1f;
 			for (int i = 0; i < 22; i++)
 			{
@@ -11273,6 +_,7 @@
 				flag = true;
 			}
 			IL_3BC:
+			TileLoader.DisableSmartCursor(Main.tile[num, num2], ref flag);
 			int tileBoost = item.tileBoost;
 			int num3 = 0;
 			if (item.type == 1071 || item.type == 1543 || item.type == 1072 || item.type == 1544)
@@ -14084,6 +_,7 @@
 			if (this.controlTorch && this.itemAnimation == 0)
 			{
 				int num = 0;
+				//patch file: num2, num3
 				int num2 = (int)(((float)Main.mouseX + Main.screenPosition.X) / 16f);
 				int num3 = (int)(((float)Main.mouseY + Main.screenPosition.Y) / 16f);
 				if (this.gravDir == -1f)
@@ -14113,7 +_,7 @@
 					{
 						num7 = this.inventory[i].tileBoost;
 					}
-					if ((this.inventory[i].type == 424 || this.inventory[i].type == 1103) && num8 == -10)
+					if (ItemID.Sets.ExtractinatorMode[this.inventory[i].type] >= 0 && num8 == -10)
 					{
 						num8 = this.inventory[i].tileBoost;
 					}
@@ -14193,12 +_,26 @@
 						num = 5;
 					}
 				}
+				int modSelect = TileLoader.AutoSelect(num2, num3, this);
+				if (modSelect >= 0)
+				{
+					if (this.nonTorch == -1)
+					{
+						this.nonTorch = this.selectedItem;
+					}
+					this.selectedItem = modSelect;
+					return;
+				}
 				for (int j = 0; j < 50; j++)
 				{
 					int type2 = this.inventory[j].type;
+					bool dryTorch = false;
+					bool wetTorch = false;
+					bool glowstick = false;
+					ItemLoader.AutoLightSelect(this.inventory[j], ref dryTorch, ref wetTorch, ref glowstick);
 					if (num == 0)
 					{
-						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114)
+						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch || wetTorch)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -14207,7 +_,7 @@
 							this.selectedItem = j;
 							return;
 						}
-						if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112)
+						if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -14254,20 +_,20 @@
 					}
 					else if (num == 4)
 					{
-						if (this.inventory[j].type != 282 && this.inventory[j].type != 286 && this.inventory[j].type != 3002 && this.inventory[j].type != 3112 && this.inventory[j].type != 930 && (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 974 || type2 == 1245 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114))
+						if (this.inventory[j].type != 282 && this.inventory[j].type != 286 && this.inventory[j].type != 3002 && this.inventory[j].type != 3112 && this.inventory[j].type != 930 && !glowstick && (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 974 || type2 == 1245 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch))
 						{
 							if (this.nonTorch == -1)
 							{
 								this.nonTorch = this.selectedItem;
 							}
-							if (this.inventory[this.selectedItem].createTile != 4)
+							if (!TileLoader.IsTorch(this.inventory[this.selectedItem].createTile))
 							{
 								this.selectedItem = j;
 							}
 						}
 						else
 						{
-							if ((type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112) && flag2)
+							if ((type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick) && flag2)
 							{
 								if (this.nonTorch == -1)
 								{
@@ -14297,7 +_,7 @@
 									return;
 								}
 							}
-							else if (type2 == 1333 || type2 == 523)
+							else if (type2 == 1333 || type2 == 523 || wetTorch)
 							{
 								if (this.nonTorch == -1)
 								{
@@ -14310,13 +_,13 @@
 					}
 					else if (num == 5)
 					{
-						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114)
+						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch || wetTorch)
 						{
 							if (this.nonTorch == -1)
 							{
 								this.nonTorch = this.selectedItem;
 							}
-							if (this.inventory[this.selectedItem].createTile != 4)
+							if (!TileLoader.IsTorch(this.inventory[this.selectedItem].createTile))
 							{
 								this.selectedItem = j;
 							}
@@ -14342,7 +_,7 @@
 								return;
 							}
 						}
-						else if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112)
+						else if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -14721,6 +_,7 @@
 				Player.tileRangeY = 4;
 			}
 			this.mount.CheckMountBuff(this);
+			PlayerHooks.ResetEffects(this);
 		}
 
 		public void UpdateImmunity()
@@ -14856,6 +_,7 @@
 				this.lifeRegenTime = 0;
 				this.lifeRegen -= 100;
 			}
+			PlayerHooks.UpdateBadLifeRegen(this);
 			if (this.honey && this.lifeRegen < 0)
 			{
 				this.lifeRegen += 4;
@@ -14909,6 +_,7 @@
 			{
 				this.lifeRegen += 2;
 			}
+			PlayerHooks.UpdateLifeRegen(this);
 			if (this.bleed)
 			{
 				this.lifeRegenTime = 0;
@@ -15006,6 +_,7 @@
 					num2 /= 2f;
 				}
 			}
+			PlayerHooks.NaturalLifeRegen(this, ref num2);
 			float num4 = (float)this.statLifeMax2 / 400f * 0.85f + 0.15f;
 			num2 *= num4;
 			this.lifeRegen += (int)Math.Round((double)num2);
@@ -16982,8 +_,10 @@
 			if (this.wingsLogic == 26)
 			{
 				num2 = 0.75f;
+				//patch file: num2, num5
 				num5 = 0.15f;
 				num4 = 1f;
+				//patch file: num, num3, num4
 				num3 = 2.5f;
 				num = 0.125f;
 			}
@@ -17009,6 +_,7 @@
 				num3 = 2f;
 				num = 0.15f;
 			}
+			ItemLoader.VerticalWingSpeeds(this, ref num2, ref num5, ref num4, ref num3, ref num);
 			this.velocity.Y = this.velocity.Y - num * this.gravDir;
 			if (this.gravDir == 1f)
 			{
@@ -17456,6 +_,7 @@
 				{
 					num9 = 13f;
 				}
+				ProjectileLoader.GrapplePullSpeed(Main.projectile[this.grappling[0]], this, ref num9);
 				float num10;
 				if (num8 > num9)
 				{
@@ -18143,6 +_,7 @@
 			this.slippy = (num3 == 161 || num3 == 162 || num3 == 163 || num3 == 164 || num3 == 200 || num3 == 127);
 			this.slippy2 = (num3 == 197);
 			this.powerrun = (num3 == 198);
+			TileLoader.FloorVisuals(num3, this);
 			if (Main.tile[num - 1, num2].slope() != 0 || Main.tile[num, num2].slope() != 0 || Main.tile[num + 1, num2].slope() != 0)
 			{
 				num3 = -1;
@@ -18156,7 +_,7 @@
 
 		private void MakeFloorDust(bool Falling, int type)
 		{
-			if (type == 147 || type == 25 || type == 53 || type == 189 || type == 0 || type == 123 || type == 57 || type == 112 || type == 116 || type == 196 || type == 193 || type == 195 || type == 197 || type == 199 || type == 229 || type == 371)
+			if (type == 147 || type == 25 || type == 53 || type == 189 || type == 0 || type == 123 || type == 57 || type == 112 || type == 116 || type == 196 || type == 193 || type == 195 || type == 197 || type == 199 || type == 229 || type == 371 || TileLoader.HasWalkDust(type))
 			{
 				int num = 1;
 				if (Falling)
@@ -18167,6 +_,7 @@
 				{
 					bool flag = true;
 					int num2 = 76;
+					//patch file: type, num2, flag
 					if (type == 53)
 					{
 						num2 = 32;
@@ -18256,6 +_,7 @@
 					{
 						newColor = new Color(97, 200, 255, 100);
 					}
+					TileLoader.WalkDust(type, ref num2, ref flag, ref newColor);
 					if (!Falling)
 					{
 						float num3 = Math.Abs(this.velocity.X) / 3f;
@@ -18583,6 +_,7 @@
 			{
 				return;
 			}
+			PlayerHooks.PreUpdate(this);
 			this.miscCounter++;
 			if (this.miscCounter >= 300)
 			{
@@ -18957,6 +_,7 @@
 							this.holdDownCardinalTimer[l] = 0;
 						}
 					}
+					PlayerHooks.SetControls(this);
 					if (this.controlInv)
 					{
 						if (this.releaseInventory)
@@ -19396,14 +_,6 @@
 						num22 = 0;
 					}
 					this.mount.FatigueRecovery();
-					bool flag12 = false;
-					for (int n = 3; n < 10; n++)
-					{
-						if (this.armor[n].stack > 0 && this.armor[n].wingSlot > -1)
-						{
-							flag12 = true;
-						}
-					}
 					if (this.stoned)
 					{
 						int num23 = (int)(((float)num22 * this.gravDir - 2f) * 20f);
@@ -19413,7 +_,7 @@
 							this.immune = false;
 						}
 					}
-					else if (((this.gravDir == 1f && num22 > num21) || (this.gravDir == -1f && num22 < -num21)) && !this.noFallDmg && !flag12)
+					else if (((this.gravDir == 1f && num22 > num21) || (this.gravDir == -1f && num22 < -num21)) && !this.noFallDmg && this.wingsLogic == 0)
 					{
 						this.immune = false;
 						int num24 = (int)((float)num22 * this.gravDir - (float)num21) * 10;
@@ -19587,11 +_,13 @@
 					this.AddBuff(194, 2, false);
 				}
 			}
-			for (int num25 = 0; num25 < 206; num25++)
+			PlayerHooks.PreUpdateBuffs(this);
+			for (int num25 = 0; num25 < BuffLoader.BuffCount; num25++)
 			{
 				this.buffImmune[num25] = false;
 			}
 			this.UpdateBuffs(i);
+			PlayerHooks.PostUpdateBuffs(this);
 			if (this.whoAmI == Main.myPlayer)
 			{
 				if (!this.onFire && !this.poisoned)
@@ -19706,6 +_,7 @@
 			}
 			this.UpdateArmorLights();
 			this.UpdateArmorSets(i);
+			PlayerHooks.PostUpdateEquips(this); // TODO, move down?
 			if (this.maxTurretsOld != this.maxTurrets)
 			{
 				this.UpdateMaxTurrets();
@@ -19973,6 +_,7 @@
 				}
 			}
 			this.meleeSpeed = 1f / this.meleeSpeed;
+			PlayerHooks.PostUpdateMiscEffects(this);
 			this.UpdateLifeRegen();
 			this.soulDrain = 0;
 			this.UpdateManaRegen();
@@ -20524,6 +_,7 @@
 					{
 						this.accRunSpeed = 7f;
 					}
+					ItemLoader.HorizontalWingSpeeds(this);
 				}
 				if (this.sticky)
 				{
@@ -20641,6 +_,7 @@
 						this.mount.UpdateDrill(this, this.controlUp, this.controlDown);
 					}
 				}
+				PlayerHooks.PostUpdateRunSpeeds(this);
 				this.HorizontalMovement();
 				if (this.gravControl)
 				{
@@ -20764,6 +_,7 @@
 				}
 				else
 				{
+					bool isCustomWings = ItemLoader.WingUpdate(this, flag19);
 					if (flag19)
 					{
 						if (this.wings == 10 && Main.rand.Next(2) == 0)
@@ -21476,7 +_,7 @@
 							}
 						}
 					}
-					else
+					else if (!isCustomWings)
 					{
 						int num91 = 4;
 						if (this.wings == 32)
@@ -21535,7 +_,7 @@
 						}
 						this.rocketTime = 0;
 					}
-					if (flag19 && this.wings != 4 && this.wings != 22 && this.wings != 0 && this.wings != 24 && this.wings != 28 && this.wings != 30 && this.wings != 33)
+					if (flag19 && this.wings != 4 && this.wings != 22 && this.wings != 0 && this.wings != 24 && this.wings != 28 && this.wings != 30 && this.wings != 33 && !isCustomWings)
 					{
 						if (this.wingFrame == 3)
 						{
@@ -21901,7 +_,7 @@
 										}
 									}
 								}
-								else if (this.wings != 22 && this.wings != 28)
+								else if (this.wings != 22 && this.wings != 28 && !isCustomWings)
 								{
 									if (this.wings == 30)
 									{
@@ -22831,6 +_,7 @@
 			this.grappling[0] = -1;
 			this.grapCount = 0;
 			this.releaseUseTile = !this.tileInteractAttempted;
+			PlayerHooks.PostUpdate(this);
 		}
 
 		private void UpdateArmorLights()
@@ -23041,7 +_,8 @@
 					{
 						num = 1;
 					}
-					if ((num != -1 || !this.immune) && (this.dash != 2 || i != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[i].type])
+					if (NPCLoader.CanHitPlayer(Main.npc[i], this, ref num) && PlayerHooks.CanBeHitByNPC(this, Main.npc[i], ref num)
+						&& (num != -1 || !this.immune) && (this.dash != 2 || i != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[i].type])
 					{
 						float num2 = 1f;
 						Rectangle rectangle2 = new Rectangle((int)Main.npc[i].position.X, (int)Main.npc[i].position.Y, Main.npc[i].width, Main.npc[i].height);
@@ -23082,6 +_,9 @@
 									num5 = (int)((float)num5 * ItemID.Sets.BannerStrength[Item.BannerToItem(num6)].NormalDamageReceived);
 								}
 							}
+							bool crit = false;
+							NPCLoader.ModifyHitPlayer(Main.npc[i], this, ref num5, ref crit);
+							PlayerHooks.ModifyHitByNPC(this, Main.npc[i], ref num5, ref crit);
 							if (this.whoAmI == Main.myPlayer && num3 > 0f && !this.immune && !Main.npc[i].dontTakeDamage)
 							{
 								int damage = (int)((float)num5 * num3);
@@ -23097,7 +_,10 @@
 							}
 							if (flag)
 							{
-								this.Hurt(PlayerDeathReason.ByNPC(i), num5, num4, false, false, false, num);
+								int realDamage = (int)this.Hurt(PlayerDeathReason.ByNPC(i), num5, num4, false, false, false, num);
+								//TODO, what is this flag?, have these parameters changed? (int)this.Hurt(num146, num145, false, false, Lang.deathMsg(-1, num140, -1, -1, 0, 0), crit, num141);
+								NPCLoader.OnHitPlayer(Main.npc[i], this, realDamage, crit);
+								PlayerHooks.OnHitByNPC(this, Main.npc[i], realDamage, crit);
 							}
 							if (flag3)
 							{
@@ -23187,6 +_,8 @@
 
 		public void ItemCheck_ManageRightClickFeatures()
 		{
+			//ItemLoader.AltFunctionUse(this.inventory[this.selectedItem], this)
+			// TODO, reintegrate AltFunctionUse
 			bool flag = this.selectedItem != 58 && this.controlUseTile && !this.tileInteractionHappened && this.releaseUseItem && !this.controlUseItem && !this.mouseInterface && !CaptureManager.Instance.Active && !Main.HoveringOverAnNPC && !Main.SmartInteractShowingGenuine;
 			if (flag && this.altFunctionUse == 0 && this.inventory[this.selectedItem].type == 3384)
 			{
@@ -23209,6 +_,11 @@
 				this.controlUseItem = true;
 			}
 			if (flag && this.altFunctionUse == 0 && this.inventory[this.selectedItem].shoot > 0 && ProjectileID.Sets.MinionTargettingFeature[this.inventory[this.selectedItem].shoot])
+			{
+				this.altFunctionUse = 1;
+				this.controlUseItem = true;
+			}
+			if(flag && this.altFunctionUse == 0 && ItemLoader.AltFunctionUse(this.inventory[this.selectedItem], this))
 			{
 				this.altFunctionUse = 1;
 				this.controlUseItem = true;
@@ -23329,6 +_,9 @@
 
 		public void ScrollHotbar(int Offset)
 		{
+			//disable hotbar scrolling when using auto select
+			//previously it only worked when scrolling between 0 and 9, and made the sound
+			if (selectedItem >= 10) return;
 			while (Offset > 9)
 			{
 				Offset -= 10;
@@ -23693,6 +_,7 @@
 					this.showItemIcon2 = -1;
 				}
 			}
+			TileLoader.MouseOverFar(myX, myY);
 		}
 
 		private void TileInteractionsUse(int myX, int myY)
@@ -23790,7 +_,7 @@
 						Wiring.HitSwitch(myX, myY);
 						NetMessage.SendData(59, -1, -1, "", myX, (float)myY, 0f, 0f, 0, 0, 0);
 					}
-					else if (Main.tile[myX, myY].type == 139)
+					else if (Main.tile[myX, myY].type == 139 || TileLoader.IsModMusicBox(Main.tile[myX, myY]))
 					{
 						flag2 = true;
 						Main.PlaySound(28, myX * 16, myY * 16, 0, 1f, 0f);
@@ -23897,7 +_,7 @@
 							Projectile.NewProjectile((float)(myX * 16 + 8), (float)(num15 * 16 + 2), 0f, 0f, 419 + Main.rand.Next(4), 0, 0f, this.whoAmI, (float)myX, (float)num15);
 						}
 					}
-					else if (Main.tile[myX, myY].type == 4 || Main.tile[myX, myY].type == 13 || Main.tile[myX, myY].type == 33 || Main.tile[myX, myY].type == 49 || (Main.tile[myX, myY].type == 50 && Main.tile[myX, myY].frameX == 90) || Main.tile[myX, myY].type == 174)
+					else if (TileLoader.IsTorch(Main.tile[myX, myY].type) || Main.tile[myX, myY].type == 13 || Main.tile[myX, myY].type == 33 || Main.tile[myX, myY].type == 49 || (Main.tile[myX, myY].type == 50 && Main.tile[myX, myY].frameX == 90) || Main.tile[myX, myY].type == 174)
 					{
 						flag2 = true;
 						WorldGen.KillTile(myX, myY, false, false, false);
@@ -24287,10 +_,10 @@
 							}
 						}
 					}
-					else if (Main.tile[myX, myY].type == 10)
+					else if (Main.tile[myX, myY].type == TileID.ClosedDoor || TileLoader.OpenDoorID(Main.tile[myX, myY]) >= 0)
 					{
 						flag2 = true;
-						if (Main.tile[myX, myY].frameY >= 594 && Main.tile[myX, myY].frameY <= 646)
+						if (Main.tile[myX, myY].type == TileID.ClosedDoor && Main.tile[myX, myY].frameY >= 594 && Main.tile[myX, myY].frameY <= 646)
 						{
 							int num43 = 1141;
 							for (int num44 = 0; num44 < 58; num44++)
@@ -24316,7 +_,7 @@
 							NetMessage.SendData(19, -1, -1, "", 0, (float)myX, (float)myY, (float)this.direction, 0, 0, 0);
 						}
 					}
-					else if (Main.tile[myX, myY].type == 11)
+					else if (TileLoader.CloseDoorID(Main.tile[myX, myY]) >= 0)
 					{
 						flag2 = true;
 						if (WorldGen.CloseDoor(myX, myY, false))
@@ -24672,6 +_,8 @@
 							this.LaunchMinecartHook(myX, myY);
 						}
 					}
+					TileLoader.RightClick(myX, myY);
+					// todo check out this flag2. return? "this.releaseUseTile = false;"
 				}
 				if (flag2)
 				{
@@ -25312,7 +_,7 @@
 				this.showItemIcon = true;
 				this.showItemIcon2 = 3747;
 			}
-			if (Main.tile[myX, myY].type == 219 && (this.inventory[this.selectedItem].type == 424 || this.inventory[this.selectedItem].type == 1103))
+			if (Main.tile[myX, myY].type == 219 && ItemID.Sets.ExtractinatorMode[this.inventory[this.selectedItem].type] > -1)
 			{
 				this.noThrow = 2;
 				this.showItemIcon = true;
@@ -25692,6 +_,7 @@
 					this.showItemIcon2 = num26;
 				}
 			}
+			TileLoader.MouseOver(myX, myY);
 		}
 
 		private void TryLandingOnDetonator()
@@ -25750,7 +_,7 @@
 		{
 			for (int j = 0; j < 400; j++)
 			{
-				if (Main.item[j].active && Main.item[j].noGrabDelay == 0 && Main.item[j].owner == i)
+				if (Main.item[j].active && Main.item[j].noGrabDelay == 0 && Main.item[j].owner == i && ItemLoader.CanPickup(Main.item[j], this))
 				{
 					int num = Player.defaultItemGrabRange;
 					if (this.goldRing && Main.item[j].type >= 71 && Main.item[j].type <= 74)
@@ -25773,10 +_,20 @@
 					{
 						num += 100;
 					}
+					ItemLoader.GrabRange(Main.item[j], this, ref num);
 					if (new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)))
 					{
 						if (i == Main.myPlayer && (this.inventory[this.selectedItem].type != 0 || this.itemAnimation <= 0))
 						{
+							if (!ItemLoader.OnPickup(Main.item[j], this))
+							{
+								Main.item[j] = new Item();
+								if (Main.netMode == 1)
+								{
+									NetMessage.SendData(21, -1, -1, "", j, 0f, 0f, 0f, 0, 0, 0);
+								}
+								continue;
+							}
 							if (ItemID.Sets.NebulaPickup[Main.item[j].type])
 							{
 								Main.PlaySound(7, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
@@ -25838,10 +_,13 @@
 							}
 						}
 					}
-					else if (new Rectangle((int)this.position.X - num, (int)this.position.Y - num, this.width + num * 2, this.height + num * 2).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)) && this.ItemSpace(Main.item[j]))
+					else if (new Rectangle((int)this.position.X - num, (int)this.position.Y - num, this.width + num * 2, this.height + num * 2).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)) && (this.ItemSpace(Main.item[j]) || ItemLoader.ExtraPickupSpace(Main.item[j], this)))
 					{
 						Main.item[j].beingGrabbed = true;
-						if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
+						if (ItemLoader.GrabStyle(Main.item[j], this))
+						{
+						}
+						else if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
 						{
 							float num3 = 12f;
 							Vector2 vector = new Vector2(Main.item[j].position.X + (float)(Main.item[j].width / 2), Main.item[j].position.Y + (float)(Main.item[j].height / 2));
@@ -26595,7 +_,7 @@
 		{
 			int num = 4;
 			int num2 = 3;
-			for (int i = 0; i < 467; i++)
+			for (int i = 0; i < this.adjTile.Length; i++)
 			{
 				this.oldAdjTile[i] = this.adjTile[i];
 				this.adjTile[i] = false;
@@ -26643,6 +_,7 @@
 							this.adjTile[14] = true;
 							this.alchemyTable = true;
 						}
+						TileLoader.AdjTiles(this, Main.tile[j, k].type);
 					}
 					if (Main.tile[j, k].liquid > 200 && Main.tile[j, k].liquidType() == 0)
 					{
@@ -26661,7 +_,7 @@
 			if (Main.playerInventory)
 			{
 				bool flag = false;
-				for (int l = 0; l < 467; l++)
+				for (int l = 0; l < this.adjTile.Length; l++)
 				{
 					if (this.oldAdjTile[l] != this.adjTile[l])
 					{
@@ -26955,6 +_,7 @@
 				this.hermesStepSound.SoundStyle = 24;
 				this.hermesStepSound.IntendedCooldown = 6;
 			}
+			ItemLoader.PreUpdateVanitySet(this);
 			if (this.wings > 0)
 			{
 				this.back = -1;
@@ -26972,6 +_,8 @@
 			{
 				return;
 			}
+			PlayerHooks.FrameEffects(this);
+			ItemLoader.UpdateVanity(this);
 			if (((this.body == 68 && this.legs == 57 && this.head == 106) || (this.body == 74 && this.legs == 63 && this.head == 106)) && Main.rand.Next(10) == 0)
 			{
 				int num2 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 2f, this.position.Y - 2f - this.velocity.Y * 2f), this.width, this.height, 43, 0f, 0f, 100, new Color(255, 0, 255), 0.3f);
@@ -27111,6 +_,7 @@
 					}
 				}
 			}
+			ItemLoader.UpdateVanitySet(this);
 			this.bodyFrame.Width = 40;
 			this.bodyFrame.Height = 56;
 			this.legFrame.Width = 40;
@@ -27337,8 +_,13 @@
 							{
 								this.bodyFrame.Y = this.bodyFrame.Height * 2;
 								return;
-							}
-						}
+								//patch file
+							}
+						}
+					}
+					else if (ItemLoader.UseItemFrame(this.inventory[this.selectedItem], this))
+					{
+						return;
 					}
 				}
 			}
@@ -27375,6 +_,10 @@
 					if (this.inventory[this.selectedItem].holdStyle == 3)
 					{
 						this.bodyFrame.Y = this.bodyFrame.Height * 3;
+						return;
+					}
+					if (ItemLoader.HoldItemFrame(this.inventory[this.selectedItem], this))
+					{
 						return;
 					}
 					if (this.shieldRaised)
@@ -27657,6 +_,8 @@
 			{
 				this.armorEffectDrawOutlines = true;
 			}
+			ItemLoader.ArmorSetShadows(drawPlayer);
+			// TODO, rename to this? SetArmorEffectVisuals
 			if (drawPlayer.stoned || drawPlayer.stealth != 1f)
 			{
 				this.armorEffectDrawOutlines = false;
@@ -27843,6 +_,7 @@
 					num = 135;
 				}
 			}
+			ItemLoader.SetMatch(armorslot, type, male, ref num, ref somethingSpecial);
 			return num;
 		}
 
@@ -28163,6 +_,14 @@
 				this.ShadowDodge();
 				return 0.0;
 			}
+			bool customDamage = false;
+			bool playSound = true;
+			bool genGore = true;
+			if (!PlayerHooks.PreHurt(this, pvp, quiet, ref Damage, ref hitDirection, ref Crit, ref customDamage,
+					ref playSound, ref genGore, ref damageSource))
+			{
+				return 0.0;
+			}
 			if (this.whoAmI == Main.myPlayer && this.panic)
 			{
 				this.AddBuff(63, 300, true);
@@ -28177,7 +_,7 @@
 				NetMessage.SendData(84, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
 			}
 			int num = Damage;
-			double num2 = Main.CalculatePlayerDamage(num, this.statDefense);
+			double num2 = customDamage ? num : Main.CalculatePlayerDamage(num, this.statDefense);
 			if (Crit)
 			{
 				num *= 2;
@@ -28331,6 +_,7 @@
 					}
 					Projectile.NewProjectile(base.Center.X + (float)Main.rand.Next(-40, 40), base.Center.Y - (float)Main.rand.Next(20, 60), this.velocity.X * 0.3f, this.velocity.Y * 0.3f, 565, 0, 0f, this.whoAmI, 0f, 0f);
 				}
+				PlayerHooks.Hurt(this, pvp, quiet, num2, hitDirection, Crit);
 				if (Main.netMode == 1 && this.whoAmI == Main.myPlayer && !quiet)
 				{
 					NetMessage.SendData(13, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
@@ -28451,6 +_,10 @@
 					this.velocity.X = 4.5f * (float)hitDirection;
 					this.velocity.Y = -3.5f;
 				}
+				if (!playSound)
+				{
+					goto postSound; //gotos are ugly but minimize the diff file
+				}
 				if (this.stoned)
 				{
 					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
@@ -28475,8 +_,13 @@
 				{
 					Main.PlaySound(1, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
 				}
+				postSound:
 				if (this.statLife > 0)
 				{
+					if (!genGore)
+					{
+						goto postGore; //gotta minimize diff files
+					}
 					double num21 = num2 / (double)this.statLifeMax2 * 100.0;
 					float num22 = (float)(2 * hitDirection);
 					float num23 = 0f;
@@ -28508,6 +_,8 @@
 						}
 						num24++;
 					}
+					postGore:
+					PlayerHooks.PostHurt(this, pvp, quiet, num2, hitDirection, Crit);
 				}
 				else
 				{
@@ -28549,6 +_,12 @@
 			{
 				return;
 			}
+			bool playSound = true;
+			bool genGore = true;
+			if (!PlayerHooks.PreKill(this, dmg, hitDirection, pvp, ref playSound, ref genGore, ref damageSource))
+			{
+				return;
+			}
 			if (pvp)
 			{
 				this.pvpDeath = true;
@@ -28608,19 +_,26 @@
 					this.KillMeForGood();
 				}
 			}
-			Main.PlaySound(5, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
+			if (playSound)
+			{
+				Main.PlaySound(5, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
+			}
 			this.headVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.bodyVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.legVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.headVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
 			this.bodyVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
 			this.legVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
-			if (this.stoned)
+			if (this.stoned || !genGore)
 			{
 				this.headPosition = Vector2.Zero;
 				this.bodyPosition = Vector2.Zero;
 				this.legPosition = Vector2.Zero;
 			}
+			if (!genGore)
+			{
+				goto postGore; //goto minimizes diff file size
+			}
 			for (int j = 0; j < 100; j++)
 			{
 				if (this.stoned)
@@ -28642,6 +_,7 @@
 					Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
 				}
 			}
+			postGore:
 			this.mount.Dismount(this);
 			this.dead = true;
 			this.respawnTimer = 600;
@@ -28665,6 +_,7 @@
 			{
 				this.respawnTimer = (int)((double)this.respawnTimer * 1.5);
 			}
+			PlayerHooks.Kill(this, dmg, hitDirection, pvp, damageSource);
 			this.immuneAlpha = 0;
 			this.palladiumRegen = false;
 			this.iceBarrier = false;
@@ -29068,7 +_,7 @@
 							{
 								this.inventory[num5].SetDefaults(0, false);
 							}
-							this.itemTime = this.inventory[this.selectedItem].useTime;
+							this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						}
 					}
 				}
@@ -29101,7 +_,7 @@
 							{
 								this.inventory[num10].SetDefaults(0, false);
 							}
-							this.itemTime = this.inventory[this.selectedItem].useTime;
+							this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						}
 					}
 				}
@@ -29117,11 +_,11 @@
 					{
 						if (Main.tile[num11, num12].color() > 0 && Main.tile[num11, num12].active() && WorldGen.paintTile(num11, num12, 0, true))
 						{
-							this.itemTime = this.inventory[this.selectedItem].useTime;
+							this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						}
 						else if (Main.tile[num11, num12].wallColor() > 0 && Main.tile[num11, num12].wall > 0 && WorldGen.paintWall(num11, num12, 0, true))
 						{
-							this.itemTime = this.inventory[this.selectedItem].useTime;
+							this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						}
 					}
 				}
@@ -29143,7 +_,7 @@
 					num15 -= 1873;
 					if (WorldGen.checkXmasTreeDrop(Player.tileTargetX, Player.tileTargetY, 0) != num15)
 					{
-						this.itemTime = this.inventory[this.selectedItem].useTime;
+						this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						WorldGen.dropXmasTree(Player.tileTargetX, Player.tileTargetY, 0);
 						WorldGen.setXmasTree(Player.tileTargetX, Player.tileTargetY, 0, num15);
 						int num16 = Player.tileTargetX;
@@ -29161,7 +_,7 @@
 					num15 -= 1877;
 					if (WorldGen.checkXmasTreeDrop(Player.tileTargetX, Player.tileTargetY, 1) != num15)
 					{
-						this.itemTime = this.inventory[this.selectedItem].useTime;
+						this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						WorldGen.dropXmasTree(Player.tileTargetX, Player.tileTargetY, 1);
 						WorldGen.setXmasTree(Player.tileTargetX, Player.tileTargetY, 1, num15);
 						int num18 = Player.tileTargetX;
@@ -29179,7 +_,7 @@
 					num15 -= 1883;
 					if (WorldGen.checkXmasTreeDrop(Player.tileTargetX, Player.tileTargetY, 2) != num15)
 					{
-						this.itemTime = this.inventory[this.selectedItem].useTime;
+						this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						WorldGen.dropXmasTree(Player.tileTargetX, Player.tileTargetY, 2);
 						WorldGen.setXmasTree(Player.tileTargetX, Player.tileTargetY, 2, num15);
 						int num20 = Player.tileTargetX;
@@ -29197,7 +_,7 @@
 					num15 -= 1894;
 					if (WorldGen.checkXmasTreeDrop(Player.tileTargetX, Player.tileTargetY, 3) != num15)
 					{
-						this.itemTime = this.inventory[this.selectedItem].useTime;
+						this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						WorldGen.dropXmasTree(Player.tileTargetX, Player.tileTargetY, 3);
 						WorldGen.setXmasTree(Player.tileTargetX, Player.tileTargetY, 3, num15);
 						int num22 = Player.tileTargetX;
@@ -29215,7 +_,7 @@
 			{
 				if (this.position.X / 16f - (float)Player.tileRangeX - (float)this.inventory[this.selectedItem].tileBoost - (float)this.blockRange <= (float)Player.tileTargetX && (this.position.X + (float)this.width) / 16f + (float)Player.tileRangeX + (float)this.inventory[this.selectedItem].tileBoost - 1f + (float)this.blockRange >= (float)Player.tileTargetX && this.position.Y / 16f - (float)Player.tileRangeY - (float)this.inventory[this.selectedItem].tileBoost - (float)this.blockRange <= (float)Player.tileTargetY && (this.position.Y + (float)this.height) / 16f + (float)Player.tileRangeY + (float)this.inventory[this.selectedItem].tileBoost - 2f + (float)this.blockRange >= (float)Player.tileTargetY && this.itemTime == 0 && this.itemAnimation > 0 && this.controlUseItem)
 				{
-					this.itemTime = this.inventory[this.selectedItem].useTime;
+					this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 					Main.PlaySound(7, -1, -1, 1, 1f, 0f);
 					int extractType = ItemID.Sets.ExtractinatorMode[this.inventory[this.selectedItem].type];
 					Player.ExtractinatorUse(extractType);
@@ -29278,10 +_,23 @@
 					bool flag3 = false;
 					bool flag4 = false;
 					TileObject tileObject = default(TileObject);
-					if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
+					if (!TileLoader.CanPlace(Player.tileTargetX, Player.tileTargetY))
+					{
+					}
+					else if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
 					{
 						flag4 = true;
-						flag3 = TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, (int)((ushort)this.inventory[this.selectedItem].createTile), this.inventory[this.selectedItem].placeStyle, this.direction, out tileObject, false);
+						int hackCreateTile = this.inventory[this.selectedItem].createTile;
+						int hackPlaceStyle = this.inventory[this.selectedItem].placeStyle;
+						if (hackCreateTile == TileID.Saplings)
+						{
+							Tile soil = Main.tile[Player.tileTargetX, Player.tileTargetY + 1];
+							if (soil.active())
+							{
+								TileLoader.SaplingGrowthType(soil.type, ref hackCreateTile, ref hackPlaceStyle);
+							}
+						}
+						flag3 = TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, hackCreateTile, hackPlaceStyle, this.direction, out tileObject, false);
 						int num26 = 0;
 						int num27 = 0;
 						int x = 0;
@@ -29387,7 +_,7 @@
 								flag3 = true;
 							}
 						}
-						else if (this.inventory[this.selectedItem].createTile == 4 || this.inventory[this.selectedItem].createTile == 136)
+						else if (TileLoader.IsTorch(this.inventory[this.selectedItem].createTile) || this.inventory[this.selectedItem].createTile == 136)
 						{
 							if (Main.tile[Player.tileTargetX, Player.tileTargetY].wall > 0)
 							{
@@ -29741,7 +_,7 @@
 						}
 						if (flag6)
 						{
-							this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed);
+							this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 							if (flag4)
 							{
 								TileObjectData.CallPostPlacementPlayerHook(Player.tileTargetX, Player.tileTargetY, this.inventory[this.selectedItem].createTile, num47, this.direction, tileObject);
@@ -30086,7 +_,7 @@
 													{
 														this.inventory[num84].SetDefaults(0, false);
 													}
-													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed);
+													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 												}
 											}
 											if (this.autoActuator && this.builderAccStatus[2] == 0)
@@ -30119,7 +_,7 @@
 													{
 														this.inventory[num85].SetDefaults(0, false);
 													}
-													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed);
+													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.tileSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 													goto IL_4090;
 												}
 												goto IL_4090;
@@ -30137,6 +_,8 @@
 							{
 								Main.blockMouse = true;
 							}
+
+							TileLoader.PlaceInWorld(Player.tileTargetX, Player.tileTargetY, this.inventory[this.selectedItem]);
 						}
 					}
 				}
@@ -30157,13 +_,16 @@
 						{
 							this.inventory[this.selectedItem].stack++;
 						}
-						this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed);
+						this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						return;
 					}
+
 					WorldGen.PlaceWall(Player.tileTargetX, Player.tileTargetY, this.inventory[this.selectedItem].createWall, false);
+
 					if ((int)Main.tile[Player.tileTargetX, Player.tileTargetY].wall == this.inventory[this.selectedItem].createWall)
 					{
-						this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed);
+						WallLoader.PlaceInWorld(Player.tileTargetX, Player.tileTargetY, this.inventory[this.selectedItem]);
+						this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 						if (Main.netMode == 1)
 						{
 							NetMessage.SendData(17, -1, -1, "", 3, (float)Player.tileTargetX, (float)Player.tileTargetY, (float)this.inventory[this.selectedItem].createWall, 0, 0, 0);
@@ -30256,7 +_,7 @@
 													{
 														this.inventory[num98].SetDefaults(0, false);
 													}
-													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed);
+													this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 												}
 											}
 										}
@@ -30287,7 +_,7 @@
 								{
 									this.inventory[num104].SetDefaults(0, false);
 								}
-								this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed);
+								this.itemTime = (int)((float)this.inventory[this.selectedItem].useTime * this.wallSpeed / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 							}
 						}
 					}
@@ -30336,7 +_,7 @@
 						num3++;
 					}
 					j = y - j;
-					this.itemTime = this.inventory[this.selectedItem].useTime;
+					this.itemTime = (int)(this.inventory[this.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(this, this.inventory[this.selectedItem]));
 					WorldGen.ShootFromCannon(i, j, num3, num, this.inventory[this.selectedItem].damage, 8f, Main.myPlayer);
 				}
 			}
@@ -30348,7 +_,7 @@
 			int num2 = 25;
 			int num3 = 50;
 			int num4 = -1;
-			if (extractType == 1)
+			if (extractType == ItemID.DesertFossil)
 			{
 				num /= 3;
 				num2 *= 2;
@@ -30356,7 +_,7 @@
 				num4 = 10;
 			}
 			int num5 = 1;
-			int num6;
+			int num6 = 0;
 			if (num4 != -1 && Main.rand.Next(num4) == 0)
 			{
 				num6 = 3380;
@@ -30679,6 +_,7 @@
 					num5 += Main.rand.Next(0, 6);
 				}
 			}
+			ItemLoader.ExtractinatorUse(ref num6, ref num5, extractType);
 			if (num6 > 0)
 			{
 				Vector2 vector = Main.ReverseGravitySupport(Main.MouseScreen, 0f) + Main.screenPosition;
@@ -30806,6 +_,7 @@
 		{
 			int num = 0;
 			int fishingPole = this.inventory[this.selectedItem].fishingPole;
+			int bestFishingPoleIndex = this.selectedItem;
 			if (fishingPole == 0)
 			{
 				for (int i = 0; i < 58; i++)
@@ -30813,6 +_,7 @@
 					if (this.inventory[i].fishingPole > fishingPole)
 					{
 						fishingPole = this.inventory[i].fishingPole;
+						bestFishingPoleIndex = i;
 					}
 				}
 			}
@@ -30874,6 +_,7 @@
 			{
 				num2 = (int)((float)num2 * 0.9f);
 			}
+			PlayerHooks.GetFishingLevel(this, this.inventory[bestFishingPoleIndex], this.inventory[j], ref num2);
 			return num2;
 		}
 
@@ -31038,6 +_,10 @@
 
 		public void ItemCheck(int i)
 		{
+			if (!PlayerHooks.PreItemCheck(this))
+			{
+				return;
+			}
 			if (this.webbed || this.frozen || this.stoned)
 			{
 				return;
@@ -31047,6 +_,7 @@
 			Item item = this.inventory[this.selectedItem];
 			if (this.mount.Active)
 			{
+				MountLoader.UseAbility(this, Vector2.Zero, false);
 				if (this.mount.Type == 8)
 				{
 					this.noItems = true;
@@ -31228,7 +_,17 @@
 			if (Main.myPlayer == i && this.itemAnimation == 0 && TileObjectData.CustomPlace(item.createTile, item.placeStyle))
 			{
 				TileObject tileObject;
-				TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, item.createTile, item.placeStyle, this.direction, out tileObject, true);
+				int hackCreateTile = item.createTile;
+				int hackPlaceStyle = item.placeStyle;
+				if (hackCreateTile == TileID.Saplings)
+				{
+					Tile soil = Main.tile[Player.tileTargetX, Player.tileTargetY + 1];
+					if (soil.active())
+					{
+						TileLoader.SaplingGrowthType(soil.type, ref hackCreateTile, ref hackPlaceStyle);
+					}
+				}
+				TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, hackCreateTile, hackPlaceStyle, this.direction, out tileObject, true);
 			}
 			if (this.itemAnimation == 0 && this.altFunctionUse == 2)
 			{
@@ -31240,7 +_,7 @@
 				{
 					this.altFunctionUse = 2;
 				}
-				bool flag2 = true;
+				bool flag2 = ItemLoader.CanUseItem(item, this);
 				if (item.shoot == 0)
 				{
 					this.itemRotation = 0f;
@@ -31682,7 +_,7 @@
 						Main.PlaySound(item.UseSound, base.Center);
 					}
 				}
-				if ((item.shoot <= 0 || !ProjectileID.Sets.MinionTargettingFeature[item.shoot] || this.altFunctionUse != 2) && flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && item.shoot < 714 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
+				if ((item.shoot <= 0 || !ProjectileID.Sets.MinionTargettingFeature[item.shoot] || this.altFunctionUse != 2) && flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
 				{
 					if (ProjectileID.Sets.MinionSacrificable[item.shoot])
 					{
@@ -31808,11 +_,11 @@
 			{
 				if (item.melee)
 				{
-					this.itemAnimationMax = (int)((float)item.useAnimation * this.meleeSpeed);
+					this.itemAnimationMax = (int)((float)item.useAnimation * this.meleeSpeed / PlayerHooks.TotalMeleeSpeedMultiplier(this, item));
 				}
 				else
 				{
-					this.itemAnimationMax = item.useAnimation;
+					this.itemAnimationMax = (int)(item.useAnimation / PlayerHooks.TotalMeleeSpeedMultiplier(this, item));
 				}
 				if (item.mana > 0 && !flag && (item.type != 127 || !this.spaceGun))
 				{
@@ -32072,6 +_,7 @@
 							this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 						}
 					}
+					ItemLoader.UseStyle(item, this);
 				}
 			}
 			else if (item.holdStyle == 1 && !this.pulley)
@@ -32278,6 +_,7 @@
 				this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 				this.itemRotation = 0f;
 			}
+			ItemLoader.HoldStyle(item, this);
 			if ((((item.type == 974 || item.type == 8 || item.type == 1245 || item.type == 2274 || item.type == 3004 || item.type == 3045 || item.type == 3114 || (item.type >= 427 && item.type <= 433)) && !this.wet) || item.type == 523 || item.type == 1333) && !this.pulley)
 			{
 				float num52 = 1f;
@@ -32723,6 +_,7 @@
 					Lighting.AddLight(position16, 1f, 0.6f, 0.85f);
 				}
 			}
+			ItemLoader.HoldItem(item, this);
 			if (this.controlUseItem)
 			{
 				this.releaseUseItem = false;
@@ -32771,7 +_,7 @@
 				}
 				if (item.shoot > 0 && ProjectileID.Sets.TurretFeature[item.shoot] && this.altFunctionUse == 2 && flag8 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					for (int num73 = 0; num73 < 1000; num73++)
 					{
 						Projectile projectile2 = Main.projectile[num73];
@@ -32783,9 +_,10 @@
 				}
 				if (item.shoot > 0 && ProjectileID.Sets.MinionTargettingFeature[item.shoot] && this.altFunctionUse == 2 && flag8 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					this.MinionNPCTargetAim();
 				}
+				flag8 = flag8 && ItemLoader.CheckProjOnSwing(this, item);
 				if (item.shoot > 0 && this.itemAnimation > 0 && this.itemTime == 0 && flag8)
 				{
 					int num74 = item.shoot;
@@ -32931,7 +_,7 @@
 						{
 							num74 = 357;
 						}
-						this.itemTime = item.useTime;
+						this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						Vector2 vector2 = this.RotatedRelativePoint(this.MountedCenter, true);
 						bool flag11 = true;
 						int type5 = item.type;
@@ -34093,7 +_,8 @@
 							Projectile.NewProjectile((float)num216, (float)(num217 - num218), 0f, 0f, num74, num76, num77, i, 0f, 0f);
 							this.UpdateMaxTurrets();
 						}
-						else
+						else if (PlayerHooks.Shoot(this, item, ref vector2, ref num81, ref num82, ref num74, ref num76, ref num77)
+							&& ItemLoader.Shoot(item, this, ref vector2, ref num81, ref num82, ref num74, ref num76, ref num77))
 						{
 							int num219 = Projectile.NewProjectile(vector2.X, vector2.Y, num81, num82, num74, num76, num77, i, 0f, 0f);
 							if (item.type == 726)
@@ -34159,7 +_,7 @@
 								{
 									this.inventory[num222].SetDefaults(0, false);
 								}
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 5, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 						}
@@ -34181,7 +_,7 @@
 								{
 									this.inventory[num224].SetDefaults(0, false);
 								}
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 10, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 						}
@@ -34203,7 +_,7 @@
 								{
 									this.inventory[num226].SetDefaults(0, false);
 								}
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 12, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 						}
@@ -34225,7 +_,7 @@
 								{
 									this.inventory[num228].SetDefaults(0, false);
 								}
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 16, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 						}
@@ -34233,33 +_,33 @@
 						{
 							if (WorldGen.KillActuator(num220, num221))
 							{
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 9, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 							else if (WorldGen.KillWire4(num220, num221))
 							{
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 17, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 							else if (WorldGen.KillWire3(num220, num221))
 							{
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 13, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 							else if (WorldGen.KillWire2(num220, num221))
 							{
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 11, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 							else if (WorldGen.KillWire(num220, num221))
 							{
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								NetMessage.SendData(17, -1, -1, "", 6, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							}
 						}
 						else if (item.type == 849 && item.stack > 0 && WorldGen.PlaceActuator(num220, num221))
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							NetMessage.SendData(17, -1, -1, "", 8, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 							item.stack--;
 							if (item.stack <= 0)
@@ -34277,7 +_,7 @@
 								{
 									this.ActuationRodLock = true;
 									this.ActuationRodLockSetting = !tile2.inActive();
-									this.itemTime = item.useTime;
+									this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 									NetMessage.SendData(17, -1, -1, "", 19, (float)Player.tileTargetX, (float)Player.tileTargetY, 0f, 0, 0, 0);
 								}
 							}
@@ -34285,7 +_,7 @@
 						if (item.type == 3625)
 						{
 							Point point = new Point(Player.tileTargetX, Player.tileTargetY);
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							WiresUI.Settings.MultiToolMode toolMode = WiresUI.Settings.ToolMode;
 							WiresUI.Settings.ToolMode &= ~WiresUI.Settings.MultiToolMode.Actuator;
 							if (Main.netMode == 1)
@@ -34302,7 +_,7 @@
 				}
 				if (this.itemAnimation > 0 && this.itemTime == 0 && (item.type == 507 || item.type == 508))
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Vector2 vector23 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
 					float num230 = (float)Main.mouseX + Main.screenPosition.X - vector23.X;
 					float num231 = (float)Main.mouseY + Main.screenPosition.Y - vector23.Y;
@@ -34378,7 +_,7 @@
 									}
 								}
 								Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								int num237 = (int)Main.tile[Player.tileTargetX, Player.tileTargetY].liquid;
 								Main.tile[Player.tileTargetX, Player.tileTargetY].liquid = 0;
 								Main.tile[Player.tileTargetX, Player.tileTargetY].lava(false);
@@ -34438,7 +_,7 @@
 									WorldGen.SquareTileFrame(Player.tileTargetX, Player.tileTargetY, true);
 									item.stack--;
 									this.PutItemInInventory(205, this.selectedItem);
-									this.itemTime = item.useTime;
+									this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 									if (Main.netMode == 1)
 									{
 										NetMessage.sendWater(Player.tileTargetX, Player.tileTargetY);
@@ -34458,7 +_,7 @@
 										item.stack--;
 										this.PutItemInInventory(205, this.selectedItem);
 									}
-									this.itemTime = item.useTime;
+									this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 									if (Main.netMode == 1)
 									{
 										NetMessage.sendWater(Player.tileTargetX, Player.tileTargetY);
@@ -34473,7 +_,7 @@
 								WorldGen.SquareTileFrame(Player.tileTargetX, Player.tileTargetY, true);
 								item.stack--;
 								this.PutItemInInventory(205, this.selectedItem);
-								this.itemTime = item.useTime;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								if (Main.netMode == 1)
 								{
 									NetMessage.sendWater(Player.tileTargetX, Player.tileTargetY);
@@ -34493,11 +_,11 @@
 					{
 						if (item.pick > 0)
 						{
-							this.toolTime = item.useTime;
+							this.toolTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						}
 						else
 						{
-							this.toolTime = (int)((float)item.useTime * this.pickSpeed);
+							this.toolTime = (int)((float)item.useTime * this.pickSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						}
 					}
 				}
@@ -34539,6 +_,7 @@
 									flag19 = false;
 									if (item.hammer > 0)
 									{
+										TileLoader.MineDamage(item.hammer, ref num241);
 										num241 += item.hammer;
 										if (!WorldGen.CanKillTile(Player.tileTargetX, Player.tileTargetY))
 										{
@@ -34571,7 +_,7 @@
 										{
 											this.hitTile.Prune();
 										}
-										this.itemTime = item.useTime;
+										this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 										AchievementsHelper.CurrentlyMining = false;
 									}
 								}
@@ -34583,7 +_,7 @@
 									}
 									else
 									{
-										num241 += item.axe;
+										TileLoader.MineDamage(item.axe, ref num241);
 									}
 									if (item.axe > 0)
 									{
@@ -34613,23 +_,23 @@
 										{
 											this.hitTile.Prune();
 										}
-										this.itemTime = item.useTime;
+										this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 										AchievementsHelper.CurrentlyMining = false;
 									}
 								}
 								else if (item.pick > 0)
 								{
 									this.PickTile(Player.tileTargetX, Player.tileTargetY, item.pick);
-									this.itemTime = (int)((float)item.useTime * this.pickSpeed);
+									this.itemTime = (int)((float)item.useTime * this.pickSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								}
 								if (item.pick > 0)
 								{
-									this.itemTime = (int)((float)item.useTime * this.pickSpeed);
+									this.itemTime = (int)((float)item.useTime * this.pickSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item));
 								}
 								if (item.hammer > 0 && Main.tile[Player.tileTargetX, Player.tileTargetY].active() && ((Main.tileSolid[(int)Main.tile[Player.tileTargetX, Player.tileTargetY].type] && Main.tile[Player.tileTargetX, Player.tileTargetY].type != 10) || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 314 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 351 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 424 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 442) && this.poundRelease)
 								{
 									flag19 = false;
-									this.itemTime = item.useTime;
+									this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 									num241 += (int)((double)item.hammer * 1.25);
 									num241 = 100;
 									if (Main.tile[Player.tileTargetX, Player.tileTargetY - 1].active() && Main.tile[Player.tileTargetX, Player.tileTargetY - 1].type == 10)
@@ -34647,7 +_,10 @@
 										{
 											int num242 = Player.tileTargetX;
 											int num243 = Player.tileTargetY;
-											if (TileID.Sets.Platforms[(int)Main.tile[num242, num243].type])
+											if (TileLoader.Slope(num242, num243, Main.tile[num242, num243].type))
+											{
+											}
+											else if (TileID.Sets.Platforms[(int)Main.tile[num242, num243].type])
 											{
 												if (Main.tile[num242, num243].halfBrick())
 												{
@@ -35144,14 +_,14 @@
 								{
 									this.hitTile.Prune();
 								}
-								this.itemTime = item.useTime / 2;
+								this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item)) / 2;
 							}
 						}
 					}
 				}
 				if (Main.myPlayer == this.whoAmI && item.type == 1326 && this.itemAnimation > 0 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Vector2 vector24;
 					vector24.X = (float)Main.mouseX + Main.screenPosition.X;
 					if (this.gravDir == 1f)
@@ -35199,7 +_,7 @@
 				}
 				if (item.type == 29 && this.itemAnimation > 0 && this.statLifeMax < 400 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					this.statLifeMax += 20;
 					this.statLifeMax2 += 20;
 					this.statLife += 20;
@@ -35211,7 +_,7 @@
 				}
 				if (item.type == 1291 && this.itemAnimation > 0 && this.statLifeMax >= 400 && this.statLifeMax < 500 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					this.statLifeMax += 5;
 					this.statLifeMax2 += 5;
 					this.statLife += 5;
@@ -35223,7 +_,7 @@
 				}
 				if (item.type == 109 && this.itemAnimation > 0 && this.statManaMax < 200 && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					this.statManaMax += 20;
 					this.statManaMax2 += 20;
 					this.statMana += 20;
@@ -35235,7 +_,7 @@
 				}
 				if (item.type == 3335 && this.itemAnimation > 0 && !this.extraAccessory && Main.expertMode && this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					this.extraAccessory = true;
 					NetMessage.SendData(4, -1, -1, Main.player[this.whoAmI].name, this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
 				}
@@ -35316,6 +_,7 @@
 				}
 				else if (item.useStyle == 3)
 				{
+					//patch file: flag24
 					if ((double)this.itemAnimation > (double)this.itemAnimationMax * 0.666)
 					{
 						flag26 = true;
@@ -35331,6 +_,7 @@
 						r2.Height = (int)((double)r2.Height * 0.6);
 					}
 				}
+				ItemLoader.UseItemHitbox(item, this, ref r2, ref flag26);
 				float arg_CC3F_0 = this.gravDir;
 				if (item.type == 1450 && Main.rand.Next(3) == 0)
 				{
@@ -35715,6 +_,8 @@
 						Dust expr_EBDF_cp_0 = Main.dust[num311];
 						expr_EBDF_cp_0.velocity.Y = expr_EBDF_cp_0.velocity.Y * 2f;
 					}
+					ItemLoader.MeleeEffects(item, this, r2);
+					PlayerHooks.MeleeEffects(this, item, r2);
 					if (Main.myPlayer == i && (item.type == 1991 || item.type == 3183))
 					{
 						for (int num312 = 0; num312 < 200; num312++)
@@ -35752,6 +_,8 @@
 						{
 							num313 = (int)((float)item.damage * this.thrownDamage);
 						}
+						ItemLoader.GetWeaponDamage(item, this, ref num313);
+						PlayerHooks.GetWeaponDamage(this, item, ref num313);
 						float num314 = item.knockBack;
 						float num315 = 1f;
 						if (this.kbGlove)
@@ -35767,6 +_,8 @@
 						{
 							num314 += num314 * (1f - this.stealth);
 						}
+						ItemLoader.GetWeaponKnockback(item, this, ref num314);
+						PlayerHooks.GetWeaponKnockback(this, item, ref num314);
 						List<ushort> list2 = null;
 						int type5 = item.type;
 						if (type5 == 213)
@@ -35850,7 +_,23 @@
 								{
 									if (!Main.npc[num323].dontTakeDamage)
 									{
-										if (!Main.npc[num323].friendly || (Main.npc[num323].type == 22 && this.killGuide) || (Main.npc[num323].type == 54 && this.killClothier))
+										bool? modCanHit = ItemLoader.CanHitNPC(item, this, Main.npc[num323]);
+										if (modCanHit.HasValue && !modCanHit.Value)
+										{
+											continue;
+										}
+										bool? modCanBeHit = NPCLoader.CanBeHitByItem(Main.npc[num323], this, item);
+										if (modCanBeHit.HasValue && !modCanBeHit.Value)
+										{
+											continue;
+										}
+										bool? modCanHit2 = PlayerHooks.CanHitNPC(this, item, Main.npc[num323]);
+										if (modCanHit2.HasValue && !modCanHit2.Value)
+										{
+											continue;
+										}
+										bool canHitFlag = (modCanHit.HasValue && modCanHit.Value) || (modCanBeHit.HasValue && modCanBeHit.Value) || (modCanHit2.HasValue && modCanHit2.Value);
+										if (!Main.npc[num323].friendly || (Main.npc[num323].type == 22 && this.killGuide) || (Main.npc[num323].type == 54 && this.killClothier) || canHitFlag)
 										{
 											Rectangle value19 = new Rectangle((int)Main.npc[num323].position.X, (int)Main.npc[num323].position.Y, Main.npc[num323].width, Main.npc[num323].height);
 											if (r2.Intersects(value19) && (Main.npc[num323].noTileCollide || this.CanHit(Main.npc[num323])))
@@ -35891,12 +_,16 @@
 													this.ClearBuff(198);
 												}
 												int num325 = Main.DamageVar((float)num313);
+												ItemLoader.ModifyHitNPC(item, this, Main.npc[num323], ref num325, ref num314, ref flag27);
+												NPCLoader.ModifyHitByItem(Main.npc[num323], this, item, ref num325, ref num314, ref flag27);
+												PlayerHooks.ModifyHitNPC(this, item, Main.npc[num323], ref num325, ref num314, ref flag27);
 												this.StatusNPC(item.type, num323);
 												this.OnHit(Main.npc[num323].Center.X, Main.npc[num323].Center.Y, Main.npc[num323]);
 												if (this.armorPenetration > 0)
 												{
 													num325 += Main.npc[num323].checkArmorPenetration(this.armorPenetration);
 												}
+												//patch file: num314, flag27, num326
 												int num326 = (int)Main.npc[num323].StrikeNPC(num325, num314, this.direction, flag27, false, false);
 												if (this.inventory[this.selectedItem].type == 3211)
 												{
@@ -35965,6 +_,9 @@
 														NetMessage.SendData(21, -1, -1, "", num331, 0f, 0f, 0f, 0, 0, 0);
 													}
 												}
+												ItemLoader.OnHitNPC(item, this, Main.npc[num323], num326, num314, flag27);
+												NPCLoader.OnHitByItem(Main.npc[num323], this, item, num326, num314, flag27);
+												PlayerHooks.OnHitNPC(this, item, Main.npc[num323], num326, num314, flag27);
 												int num332 = Item.NPCtoBanner(Main.npc[num323].BannerID());
 												if (num332 >= 0)
 												{
@@ -36010,7 +_,7 @@
 									if (flag29 && (Main.player[i].team == 0 || Main.player[i].team != Main.player[num333].team))
 									{
 										Rectangle value23 = new Rectangle((int)Main.player[num333].position.X, (int)Main.player[num333].position.Y, Main.player[num333].width, Main.player[num333].height);
-										if (r2.Intersects(value23) && this.CanHit(Main.player[num333]))
+										if (ItemLoader.CanHitPvp(item, this, Main.player[num333]) && PlayerHooks.CanHitPvp(this, item, Main.player[num333]) && r2.Intersects(value23) && this.CanHit(Main.player[num333]))
 										{
 											bool flag30 = false;
 											if (Main.rand.Next(1, 101) <= 10)
@@ -36018,6 +_,8 @@
 												flag30 = true;
 											}
 											int num334 = Main.DamageVar((float)num313);
+											ItemLoader.ModifyHitPvp(item, this, Main.player[num333], ref num334, ref flag30);
+											PlayerHooks.ModifyHitPvp(this, item, Main.player[num333], ref num334, ref flag30);
 											this.StatusPvP(item.type, num333);
 											this.OnHit(Main.player[num333].Center.X, Main.player[num333].Center.Y, Main.player[num333]);
 											PlayerDeathReason playerDeathReason = PlayerDeathReason.ByPlayer(this.whoAmI);
@@ -36068,6 +_,8 @@
 											{
 												this.pumpkinSword(num333, (int)((double)num313 * 1.5), num314);
 											}
+											ItemLoader.OnHitPvp(item, this, Main.player[num333], num335, flag30);
+											PlayerHooks.OnHitPvp(this, item, Main.player[num333], num335, flag30);
 											if (Main.netMode != 0)
 											{
 												NetMessage.SendPlayerHurt(num333, playerDeathReason, num334, this.direction, flag30, true, -1, -1, -1);
@@ -36142,9 +_,13 @@
 			}
 			if (this.itemTime == 0 && this.itemAnimation > 0)
 			{
+				if (ItemLoader.UseItem(item, this))
+				{
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
+				}
 				if (item.hairDye >= 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (this.whoAmI == Main.myPlayer)
 					{
 						this.hairDye = (byte)item.hairDye;
@@ -36154,7 +_,7 @@
 				if (item.healLife > 0)
 				{
 					this.statLife += item.healLife;
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (Main.myPlayer == this.whoAmI)
 					{
 						this.HealEffect(item.healLife, true);
@@ -36163,7 +_,7 @@
 				if (item.healMana > 0)
 				{
 					this.statMana += item.healMana;
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (Main.myPlayer == this.whoAmI)
 					{
 						this.AddBuff(94, Player.manaSickTime, true);
@@ -36176,11 +_,11 @@
 					{
 						this.AddBuff(item.buffType, item.buffTime, true);
 					}
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				if (item.type == 678)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (this.whoAmI == Main.myPlayer)
 					{
 						this.AddBuff(20, 216000, true);
@@ -36201,7 +_,7 @@
 			{
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 361 && Main.CanStartInvasion(1, true))
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 					if (Main.netMode != 1)
 					{
@@ -36218,7 +_,7 @@
 				}
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 602 && Main.CanStartInvasion(2, true))
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 					if (Main.netMode != 1)
 					{
@@ -36235,7 +_,7 @@
 				}
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 1315 && Main.CanStartInvasion(3, true))
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 					if (Main.netMode != 1)
 					{
@@ -36252,7 +_,7 @@
 				}
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 1844 && !Main.dayTime && !Main.pumpkinMoon && !Main.snowMoon && !DD2Event.Ongoing)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 					if (Main.netMode != 1)
 					{
@@ -36267,7 +_,7 @@
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 2767 && Main.dayTime && !Main.eclipse)
 				{
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (Main.netMode == 0)
 					{
 						Main.eclipse = true;
@@ -36281,7 +_,7 @@
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 3601 && NPC.downedGolemBoss && Main.hardMode && !NPC.AnyDanger() && !NPC.AnyoneNearCultists())
 				{
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					if (Main.netMode == 0)
 					{
 						WorldGen.StartImpendingDoom();
@@ -36293,7 +_,7 @@
 				}
 				if (this.itemTime == 0 && this.itemAnimation > 0 && item.type == 1958 && !Main.dayTime && !Main.pumpkinMoon && !Main.snowMoon && !DD2Event.Ongoing)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 					if (Main.netMode != 1)
 					{
@@ -36309,7 +_,7 @@
 				{
 					int num344 = Main.mouseX + (int)Main.screenPosition.X;
 					int num345 = Main.mouseY + (int)Main.screenPosition.Y;
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 					int i2 = num344 / 16;
 					int j2 = num345 / 16;
 					if (!WorldGen.SolidTile(i2, j2))
@@ -36321,7 +_,7 @@
 				{
 					if (item.type == 560)
 					{
-						this.itemTime = item.useTime;
+						this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 						if (Main.netMode != 1)
 						{
@@ -36336,7 +_,7 @@
 					{
 						if (!Main.dayTime)
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 							if (Main.netMode != 1)
 							{
@@ -36352,7 +_,7 @@
 					{
 						if (this.ZoneCorrupt)
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 							if (Main.netMode != 1)
 							{
@@ -36368,7 +_,7 @@
 					{
 						if (!Main.dayTime)
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 							if (Main.netMode != 1)
 							{
@@ -36386,7 +_,7 @@
 					{
 						if (!Main.dayTime)
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 							if (Main.netMode != 1)
 							{
@@ -36402,7 +_,7 @@
 					{
 						if (!Main.dayTime)
 						{
-							this.itemTime = item.useTime;
+							this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 							Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 							if (Main.netMode != 1)
 							{
@@ -36416,7 +_,7 @@
 					}
 					else if (item.type == 1133)
 					{
-						this.itemTime = item.useTime;
+						this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 						if (Main.netMode != 1)
 						{
@@ -36429,7 +_,7 @@
 					}
 					else if (item.type == 1331 && this.ZoneCrimson)
 					{
-						this.itemTime = item.useTime;
+						this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 						Main.PlaySound(15, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
 						if (Main.netMode != 1)
 						{
@@ -36450,9 +_,9 @@
 				}
 				if (this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
-				}
-				else if (this.itemTime == item.useTime / 2)
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
+				}
+				else if (this.itemTime == (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item)) / 2)
 				{
 					for (int num346 = 0; num346 < 70; num346++)
 					{
@@ -36478,7 +_,7 @@
 			{
 				if (this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				else if (this.itemTime == 2)
 				{
@@ -36514,7 +_,7 @@
 			{
 				if (this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				else if (this.itemTime == 2)
 				{
@@ -36536,7 +_,7 @@
 			{
 				if (this.itemTime == 0)
 				{
-					this.itemTime = item.useTime;
+					this.itemTime = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				else if (this.itemTime == 2)
 				{
@@ -36555,7 +_,7 @@
 				}
 				else
 				{
-					float num353 = (float)item.useTime;
+					float num353 = (float)item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item);
 					num353 = (num353 - (float)this.itemTime) / num353;
 					float x6 = 15f;
 					float num354 = 44f;
@@ -36583,7 +_,7 @@
 			}
 			if (i == Main.myPlayer)
 			{
-				if (this.itemTime == (int)((float)item.useTime * this.tileSpeed) && item.tileWand > 0)
+				if (this.itemTime == (int)((float)item.useTime * this.tileSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item)) && item.tileWand > 0)
 				{
 					int tileWand2 = item.tileWand;
 					int num358 = 0;
@@ -36608,15 +_,15 @@
 				int num359;
 				if (item.createTile >= 0)
 				{
-					num359 = (int)((float)item.useTime * this.tileSpeed);
+					num359 = (int)((float)item.useTime * this.tileSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				else if (item.createWall > 0)
 				{
-					num359 = (int)((float)item.useTime * this.wallSpeed);
+					num359 = (int)((float)item.useTime * this.wallSpeed / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				else
 				{
-					num359 = item.useTime;
+					num359 = (int)(item.useTime / PlayerHooks.TotalUseTimeMultiplier(this, item));
 				}
 				if (this.itemTime == num359 && item.consumable)
 				{
@@ -36655,7 +_,7 @@
 					{
 						flag32 = true;
 					}
-					if (flag32)
+					if (flag32 && ItemLoader.ConsumeItem(item, this))
 					{
 						if (item.stack > 0)
 						{
@@ -36681,6 +_,7 @@
 					Main.mouseItem = item.Clone();
 				}
 			}
+			PlayerHooks.PostItemCheck(this);
 		}
 
 		public static bool WouldSpotOverlapWithSentry(int worldX, int worldY)
@@ -37057,6 +_,8 @@
 			{
 				KnockBack *= 1f + (1f - this.stealth) * 0.5f;
 			}
+			ItemLoader.GetWeaponKnockback(sItem, this, ref KnockBack);
+			PlayerHooks.GetWeaponKnockback(this, sItem, ref KnockBack);
 			return KnockBack;
 		}
 
@@ -37098,6 +_,8 @@
 					num = (int)((float)num * this.minionDamage);
 				}
 			}
+			ItemLoader.GetWeaponDamage(sItem, this, ref num);
+			PlayerHooks.GetWeaponDamage(this, sItem, ref num);
 			return num;
 		}
 
@@ -37105,25 +_,25 @@
 		{
 			if (sItem.melee)
 			{
-				this.itemAnimation = (int)((float)sItem.useAnimation * this.meleeSpeed);
-				this.itemAnimationMax = (int)((float)sItem.useAnimation * this.meleeSpeed);
+				this.itemAnimation = (int)((float)sItem.useAnimation * this.meleeSpeed / PlayerHooks.TotalMeleeSpeedMultiplier(this, sItem));
+				this.itemAnimationMax = this.itemAnimation;
 				return;
 			}
 			if (sItem.createTile >= 0)
 			{
-				this.itemAnimation = (int)((float)sItem.useAnimation * this.tileSpeed);
-				this.itemAnimationMax = (int)((float)sItem.useAnimation * this.tileSpeed);
+				this.itemAnimation = (int)((float)sItem.useAnimation * this.tileSpeed / PlayerHooks.TotalMeleeSpeedMultiplier(this, sItem));
+				this.itemAnimationMax = this.itemAnimation;
 				return;
 			}
 			if (sItem.createWall >= 0)
 			{
-				this.itemAnimation = (int)((float)sItem.useAnimation * this.wallSpeed);
-				this.itemAnimationMax = (int)((float)sItem.useAnimation * this.wallSpeed);
+				this.itemAnimation = (int)((float)sItem.useAnimation * this.wallSpeed / PlayerHooks.TotalMeleeSpeedMultiplier(this, sItem));
+				this.itemAnimationMax = this.itemAnimation;
 				return;
 			}
-			this.itemAnimation = sItem.useAnimation;
-			this.itemAnimationMax = sItem.useAnimation;
-			this.reuseDelay = sItem.reuseDelay;
+			this.itemAnimation = (int)(sItem.useAnimation / PlayerHooks.TotalMeleeSpeedMultiplier(this, sItem));
+			this.itemAnimationMax = this.itemAnimation;
+			this.reuseDelay = (int)(sItem.reuseDelay / PlayerHooks.TotalUseTimeMultiplier(this, sItem));
 		}
 
 		public bool HasAmmo(Item sItem, bool canUse)
@@ -37251,6 +_,7 @@
 					Damage = (int)((double)((float)Damage) * 1.2);
 				}
 				KnockBack += item.knockBack;
+				ItemLoader.PickAmmo(item, this, ref shoot, ref speed, ref Damage, ref KnockBack);
 				bool flag2 = dontConsume;
 				if (sItem.type == 3245)
 				{
@@ -37311,7 +_,7 @@
 				{
 					flag2 = true;
 				}
-				if (sItem.type == 434 && this.itemAnimation < sItem.useAnimation - 2)
+				if (sItem.type == 434 && this.itemAnimation < (int)(sItem.useAnimation / PlayerHooks.TotalMeleeSpeedMultiplier(this, sItem)) - 2)
 				{
 					flag2 = true;
 				}
@@ -37328,6 +_,14 @@
 					flag2 = true;
 				}
 				if ((shoot == 145 || shoot == 146 || shoot == 147 || shoot == 148 || shoot == 149) && this.itemAnimation < this.itemAnimationMax - 5)
+				{
+					flag2 = true;
+				}
+				if (!PlayerHooks.ConsumeAmmo(this, sItem, item))
+				{
+					flag2 = true;
+				}
+				if (!ItemLoader.ConsumeAmmo(sItem, item, this))
 				{
 					flag2 = true;
 				}
@@ -37382,7 +_,7 @@
 			}
 			else
 			{
-				num += pickPower;
+				TileLoader.MineDamage(pickPower, ref num);
 			}
 			if (tile.type == 211 && pickPower < 200)
 			{
@@ -37450,6 +_,10 @@
 			else if (tile.type == 223 && pickPower < 150)
 			{
 				num = 0;
+			}
+			else
+			{
+				TileLoader.PickPowerCheck(tile, pickPower, ref num);
 			}
 			if (tile.type == 147 || tile.type == 0 || tile.type == 40 || tile.type == 53 || tile.type == 57 || tile.type == 59 || tile.type == 123 || tile.type == 224 || tile.type == 397)
 			{
@@ -37537,11 +_,11 @@
 				{
 					WorldGen.KillTile(x, y, true, false, false);
 					NetMessage.SendData(17, -1, -1, "", 0, (float)x, (float)y, 1f, 0, 0, 0);
-					if (Main.tile[x, y].type == 21)
+					if (TileLoader.IsChest(Main.tile[x, y].type))
 					{
 						NetMessage.SendData(34, -1, -1, "", 1, (float)x, (float)y, 0f, 0, 0, 0);
 					}
-					if (Main.tile[x, y].type == 88)
+					if (TileLoader.IsDresser(Main.tile[x, y].type))
 					{
 						NetMessage.SendData(34, -1, -1, "", 3, (float)x, (float)y, 0f, 0, 0, 0);
 					}
@@ -37878,22 +_,45 @@
 
 		public void DropItems()
 		{
+			IList<Item> startInventory = PlayerHooks.SetupStartInventory(this);
+			IDictionary<int, int> startCounts = new Dictionary<int, int>();
+			foreach (Item item in startInventory)
+			{
+				if (!startCounts.ContainsKey(item.netID))
+				{
+					startCounts[item.netID] = 0;
+				}
+				startCounts[item.netID] += item.stack;
+			}
 			for (int i = 0; i < 59; i++)
 			{
-				if (this.inventory[i].stack > 0 && this.inventory[i].name != "Copper Pickaxe" && this.inventory[i].name != "Copper Axe" && this.inventory[i].name != "Copper Shortsword")
-				{
+				Item item = this.inventory[i];
+				if (item.stack > 0 && (!startCounts.ContainsKey(item.netID) || startCounts[item.netID] < item.stack) && item.type != ModLoader.ModLoader.GetMod("ModLoader").ItemType("StartBag"))
+				{
+					int stack = item.stack;
+					if (startCounts.ContainsKey(item.netID))
+					{
+						stack -= startCounts[item.netID];
+						startCounts[item.netID] = 0;
+					}
 					int num = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, this.inventory[i].type, 1, false, 0, false, false);
 					Main.item[num].netDefaults(this.inventory[i].netID);
 					Main.item[num].Prefix((int)this.inventory[i].prefix);
-					Main.item[num].stack = this.inventory[i].stack;
+					Main.item[num].stack = stack;
 					Main.item[num].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
 					Main.item[num].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 					Main.item[num].noGrabDelay = 100;
 					Main.item[num].newAndShiny = false;
+					Main.item[num].modItem = this.inventory[i].modItem;
+					Main.item[num].itemInfo = this.inventory[i].itemInfo;
 					if (Main.netMode == 1)
 					{
 						NetMessage.SendData(21, -1, -1, "", num, 0f, 0f, 0f, 0, 0, 0);
 					}
+				}
+				else if (item.stack > 0 && startCounts.ContainsKey(item.netID))
+				{
+					startCounts[item.netID] -= item.stack;
 				}
 				this.inventory[i] = new Item();
 				if (i < this.armor.Length)
@@ -37908,6 +_,8 @@
 						Main.item[num2].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 						Main.item[num2].noGrabDelay = 100;
 						Main.item[num2].newAndShiny = false;
+						Main.item[num2].modItem = this.armor[i].modItem;
+						Main.item[num2].itemInfo = this.armor[i].itemInfo;
 						if (Main.netMode == 1)
 						{
 							NetMessage.SendData(21, -1, -1, "", num2, 0f, 0f, 0f, 0, 0, 0);
@@ -37927,6 +_,8 @@
 						Main.item[num3].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 						Main.item[num3].noGrabDelay = 100;
 						Main.item[num3].newAndShiny = false;
+						Main.item[num3].modItem = this.dye[i].modItem;
+						Main.item[num3].itemInfo = this.dye[i].itemInfo;
 						if (Main.netMode == 1)
 						{
 							NetMessage.SendData(21, -1, -1, "", num3, 0f, 0f, 0f, 0, 0, 0);
@@ -37946,6 +_,8 @@
 						Main.item[num4].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 						Main.item[num4].noGrabDelay = 100;
 						Main.item[num4].newAndShiny = false;
+						Main.item[num4].modItem = this.miscEquips[i].modItem;
+						Main.item[num4].itemInfo = this.miscEquips[i].itemInfo;
 						if (Main.netMode == 1)
 						{
 							NetMessage.SendData(21, -1, -1, "", num4, 0f, 0f, 0f, 0, 0, 0);
@@ -37965,6 +_,8 @@
 						Main.item[num5].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 						Main.item[num5].noGrabDelay = 100;
 						Main.item[num5].newAndShiny = false;
+						Main.item[num5].modItem = this.miscDyes[i].modItem;
+						Main.item[num5].itemInfo = this.miscDyes[i].itemInfo;
 						if (Main.netMode == 1)
 						{
 							NetMessage.SendData(21, -1, -1, "", num5, 0f, 0f, 0f, 0, 0, 0);
@@ -37973,12 +_,7 @@
 					this.miscDyes[i] = new Item();
 				}
 			}
-			this.inventory[0].SetDefaults("Copper Shortsword");
-			this.inventory[0].Prefix(-1);
-			this.inventory[1].SetDefaults("Copper Pickaxe");
-			this.inventory[1].Prefix(-1);
-			this.inventory[2].SetDefaults("Copper Axe");
-			this.inventory[2].Prefix(-1);
+			PlayerHooks.SetStartInventory(this, startInventory);
 			Main.mouseItem = new Item();
 		}
 
@@ -37989,11 +_,12 @@
 
 		public object clientClone()
 		{
-			Player player = new Player();
+			Player player = new Player(false);
 			player.zone1 = this.zone1;
 			player.zone2 = this.zone2;
 			player.zone3 = this.zone3;
 			player.zone4 = this.zone4;
+			PlayerHooks.CopyCustomBiomesTo(this, player);
 			player.extraAccessory = this.extraAccessory;
 			player.MinionRestTargetPoint = this.MinionRestTargetPoint;
 			player.MinionAttackTargetNPC = this.MinionAttackTargetNPC;
@@ -38054,6 +_,7 @@
 			}
 			this.DpadRadial.CopyTo(player.DpadRadial);
 			this.CircularRadial.CopyTo(player.CircularRadial);
+			PlayerHooks.clientClone(this, player);
 			return player;
 		}
 
@@ -38067,7 +_,7 @@
 			{
 				return false;
 			}
-			if (!Main.tile[x, y - 1].active() || Main.tile[x, y - 1].type != 79)
+			if (!Main.tile[x, y - 1].active() || (Main.tile[x, y - 1].type != 79 && !TileLoader.IsModBed(Main.tile[x, y - 1].type)))
 			{
 				return false;
 			}
@@ -38277,12 +_,12 @@
 							{
 								player.armor[k].name = "";
 							}
-							binaryWriter.Write(player.armor[k].netID);
+							ItemIO.WriteVanillaID(player.armor[k], binaryWriter);
 							binaryWriter.Write(player.armor[k].prefix);
 						}
 						for (int l = 0; l < player.dye.Length; l++)
 						{
-							binaryWriter.Write(player.dye[l].netID);
+							ItemIO.WriteVanillaID(player.dye[l], binaryWriter);
 							binaryWriter.Write(player.dye[l].prefix);
 						}
 						for (int m = 0; m < 58; m++)
@@ -38291,16 +_,16 @@
 							{
 								player.inventory[m].name = "";
 							}
-							binaryWriter.Write(player.inventory[m].netID);
+							ItemIO.WriteVanillaID(player.inventory[m], binaryWriter);
 							binaryWriter.Write(player.inventory[m].stack);
 							binaryWriter.Write(player.inventory[m].prefix);
 							binaryWriter.Write(player.inventory[m].favorited);
 						}
 						for (int n = 0; n < player.miscEquips.Length; n++)
 						{
-							binaryWriter.Write(player.miscEquips[n].netID);
+							ItemIO.WriteVanillaID(player.miscEquips[n], binaryWriter);
 							binaryWriter.Write(player.miscEquips[n].prefix);
-							binaryWriter.Write(player.miscDyes[n].netID);
+							ItemIO.WriteVanillaID(player.miscDyes[n], binaryWriter);
 							binaryWriter.Write(player.miscDyes[n].prefix);
 						}
 						for (int num = 0; num < 40; num++)
@@ -38309,7 +_,7 @@
 							{
 								player.bank.item[num].name = "";
 							}
-							binaryWriter.Write(player.bank.item[num].netID);
+							ItemIO.WriteVanillaID(player.bank.item[num], binaryWriter);
 							binaryWriter.Write(player.bank.item[num].stack);
 							binaryWriter.Write(player.bank.item[num].prefix);
 						}
@@ -38319,7 +_,7 @@
 							{
 								player.bank2.item[num2].name = "";
 							}
-							binaryWriter.Write(player.bank2.item[num2].netID);
+							ItemIO.WriteVanillaID(player.bank2.item[num2], binaryWriter);
 							binaryWriter.Write(player.bank2.item[num2].stack);
 							binaryWriter.Write(player.bank2.item[num2].prefix);
 						}
@@ -38329,13 +_,13 @@
 							{
 								player.bank3.item[num3].name = "";
 							}
-							binaryWriter.Write(player.bank3.item[num3].netID);
+							ItemIO.WriteVanillaID(player.bank3.item[num3], binaryWriter);
 							binaryWriter.Write(player.bank3.item[num3].stack);
 							binaryWriter.Write(player.bank3.item[num3].prefix);
 						}
 						for (int num4 = 0; num4 < 22; num4++)
 						{
-							if (Main.buffNoSave[player.buffType[num4]])
+							if (Main.buffNoSave[player.buffType[num4]] || BuffLoader.IsModBuff(player.buffType[num4]))
 							{
 								binaryWriter.Write(0);
 								binaryWriter.Write(0);
@@ -38383,6 +_,7 @@
 					}
 				}
 			}
+			PlayerIO.Save(player, path, isCloudSave);
 		}
 
 		public static PlayerFileData LoadPlayer(string playerPath, bool cloudSave)
@@ -38878,6 +_,7 @@
 								player.bartenderQuestLog = binaryReader.ReadInt32();
 							}
 							player.skinVariant = (int)MathHelper.Clamp((float)player.skinVariant, 0f, 9f);
+							PlayerIO.Load(player, playerPath, cloudSave);
 							for (int num36 = 3; num36 < 8 + player.extraAccessorySlots; num36++)
 							{
 								int type = player.armor[num36].type;
@@ -38899,6 +_,7 @@
 								}
 								player.lavaTime = player.lavaMax;
 							}
+							player.ResetEffects();
 						}
 					}
 				}
@@ -38907,6 +_,10 @@
 				playerFileData.Player = player;
 				result = playerFileData;
 				return result;
+			}
+			catch (CustomModDataException e)
+			{
+				playerFileData.customDataFail = e;
 			}
 			catch
 			{
@@ -38943,15 +_,18 @@
 			{
 				if (playerFileData.Player.loadStatus != 0 && playerFileData.Player.loadStatus != 1)
 				{
+					CustomModDataException customDataFail = playerFileData.customDataFail;
 					if (FileUtilities.Exists(file + ".bak", cloudSave))
 					{
 						FileUtilities.Move(file + ".bak", file, cloudSave, true);
+						PlayerIO.LoadBackup(file, cloudSave);
 					}
 					playerFileData = Player.LoadPlayer(file, cloudSave);
 					if (playerFileData.Player == null)
 					{
 						return null;
 					}
+					playerFileData.customDataFail = customDataFail;
 				}
 				return playerFileData;
 			}
@@ -39012,12 +_,24 @@
 			return -1;
 		}
 
-		public Player()
+		internal ModPlayer[] modPlayers = new ModPlayer[0];
+
+		public ModPlayer GetModPlayer(Mod mod, string name)
+		{
+			return PlayerHooks.GetModPlayer(this, mod, name);
+		}
+
+		public T GetModPlayer<T>(Mod mod) where T : ModPlayer
+		{
+			return (T)GetModPlayer(mod, typeof(T).Name);
+		}
+
+		public Player(bool startupInventory = true)
 		{
 			int[] array = new int[10];
 			this.builderAccStatus = array;
 			this.lostCoinString = "";
-			this.NPCBannerBuff = new bool[267];
+			this.NPCBannerBuff = new bool[NPCLoader.NPCCount];
 			this.extraAccessorySlots = 2;
 			this.tankPet = -1;
 			this.solarShieldPos = new Vector2[3];
@@ -39047,7 +_,7 @@
 			this.ghostDir = 1f;
 			this.buffType = new int[22];
 			this.buffTime = new int[22];
-			this.buffImmune = new bool[206];
+			this.buffImmune = new bool[BuffLoader.BuffCount];
 			this.heldProj = -1;
 			this.breathMax = 200;
 			this.breath = 200;
@@ -39140,13 +_,14 @@
 			this.talkNPC = -1;
 			this.potionDelayTime = Item.potionDelay;
 			this.restorationDelayTime = Item.restorationDelay;
-			this.ownedProjectileCounts = new int[714];
-			this.npcTypeNoAggro = new bool[580];
+			this.ownedProjectileCounts = new int[ProjectileLoader.ProjectileCount];
+			this.npcTypeNoAggro = new bool[NPCLoader.NPCCount];
 			this.MinionRestTargetPoint = Vector2.Zero;
 			this.MinionAttackTargetNPC = -1;
 			this.TouchedTiles = new List<Point>();
 			this._stormShaderObstruction = 1f;
 			this._shaderObstructionInternalValue = 1f;
+			PlayerHooks.SetupPlayer(this);
 			int[] array2 = new int[2];
 			this.hurtCooldowns = array2;
 			this.width = 20;
@@ -39185,16 +_,17 @@
 			}
 			this.trashItem = new Item();
 			this.grappling[0] = -1;
-			this.inventory[0].SetDefaults("Copper Shortsword");
-			this.inventory[1].SetDefaults("Copper Pickaxe");
-			this.inventory[2].SetDefaults("Copper Axe");
+			if (startupInventory)
+			{
+				PlayerHooks.SetStartInventory(this);
+			}
 			this.statManaMax = 20;
 			this.extraAccessory = false;
 			if (Main.cEd)
 			{
 				this.inventory[3].SetDefaults(603, false);
 			}
-			for (int n = 0; n < 467; n++)
+			for (int n = 0; n < adjTile.Length; n++)
 			{
 				this.adjTile[n] = false;
 				this.oldAdjTile[n] = false;
@@ -39307,6 +_,7 @@
 
 		public void GetAnglerReward()
 		{
+			List<Item> rewardItems = new List<Item>();
 			Item item = new Item();
 			item.type = 0;
 			float num = 1f;
@@ -39322,6 +_,10 @@
 			{
 				num = 0.25f - (float)(this.anglerQuestsFinished - 100) * 0.002f;
 			}
+			else
+			{
+				num = 0.15f;
+			}
 			if (this.anglerQuestsFinished == 5)
 			{
 				item.SetDefaults(2428, false);
@@ -39478,69 +_,24 @@
 					}
 				}
 			}
-			item.position = base.Center;
-			Item item2 = this.GetItem(this.whoAmI, item, true, false);
-			if (item2.stack > 0)
-			{
-				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-				if (Main.netMode == 1)
-				{
-					NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0, 0, 0);
-				}
-			}
+			rewardItems.Add(item);
 			if (item.type == 2417)
 			{
 				Item item3 = new Item();
 				Item item4 = new Item();
 				item3.SetDefaults(2418, false);
-				item3.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item3, true, false);
-				if (item2.stack > 0)
-				{
-					int number2 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number2, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item3);
 				item4.SetDefaults(2419, false);
-				item4.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item4, true, false);
-				if (item2.stack > 0)
-				{
-					int number3 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number3, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item4);
 			}
 			else if (item.type == 2498)
 			{
 				Item item5 = new Item();
 				Item item6 = new Item();
 				item5.SetDefaults(2499, false);
-				item5.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item5, true, false);
-				if (item2.stack > 0)
-				{
-					int number4 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number4, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item5);
 				item6.SetDefaults(2500, false);
-				item6.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item6, true, false);
-				if (item2.stack > 0)
-				{
-					int number5 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number5, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item6);
 			}
 			Item item7 = new Item();
 			int num4 = (this.anglerQuestsFinished + 50) / 2;
@@ -39577,16 +_,7 @@
 				item7.SetDefaults(72, false);
 				item7.stack = num4;
 			}
-			item7.position = base.Center;
-			item2 = this.GetItem(this.whoAmI, item7, true, false);
-			if (item2.stack > 0)
-			{
-				int number6 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-				if (Main.netMode == 1)
-				{
-					NetMessage.SendData(21, -1, -1, "", number6, 1f, 0f, 0f, 0, 0, 0);
-				}
-			}
+			rewardItems.Add(item7);
 			if (Main.rand.Next((int)(100f * num)) <= 50)
 			{
 				Item item8 = new Item();
@@ -39626,14 +_,19 @@
 				{
 					item8.stack++;
 				}
-				item8.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item8, true, false);
-				if (item2.stack > 0)
-				{
-					int number7 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
+				rewardItems.Add(item8);
+			}
+			PlayerHooks.AnglerQuestReward(this, num, rewardItems);
+			foreach (Item rewardItem in rewardItems)
+			{
+				rewardItem.position = base.Center;
+				Item getItem = this.GetItem(this.whoAmI, rewardItem, true, false);
+				if (getItem.stack > 0)
+				{
+					int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, getItem.type, getItem.stack, false, 0, true, false);
 					if (Main.netMode == 1)
 					{
-						NetMessage.SendData(21, -1, -1, "", number7, 1f, 0f, 0f, 0, 0, 0);
+						NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0, 0, 0);
 					}
 				}
 			}
@@ -39692,6 +_,7 @@
 					list.Add(3024);
 				}
 			}
+			PlayerHooks.GetDyeTraderReward(this, list);
 			int type = list[Main.rand.Next(list.Count)];
 			Item item = new Item();
 			item.SetDefaults(type, false);

