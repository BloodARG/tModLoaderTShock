using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using Terraria.Audio;
using Terraria.DataStructures;
using Terraria.Enums;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.Shaders;
using Terraria.GameContent.UI;
using Terraria.Graphics.Effects;
using Terraria.Graphics.Shaders;
using Terraria.ID;
using Terraria.Localization;
using Terraria.Utilities;
using Terraria.World.Generation;

namespace Terraria
{
	public class Projectile : Entity
	{
		public static int[][] perIDStaticNPCImmunity = new int[714][];

		public static int SentryLifeTime = 7200;

		public float ownerHitCheckDistance = 1000f;

		public bool arrow;

		public int numHits;

		public bool bobber;

		public bool netImportant;

		public bool noDropItem;

		public static int maxAI = 2;

		public bool counterweight;

		public float scale = 1f;

		public float rotation;

		public int type;

		public int alpha;

		public bool sentry;

		public short glowMask;

		public int owner = 255;

		public float[] ai = new float[Projectile.maxAI];

		public float[] localAI = new float[Projectile.maxAI];

		public float gfxOffY;

		public float stepSpeed = 1f;

		public int aiStyle;

		public int timeLeft;

		public int soundDelay;

		public int damage;

		public int spriteDirection = 1;

		public bool hostile;

		public float knockBack;

		public bool friendly;

		public int penetrate = 1;

		private int[] localNPCImmunity = new int[200];

		private bool usesLocalNPCImmunity;

		private bool usesIDStaticNPCImmunity;

		public int maxPenetrate = 1;

		public int identity;

		public float light;

		public bool netUpdate;

		public bool netUpdate2;

		public int netSpam;

		public Vector2[] oldPos = new Vector2[10];

		public float[] oldRot = new float[10];

		public int[] oldSpriteDirection = new int[10];

		public bool minion;

		public float minionSlots;

		public int minionPos;

		public int restrikeDelay;

		public bool tileCollide;

		public int extraUpdates;

		public int numUpdates;

		public bool ignoreWater;

		public bool hide;

		public bool ownerHitCheck;

		public int[] playerImmune = new int[255];

		public string miscText = "";

		public bool melee;

		public bool ranged;

		public bool thrown;

		public bool magic;

		public bool coldDamage;

		public bool noEnchantments;

		public bool trap;

		public bool npcProj;

		public int frameCounter;

		public int frame;

		public bool manualDirectionChange;

		public int projUUID = -1;

		public int localNPCHitCooldown = -2;

		public int idStaticNPCHitCooldown = -1;

		private static float[] _CompanionCubeScreamCooldown = new float[255];

		public bool WipableTurret
		{
			get
			{
				return this.owner == Main.myPlayer && this.sentry && !this.TurretShouldPersist();
			}
		}

		public float Opacity
		{
			get
			{
				return 1f - (float)this.alpha / 255f;
			}
			set
			{
				this.alpha = (int)MathHelper.Clamp((1f - value) * 255f, 0f, 255f);
			}
		}

		public int MaxUpdates
		{
			get
			{
				return this.extraUpdates + 1;
			}
			set
			{
				this.extraUpdates = value - 1;
			}
		}

		public NPC OwnerMinionAttackTargetNPC
		{
			get
			{
				if (Main.player[this.owner].MinionAttackTargetNPC < 0)
				{
					return null;
				}
				return Main.npc[Main.player[this.owner].MinionAttackTargetNPC];
			}
		}

		public static void InitializeStaticThings()
		{
			Projectile.perIDStaticNPCImmunity = new int[714][];
			for (int i = 0; i < Projectile.perIDStaticNPCImmunity.Length; i++)
			{
				Projectile.perIDStaticNPCImmunity[i] = new int[200];
			}
		}

		public static void UpdateStaticThings()
		{
			Projectile.UpdateIDStaticNPCImmunity();
		}

		public static void UpdateIDStaticNPCImmunity()
		{
			for (int i = 0; i < Projectile.perIDStaticNPCImmunity.Length; i++)
			{
				for (int j = 0; j < Projectile.perIDStaticNPCImmunity[i].Length; j++)
				{
					if (--Projectile.perIDStaticNPCImmunity[i][j] < 0)
					{
						Projectile.perIDStaticNPCImmunity[i][j] = 0;
					}
				}
			}
		}

		public bool TurretShouldPersist()
		{
			int num = this.type;
			switch (num)
			{
			case 663:
			case 665:
			case 667:
				break;
			case 664:
			case 666:
				return false;
			default:
				switch (num)
				{
				case 677:
				case 678:
				case 679:
				case 688:
				case 689:
				case 690:
				case 691:
				case 692:
				case 693:
					break;
				case 680:
				case 681:
				case 682:
				case 683:
				case 684:
				case 685:
				case 686:
				case 687:
					return false;
				default:
					return false;
				}
				break;
			}
			return DD2Event.Ongoing;
		}

		public void SetDefaults(int Type)
		{
			this.ownerHitCheckDistance = 1000f;
			this.counterweight = false;
			this.sentry = false;
			this.arrow = false;
			this.bobber = false;
			this.numHits = 0;
			this.netImportant = false;
			this.manualDirectionChange = false;
			this.localNPCHitCooldown = -2;
			this.idStaticNPCHitCooldown = -1;
			this.usesLocalNPCImmunity = false;
			this.usesIDStaticNPCImmunity = false;
			int num = 10;
			if (Type >= 0)
			{
				num = ProjectileID.Sets.TrailCacheLength[Type];
			}
			if (num != this.oldPos.Length)
			{
				Array.Resize<Vector2>(ref this.oldPos, num);
				Array.Resize<float>(ref this.oldRot, num);
				Array.Resize<int>(ref this.oldSpriteDirection, num);
			}
			for (int i = 0; i < this.oldPos.Length; i++)
			{
				this.oldPos[i].X = 0f;
				this.oldPos[i].Y = 0f;
				this.oldRot[i] = 0f;
				this.oldSpriteDirection[i] = 0;
			}
			for (int j = 0; j < Projectile.maxAI; j++)
			{
				this.ai[j] = 0f;
				this.localAI[j] = 0f;
			}
			for (int k = 0; k < 255; k++)
			{
				this.playerImmune[k] = 0;
			}
			for (int l = 0; l < 200; l++)
			{
				this.localNPCImmunity[l] = 0;
			}
			this.noDropItem = false;
			this.minion = false;
			this.minionSlots = 0f;
			this.soundDelay = 0;
			this.spriteDirection = 1;
			this.melee = false;
			this.ranged = false;
			this.thrown = false;
			this.magic = false;
			this.ownerHitCheck = false;
			this.hide = false;
			this.lavaWet = false;
			this.wetCount = 0;
			this.wet = false;
			this.ignoreWater = false;
			this.hostile = false;
			this.netUpdate = false;
			this.netUpdate2 = false;
			this.netSpam = 0;
			this.numUpdates = 0;
			this.extraUpdates = 0;
			this.identity = 0;
			this.restrikeDelay = 0;
			this.light = 0f;
			this.penetrate = 1;
			this.tileCollide = true;
			this.position = Vector2.Zero;
			this.velocity = Vector2.Zero;
			this.aiStyle = 0;
			this.alpha = 0;
			this.glowMask = -1;
			this.type = Type;
			this.active = true;
			this.rotation = 0f;
			this.scale = 1f;
			this.owner = 255;
			this.timeLeft = 3600;
			this.name = "";
			this.friendly = false;
			this.damage = 0;
			this.knockBack = 0f;
			this.miscText = "";
			this.coldDamage = false;
			this.noEnchantments = false;
			this.trap = false;
			this.npcProj = false;
			this.projUUID = -1;
			this.frame = 0;
			this.frameCounter = 0;
			if (this.type == 1)
			{
				this.arrow = true;
				this.name = "Wooden Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 2)
			{
				this.arrow = true;
				this.name = "Fire Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
			}
			else if (this.type == 3)
			{
				this.name = "Shuriken";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 4;
				this.thrown = true;
			}
			else if (this.type == 4)
			{
				this.arrow = true;
				this.name = "Unholy Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 0.35f;
				this.penetrate = 5;
				this.ranged = true;
			}
			else if (this.type == 5)
			{
				this.arrow = true;
				this.name = "Jester's Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 0.4f;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.alpha = 100;
				this.ignoreWater = true;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 6)
			{
				this.name = "Enchanted Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
			}
			else if (this.type == 7 || this.type == 8)
			{
				this.name = "Vilethorn";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 9)
			{
				this.name = "Starfury";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 50;
				this.scale = 0.8f;
				this.tileCollide = false;
				this.melee = true;
			}
			else if (this.type == 10)
			{
				this.name = "Purification Powder";
				this.width = 64;
				this.height = 64;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 11)
			{
				this.name = "Vile Powder";
				this.width = 48;
				this.height = 48;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 12)
			{
				this.name = "Falling Star";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 50;
				this.light = 1f;
			}
			else if (this.type == 13)
			{
				this.netImportant = true;
				this.name = "Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 14)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 15)
			{
				this.name = "Ball of Fire";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 16)
			{
				this.name = "Magic Missile";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 17)
			{
				this.name = "Dirt Ball";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.ignoreWater = true;
			}
			else if (this.type == 18)
			{
				this.netImportant = true;
				this.name = "Shadow Orb";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.alpha = 150;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 19)
			{
				this.name = "Flamarang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.light = 1f;
				this.melee = true;
			}
			else if (this.type == 20)
			{
				this.name = "Green Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 21)
			{
				this.name = "Bone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.scale = 1.2f;
				this.friendly = true;
				this.thrown = true;
			}
			else if (this.type == 22)
			{
				this.name = "Water Stream";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 12;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 23)
			{
				this.name = "Harpoon";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type == 24)
			{
				this.name = "Spiky Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 25)
			{
				this.name = "Ball 'O Hurt";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 26)
			{
				this.name = "Blue Moon";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 27)
			{
				this.name = "Water Bolt";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft /= 2;
				this.penetrate = 10;
				this.magic = true;
			}
			else if (this.type == 28)
			{
				this.name = "Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 29)
			{
				this.name = "Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 30)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 31)
			{
				this.name = "Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 32)
			{
				this.name = "Ivy Whip";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 33)
			{
				this.name = "Thorn Chakram";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 34)
			{
				this.name = "Flamelash";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.penetrate = 1;
				this.magic = true;
			}
			else if (this.type == 35)
			{
				this.name = "Sunfury";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 36)
			{
				this.name = "Meteor Shot";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 2;
				this.light = 0.6f;
				this.alpha = 255;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 37)
			{
				this.name = "Sticky Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 38)
			{
				this.name = "Harpy Feather";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
			}
			else if (this.type == 39)
			{
				this.name = "Mud Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 40)
			{
				this.name = "Ash Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 41)
			{
				this.arrow = true;
				this.name = "Hellfire Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
				this.light = 0.3f;
			}
			else if (this.type == 42)
			{
				this.name = "Sand Ball";
				this.knockBack = 8f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 43)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 44)
			{
				this.name = "Demon Sickle";
				this.width = 48;
				this.height = 48;
				this.alpha = 100;
				this.light = 0.2f;
				this.aiStyle = 18;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = true;
				this.scale = 0.9f;
			}
			else if (this.type == 45)
			{
				this.name = "Demon Scythe";
				this.width = 48;
				this.height = 48;
				this.alpha = 100;
				this.light = 0.2f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = true;
				this.scale = 0.9f;
				this.magic = true;
			}
			else if (this.type == 46)
			{
				this.name = "Dark Lance";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 47)
			{
				this.name = "Trident";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 48)
			{
				this.name = "Throwing Knife";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.thrown = true;
			}
			else if (this.type == 49)
			{
				this.name = "Spear";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.2f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 50)
			{
				this.netImportant = true;
				this.name = "Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
			}
			else if (this.type == 51)
			{
				this.name = "Seed";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.friendly = true;
			}
			else if (this.type == 52)
			{
				this.name = "Wooden Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 53)
			{
				this.netImportant = true;
				this.name = "Sticky Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
				this.tileCollide = false;
			}
			else if (this.type == 54)
			{
				this.name = "Poisoned Knife";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.thrown = true;
			}
			else if (this.type == 55)
			{
				this.name = "Stinger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
			}
			else if (this.type == 56)
			{
				this.name = "Ebonsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 57)
			{
				this.name = "Cobalt Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 58)
			{
				this.name = "Mythril Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.08f;
			}
			else if (this.type == 59)
			{
				this.name = "Cobalt Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 60)
			{
				this.name = "Mythril Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 61)
			{
				this.name = "Adamantite Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.16f;
			}
			else if (this.type == 62)
			{
				this.name = "Adamantite Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.9f;
			}
			else if (this.type == 63)
			{
				this.name = "The Dao of Pow";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 64)
			{
				this.name = "Mythril Halberd";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.25f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 65)
			{
				this.name = "Ebonsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 66)
			{
				this.name = "Adamantite Glaive";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.27f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 67)
			{
				this.name = "Pearl Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 68)
			{
				this.name = "Pearl Sand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 69)
			{
				this.name = "Holy Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 70)
			{
				this.name = "Unholy Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 621)
			{
				this.name = "Blood Water";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 71)
			{
				this.name = "Silt Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 72)
			{
				this.netImportant = true;
				this.name = "Blue Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 73 || this.type == 74)
			{
				this.netImportant = true;
				this.name = "Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.4f;
			}
			else if (this.type == 75)
			{
				this.name = "Happy Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 76 || this.type == 77 || this.type == 78)
			{
				if (this.type == 76)
				{
					this.width = 10;
					this.height = 22;
				}
				else if (this.type == 77)
				{
					this.width = 18;
					this.height = 24;
				}
				else
				{
					this.width = 22;
					this.height = 24;
				}
				this.name = "Note";
				this.aiStyle = 21;
				this.friendly = true;
				this.ranged = true;
				this.alpha = 100;
				this.light = 0.3f;
				this.penetrate = -1;
				this.timeLeft = 180;
				this.magic = true;
			}
			else if (this.type == 79)
			{
				this.name = "Rainbow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 9;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 255;
				this.magic = true;
			}
			else if (this.type == 80)
			{
				this.name = "Ice Block";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 22;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.light = 0.5f;
				this.coldDamage = true;
			}
			else if (this.type == 81)
			{
				this.name = "Wooden Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 82)
			{
				this.name = "Flaming Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 83)
			{
				this.name = "Eye Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.7f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 84)
			{
				this.name = "Pink Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 85)
			{
				this.name = "Flames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = 3;
				this.extraUpdates = 2;
				this.ranged = true;
			}
			else if (this.type == 86)
			{
				this.netImportant = true;
				this.name = "Pink Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 87)
			{
				this.netImportant = true;
				this.name = "Pink Fairy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 11;
				this.friendly = true;
				this.light = 0.9f;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 88)
			{
				this.name = "Purple Laser";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 4;
				this.scale = 1.4f;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 89)
			{
				this.name = "Crystal Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 90)
			{
				this.name = "Crystal Shard";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 24;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 50;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.tileCollide = false;
			}
			else if (this.type == 91)
			{
				this.arrow = true;
				this.name = "Holy Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 92)
			{
				this.name = "Hallow Star";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 50;
				this.scale = 0.8f;
				this.tileCollide = false;
				this.ranged = true;
			}
			else if (this.type == 93)
			{
				this.light = 0.15f;
				this.name = "Magic Dagger";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 2;
				this.magic = true;
			}
			else if (this.type == 94)
			{
				this.ignoreWater = true;
				this.name = "Crystal Storm";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 24;
				this.friendly = true;
				this.light = 0.5f;
				this.alpha = 50;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
				this.tileCollide = true;
				this.penetrate = 1;
			}
			else if (this.type == 95)
			{
				this.name = "Cursed Flame";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
				this.penetrate = 2;
			}
			else if (this.type == 96)
			{
				this.name = "Cursed Flame";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.hostile = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
				this.penetrate = -1;
				this.scale = 0.9f;
				this.scale = 1.3f;
			}
			else if (this.type == 97)
			{
				this.name = "Cobalt Naginata";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 98)
			{
				this.name = "Poison Dart";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 99)
			{
				this.name = "Boulder";
				this.width = 31;
				this.height = 31;
				this.aiStyle = 25;
				this.friendly = true;
				this.hostile = true;
				this.ranged = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 100)
			{
				this.name = "Death Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.8f;
				this.timeLeft = 2700;
				this.magic = true;
			}
			else if (this.type == 101)
			{
				this.name = "Eye Fire";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 3;
				this.magic = true;
			}
			else if (this.type == 102)
			{
				this.name = "Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 103)
			{
				this.arrow = true;
				this.name = "Cursed Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
			}
			else if (this.type == 104)
			{
				this.name = "Cursed Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 105)
			{
				this.name = "Gungnir";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.3f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 106)
			{
				this.name = "Light Disc";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
			}
			else if (this.type == 107)
			{
				this.name = "Hamdrax";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 108)
			{
				this.name = "Explosives";
				this.width = 260;
				this.height = 260;
				this.aiStyle = 16;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.timeLeft = 2;
				this.trap = true;
			}
			else if (this.type == 109)
			{
				this.name = "Snow Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.hostile = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.coldDamage = true;
				this.thrown = true;
			}
			else if (this.type == 110)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 111)
			{
				this.netImportant = true;
				this.name = "Bunny";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 112)
			{
				this.netImportant = true;
				this.name = "Penguin";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 113)
			{
				this.name = "Ice Boomerang";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.light = 0.4f;
				this.coldDamage = true;
			}
			else if (this.type == 114)
			{
				this.name = "Unholy Trident";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.magic = true;
				this.penetrate = 3;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 115)
			{
				this.name = "Unholy Trident";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.hostile = true;
				this.magic = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
			}
			else if (this.type == 116)
			{
				this.name = "Sword Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 117)
			{
				this.arrow = true;
				this.name = "Bone Arrow";
				this.extraUpdates = 2;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 118)
			{
				this.name = "Ice Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 28;
				this.alpha = 255;
				this.melee = true;
				this.penetrate = 1;
				this.friendly = true;
				this.coldDamage = true;
			}
			else if (this.type == 119)
			{
				this.name = "Frost Bolt";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.melee = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 120)
			{
				this.arrow = true;
				this.name = "Frost Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 121)
			{
				this.name = "Amethyst Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 122)
			{
				this.name = "Topaz Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 123)
			{
				this.name = "Sapphire Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 124)
			{
				this.name = "Emerald Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 125)
			{
				this.name = "Ruby Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 126)
			{
				this.name = "Diamond Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 127)
			{
				this.netImportant = true;
				this.name = "Turtle";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 128)
			{
				this.name = "Frost Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.coldDamage = true;
			}
			else if (this.type == 129)
			{
				this.name = "Rune Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type == 130)
			{
				this.name = "Mushroom Spear";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.2f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 131)
			{
				this.name = "Mushroom";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 30;
				this.friendly = true;
				this.penetrate = 1;
				this.tileCollide = false;
				this.melee = true;
				this.light = 0.5f;
			}
			else if (this.type == 132)
			{
				this.name = "Terra Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 3;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 133)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 134)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 135)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 136)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 137)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 138)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 139)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 140)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 141)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 142)
			{
				this.name = "Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 143)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 144)
			{
				this.name = "Proximity Mine";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 145)
			{
				this.name = "Pure Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 146)
			{
				this.name = "Hallow Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 147)
			{
				this.name = "Corrupt Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 148)
			{
				this.name = "Mushroom Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 149)
			{
				this.name = "Crimson Spray";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 31;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 150 || this.type == 151 || this.type == 152)
			{
				this.name = "Nettle Burst";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 153)
			{
				this.name = "The Rotted Fork";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 154)
			{
				this.name = "The Meatball";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 0.8f;
			}
			else if (this.type == 155)
			{
				this.netImportant = true;
				this.name = "Beach Ball";
				this.width = 44;
				this.height = 44;
				this.aiStyle = 32;
				this.friendly = true;
			}
			else if (this.type == 156)
			{
				this.name = "Light Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 157)
			{
				this.name = "Night Beam";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 27;
				this.melee = true;
				this.light = 0.5f;
				this.alpha = 255;
				this.friendly = true;
				this.scale = 1.2f;
			}
			else if (this.type == 158)
			{
				this.name = "Copper Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 159)
			{
				this.name = "Silver Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 160)
			{
				this.name = "Gold Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 161)
			{
				this.name = "Platinum Coin";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 162)
			{
				this.name = "Cannonball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
			}
			else if (this.type == 163)
			{
				this.netImportant = true;
				this.name = "Flare";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 33;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 36000;
			}
			else if (this.type == 164)
			{
				this.name = "Landmine";
				this.width = 128;
				this.height = 128;
				this.aiStyle = 16;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.timeLeft = 2;
			}
			else if (this.type == 165)
			{
				this.netImportant = true;
				this.name = "Web";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 166)
			{
				this.name = "Snow Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.ranged = true;
				this.coldDamage = true;
			}
			else if (this.type == 167 || this.type == 168 || this.type == 169 || this.type == 170)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 34;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 45;
			}
			else if (this.type == 171 || this.type == 505 || this.type == 506)
			{
				this.name = "Rope Coil";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 35;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 400;
			}
			else if (this.type == 172)
			{
				this.arrow = true;
				this.name = "Frostburn Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
				this.coldDamage = true;
			}
			else if (this.type == 173)
			{
				this.name = "Enchanted Beam";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 27;
				this.melee = true;
				this.penetrate = 1;
				this.light = 0.2f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 174)
			{
				this.name = "Ice Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.coldDamage = true;
			}
			else if (this.type == 175)
			{
				this.name = "Baby Eater";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 176)
			{
				this.name = "Jungle Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 177)
			{
				this.name = "Icewater Spit";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
				this.coldDamage = true;
			}
			else if (this.type == 178)
			{
				this.name = "Confetti";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.timeLeft = 2;
			}
			else if (this.type == 179)
			{
				this.name = "Slush Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 180)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.5f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 181)
			{
				this.name = "Bee";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.timeLeft = 600;
				this.extraUpdates = 3;
			}
			else if (this.type == 182)
			{
				this.light = 0.15f;
				this.name = "Possessed Hatchet";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = 10;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 183)
			{
				this.name = "Beenade";
				this.width = 14;
				this.height = 22;
				this.aiStyle = 14;
				this.penetrate = 1;
				this.ranged = true;
				this.timeLeft = 180;
				this.thrown = true;
				this.friendly = true;
			}
			else if (this.type == 184)
			{
				this.name = "Poison Dart";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 185)
			{
				this.name = "Spiky Ball";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 900;
				this.trap = true;
			}
			else if (this.type == 186)
			{
				this.name = "Spear";
				this.width = 10;
				this.height = 14;
				this.aiStyle = 37;
				this.friendly = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.trap = true;
			}
			else if (this.type == 187)
			{
				this.name = "Flamethrower";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 38;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.trap = true;
			}
			else if (this.type == 188)
			{
				this.name = "Flames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 23;
				this.friendly = true;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.trap = true;
			}
			else if (this.type == 189)
			{
				this.name = "Wasp";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
				this.extraUpdates = 3;
			}
			else if (this.type == 190)
			{
				this.name = "Mechanical Piranha";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 39;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type >= 191 && this.type <= 194)
			{
				this.netImportant = true;
				this.name = "Pygmy";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				if (this.type == 192)
				{
					this.scale = 1.025f;
				}
				if (this.type == 193)
				{
					this.scale = 1.05f;
				}
				if (this.type == 194)
				{
					this.scale = 1.075f;
				}
			}
			else if (this.type == 195)
			{
				this.tileCollide = false;
				this.name = "Pygmy";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
			}
			else if (this.type == 196)
			{
				this.name = "Smoke Bomb";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.scale = 0.8f;
			}
			else if (this.type == 197)
			{
				this.netImportant = true;
				this.name = "Baby Skeletron Head";
				this.width = 42;
				this.height = 42;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 198)
			{
				this.netImportant = true;
				this.name = "Baby Hornet";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 199)
			{
				this.netImportant = true;
				this.name = "Tiki Spirit";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 200)
			{
				this.netImportant = true;
				this.name = "Pet Lizard";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 201)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 202)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 203)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 204)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 205)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 206)
			{
				this.name = "Leaf";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 40;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 207)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 208)
			{
				this.netImportant = true;
				this.name = "Parrot";
				this.width = 18;
				this.height = 36;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 209)
			{
				this.name = "Truffle";
				this.width = 12;
				this.height = 32;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 0.5f;
			}
			else if (this.type == 210)
			{
				this.netImportant = true;
				this.name = "Sapling";
				this.width = 14;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 211)
			{
				this.netImportant = true;
				this.name = "Wisp";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 1f;
				this.ignoreWater = true;
			}
			else if (this.type == 212)
			{
				this.name = "Palladium Pike";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.12f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 213)
			{
				this.name = "Palladium Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.92f;
			}
			else if (this.type == 214)
			{
				this.name = "Palladium Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 215)
			{
				this.name = "Orichalcum Halberd";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.27f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 216)
			{
				this.name = "Orichalcum Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.93f;
			}
			else if (this.type == 217)
			{
				this.name = "Orichalcum Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.12f;
			}
			else if (this.type == 218)
			{
				this.name = "Titanium Trident";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.28f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 219)
			{
				this.name = "Titanium Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 0.95f;
			}
			else if (this.type == 220)
			{
				this.name = "Titanium Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 221)
			{
				this.name = "Flower Petal";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 41;
				this.friendly = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.penetrate = -1;
				this.scale = 1f + (float)Main.rand.Next(30) * 0.01f;
				this.extraUpdates = 2;
			}
			else if (this.type == 222)
			{
				this.name = "Chlorophyte Partisan";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.3f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 223)
			{
				this.name = "Chlorophyte Drill";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1f;
			}
			else if (this.type == 224)
			{
				this.name = "Chlorophyte Chainsaw";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 225)
			{
				this.arrow = true;
				this.penetrate = 2;
				this.name = "Chlorophyte Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 226)
			{
				this.netImportant = true;
				this.name = "Crystal Leaf";
				this.width = 22;
				this.height = 42;
				this.aiStyle = 42;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.light = 0.4f;
				this.ignoreWater = true;
			}
			else if (this.type == 227)
			{
				this.netImportant = true;
				this.tileCollide = false;
				this.light = 0.1f;
				this.name = "Crystal Leaf";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 43;
				this.friendly = true;
				this.penetrate = 1;
				this.timeLeft = 180;
			}
			else if (this.type == 228)
			{
				this.tileCollide = false;
				this.name = "Spore Cloud";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 44;
				this.friendly = true;
				this.scale = 1.1f;
				this.penetrate = -1;
			}
			else if (this.type == 229)
			{
				this.name = "Chlorophyte Orb";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 44;
				this.friendly = true;
				this.penetrate = -1;
				this.light = 0.2f;
			}
			else if (this.type >= 230 && this.type <= 235)
			{
				this.netImportant = true;
				this.name = "Gem Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 236)
			{
				this.netImportant = true;
				this.name = "Baby Dino";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 237)
			{
				this.netImportant = true;
				this.name = "Rain Cloud";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 238)
			{
				this.tileCollide = false;
				this.ignoreWater = true;
				this.name = "Rain Cloud";
				this.width = 54;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 239)
			{
				this.ignoreWater = true;
				this.name = "Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 240)
			{
				this.name = "Cannonball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
			}
			else if (this.type == 241)
			{
				this.name = "Crimsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 242)
			{
				this.name = "Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 7;
				this.scale = 1.18f;
				this.timeLeft = 600;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 243)
			{
				this.name = "Blood Cloud";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 244)
			{
				this.tileCollide = false;
				this.ignoreWater = true;
				this.name = "Blood Cloud";
				this.width = 54;
				this.height = 28;
				this.aiStyle = 45;
				this.penetrate = -1;
			}
			else if (this.type == 245)
			{
				this.ignoreWater = true;
				this.name = "Blood Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.friendly = true;
				this.penetrate = 2;
				this.timeLeft = 300;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 246)
			{
				this.name = "Stynger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.alpha = 255;
				this.extraUpdates = 1;
			}
			else if (this.type == 247)
			{
				this.name = "Flower Pow";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 15;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 248)
			{
				this.name = "Flower Pow";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
			}
			else if (this.type == 249)
			{
				this.name = "Stynger";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 2;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 250)
			{
				this.name = "Rainbow";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 46;
				this.penetrate = -1;
				this.magic = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.scale = 1.25f;
			}
			else if (this.type == 251)
			{
				this.name = "Rainbow";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 46;
				this.friendly = true;
				this.penetrate = -1;
				this.magic = true;
				this.alpha = 255;
				this.light = 0.3f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.scale = 1.25f;
			}
			else if (this.type == 252)
			{
				this.name = "Chlorophyte Jackhammer";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.1f;
			}
			else if (this.type == 253)
			{
				this.name = "Ball of Frost";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.light = 0.8f;
				this.alpha = 100;
				this.magic = true;
			}
			else if (this.type == 254)
			{
				this.name = "Magnet Sphere";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 47;
				this.magic = true;
				this.timeLeft = 660;
				this.light = 0.5f;
			}
			else if (this.type == 255)
			{
				this.name = "Magnet Sphere";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
			}
			else if (this.type == 256)
			{
				this.netImportant = true;
				this.tileCollide = false;
				this.name = "Skeletron Hand";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1f;
				this.timeLeft *= 10;
			}
			else if (this.type == 257)
			{
				this.name = "Frost Beam";
				this.ignoreWater = true;
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.75f;
				this.alpha = 255;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.magic = true;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 258)
			{
				this.name = "Fireball";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 100;
				this.timeLeft = 300;
			}
			else if (this.type == 259)
			{
				this.name = "Eye Beam";
				this.ignoreWater = true;
				this.tileCollide = false;
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.3f;
				this.scale = 1.1f;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 260)
			{
				this.name = "Heat Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 200;
				this.penetrate = -1;
			}
			else if (this.type == 261)
			{
				this.name = "Boulder";
				this.width = 32;
				this.height = 34;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = 6;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 262)
			{
				this.name = "Golem Fist";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 263)
			{
				this.name = "Ice Sickle";
				this.width = 34;
				this.height = 34;
				this.alpha = 100;
				this.light = 0.5f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = true;
				this.scale = 1f;
				this.melee = true;
				this.timeLeft = 180;
				this.coldDamage = true;
			}
			else if (this.type == 264)
			{
				this.ignoreWater = true;
				this.name = "Rain";
				this.width = 4;
				this.height = 40;
				this.aiStyle = 45;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.scale = 1.1f;
				this.extraUpdates = 1;
			}
			else if (this.type == 265)
			{
				this.name = "Poison Fang";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 4;
			}
			else if (this.type == 266)
			{
				this.netImportant = true;
				this.alpha = 75;
				this.name = "Baby Slime";
				this.width = 24;
				this.height = 16;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
			}
			else if (this.type == 267)
			{
				this.alpha = 255;
				this.name = "Poison Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 268)
			{
				this.netImportant = true;
				this.name = "Eye Spring";
				this.width = 18;
				this.height = 32;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 269)
			{
				this.netImportant = true;
				this.name = "Baby Snowman";
				this.width = 20;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 270)
			{
				this.name = "Skull";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 3;
			}
			else if (this.type == 271)
			{
				this.name = "Boxing Glove";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 272)
			{
				this.name = "Bananarang";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 273)
			{
				this.name = "Chain Knife";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
			}
			else if (this.type == 274)
			{
				this.name = "Death Sickle";
				this.width = 42;
				this.height = 42;
				this.alpha = 100;
				this.light = 0.5f;
				this.aiStyle = 18;
				this.friendly = true;
				this.penetrate = 5;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.melee = true;
				this.timeLeft = 180;
			}
			else if (this.type == 275)
			{
				this.alpha = 255;
				this.name = "Seed";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
			}
			else if (this.type == 276)
			{
				this.alpha = 255;
				this.name = "Poison Seed";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
			}
			else if (this.type == 277)
			{
				this.alpha = 255;
				this.name = "Thorn Ball";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 14;
				this.hostile = true;
			}
			else if (this.type == 278)
			{
				this.arrow = true;
				this.name = "Ichor Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.light = 1f;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 279)
			{
				this.name = "Ichor Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.25f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 280)
			{
				this.name = "Golden Shower";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 12;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = 5;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 281)
			{
				this.name = "Explosive Bunny";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 49;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
			}
			else if (this.type == 282)
			{
				this.arrow = true;
				this.name = "Venom Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 283)
			{
				this.name = "Venom Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.25f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 284)
			{
				this.name = "Party Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 285)
			{
				this.name = "Nano Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 286)
			{
				this.name = "Explosive Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 287)
			{
				this.name = "Golden Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.light = 0.5f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.3f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 288)
			{
				this.name = "Golden Shower";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 12;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
				this.magic = true;
			}
			else if (this.type == 289)
			{
				this.name = "Confetti";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.timeLeft = 2;
			}
			else if (this.type == 290)
			{
				this.name = "Shadow Beam";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 48;
				this.hostile = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
				this.penetrate = -1;
			}
			else if (this.type == 291)
			{
				this.name = "Inferno";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 292)
			{
				this.name = "Inferno";
				this.width = 130;
				this.height = 130;
				this.aiStyle = 50;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 293)
			{
				this.name = "Lost Soul";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 51;
				this.hostile = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 294)
			{
				this.name = "Shadow Beam";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 48;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 100;
				this.timeLeft = 300;
				this.penetrate = -1;
			}
			else if (this.type == 295)
			{
				this.name = "Inferno";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 50;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = true;
			}
			else if (this.type == 296)
			{
				this.name = "Inferno";
				this.width = 150;
				this.height = 150;
				this.aiStyle = 50;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 297)
			{
				this.name = "Lost Soul";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 51;
				this.friendly = true;
				this.alpha = 255;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 298)
			{
				this.name = "Spirit Heal";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 52;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 3;
			}
			else if (this.type == 299)
			{
				this.name = "Shadowflames";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.magic = true;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 300)
			{
				this.name = "Paladin's Hammer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 301)
			{
				this.name = "Paladin's Hammer";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.extraUpdates = 2;
			}
			else if (this.type == 302)
			{
				this.name = "Sniper Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.light = 0.3f;
				this.alpha = 255;
				this.extraUpdates = 7;
				this.scale = 1.18f;
				this.timeLeft = 300;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 303)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
				this.ranged = true;
			}
			else if (this.type == 304)
			{
				this.name = "Vampire Knife";
				this.alpha = 255;
				this.width = 30;
				this.height = 30;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
				this.light = 0.2f;
				this.ignoreWater = true;
				this.extraUpdates = 0;
			}
			else if (this.type == 305)
			{
				this.name = "Vampire Heal";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 52;
				this.alpha = 255;
				this.tileCollide = false;
				this.extraUpdates = 10;
			}
			else if (this.type == 306)
			{
				this.name = "Eater's Bite";
				this.alpha = 255;
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 307)
			{
				this.name = "Tiny Eater";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.melee = true;
				this.extraUpdates = 3;
			}
			else if (this.type == 308)
			{
				this.name = "Frost Hydra";
				this.width = 80;
				this.height = 74;
				this.aiStyle = 53;
				this.timeLeft = Projectile.SentryLifeTime;
				this.light = 0.25f;
				this.ignoreWater = true;
				this.coldDamage = true;
				this.sentry = true;
			}
			else if (this.type == 309)
			{
				this.name = "Frost Blast";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.penetrate = 1;
				this.friendly = true;
				this.extraUpdates = 3;
				this.coldDamage = true;
			}
			else if (this.type == 310)
			{
				this.netImportant = true;
				this.name = "Blue Flare";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 33;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 36000;
			}
			else if (this.type == 311)
			{
				this.name = "Candy Corn";
				this.width = 10;
				this.height = 12;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 312)
			{
				this.name = "Jack 'O Lantern";
				this.alpha = 255;
				this.width = 32;
				this.height = 32;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 300;
			}
			else if (this.type == 313)
			{
				this.netImportant = true;
				this.name = "Spider";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 314)
			{
				this.netImportant = true;
				this.name = "Squashling";
				this.width = 24;
				this.height = 40;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 315)
			{
				this.netImportant = true;
				this.name = "Bat Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 316)
			{
				this.alpha = 255;
				this.name = "Bat";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 1;
				this.timeLeft = 600;
				this.magic = true;
			}
			else if (this.type == 317)
			{
				this.netImportant = true;
				this.name = "Raven";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 54;
				this.penetrate = 1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
			}
			else if (this.type == 318)
			{
				this.name = "Rotten Egg";
				this.width = 12;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.thrown = true;
			}
			else if (this.type == 319)
			{
				this.netImportant = true;
				this.name = "Black Cat";
				this.width = 36;
				this.height = 30;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 320)
			{
				this.name = "Bloody Machete";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 321)
			{
				this.name = "Flaming Jack";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 55;
				this.friendly = true;
				this.melee = true;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 322)
			{
				this.netImportant = true;
				this.name = "Wood Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 323)
			{
				this.penetrate = 10;
				this.name = "Stake";
				this.extraUpdates = 3;
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.ranged = true;
				this.scale = 0.8f;
			}
			else if (this.type == 324)
			{
				this.netImportant = true;
				this.name = "Cursed Sapling";
				this.width = 26;
				this.height = 38;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 325)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Flaming Wood";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type >= 326 && this.type <= 328)
			{
				this.name = "Greek Fire";
				if (this.type == 326)
				{
					this.width = 14;
					this.height = 16;
				}
				else if (this.type == 327)
				{
					this.width = 12;
					this.height = 14;
				}
				else
				{
					this.width = 6;
					this.height = 12;
				}
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 360;
			}
			else if (this.type == 329)
			{
				this.name = "Flaming Scythe";
				this.width = 80;
				this.height = 80;
				this.light = 0.25f;
				this.aiStyle = 56;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 420;
			}
			else if (this.type == 330)
			{
				this.name = "Star Anise";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 331)
			{
				this.netImportant = true;
				this.name = "Candy Cane Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 332)
			{
				this.netImportant = true;
				this.name = "Christmas Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.5f;
			}
			else if (this.type == 333)
			{
				this.name = "Fruitcake Chakram";
				this.width = 38;
				this.height = 38;
				this.aiStyle = 3;
				this.friendly = true;
				this.scale = 0.9f;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 334)
			{
				this.netImportant = true;
				this.name = "Puppy";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 335)
			{
				this.name = "Ornament";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.melee = true;
			}
			else if (this.type == 336)
			{
				this.name = "Pine Needle";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.scale = 0.8f;
				this.extraUpdates = 1;
			}
			else if (this.type == 337)
			{
				this.name = "Blizzard";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.penetrate = -1;
				this.friendly = true;
				this.ranged = true;
				this.scale = 0.9f;
			}
			else if (this.type == 342)
			{
				this.name = "North Pole";
				this.width = 22;
				this.height = 2;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.coldDamage = true;
			}
			else if (this.type == 343)
			{
				this.alpha = 255;
				this.name = "North Pole";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 57;
				this.friendly = true;
				this.melee = true;
				this.scale = 1.1f;
				this.penetrate = 3;
				this.coldDamage = true;
			}
			else if (this.type == 344)
			{
				this.name = "North Pole";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.friendly = true;
				this.scale = 0.9f;
				this.alpha = 255;
				this.melee = true;
				this.coldDamage = true;
				this.tileCollide = false;
			}
			else if (this.type == 345)
			{
				this.name = "Pine Needle";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.scale = 0.8f;
			}
			else if (this.type == 346)
			{
				this.name = "Ornament";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
			}
			else if (this.type == 347)
			{
				this.name = "Ornament";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 2;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 348)
			{
				this.name = "Frost Wave";
				this.aiStyle = 1;
				this.width = 48;
				this.height = 48;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.coldDamage = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 349)
			{
				this.name = "Frost Shard";
				this.aiStyle = 1;
				this.width = 12;
				this.height = 12;
				this.hostile = true;
				this.penetrate = -1;
				this.coldDamage = true;
			}
			else if (this.type == 350)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Missile";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.hostile = true;
				this.tileCollide = false;
				this.timeLeft /= 2;
			}
			else if (this.type == 351)
			{
				this.alpha = 255;
				this.penetrate = -1;
				this.name = "Present";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 58;
				this.hostile = true;
				this.tileCollide = false;
			}
			else if (this.type == 352)
			{
				this.name = "Spike";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft /= 3;
			}
			else if (this.type == 353)
			{
				this.netImportant = true;
				this.name = "Baby Grinch";
				this.width = 18;
				this.height = 28;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 354)
			{
				this.name = "Crimsand Ball";
				this.knockBack = 6f;
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
				this.friendly = true;
				this.penetrate = -1;
				this.extraUpdates = 1;
			}
			else if (this.type == 355)
			{
				this.name = "Venom Fang";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.penetrate = 7;
			}
			else if (this.type == 356)
			{
				this.name = "Spectre Wrath";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 59;
				this.alpha = 255;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 3;
			}
			else if (this.type == 357)
			{
				this.name = "Pulse Bolt";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 6;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 358)
			{
				this.name = "Water Gun";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 60;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 359)
			{
				this.name = "Frost Bolt";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 28;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
				this.coldDamage = true;
			}
			else if ((this.type >= 360 && this.type <= 366) || this.type == 381 || this.type == 382)
			{
				this.name = "Bobber";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 61;
				this.penetrate = -1;
				this.bobber = true;
			}
			else if (this.type == 367)
			{
				this.name = "Obsidian Swordfish";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.scale = 1.1f;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 368)
			{
				this.name = "Swordfish";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 19;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 369)
			{
				this.name = "Sawtooth Shark";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 370)
			{
				this.name = "Love Potion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 371)
			{
				this.name = "Foul Potion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
			}
			else if (this.type == 372)
			{
				this.name = "Fish Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 373)
			{
				this.netImportant = true;
				this.name = "Hornet";
				this.width = 24;
				this.height = 26;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 374)
			{
				this.name = "Hornet Stinger";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 0;
				this.friendly = true;
				this.penetrate = 1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.scale *= 0.9f;
			}
			else if (this.type == 375)
			{
				this.netImportant = true;
				this.name = "Flying Imp";
				this.width = 34;
				this.height = 26;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 376)
			{
				this.name = "Imp Fireball";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 0;
				this.friendly = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.timeLeft = 100;
				this.alpha = 255;
				this.extraUpdates = 1;
			}
			else if (this.type == 377)
			{
				this.name = "Spider Turret";
				this.width = 66;
				this.height = 50;
				this.aiStyle = 53;
				this.timeLeft = Projectile.SentryLifeTime;
				this.ignoreWater = true;
				this.sentry = true;
			}
			else if (this.type == 378)
			{
				this.name = "Spider Egg";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 14;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft = 60;
				this.scale = 0.9f;
			}
			else if (this.type == 379)
			{
				this.name = "Baby Spider";
				this.width = 14;
				this.height = 10;
				this.aiStyle = 63;
				this.friendly = true;
				this.timeLeft = 300;
				this.penetrate = 1;
			}
			else if (this.type == 380)
			{
				this.netImportant = true;
				this.name = "Zephyr Fish";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 383)
			{
				this.name = "Anchor";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 3;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
			}
			else if (this.type == 384)
			{
				this.name = "Sharknado";
				this.width = 150;
				this.height = 42;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 64;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.timeLeft = 540;
			}
			else if (this.type == 385)
			{
				this.name = "Sharknado Bolt";
				this.width = 30;
				this.height = 30;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 65;
				this.alpha = 255;
				this.timeLeft = 300;
			}
			else if (this.type == 386)
			{
				this.name = "Cthulunado";
				this.width = 150;
				this.height = 42;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 64;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.timeLeft = 840;
			}
			else if (this.type == 387)
			{
				this.netImportant = true;
				this.name = "Retanimini";
				this.width = 40;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.5f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 388)
			{
				this.netImportant = true;
				this.name = "Spazmamini";
				this.width = 40;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.5f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 389)
			{
				this.name = "Mini Retina Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 3;
				this.light = 0.75f;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 390 || this.type == 391 || this.type == 392)
			{
				this.name = "Venom Spider";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 26;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 0.75f;
				if (this.type == 391)
				{
					this.name = "Jumper Spider";
				}
				if (this.type == 392)
				{
					this.name = "Dangerous Spider";
				}
			}
			else if (this.type == 393 || this.type == 394 || this.type == 395)
			{
				this.name = "One Eyed Pirate";
				this.width = 20;
				this.height = 30;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				if (this.type == 394)
				{
					this.name = "Soulscourge Pirate";
				}
				if (this.type == 395)
				{
					this.name = "Pirate Captain";
				}
			}
			else if (this.type == 396)
			{
				this.name = "Slime Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.alpha = 100;
			}
			else if (this.type == 397)
			{
				this.name = "Sticky Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
				this.tileCollide = false;
			}
			else if (this.type == 398)
			{
				this.netImportant = true;
				this.name = "Mini Minotaur";
				this.width = 18;
				this.height = 38;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 399)
			{
				this.name = "Molotov Cocktail";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 68;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.thrown = true;
				this.noEnchantments = true;
			}
			else if (this.type >= 400 && this.type <= 402)
			{
				this.name = "Molotov Fire";
				if (this.type == 400)
				{
					this.width = 14;
					this.height = 16;
				}
				else if (this.type == 401)
				{
					this.width = 12;
					this.height = 14;
				}
				else
				{
					this.width = 6;
					this.height = 12;
				}
				this.penetrate = 3;
				this.aiStyle = 14;
				this.friendly = true;
				this.timeLeft = 360;
				this.ranged = true;
				this.noEnchantments = true;
			}
			else if (this.type == 403)
			{
				this.netImportant = true;
				this.name = "Track Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 404)
			{
				this.name = "Flairon";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 69;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
			}
			else if (this.type == 405)
			{
				this.name = "Flairon Bubble";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 70;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 90;
				this.melee = true;
				this.noEnchantments = true;
			}
			else if (this.type == 406)
			{
				this.name = "Slime Gun";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 60;
				this.alpha = 255;
				this.penetrate = -1;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 407)
			{
				this.netImportant = true;
				this.name = "Tempest";
				this.width = 28;
				this.height = 40;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 408)
			{
				this.name = "Mini Sharkron";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 409)
			{
				this.name = "Typhoon";
				this.width = 30;
				this.height = 30;
				this.penetrate = -1;
				this.aiStyle = 71;
				this.alpha = 255;
				this.timeLeft = 360;
				this.friendly = true;
				this.tileCollide = true;
				this.extraUpdates = 2;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 410)
			{
				this.name = "Bubble";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 72;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 50;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type >= 411 && this.type <= 414)
			{
				switch (this.type)
				{
				case 411:
					this.name = "Copper Coins";
					break;
				case 412:
					this.name = "Silver Coins";
					break;
				case 413:
					this.name = "Gold Coins";
					break;
				case 414:
					this.name = "Platinum Coins";
					break;
				}
				this.width = 10;
				this.height = 10;
				this.aiStyle = 10;
			}
			else if (this.type == 415 || this.type == 416 || this.type == 417 || this.type == 418)
			{
				this.name = "Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 34;
				this.friendly = true;
				this.ranged = true;
				this.timeLeft = 45;
			}
			else if (this.type >= 419 && this.type <= 422)
			{
				this.name = "Firework Fountain";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 73;
				this.friendly = true;
			}
			else if (this.type == 423)
			{
				this.netImportant = true;
				this.name = "UFO";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.ignoreWater = true;
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				this.name = "Meteor";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 2;
			}
			else if (this.type == 427)
			{
				this.name = "Vortex Chainsaw";
				this.width = 22;
				this.height = 56;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 2;
			}
			else if (this.type == 428)
			{
				this.name = "Vortex Drill";
				this.width = 26;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 3;
			}
			else if (this.type == 429)
			{
				this.name = "Nebula Chainsaw";
				this.width = 18;
				this.height = 56;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 7;
			}
			else if (this.type == 430)
			{
				this.name = "Nebula Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 8;
			}
			else if (this.type == 431)
			{
				this.name = "Solar Flare Chainsaw";
				this.width = 28;
				this.height = 64;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 432)
			{
				this.name = "Solar Flare Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
			}
			else if (this.type == 610)
			{
				this.name = "Stardust Chainsaw";
				this.width = 28;
				this.height = 64;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 179;
			}
			else if (this.type == 609)
			{
				this.name = "Stardust Drill";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.glowMask = 180;
			}
			else if (this.type == 433)
			{
				this.name = "UFO Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 48;
				this.friendly = true;
				this.extraUpdates = 100;
				this.timeLeft = 100;
				this.ignoreWater = true;
			}
			else if (this.type == 434)
			{
				this.name = "Scutlix Laser";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 74;
				this.friendly = true;
				this.extraUpdates = 100;
				this.penetrate = -1;
			}
			else if (this.type == 435)
			{
				this.name = "Electric Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ignoreWater = true;
			}
			else if (this.type == 436)
			{
				this.name = "Brain Scrambling Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ignoreWater = true;
			}
			else if (this.type == 437)
			{
				this.name = "Gigazapper Spearhead";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.extraUpdates = 2;
				this.ignoreWater = true;
			}
			else if (this.type == 438)
			{
				this.name = "Laser Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
			}
			else if (this.type == 439)
			{
				this.name = "Laser Machinegun";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 440)
			{
				this.name = "Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1f;
				this.timeLeft = 600;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 441)
			{
				this.name = "Scutlix Crosshair";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 76;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 442)
			{
				this.name = "Electrosphere Missile";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ranged = true;
			}
			else if (this.type == 443)
			{
				this.name = "Electrosphere";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 77;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ranged = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 444)
			{
				this.name = "Xenopopper";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 78;
				this.friendly = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ranged = true;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 445)
			{
				this.name = "Laser Drill";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.melee = true;
				this.ignoreWater = true;
				this.ownerHitCheck = true;
			}
			else if (this.type == 446)
			{
				this.netImportant = true;
				this.name = "Anti-Gravity Hook";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
				this.light = 0.7f;
			}
			else if (this.type == 447)
			{
				this.name = "Martian Deathray";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 79;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 240;
			}
			else if (this.type == 448)
			{
				this.name = "Martian Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 80;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 449)
			{
				this.name = "Saucer Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 1;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ignoreWater = true;
			}
			else if (this.type == 450)
			{
				this.name = "Saucer Scrap";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 360;
			}
			else if (this.type == 451)
			{
				this.name = "Influx Waver";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 81;
				this.melee = true;
				this.penetrate = 3;
				this.light = 0.2f;
				this.alpha = 255;
				this.friendly = true;
			}
			else if (this.type == 452)
			{
				this.name = "Phantasmal Eye";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 82;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
			}
			else if (this.type == 453)
			{
				this.name = "Drill Crosshair";
				this.width = 1;
				this.height = 1;
				this.aiStyle = 76;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 454)
			{
				this.name = "Phantasmal Sphere";
				this.width = 46;
				this.height = 46;
				this.aiStyle = 83;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 455)
			{
				this.name = "Phantasmal Deathray";
				this.width = 36;
				this.height = 36;
				this.aiStyle = 84;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 456)
			{
				this.name = "Moon Leech";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 85;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 459)
			{
				this.name = "Charged Blaster Orb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.scale = 1f;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 460)
			{
				this.name = "Charged Blaster Cannon";
				this.width = 14;
				this.height = 18;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 461)
			{
				this.name = "Charged Blaster Laser";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.magic = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
				this.hide = true;
			}
			else if (this.type == 462)
			{
				this.name = "Phantasmal Bolt";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 463)
			{
				this.name = "Vicious Powder";
				this.width = 48;
				this.height = 48;
				this.aiStyle = 6;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 464)
			{
				this.name = "Ice Mist";
				this.width = 60;
				this.height = 60;
				this.aiStyle = 86;
				this.hostile = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
			}
			else if (this.type == 467)
			{
				this.name = "Fireball";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 468)
			{
				this.name = "Shadow Fireball";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 465)
			{
				this.name = "Lightning Orb";
				this.width = 80;
				this.height = 80;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 466)
			{
				this.name = "Lightning Orb Arc";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = true;
				this.extraUpdates = 4;
				this.timeLeft = 120 * (this.extraUpdates + 1);
			}
			else if (this.type == 491)
			{
				this.name = "Flying Knife";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 9;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
			}
			else if (this.type == 500)
			{
				this.name = "Crimson Heart";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 499)
			{
				this.netImportant = true;
				this.name = "Baby Face Monster";
				this.width = 34;
				this.height = 34;
				this.aiStyle = 26;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 469)
			{
				this.alpha = 255;
				this.arrow = true;
				this.name = "Bee Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 470)
			{
				this.name = "Sticky Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 471)
			{
				this.name = "Bone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 2;
				this.scale = 1.2f;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 472)
			{
				this.name = "Web spit";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 0;
				this.hostile = true;
				this.penetrate = -1;
				this.aiStyle = 1;
				this.tileCollide = true;
				this.timeLeft = 50;
			}
			else if (this.type == 474)
			{
				this.arrow = true;
				this.name = "Bone Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 473)
			{
				this.netImportant = true;
				this.name = "Spelunker Glowstick";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 2;
			}
			else if (this.type == 475)
			{
				this.name = "Vine Rope Coil";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 35;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 400;
			}
			else if (this.type == 476)
			{
				this.name = "Soul Drain";
				this.width = 200;
				this.height = 200;
				this.aiStyle = -1;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 3;
			}
			else if (this.type == 477)
			{
				this.alpha = 255;
				this.name = "Crystal Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 7;
				this.extraUpdates = 1;
				this.ranged = true;
			}
			else if (this.type == 478)
			{
				this.alpha = 255;
				this.name = "Cursed Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.timeLeft = 300;
				this.ranged = true;
			}
			else if (this.type == 479)
			{
				this.alpha = 255;
				this.name = "Ichor Dart";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 480)
			{
				this.alpha = 255;
				this.name = "Cursed Flame";
				this.width = 12;
				this.height = 12;
				this.penetrate = 3;
				this.aiStyle = 14;
				this.friendly = true;
				this.timeLeft = 120;
				this.ranged = true;
				this.noEnchantments = true;
			}
			else if (this.type == 481)
			{
				this.name = "Chain Guillotine";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 13;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.melee = true;
				this.extraUpdates = 0;
			}
			else if (this.type == 482)
			{
				this.name = "Cursed Flames";
				this.width = 16;
				this.height = 200;
				this.aiStyle = 87;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = 20;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 2700;
			}
			else if (this.type == 483)
			{
				this.arrow = true;
				this.name = "Seedler";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 14;
				this.friendly = true;
				this.melee = true;
			}
			else if (this.type == 484)
			{
				this.arrow = true;
				this.name = "Seedler";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 485)
			{
				this.arrow = true;
				this.name = "Hellwing";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.penetrate = -1;
			}
			else if (this.type >= 486 && this.type <= 489)
			{
				this.name = "Hook";
				if (this.type == 486)
				{
					this.width = 12;
					this.height = 12;
				}
				else if (this.type == 487)
				{
					this.width = 22;
					this.height = 22;
				}
				else if (this.type == 488)
				{
					this.width = 12;
					this.height = 12;
					this.light = 0.3f;
				}
				else if (this.type == 489)
				{
					this.width = 20;
					this.height = 16;
				}
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 492)
			{
				this.netImportant = true;
				this.name = "Magic Lantern";
				this.width = 18;
				this.height = 32;
				this.aiStyle = 90;
				this.friendly = true;
				this.penetrate = -1;
				this.timeLeft *= 5;
			}
			else if (this.type == 490)
			{
				this.name = "Lightning Ritual";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 89;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.timeLeft = 600;
				this.netImportant = true;
			}
			else if (this.type == 493 || this.type == 494)
			{
				this.name = "Crystal Vile Shard";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 4;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.magic = true;
				this.light = 0.2f;
			}
			else if (this.type == 495)
			{
				this.arrow = true;
				this.name = "Shadowflame Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.penetrate = 3;
			}
			else if (this.type == 496)
			{
				this.alpha = 255;
				this.name = "Shadowflame";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 91;
				this.friendly = true;
				this.magic = true;
				this.MaxUpdates = 3;
				this.penetrate = 3;
			}
			else if (this.type == 497)
			{
				this.name = "Shadowflame Knife";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 3;
				this.melee = true;
			}
			else if (this.type == 498)
			{
				this.name = "Nail";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 180;
			}
			else if (this.type == 501)
			{
				this.name = "Flask";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 2;
				this.scale = 1.1f;
				this.hostile = true;
				this.ranged = true;
			}
			else if (this.type == 502)
			{
				this.name = "Meowmere";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 8;
				this.friendly = true;
				this.melee = true;
				this.penetrate = 5;
			}
			else if (this.type == 503)
			{
				this.name = "Star Wrath";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 5;
				this.friendly = true;
				this.penetrate = 2;
				this.alpha = 255;
				this.tileCollide = false;
				this.melee = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 504)
			{
				this.name = "Spark";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.penetrate = 2;
			}
			else if (this.type == 507)
			{
				this.name = "Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
				this.penetrate = 3;
			}
			else if (this.type == 508)
			{
				this.name = "Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 509)
			{
				this.name = "Butcher's Chainsaw";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 20;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ownerHitCheck = true;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type == 510)
			{
				this.name = "Toxic Flask";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 1;
				this.magic = true;
			}
			else if (this.type == 511)
			{
				this.name = "Toxic Cloud";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 512)
			{
				this.name = "Toxic Cloud";
				this.width = 40;
				this.height = 38;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 513)
			{
				this.name = "Toxic Cloud";
				this.width = 30;
				this.height = 28;
				this.aiStyle = 92;
				this.friendly = true;
				this.penetrate = -1;
				this.scale = 1.1f;
				this.magic = true;
			}
			else if (this.type == 514)
			{
				this.name = "Nail";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 93;
				this.friendly = true;
				this.penetrate = 3;
				this.alpha = 255;
				this.ranged = true;
			}
			else if (this.type == 515)
			{
				this.netImportant = true;
				this.name = "Bouncy Glowstick";
				this.width = 6;
				this.height = 6;
				this.aiStyle = 14;
				this.penetrate = -1;
				this.alpha = 75;
				this.light = 1f;
				this.timeLeft *= 5;
			}
			else if (this.type == 516)
			{
				this.name = "Bouncy Bomb";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 517)
			{
				this.name = "Bouncy Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 518)
			{
				this.name = "Coin Portal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 94;
				this.friendly = true;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 519)
			{
				this.name = "Bomb Fish";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
			}
			else if (this.type == 520)
			{
				this.name = "Frost Daggerfish";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 3;
				this.thrown = true;
			}
			else if (this.type == 521)
			{
				this.name = "Crystal Charge";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 522)
			{
				this.name = "Crystal Charge";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 523)
			{
				this.name = "Toxic Bubble";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 95;
				this.alpha = 255;
				this.ranged = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 524)
			{
				this.name = "Ichor Splash";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 96;
				this.friendly = true;
				this.alpha = 255;
				this.penetrate = -1;
				this.ignoreWater = true;
				this.melee = true;
				this.extraUpdates = 5;
			}
			else if (this.type == 525)
			{
				this.name = "Flying Piggy Bank";
				this.width = 30;
				this.height = 24;
				this.aiStyle = 97;
				this.tileCollide = false;
				this.timeLeft = 10800;
			}
			else if (this.type == 526)
			{
				this.name = "Energy";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 98;
				this.tileCollide = false;
				this.timeLeft = 120;
				this.alpha = 255;
			}
			else if (this.type >= 527 && this.type <= 531)
			{
				this.name = "Tombstone";
				this.knockBack = 12f;
				this.width = 24;
				this.height = 24;
				this.aiStyle = 17;
				this.penetrate = -1;
			}
			else if (this.type == 532)
			{
				this.name = "XBone";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.scale = 1f;
				this.friendly = true;
				this.thrown = true;
				this.penetrate = 3;
				this.extraUpdates = 1;
			}
			else if (this.type == 533)
			{
				this.netImportant = true;
				this.name = "Deadly Sphere";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 66;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.minionSlots = 1f;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.friendly = true;
			}
			else if (this.type == 534)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
			}
			else if (this.type >= 541 && this.type <= 555)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				if (this.type == 547)
				{
					this.scale = 1.1f;
				}
				if (this.type == 554)
				{
					this.scale = 1.2f;
				}
				if (this.type == 555)
				{
					this.scale = 1.15f;
				}
				if (this.type == 551 || this.type == 550)
				{
					this.scale = 1.1f;
				}
			}
			else if (this.type >= 562 && this.type <= 564)
			{
				this.extraUpdates = 0;
				this.name = "Yoyo";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				if (this.type == 563)
				{
					this.scale = 1.05f;
				}
				if (this.type == 564)
				{
					this.scale = 1.075f;
				}
			}
			else if (this.type == 603)
			{
				this.extraUpdates = 0;
				this.name = "Terrarian";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1.15f;
			}
			else if (this.type == 604)
			{
				this.extraUpdates = 0;
				this.name = "Terrarian";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 115;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1.2f;
			}
			else if (this.type >= 556 && this.type <= 561)
			{
				this.extraUpdates = 0;
				this.name = "Counterweight";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 99;
				this.friendly = true;
				this.penetrate = -1;
				this.melee = true;
				this.scale = 1f;
				this.counterweight = true;
			}
			else if (this.type == 535)
			{
				this.name = "Medusa Ray";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 100;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 536)
			{
				this.name = "Medusa Ray";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 101;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 537)
			{
				this.name = "Stardust Laser";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 84;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 240;
				this.tileCollide = false;
			}
			else if (this.type == 538)
			{
				this.name = "Twinkle";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 14;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 120;
				this.extraUpdates = 1;
				this.alpha = 255;
			}
			else if (this.type == 539)
			{
				this.name = "Flow Invader";
				this.width = 18;
				this.height = 30;
				this.aiStyle = 102;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 600;
			}
			else if (this.type == 540)
			{
				this.name = "Starmark";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 103;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 300;
				this.alpha = 255;
			}
			else if (this.type == 565)
			{
				this.name = "Brain of Confusion";
				this.width = 28;
				this.height = 28;
				this.aiStyle = 104;
				this.penetrate = -1;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.scale = 0.8f;
			}
			else if (this.type == 566)
			{
				this.name = "Bee";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 36;
				this.friendly = true;
				this.penetrate = 4;
				this.alpha = 255;
				this.timeLeft = 660;
				this.extraUpdates = 3;
			}
			else if (this.type == 567 || this.type == 568)
			{
				this.name = "Spore";
				if (this.type == 567)
				{
					this.width = 14;
					this.height = 14;
				}
				else
				{
					this.width = 16;
					this.height = 16;
				}
				this.aiStyle = 105;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type >= 569 && this.type <= 571)
			{
				this.name = "Spore";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 106;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 575)
			{
				this.name = "Nebula Sphere";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 107;
				this.hostile = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft = 420;
				this.alpha = 255;
			}
			else if (this.type == 573)
			{
				this.name = "Nebula Piercer";
				this.width = 18;
				this.height = 30;
				this.aiStyle = 102;
				this.hostile = true;
				this.penetrate = -1;
				this.timeLeft = 600;
			}
			else if (this.type == 574)
			{
				this.name = "Nebula Eye";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 102;
				this.hostile = true;
				this.timeLeft = 600;
				this.tileCollide = false;
			}
			else if (this.type == 572)
			{
				this.name = "Poison Spit";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 576)
			{
				this.name = "Nebula Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 577)
			{
				this.name = "Vortex Laser";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1.2f;
				this.timeLeft = 600;
			}
			else if (this.type == 578 || this.type == 579)
			{
				this.name = "Vortex";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 108;
				this.friendly = true;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.hostile = true;
				this.hide = true;
			}
			else if (this.type == 580)
			{
				this.name = "Vortex Lightning";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 88;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.tileCollide = true;
				this.extraUpdates = 4;
				this.timeLeft = 600;
			}
			else if (this.type == 581)
			{
				this.name = "Alien Goop";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 582)
			{
				this.name = "Mechanic's Wrench";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 109;
				this.friendly = true;
				this.penetrate = -1;
				this.MaxUpdates = 2;
			}
			else if (this.type == 583)
			{
				this.name = "Syringe";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
				this.scale = 0.8f;
			}
			else if (this.type == 589)
			{
				this.name = "Christmas Ornament";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 2;
				this.friendly = true;
			}
			else if (this.type == 584)
			{
				this.name = "Syringe";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 110;
				this.friendly = true;
				this.scale = 0.8f;
				this.penetrate = 3;
			}
			else if (this.type == 585)
			{
				this.name = "Skull";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.penetrate = 3;
			}
			else if (this.type == 586)
			{
				this.name = "Dryad's ward";
				this.width = 26;
				this.height = 26;
				this.aiStyle = 111;
				this.alpha = 255;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 587)
			{
				this.name = "Paintball";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.ranged = true;
			}
			else if (this.type == 588)
			{
				this.name = "Confetti Grenade";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 590)
			{
				this.name = "Truffle Spore";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 112;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
			}
			else if (this.type == 591)
			{
				this.name = "Minecart Laser";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 101;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ignoreWater = true;
			}
			else if (this.type == 592)
			{
				this.name = "Laser Ray";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 3;
				this.ignoreWater = true;
			}
			else if (this.type == 593)
			{
				this.name = "Prophecy's End";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.hostile = true;
				this.alpha = 255;
				this.extraUpdates = 1;
				this.ignoreWater = true;
			}
			else if (this.type == 594)
			{
				this.name = "Blowup Smoke";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.alpha = 255;
				this.extraUpdates = 2;
			}
			else if (this.type == 595)
			{
				this.name = "Arkhalis";
				this.width = 68;
				this.height = 64;
				this.aiStyle = 75;
				this.friendly = true;
				this.tileCollide = false;
				this.melee = true;
				this.penetrate = -1;
				this.ownerHitCheck = true;
			}
			else if (this.type == 596)
			{
				this.name = "Desert Spirit's Curse";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 107;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 180;
				this.tileCollide = false;
			}
			else if (this.type == 597)
			{
				this.name = "Amber Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 2;
				this.friendly = true;
			}
			else if (this.type == 598)
			{
				this.name = "Bone Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
			}
			else if (this.type == 599)
			{
				this.name = "Bone Dagger";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 2;
				this.friendly = true;
				this.penetrate = 6;
				this.thrown = true;
			}
			else if (this.type == 600)
			{
				this.name = "Portal Gun";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ignoreWater = true;
			}
			else if (this.type == 601)
			{
				this.name = "Portal Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.extraUpdates = 30;
			}
			else if (this.type == 602)
			{
				this.name = "Portal Gate";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 114;
				this.alpha = 255;
				this.friendly = true;
				this.tileCollide = false;
				this.netImportant = true;
			}
			else if (this.type == 605)
			{
				this.name = "Slime Spike";
				this.alpha = 255;
				this.width = 6;
				this.height = 6;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 606)
			{
				this.name = "Laser";
				this.width = 5;
				this.height = 5;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 2;
				this.scale = 1f;
				this.timeLeft = 600;
				this.ignoreWater = true;
			}
			else if (this.type == 607)
			{
				this.name = "Solar Flare";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 116;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 600;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 608)
			{
				this.name = "Solar Radiance";
				this.width = 160;
				this.height = 160;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 3;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.hide = true;
			}
			else if (this.type == 611)
			{
				this.name = "Solar Eruption";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 75;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 612)
			{
				this.name = "Solar Eruption";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.tileCollide = false;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 613)
			{
				this.netImportant = true;
				this.name = "Stardust Cell";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 62;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 1f;
				this.ignoreWater = true;
			}
			else if (this.type == 614)
			{
				this.name = "Stardust Cell";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
			}
			else if (this.type == 615)
			{
				this.name = "Vortex Beater";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 616)
			{
				this.name = "Vortex Rocket";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.ranged = true;
				this.extraUpdates = 2;
				this.timeLeft = 90 * this.MaxUpdates;
			}
			else if (this.type == 617)
			{
				this.name = "Nebula Arcanum";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 118;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.hide = true;
				this.magic = true;
				this.penetrate = 3;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 618)
			{
				this.name = "Nebula Arcanum";
				this.tileCollide = false;
				this.width = 18;
				this.height = 30;
				this.aiStyle = 119;
				this.penetrate = -1;
				this.timeLeft = 420;
				this.magic = true;
				this.friendly = true;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 619)
			{
				this.name = "Nebula Arcanum";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 620)
			{
				this.name = "Nebula Arcanum";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 29;
				this.alpha = 255;
				this.magic = true;
				this.penetrate = 1;
				this.friendly = true;
			}
			else if (this.type == 622)
			{
				this.name = "Blowup Smoke";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.extraUpdates = 2;
			}
			else if (this.type == 623)
			{
				this.netImportant = true;
				this.name = "Stardust Guardian";
				this.width = 50;
				this.height = 80;
				this.aiStyle = 120;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.minionSlots = 0f;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.netImportant = true;
			}
			else if (this.type == 624)
			{
				this.name = "Starburst";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 117;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 60;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type >= 625 && this.type <= 628)
			{
				if (this.type == 625 || this.type == 628)
				{
					this.netImportant = true;
				}
				if (this.type == 626 || this.type == 627)
				{
					this.minionSlots = 0.5f;
				}
				this.name = "Stardust Dragon";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 121;
				this.penetrate = -1;
				this.timeLeft *= 5;
				this.minion = true;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.hide = true;
				this.netImportant = true;
			}
			else if (this.type == 629)
			{
				this.name = "Released Energy";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 122;
				this.hostile = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 3600;
				this.tileCollide = false;
				this.penetrate = -1;
				this.extraUpdates = 2;
			}
			else if (this.type == 630 || this.type == 705)
			{
				this.name = "Phantasm";
				this.width = 22;
				this.height = 22;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.hide = true;
				this.ranged = true;
				this.ignoreWater = true;
			}
			else if (this.type == 631)
			{
				this.arrow = true;
				this.name = "Phantasm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 122;
				this.friendly = true;
				this.ranged = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 633)
			{
				this.name = "Last Prism";
				this.width = 14;
				this.height = 18;
				this.aiStyle = 75;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 632)
			{
				this.name = "Last Prism";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.magic = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
			}
			else if (this.type == 634)
			{
				this.name = "Nebula Blaze";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 2;
				this.magic = true;
			}
			else if (this.type == 635)
			{
				this.name = "Nebula Blaze Ex";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.friendly = true;
				this.extraUpdates = 3;
				this.magic = true;
			}
			else if (this.type == 636)
			{
				this.name = "Daybreak";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 113;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.MaxUpdates = 2;
			}
			else if (this.type == 637)
			{
				this.name = "Bouncy Dynamite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 16;
				this.friendly = true;
				this.penetrate = -1;
			}
			else if (this.type == 638)
			{
				this.name = "Luminite Bullet";
				this.width = 4;
				this.height = 4;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.extraUpdates = 5;
				this.timeLeft = 600;
				this.ranged = true;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.penetrate = -1;
			}
			else if (this.type == 639)
			{
				this.arrow = true;
				this.name = "Luminite Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.MaxUpdates = 2;
				this.timeLeft = this.MaxUpdates * 45;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.alpha = 255;
				this.penetrate = 4;
			}
			else if (this.type == 640)
			{
				this.name = "Luminite Arrow";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.MaxUpdates = 3;
				this.timeLeft = 90;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.alpha = 255;
				this.penetrate = 4;
			}
			else if (this.type == 642)
			{
				this.name = "Lunar Portal Laser";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 84;
				this.friendly = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.tileCollide = false;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 641)
			{
				this.name = "Lunar Portal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 123;
				this.timeLeft = Projectile.SentryLifeTime;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.hide = true;
				this.sentry = true;
			}
			else if (this.type == 643)
			{
				this.name = "Rainbow Crystal";
				this.width = 32;
				this.height = 32;
				this.aiStyle = 123;
				this.timeLeft = Projectile.SentryLifeTime;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.alpha = 255;
				this.sentry = true;
			}
			else if (this.type == 644)
			{
				this.name = "Rainbow Explosion";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 112;
				this.penetrate = 1;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
			}
			else if (this.type == 645)
			{
				this.name = "Lunar Flare";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.extraUpdates = 5;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type >= 646 && this.type <= 649)
			{
				this.name = "Lunar Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 650)
			{
				this.name = "Suspicious Looking Tentacle";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 124;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.manualDirectionChange = true;
			}
			else if (this.type == 651)
			{
				this.name = "Wire Kite";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 125;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 652)
			{
				this.name = "Static Hook";
				this.width = 18;
				this.height = 18;
				this.aiStyle = 7;
				this.friendly = true;
				this.penetrate = -1;
				this.tileCollide = false;
				this.timeLeft *= 10;
			}
			else if (this.type == 653)
			{
				this.name = "Companion Cube";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 67;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.friendly = true;
				this.ignoreWater = true;
				this.scale = 0.8f;
			}
			else if (this.type == 654)
			{
				this.name = "Geyser";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 126;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 655)
			{
				this.name = "Bee Hive";
				this.width = 31;
				this.height = 31;
				this.aiStyle = 25;
				this.friendly = true;
				this.hostile = true;
				this.penetrate = -1;
				this.trap = true;
			}
			else if (this.type == 656)
			{
				this.name = "Ancient Storm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 127;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
				this.timeLeft = 1200;
			}
			else if (this.type == 657)
			{
				this.name = "Ancient Storm";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 127;
				this.hostile = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.timeLeft = 1200;
			}
			else if (this.type == 658)
			{
				this.name = "Ancient Storm";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 128;
				this.penetrate = 1;
				this.timeLeft = 900;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.alpha = 255;
				this.hostile = true;
			}
			else if (this.type == 659)
			{
				this.name = "Spirit Flame";
				this.width = 8;
				this.height = 8;
				this.aiStyle = 129;
				this.friendly = true;
				this.magic = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.timeLeft = 180;
				this.tileCollide = false;
				this.penetrate = -1;
			}
			else if (this.type == 660)
			{
				this.name = "Sky Fracture";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
				this.ignoreWater = true;
			}
			else if (this.type == 661)
			{
				this.name = "Onyx Blaster";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 40;
				this.extraUpdates = 1;
				this.ranged = true;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
			}
			else if (this.type == 662 || this.type == 685)
			{
				this.name = "Javelin";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 663 || this.type == 665 || this.type == 667)
			{
				this.name = "Flameburst Tower";
				this.width = 30;
				this.height = 54;
				this.aiStyle = 130;
				this.timeLeft = Projectile.SentryLifeTime;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.manualDirectionChange = true;
				switch (this.type)
				{
				case 665:
					this.height = 58;
					this.width = 28;
					break;
				case 667:
					this.height = 60;
					this.width = 28;
					break;
				}
				this.sentry = true;
			}
			else if (this.type == 664 || this.type == 666 || this.type == 668)
			{
				this.name = "Flameburst Tower";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 131;
				this.friendly = true;
				this.alpha = 255;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = -1;
			}
			else if (this.type == 669)
			{
				this.name = "Ale";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 68;
				this.friendly = true;
				this.penetrate = 1;
				this.alpha = 255;
				this.thrown = true;
				this.noEnchantments = true;
			}
			else if (this.type == 670)
			{
				this.name = "Ogre's Stomp";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 126;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 671)
			{
				this.name = "Drakin Shot";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 672)
			{
				this.name = "Grim End";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 132;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 900;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 674 || this.type == 673)
			{
				this.name = "Dark Sigil";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 133;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 900;
				this.hostile = true;
				this.penetrate = -1;
				this.hide = true;
			}
			else if (this.type == 675)
			{
				this.name = "Dark Energy";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 676)
			{
				this.name = "Ogre Spit";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 677 || this.type == 678 || this.type == 679)
			{
				this.name = "Ballista";
				this.width = 26;
				this.height = 54;
				this.aiStyle = 134;
				this.timeLeft = Projectile.SentryLifeTime;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.manualDirectionChange = true;
				this.sentry = true;
			}
			else if (this.type == 680)
			{
				this.name = "Ballista";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.friendly = true;
				this.penetrate = 4;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = -1;
			}
			else if (this.type == 681)
			{
				this.name = "Goblin Bomb";
				this.width = 14;
				this.height = 14;
				this.aiStyle = 16;
				this.hostile = true;
				this.penetrate = -1;
				this.thrown = true;
			}
			else if (this.type == 682)
			{
				this.name = "Withering Bolt";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.hostile = true;
				this.ignoreWater = true;
				this.timeLeft = 30;
				this.scale = 1.2f;
			}
			else if (this.type == 683)
			{
				this.name = "Ogre's Stomp";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 135;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.hostile = true;
				this.penetrate = -1;
			}
			else if (this.type == 684)
			{
				this.name = "Hearty Slash";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 1;
				this.melee = true;
				this.penetrate = 5;
				this.alpha = 255;
				this.friendly = true;
				this.tileCollide = false;
			}
			else if (this.type == 686)
			{
				this.name = "Betsy's fireball";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 1;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 687)
			{
				this.name = "Betsy's fireball";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 136;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = false;
				this.hostile = true;
			}
			else if (this.type == 688 || this.type == 689 || this.type == 690)
			{
				this.name = "Lightning Aura";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 137;
				this.friendly = true;
				this.usesLocalNPCImmunity = true;
				this.timeLeft = Projectile.SentryLifeTime;
				this.localNPCHitCooldown = 3;
				this.tileCollide = false;
				this.penetrate = -1;
				this.sentry = true;
			}
			else if (this.type == 691 || this.type == 692 || this.type == 693)
			{
				this.name = "Explosive Trap";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 138;
				this.friendly = true;
				this.timeLeft = Projectile.SentryLifeTime;
				this.tileCollide = false;
				this.penetrate = -1;
				this.hide = true;
				this.sentry = true;
			}
			else if (this.type == 694 || this.type == 695 || this.type == 696)
			{
				this.name = "Explosive Trap";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 139;
				this.friendly = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = 30;
				this.alpha = 255;
				this.width = 96;
				this.height = 96;
			}
			else if (this.type == 697)
			{
				this.name = "Octopus Staff";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 140;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = 12;
				this.ownerHitCheck = true;
			}
			else if (this.type == 698)
			{
				this.name = "Pole Smash";
				this.width = 50;
				this.height = 200;
				this.aiStyle = 141;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 120;
				this.friendly = true;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = -1;
				this.melee = true;
			}
			else if (this.type == 699)
			{
				this.name = "Ghastly Glaive";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 142;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.usesIDStaticNPCImmunity = true;
				this.idStaticNPCHitCooldown = 36;
				this.ownerHitCheck = true;
			}
			else if (this.type == 700)
			{
				this.name = "Ghast";
				this.width = 40;
				this.height = 40;
				this.aiStyle = 143;
				this.alpha = 255;
				this.penetrate = -1;
				this.friendly = true;
				this.melee = true;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = -1;
				this.ignoreWater = true;
				this.tileCollide = false;
			}
			else if (this.type == 703 || this.type == 701 || this.type == 702)
			{
				this.name = "dd2 pet";
				this.width = 20;
				this.height = 20;
				this.aiStyle = 144;
				this.penetrate = -1;
				this.netImportant = true;
				this.timeLeft *= 5;
				this.scale = 0.85f;
				this.friendly = true;
				this.ignoreWater = true;
				this.tileCollide = false;
				this.manualDirectionChange = true;
			}
			else if (this.type == 704)
			{
				this.name = "Whirlwind";
				this.width = 60;
				this.height = 210;
				this.aiStyle = 145;
				this.friendly = true;
				this.magic = true;
				this.tileCollide = false;
				this.penetrate = -1;
				this.usesLocalNPCImmunity = true;
				this.timeLeft = 600;
				this.localNPCHitCooldown = -1;
				this.ignoreWater = true;
			}
			else if (this.type == 706)
			{
				this.name = "shot";
				this.width = 66;
				this.height = 66;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 300;
				this.ranged = true;
				this.usesLocalNPCImmunity = true;
				this.penetrate = -1;
				this.localNPCHitCooldown = 10;
			}
			else if (this.type == 707)
			{
				this.name = "Sky Dragon's Fury";
				this.width = 16;
				this.height = 16;
				this.aiStyle = 140;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = 6;
				this.ownerHitCheck = true;
			}
			else if (this.type == 708)
			{
				this.name = "Sky Dragon's Fury";
				this.width = 24;
				this.height = 24;
				this.aiStyle = 142;
				this.friendly = true;
				this.melee = true;
				this.penetrate = -1;
				this.alpha = 255;
				this.hide = true;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = 6;
				this.ownerHitCheck = true;
			}
			else if (this.type == 709)
			{
				this.name = "Sky Dragon's Fury";
				this.width = 12;
				this.height = 12;
				this.aiStyle = 1;
				this.friendly = true;
				this.melee = true;
				this.alpha = 255;
				this.ignoreWater = true;
				this.extraUpdates = 1;
				this.noEnchantments = true;
				this.scale = 0.6f;
			}
			else if (this.type == 710)
			{
				this.arrow = true;
				this.name = "Aerial Bane";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.ranged = true;
				this.ignoreWater = true;
				this.extraUpdates = 1;
				this.timeLeft = this.extraUpdates * 60 * 5;
				this.usesLocalNPCImmunity = true;
				this.alpha = 255;
				this.localNPCHitCooldown = -1;
			}
			else if (this.type == 711)
			{
				this.name = "Betsy's fireball";
				this.width = 30;
				this.height = 30;
				this.aiStyle = 1;
				this.alpha = 255;
				this.friendly = true;
				this.magic = true;
				this.extraUpdates = 1;
				this.scale = 0.7f;
				this.usesLocalNPCImmunity = true;
				this.localNPCHitCooldown = -1;
			}
			else if (this.type == 712)
			{
				this.name = "Book Staff";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 1;
				this.friendly = true;
				this.alpha = 255;
				this.timeLeft = 600;
				this.magic = true;
				this.extraUpdates = 1;
			}
			else if (this.type == 713)
			{
				this.name = "Victory Scene";
				this.width = 10;
				this.height = 10;
				this.aiStyle = 146;
				this.alpha = 255;
				this.tileCollide = false;
				this.ignoreWater = true;
				this.timeLeft = 900;
				this.hostile = true;
				this.penetrate = -1;
			}
			else
			{
				this.active = false;
			}
			this.width = (int)((float)this.width * this.scale);
			this.height = (int)((float)this.height * this.scale);
			this.maxPenetrate = this.penetrate;
		}

		public static int GetNextSlot()
		{
			int result = 1000;
			for (int i = 0; i < 1000; i++)
			{
				if (!Main.projectile[i].active)
				{
					result = i;
					break;
				}
			}
			return result;
		}

		public static int NewProjectile(Vector2 position, Vector2 velocity, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0f, float ai1 = 0f)
		{
			return Projectile.NewProjectile(position.X, position.Y, velocity.X, velocity.Y, Type, Damage, KnockBack, Owner, ai0, ai1);
		}

		public static int NewProjectile(float X, float Y, float SpeedX, float SpeedY, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0f, float ai1 = 0f)
		{
			int num = 1000;
			for (int i = 0; i < 1000; i++)
			{
				if (!Main.projectile[i].active)
				{
					num = i;
					break;
				}
			}
			if (num == 1000)
			{
				return num;
			}
			Projectile projectile = Main.projectile[num];
			projectile.SetDefaults(Type);
			projectile.position.X = X - (float)projectile.width * 0.5f;
			projectile.position.Y = Y - (float)projectile.height * 0.5f;
			projectile.owner = Owner;
			projectile.velocity.X = SpeedX;
			projectile.velocity.Y = SpeedY;
			projectile.damage = Damage;
			projectile.knockBack = KnockBack;
			projectile.identity = num;
			projectile.gfxOffY = 0f;
			projectile.stepSpeed = 1f;
			projectile.wet = Collision.WetCollision(projectile.position, projectile.width, projectile.height);
			if (projectile.ignoreWater)
			{
				projectile.wet = false;
			}
			projectile.honeyWet = Collision.honey;
			Main.projectileIdentity[Owner, num] = num;
			if (projectile.aiStyle == 1)
			{
				while (projectile.velocity.X >= 16f || projectile.velocity.X <= -16f || projectile.velocity.Y >= 16f || projectile.velocity.Y < -16f)
				{
					Projectile expr_119_cp_0 = projectile;
					expr_119_cp_0.velocity.X = expr_119_cp_0.velocity.X * 0.97f;
					Projectile expr_130_cp_0 = projectile;
					expr_130_cp_0.velocity.Y = expr_130_cp_0.velocity.Y * 0.97f;
				}
			}
			if (Owner == Main.myPlayer)
			{
				if (Type == 206)
				{
					projectile.ai[0] = (float)Main.rand.Next(-100, 101) * 0.0005f;
					projectile.ai[1] = (float)Main.rand.Next(-100, 101) * 0.0005f;
				}
				else if (Type == 335)
				{
					projectile.ai[1] = (float)Main.rand.Next(4);
				}
				else if (Type == 358)
				{
					projectile.ai[1] = (float)Main.rand.Next(10, 31) * 0.1f;
				}
				else if (Type == 406)
				{
					projectile.ai[1] = (float)Main.rand.Next(10, 21) * 0.1f;
				}
				else
				{
					projectile.ai[0] = ai0;
					projectile.ai[1] = ai1;
				}
			}
			if (Type == 434)
			{
				projectile.ai[0] = projectile.position.X;
				projectile.ai[1] = projectile.position.Y;
			}
			if (Type > 0 && Type < 714)
			{
				if (ProjectileID.Sets.NeedsUUID[Type])
				{
					projectile.projUUID = projectile.identity;
				}
				if (ProjectileID.Sets.StardustDragon[Type])
				{
					int num2 = Main.projectile[(int)projectile.ai[0]].projUUID;
					if (num2 >= 0)
					{
						projectile.ai[0] = (float)num2;
					}
				}
			}
			if (Main.netMode != 0 && Owner == Main.myPlayer)
			{
				NetMessage.SendData(27, -1, -1, "", num, 0f, 0f, 0f, 0, 0, 0);
			}
			if (Owner == Main.myPlayer)
			{
				if (Type == 28)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 516)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 519)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 29)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 470)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 637)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 30)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 517)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 37)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 75)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 133)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 136)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 139)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 142)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 397)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 419)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 420)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 421)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 422)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 588)
				{
					projectile.timeLeft = 180;
				}
				if (Type == 443)
				{
					projectile.timeLeft = 300;
				}
				if (Type == 681)
				{
					projectile.timeLeft = 600;
				}
				if (Type == 684)
				{
					projectile.timeLeft = 60;
				}
				if (Type == 706)
				{
					projectile.timeLeft = 120;
				}
				if (Type == 680 && Main.player[projectile.owner].setSquireT2)
				{
					projectile.penetrate = 7;
				}
			}
			if (Type == 249)
			{
				projectile.frame = Main.rand.Next(5);
			}
			return num;
		}

		public void StatusNPC(int i)
		{
			if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
			{
				int meleeEnchant = (int)Main.player[this.owner].meleeEnchant;
				if (meleeEnchant == 1)
				{
					Main.npc[i].AddBuff(70, 60 * Main.rand.Next(5, 10), false);
				}
				if (meleeEnchant == 2)
				{
					Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
				}
				if (meleeEnchant == 3)
				{
					Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
				}
				if (meleeEnchant == 5)
				{
					Main.npc[i].AddBuff(69, 60 * Main.rand.Next(10, 20), false);
				}
				if (meleeEnchant == 6)
				{
					Main.npc[i].AddBuff(31, 60 * Main.rand.Next(1, 4), false);
				}
				if (meleeEnchant == 8)
				{
					Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 10), false);
				}
				if (meleeEnchant == 4)
				{
					Main.npc[i].AddBuff(72, 120, false);
				}
			}
			if (this.type == 195)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(70, 60 * Main.rand.Next(10, 21), false);
				}
				else
				{
					Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 21), false);
				}
			}
			if (this.type == 664 && Main.rand.Next(3) == 0)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 6), false);
			}
			if (this.type == 666 && Main.rand.Next(2) == 0)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 9), false);
			}
			if (this.type == 668 && Main.rand.Next(3) != 0)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(6, 9), false);
			}
			if (this.type == 567 || this.type == 568)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 11), false);
			}
			if (this.type == 598)
			{
				Main.npc[i].AddBuff(169, 900, false);
			}
			if (this.type == 636)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 611)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 612)
			{
				Main.npc[i].AddBuff(189, 300, false);
			}
			if (this.type == 711)
			{
				Main.npc[i].AddBuff(203, 600, false);
			}
			if (this.type == 706)
			{
				Main.npc[i].AddBuff(24, 480, false);
			}
			if (this.type == 614)
			{
				Main.npc[i].AddBuff(183, 900, false);
			}
			if (this.type == 585)
			{
				Main.npc[i].AddBuff(153, 60 * Main.rand.Next(5, 11), false);
			}
			if (this.type == 583)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(3, 6), false);
			}
			if (this.type == 524)
			{
				Main.npc[i].AddBuff(69, 60 * Main.rand.Next(3, 8), false);
			}
			if (this.type == 504 && Main.rand.Next(3) == 0)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(60, 180), false);
				}
				else
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(30, 120), false);
				}
			}
			if ((this.type == 694 || this.type == 695 || this.type == 696) && Main.player[this.owner].setHuntressT2 && Main.rand.Next(2) == 0)
			{
				Main.npc[i].AddBuff(204, Main.rand.Next(8, 18) * 30, false);
			}
			if (this.type == 545 && Main.rand.Next(3) == 0)
			{
				Main.npc[i].AddBuff(24, Main.rand.Next(60, 240), false);
			}
			if (this.type == 553)
			{
				Main.npc[i].AddBuff(24, Main.rand.Next(180, 480), false);
			}
			if (this.type == 552 && Main.rand.Next(3) != 0)
			{
				Main.npc[i].AddBuff(44, Main.rand.Next(120, 320), false);
			}
			if (this.type == 495)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(120, 300), false);
			}
			if (this.type == 497)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(60, 180), false);
			}
			if (this.type == 496)
			{
				Main.npc[i].AddBuff(153, Main.rand.Next(240, 480), false);
			}
			if (this.type == 476)
			{
				Main.npc[i].AddBuff(151, 30, false);
			}
			if (this.type == 523)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 30), false);
			}
			if (this.type == 478 || this.type == 480)
			{
				Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 479)
			{
				Main.npc[i].AddBuff(69, 60 * Main.rand.Next(7, 15), false);
			}
			if (this.type == 379)
			{
				Main.npc[i].AddBuff(70, 60 * Main.rand.Next(4, 7), false);
			}
			if (this.type >= 390 && this.type <= 392)
			{
				Main.npc[i].AddBuff(70, 60 * Main.rand.Next(2, 5), false);
			}
			if (this.type == 374)
			{
				Main.npc[i].AddBuff(20, 60 * Main.rand.Next(4, 7), false);
			}
			if (this.type == 376)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type >= 399 && this.type <= 402)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 295 || this.type == 296)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(8, 16), false);
			}
			if ((this.melee || this.ranged) && Main.player[this.owner].frostBurn && !this.noEnchantments)
			{
				Main.npc[i].AddBuff(44, 60 * Main.rand.Next(5, 15), false);
			}
			if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
			{
				if (Main.rand.Next(7) == 0)
				{
					Main.npc[i].AddBuff(24, 360, false);
				}
				else if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, 120, false);
				}
				else
				{
					Main.npc[i].AddBuff(24, 60, false);
				}
			}
			if (this.type == 287)
			{
				Main.npc[i].AddBuff(72, 120, false);
			}
			if (this.type == 285)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(31, 180, false);
				}
				else
				{
					Main.npc[i].AddBuff(31, 60, false);
				}
			}
			if (this.type == 2 && Main.rand.Next(3) == 0)
			{
				Main.npc[i].AddBuff(24, 180, false);
			}
			if (this.type == 172)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(44, 180, false);
				}
			}
			else if (this.type == 15)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(24, 300, false);
				}
			}
			else if (this.type == 253)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(44, 480, false);
				}
			}
			else if (this.type == 19)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.npc[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 33)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.npc[i].AddBuff(20, 420, false);
				}
			}
			else if (this.type == 34)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(24, Main.rand.Next(240, 480), false);
				}
			}
			else if (this.type == 35)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.npc[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 54)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.npc[i].AddBuff(20, 600, false);
				}
			}
			else if (this.type == 267)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(20, 3600, false);
				}
				else
				{
					Main.npc[i].AddBuff(20, 1800, false);
				}
			}
			else if (this.type == 63)
			{
				if (Main.rand.Next(5) != 0)
				{
					Main.npc[i].AddBuff(31, 60 * Main.rand.Next(2, 5), false);
				}
			}
			else if (this.type == 85 || this.type == 188)
			{
				Main.npc[i].AddBuff(24, 1200, false);
			}
			else if (this.type == 95 || this.type == 103 || this.type == 104)
			{
				Main.npc[i].AddBuff(39, 420, false);
			}
			else if (this.type == 278 || this.type == 279 || this.type == 280)
			{
				Main.npc[i].AddBuff(69, 600, false);
			}
			else if (this.type == 282 || this.type == 283)
			{
				Main.npc[i].AddBuff(70, 600, false);
			}
			if (this.type == 163 || this.type == 310)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.npc[i].AddBuff(24, 600, false);
					return;
				}
				Main.npc[i].AddBuff(24, 300, false);
				return;
			}
			else
			{
				if (this.type == 98)
				{
					Main.npc[i].AddBuff(20, 600, false);
					return;
				}
				if (this.type == 184)
				{
					Main.npc[i].AddBuff(20, 900, false);
					return;
				}
				if (this.type == 265)
				{
					Main.npc[i].AddBuff(20, 1800, false);
					return;
				}
				if (this.type == 355)
				{
					Main.npc[i].AddBuff(70, 1800, false);
				}
				return;
			}
		}

		public void StatusPvP(int i)
		{
			if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
			{
				int meleeEnchant = (int)Main.player[this.owner].meleeEnchant;
				if (meleeEnchant == 1)
				{
					Main.player[i].AddBuff(70, 60 * Main.rand.Next(5, 10), true);
				}
				if (meleeEnchant == 2)
				{
					Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
				}
				if (meleeEnchant == 3)
				{
					Main.player[i].AddBuff(24, 60 * Main.rand.Next(3, 7), true);
				}
				if (meleeEnchant == 5)
				{
					Main.player[i].AddBuff(69, 60 * Main.rand.Next(10, 20), true);
				}
				if (meleeEnchant == 6)
				{
					Main.player[i].AddBuff(31, 60 * Main.rand.Next(1, 4), true);
				}
				if (meleeEnchant == 8)
				{
					Main.player[i].AddBuff(20, 60 * Main.rand.Next(5, 10), true);
				}
			}
			if (this.type == 295 || this.type == 296)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
			}
			if (this.type == 478 || this.type == 480)
			{
				Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
			}
			if ((this.melee || this.ranged) && Main.player[this.owner].frostBurn && !this.noEnchantments)
			{
				Main.player[i].AddBuff(44, 60 * Main.rand.Next(1, 8), false);
			}
			if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(24, 360, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 240, true);
				}
				else
				{
					Main.player[i].AddBuff(24, 120, true);
				}
			}
			if (this.type == 2 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(24, 180, false);
			}
			if (this.type == 172)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(44, 240, false);
				}
			}
			else if (this.type == 15)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 300, false);
				}
			}
			else if (this.type == 253)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(44, 480, false);
				}
			}
			else if (this.type == 19)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 33)
			{
				if (Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(20, 420, false);
				}
			}
			else if (this.type == 34)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(24, 240, false);
				}
			}
			else if (this.type == 35)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(24, 180, false);
				}
			}
			else if (this.type == 54)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, 600, false);
				}
			}
			else if (this.type == 267)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(20, 3600, true);
				}
				else
				{
					Main.player[i].AddBuff(20, 1800, true);
				}
			}
			else if (this.type == 63)
			{
				if (Main.rand.Next(3) != 0)
				{
					Main.player[i].AddBuff(31, 120, true);
				}
			}
			else if (this.type == 85 || this.type == 188)
			{
				Main.player[i].AddBuff(24, 1200, false);
			}
			else if (this.type == 95 || this.type == 103 || this.type == 104)
			{
				Main.player[i].AddBuff(39, 420, true);
			}
			else if (this.type == 278 || this.type == 279 || this.type == 280)
			{
				Main.player[i].AddBuff(69, 900, true);
			}
			else if (this.type == 282 || this.type == 283)
			{
				Main.player[i].AddBuff(70, 600, true);
			}
			if (this.type == 163 || this.type == 310)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(24, 600, true);
					return;
				}
				Main.player[i].AddBuff(24, 300, true);
				return;
			}
			else
			{
				if (this.type == 265)
				{
					Main.player[i].AddBuff(20, 1200, true);
					return;
				}
				if (this.type == 355)
				{
					Main.player[i].AddBuff(70, 1800, true);
				}
				return;
			}
		}

		public void ghostHurt(int dmg, Vector2 Position)
		{
			if (!this.magic)
			{
				return;
			}
			int num = this.damage / 2;
			if (dmg / 2 <= 1)
			{
				return;
			}
			int num2 = 1000;
			if (Main.player[Main.myPlayer].ghostDmg > (float)num2)
			{
				return;
			}
			Main.player[Main.myPlayer].ghostDmg += (float)num;
			int[] array = new int[200];
			int num3 = 0;
			int num4 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.npc[i].CanBeChasedBy(this, false))
				{
					float num5 = Math.Abs(Main.npc[i].position.X + (float)(Main.npc[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.npc[i].position.Y + (float)(Main.npc[i].height / 2) - this.position.Y + (float)(this.height / 2));
					if (num5 < 800f)
					{
						if (Collision.CanHit(this.position, 1, 1, Main.npc[i].position, Main.npc[i].width, Main.npc[i].height) && num5 > 50f)
						{
							array[num4] = i;
							num4++;
						}
						else if (num4 == 0)
						{
							array[num3] = i;
							num3++;
						}
					}
				}
			}
			if (num3 == 0 && num4 == 0)
			{
				return;
			}
			int num6;
			if (num4 > 0)
			{
				num6 = array[Main.rand.Next(num4)];
			}
			else
			{
				num6 = array[Main.rand.Next(num3)];
			}
			float num7 = 4f;
			float num8 = (float)Main.rand.Next(-100, 101);
			float num9 = (float)Main.rand.Next(-100, 101);
			float num10 = (float)Math.Sqrt((double)(num8 * num8 + num9 * num9));
			num10 = num7 / num10;
			num8 *= num10;
			num9 *= num10;
			Projectile.NewProjectile(Position.X, Position.Y, num8, num9, 356, num, 0f, this.owner, (float)num6, 0f);
		}

		public void ghostHeal(int dmg, Vector2 Position)
		{
			float num = 0.2f;
			num -= (float)this.numHits * 0.05f;
			if (num <= 0f)
			{
				return;
			}
			float num2 = (float)dmg * num;
			if ((int)num2 <= 0)
			{
				return;
			}
			if (Main.player[Main.myPlayer].lifeSteal <= 0f)
			{
				return;
			}
			Main.player[Main.myPlayer].lifeSteal -= num2;
			if (!this.magic)
			{
				return;
			}
			float num3 = 0f;
			int num4 = this.owner;
			for (int i = 0; i < 255; i++)
			{
				if (Main.player[i].active && !Main.player[i].dead && ((!Main.player[this.owner].hostile && !Main.player[i].hostile) || Main.player[this.owner].team == Main.player[i].team))
				{
					float num5 = Math.Abs(Main.player[i].position.X + (float)(Main.player[i].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[i].position.Y + (float)(Main.player[i].height / 2) - this.position.Y + (float)(this.height / 2));
					if (num5 < 1200f && (float)(Main.player[i].statLifeMax2 - Main.player[i].statLife) > num3)
					{
						num3 = (float)(Main.player[i].statLifeMax2 - Main.player[i].statLife);
						num4 = i;
					}
				}
			}
			Projectile.NewProjectile(Position.X, Position.Y, 0f, 0f, 298, 0, 0f, this.owner, (float)num4, num2);
		}

		public void vampireHeal(int dmg, Vector2 Position)
		{
			float num = (float)dmg * 0.075f;
			if ((int)num == 0)
			{
				return;
			}
			if (Main.player[Main.myPlayer].lifeSteal <= 0f)
			{
				return;
			}
			Main.player[Main.myPlayer].lifeSteal -= num;
			int num2 = this.owner;
			Projectile.NewProjectile(Position.X, Position.Y, 0f, 0f, 305, 0, 0f, this.owner, (float)num2, num);
		}

		public void StatusPlayer(int i)
		{
			if (this.type == 472)
			{
				Main.player[i].AddBuff(149, Main.rand.Next(30, 150), true);
			}
			if (this.type == 467)
			{
				Main.player[i].AddBuff(24, Main.rand.Next(30, 150), true);
			}
			if (this.type == 581)
			{
				if (Main.expertMode)
				{
					Main.player[i].AddBuff(164, Main.rand.Next(300, 540), true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(164, Main.rand.Next(360, 720), true);
				}
			}
			if (this.type == 687)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(7, 11), true);
			}
			if (this.type == 258 && Main.rand.Next(2) == 0)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(5, 8), true);
			}
			if (this.type == 572 && Main.rand.Next(3) != 0)
			{
				Main.player[i].AddBuff(20, Main.rand.Next(120, 240), true);
			}
			if (this.type == 276)
			{
				if (Main.expertMode)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(120, 540), true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(180, 420), true);
				}
			}
			if (this.type == 436 && Main.rand.Next(5) >= 2)
			{
				Main.player[i].AddBuff(31, 300, true);
			}
			if (this.type == 435 && Main.rand.Next(3) != 0)
			{
				Main.player[i].AddBuff(144, 300, true);
			}
			if (this.type == 682)
			{
				Main.player[i].AddBuff(196, 300, true);
			}
			if (this.type == 437)
			{
				Main.player[i].AddBuff(144, 60 * Main.rand.Next(4, 9), true);
			}
			if (this.type == 348)
			{
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(46, 600, true);
				}
				else
				{
					Main.player[i].AddBuff(46, 300, true);
				}
				if (Main.rand.Next(3) != 0)
				{
					if (Main.rand.Next(16) == 0)
					{
						Main.player[i].AddBuff(47, 60, true);
					}
					else if (Main.rand.Next(12) == 0)
					{
						Main.player[i].AddBuff(47, 40, true);
					}
					else if (Main.rand.Next(8) == 0)
					{
						Main.player[i].AddBuff(47, 20, true);
					}
				}
			}
			if (this.type == 349)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(46, 600, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(46, 300, true);
				}
			}
			if (this.type >= 399 && this.type <= 402)
			{
				Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
			}
			if (this.type == 55)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(20, 600, true);
				}
				else if (Main.expertMode)
				{
					Main.player[i].AddBuff(20, Main.rand.Next(60, 300), true);
				}
			}
			if (this.type == 44 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(22, 900, true);
			}
			if (this.type == 293)
			{
				Main.player[i].AddBuff(80, 60 * Main.rand.Next(2, 7), true);
			}
			if (this.type == 82 && Main.rand.Next(3) == 0)
			{
				Main.player[i].AddBuff(24, 420, true);
			}
			if (this.type == 285)
			{
				if (Main.rand.Next(3) == 0)
				{
					Main.player[i].AddBuff(31, 180, true);
				}
				else
				{
					Main.player[i].AddBuff(31, 60, true);
				}
			}
			if (this.type == 96 || this.type == 101)
			{
				if (Main.rand.Next(6) == 0)
				{
					Main.player[i].AddBuff(39, 480, true);
				}
				else if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(39, 300, true);
				}
				else if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(39, 180, true);
				}
			}
			else if (this.type == 288)
			{
				Main.player[i].AddBuff(69, 900, true);
			}
			else if (this.type == 253 && Main.rand.Next(2) == 0)
			{
				Main.player[i].AddBuff(44, 600, true);
			}
			if (this.type == 291 || this.type == 292)
			{
				Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
			}
			if (this.type == 98)
			{
				Main.player[i].AddBuff(20, 600, true);
			}
			if (this.type == 184)
			{
				Main.player[i].AddBuff(20, 900, true);
			}
			if (this.type == 290)
			{
				Main.player[i].AddBuff(32, 60 * Main.rand.Next(5, 16), true);
			}
			if (this.type == 174)
			{
				Main.player[i].AddBuff(46, 1200, true);
				if (!Main.player[i].frozen && Main.rand.Next(20) == 0)
				{
					Main.player[i].AddBuff(47, 90, true);
				}
				else if (!Main.player[i].frozen && Main.expertMode && Main.rand.Next(20) == 0)
				{
					Main.player[i].AddBuff(47, 60, true);
				}
			}
			if (this.type == 257)
			{
				Main.player[i].AddBuff(46, 2700, true);
				if (!Main.player[i].frozen && Main.rand.Next(5) == 0)
				{
					Main.player[i].AddBuff(47, 60, true);
				}
			}
			if (this.type == 177)
			{
				Main.player[i].AddBuff(46, 1500, true);
				if (!Main.player[i].frozen && Main.rand.Next(10) == 0)
				{
					Main.player[i].AddBuff(47, Main.rand.Next(30, 120), true);
				}
			}
			if (this.type == 176)
			{
				if (Main.rand.Next(4) == 0)
				{
					Main.player[i].AddBuff(20, 1200, true);
					return;
				}
				if (Main.rand.Next(2) == 0)
				{
					Main.player[i].AddBuff(20, 300, true);
				}
			}
		}

		public bool CanHit(Entity ent)
		{
			return base.Distance(ent.Center) <= this.ownerHitCheckDistance && (Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, ent.position, ent.width, ent.height) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), Main.player[this.owner].gravDir * (float)(-(float)Main.player[this.owner].height) / 3f), 0, 0, ent.Center + new Vector2(0f, (float)(-(float)ent.height / 3)), 0, 0) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), Main.player[this.owner].gravDir * (float)(-(float)Main.player[this.owner].height) / 3f), 0, 0, ent.Center, 0, 0) || Collision.CanHitLine(Main.player[this.owner].Center + new Vector2((float)(Main.player[this.owner].direction * Main.player[this.owner].width / 2), 0f), 0, 0, ent.Center + new Vector2(0f, (float)(ent.height / 3)), 0, 0));
		}

		public void Damage()
		{
			if (this.type == 18 || this.type == 72 || this.type == 86 || this.type == 87 || this.aiStyle == 31 || this.aiStyle == 32 || this.type == 226 || this.type == 378 || this.type == 613 || this.type == 650 || (this.type == 434 && this.localAI[0] != 0f) || this.type == 439 || this.type == 444 || (this.type == 451 && ((int)(this.ai[0] - 1f) / this.penetrate == 0 || this.ai[1] < 5f) && this.ai[0] != 0f) || (this.type == 500 || this.type == 653 || this.type == 460 || this.type == 633 || this.type == 600 || this.type == 601 || this.type == 602 || this.type == 535 || (this.type == 631 && this.localAI[1] == 0f)) || (this.type == 651 || (this.aiStyle == 137 && this.ai[0] != 0f)) || this.aiStyle == 138)
			{
				return;
			}
			if (this.aiStyle == 93 && this.ai[0] != 0f && this.ai[0] != 2f)
			{
				return;
			}
			if (this.aiStyle == 10 && this.localAI[1] == -1f)
			{
				return;
			}
			if (Main.projPet[this.type] && this.type != 266 && this.type != 407 && this.type != 317 && (this.type != 388 || this.ai[0] != 2f) && (this.type < 390 || this.type > 392) && (this.type < 393 || this.type > 395) && (this.type != 533 || this.ai[0] < 6f || this.ai[0] > 8f) && (this.type < 625 || this.type > 628))
			{
				return;
			}
			Rectangle myRect = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
			if (this.type == 85 || this.type == 101)
			{
				int num = 30;
				myRect.X -= num;
				myRect.Y -= num;
				myRect.Width += num * 2;
				myRect.Height += num * 2;
			}
			if (this.type == 188)
			{
				int num2 = 20;
				myRect.X -= num2;
				myRect.Y -= num2;
				myRect.Width += num2 * 2;
				myRect.Height += num2 * 2;
			}
			if (this.aiStyle == 29)
			{
				int num3 = 4;
				myRect.X -= num3;
				myRect.Y -= num3;
				myRect.Width += num3 * 2;
				myRect.Height += num3 * 2;
			}
			if (this.friendly && this.owner == Main.myPlayer && !this.npcProj)
			{
				if ((this.aiStyle == 16 && this.type != 338 && this.type != 339 && this.type != 340 && this.type != 341 && (this.timeLeft <= 1 || this.type == 108 || this.type == 164)) || (this.type == 286 && this.localAI[1] == -1f))
				{
					int myPlayer = Main.myPlayer;
					if (Main.player[myPlayer].active && !Main.player[myPlayer].dead && !Main.player[myPlayer].immune && (!this.ownerHitCheck || this.CanHit(Main.player[myPlayer])))
					{
						Rectangle value = new Rectangle((int)Main.player[myPlayer].position.X, (int)Main.player[myPlayer].position.Y, Main.player[myPlayer].width, Main.player[myPlayer].height);
						if (myRect.Intersects(value))
						{
							if (Main.player[myPlayer].position.X + (float)(Main.player[myPlayer].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.direction = -1;
							}
							else
							{
								this.direction = 1;
							}
							int num4 = Main.DamageVar((float)this.damage);
							this.StatusPlayer(myPlayer);
							Main.player[myPlayer].Hurt(PlayerDeathReason.ByProjectile(this.owner, this.whoAmI), num4, this.direction, true, false, false, -1);
							if (this.trap)
							{
								Main.player[myPlayer].trapDebuffSource = true;
								if (Main.player[myPlayer].dead)
								{
									AchievementsHelper.HandleSpecialEvent(Main.player[myPlayer], 4);
								}
							}
						}
					}
				}
				this.CutTiles();
			}
			if (this.owner == Main.myPlayer)
			{
				if (this.damage > 0)
				{
					for (int i = 0; i < 200; i++)
					{
						bool flag = (!this.usesLocalNPCImmunity && !this.usesIDStaticNPCImmunity) || (this.usesLocalNPCImmunity && this.localNPCImmunity[i] == 0) || (this.usesIDStaticNPCImmunity && Projectile.perIDStaticNPCImmunity[this.type][i] == 0);
						if (Main.npc[i].active && !Main.npc[i].dontTakeDamage && flag && ((this.friendly && (!Main.npc[i].friendly || this.type == 318 || (Main.npc[i].type == 22 && this.owner < 255 && Main.player[this.owner].killGuide) || (Main.npc[i].type == 54 && this.owner < 255 && Main.player[this.owner].killClothier))) || (this.hostile && Main.npc[i].friendly && !Main.npc[i].dontTakeDamageFromHostiles)) && (this.owner < 0 || Main.npc[i].immune[this.owner] == 0 || this.maxPenetrate == 1))
						{
							bool flag2 = false;
							if (this.type == 11 && (Main.npc[i].type == 47 || Main.npc[i].type == 57))
							{
								flag2 = true;
							}
							else if (this.type == 31 && Main.npc[i].type == 69)
							{
								flag2 = true;
							}
							else if (Main.npc[i].trapImmune && this.trap)
							{
								flag2 = true;
							}
							else if (Main.npc[i].immortal && this.npcProj)
							{
								flag2 = true;
							}
							if (!flag2 && (Main.npc[i].noTileCollide || !this.ownerHitCheck || this.CanHit(Main.npc[i])))
							{
								bool flag3;
								if (Main.npc[i].type == 414)
								{
									Rectangle rect = Main.npc[i].getRect();
									int num5 = 8;
									rect.X -= num5;
									rect.Y -= num5;
									rect.Width += num5 * 2;
									rect.Height += num5 * 2;
									flag3 = this.Colliding(myRect, rect);
								}
								else
								{
									flag3 = this.Colliding(myRect, Main.npc[i].getRect());
								}
								if (flag3)
								{
									if (this.type == 604)
									{
										Main.player[this.owner].Counterweight(Main.npc[i].Center, this.damage, this.knockBack);
									}
									if (Main.npc[i].reflectingProjectiles && this.CanReflect())
									{
										Main.npc[i].ReflectProjectile(this.whoAmI);
										return;
									}
									int num6 = this.damage;
									if (this.type > 0 && this.type < 714 && ProjectileID.Sets.StardustDragon[this.type])
									{
										float num7 = (this.scale - 1f) * 100f;
										num7 = Utils.Clamp<float>(num7, 0f, 50f);
										num6 = (int)((float)num6 * (1f + num7 * 0.23f));
									}
									int num8 = Main.DamageVar((float)num6);
									bool flag4 = !this.npcProj && !this.trap;
									if (this.trap && NPCID.Sets.BelongsToInvasionOldOnesArmy[Main.npc[i].type])
									{
										num8 /= 2;
									}
									if (this.type == 604)
									{
										this.friendly = false;
										this.ai[1] = 1000f;
									}
									if ((this.type == 400 || this.type == 401 || this.type == 402) && Main.npc[i].type >= 13 && Main.npc[i].type <= 15)
									{
										num8 = (int)((double)num8 * 0.65);
										if (this.penetrate > 1)
										{
											this.penetrate--;
										}
									}
									if (this.type == 710)
									{
										Point origin = base.Center.ToTileCoordinates();
										Point point;
										if (!WorldUtils.Find(origin, Searches.Chain(new Searches.Down(12), new GenCondition[]
										{
											new Conditions.IsSolid()
										}), out point))
										{
											num8 = (int)((float)num8 * 1.5f);
										}
									}
									if (this.type == 504)
									{
										float num9 = (60f - this.ai[0]) / 2f;
										this.ai[0] += num9;
									}
									if (this.aiStyle == 3 && this.type != 301)
									{
										if (this.ai[0] == 0f)
										{
											this.velocity.X = -this.velocity.X;
											this.velocity.Y = -this.velocity.Y;
											this.netUpdate = true;
										}
										this.ai[0] = 1f;
									}
									else if (this.type == 582)
									{
										if (this.ai[0] != 0f)
										{
											this.direction *= -1;
										}
									}
									else if (this.type == 612)
									{
										this.direction = Main.player[this.owner].direction;
									}
									else if (this.type == 624)
									{
										float num10 = 1f;
										if (Main.npc[i].knockBackResist > 0f)
										{
											num10 = 1f / Main.npc[i].knockBackResist;
										}
										this.knockBack = 4f * num10;
										if (Main.npc[i].Center.X < base.Center.X)
										{
											this.direction = 1;
										}
										else
										{
											this.direction = -1;
										}
									}
									else if (this.aiStyle == 16)
									{
										if (this.timeLeft > 3)
										{
											this.timeLeft = 3;
										}
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									else if (this.aiStyle == 68)
									{
										if (this.timeLeft > 3)
										{
											this.timeLeft = 3;
										}
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									else if (this.aiStyle == 50)
									{
										if (Main.npc[i].position.X + (float)(Main.npc[i].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
									}
									if (this.type == 509)
									{
										int num11 = Main.rand.Next(2, 6);
										for (int j = 0; j < num11; j++)
										{
											Vector2 vector = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
											vector += this.velocity * 3f;
											vector.Normalize();
											vector *= (float)Main.rand.Next(35, 81) * 0.1f;
											int num12 = (int)((double)this.damage * 0.5);
											Projectile.NewProjectile(base.Center.X, base.Center.Y, vector.X, vector.Y, 504, num12, this.knockBack * 0.2f, this.owner, 0f, 0f);
										}
									}
									if (this.type == 598 || this.type == 636 || this.type == 614)
									{
										this.ai[0] = 1f;
										this.ai[1] = (float)i;
										this.velocity = (Main.npc[i].Center - base.Center) * 0.75f;
										this.netUpdate = true;
									}
									if (this.type >= 511 && this.type <= 513)
									{
										this.timeLeft = 0;
									}
									if (this.type == 659)
									{
										this.timeLeft = 0;
									}
									if (this.type == 524)
									{
										this.netUpdate = true;
										this.ai[0] += 50f;
									}
									if ((this.type == 688 || this.type == 689 || this.type == 690) && Main.npc[i].type != 68 && Main.npc[i].defense < 999)
									{
										num8 += Main.npc[i].defense / 2;
									}
									if (this.aiStyle == 39)
									{
										if (this.ai[1] == 0f)
										{
											this.ai[1] = (float)(i + 1);
											this.netUpdate = true;
										}
										if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2))
										{
											this.direction = 1;
										}
										else
										{
											this.direction = -1;
										}
									}
									if (this.type == 41 && this.timeLeft > 1)
									{
										this.timeLeft = 1;
									}
									bool flag5 = false;
									if (flag4)
									{
										if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
										{
											flag5 = true;
										}
										if (this.ranged && Main.rand.Next(1, 101) <= Main.player[this.owner].rangedCrit)
										{
											flag5 = true;
										}
										if (this.magic && Main.rand.Next(1, 101) <= Main.player[this.owner].magicCrit)
										{
											flag5 = true;
										}
										if (this.thrown && Main.rand.Next(1, 101) <= Main.player[this.owner].thrownCrit)
										{
											flag5 = true;
										}
										switch (this.type)
										{
										case 688:
										case 689:
										case 690:
											if (Main.player[this.owner].setMonkT3)
											{
												if (Main.rand.Next(4) == 0)
												{
													flag5 = true;
												}
											}
											else if (Main.player[this.owner].setMonkT2 && Main.rand.Next(6) == 0)
											{
												flag5 = true;
											}
											break;
										}
									}
									if (this.aiStyle == 99)
									{
										Main.player[this.owner].Counterweight(Main.npc[i].Center, this.damage, this.knockBack);
										if (Main.npc[i].Center.X < Main.player[this.owner].Center.X)
										{
											this.direction = -1;
										}
										else
										{
											this.direction = 1;
										}
										if (this.ai[0] >= 0f)
										{
											Vector2 value2 = base.Center - Main.npc[i].Center;
											value2.Normalize();
											float scaleFactor = 16f;
											this.velocity *= -0.5f;
											this.velocity += value2 * scaleFactor;
											this.netUpdate = true;
											this.localAI[0] += 20f;
											if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height))
											{
												this.localAI[0] += 40f;
												num8 = (int)((double)num8 * 0.75);
											}
										}
									}
									if (this.aiStyle == 93)
									{
										if (this.ai[0] == 0f)
										{
											this.ai[1] = 0f;
											int num13 = -i - 1;
											this.ai[0] = (float)num13;
											this.velocity = Main.npc[i].Center - base.Center;
										}
										if (this.ai[0] == 2f)
										{
											num8 = (int)((double)num8 * 1.35);
										}
										else
										{
											num8 = (int)((double)num8 * 0.15);
										}
									}
									if (flag4)
									{
										int num14 = Item.NPCtoBanner(Main.npc[i].BannerID());
										if (num14 >= 0)
										{
											Main.player[Main.myPlayer].lastCreatureHit = num14;
										}
									}
									if (Main.netMode != 2 && flag4)
									{
										int num15 = Item.NPCtoBanner(Main.npc[i].BannerID());
										if (num15 > 0 && Main.player[this.owner].NPCBannerBuff[num15])
										{
											if (Main.expertMode)
											{
												num8 = (int)((float)num8 * ItemID.Sets.BannerStrength[Item.BannerToItem(num15)].ExpertDamageDealt);
											}
											else
											{
												num8 = (int)((float)num8 * ItemID.Sets.BannerStrength[Item.BannerToItem(num15)].NormalDamageDealt);
											}
										}
									}
									if (Main.expertMode)
									{
										if ((this.type == 30 || this.type == 28 || this.type == 29 || this.type == 470 || this.type == 517 || this.type == 588 || this.type == 637) && Main.npc[i].type >= 13 && Main.npc[i].type <= 15)
										{
											num8 /= 5;
										}
										if (this.type == 280 && ((Main.npc[i].type >= 134 && Main.npc[i].type <= 136) || Main.npc[i].type == 139))
										{
											num8 = (int)((double)num8 * 0.75);
										}
									}
									if (Main.netMode != 2 && Main.npc[i].type == 439 && this.type >= 0 && this.type <= 714 && ProjectileID.Sets.Homing[this.type])
									{
										num8 = (int)((float)num8 * 0.75f);
									}
									if (this.type == 497 && this.penetrate != 1)
									{
										this.ai[0] = 25f;
										float scaleFactor2 = this.velocity.Length();
										Vector2 value3 = Main.npc[i].Center - base.Center;
										value3.Normalize();
										value3 *= scaleFactor2;
										this.velocity = -value3 * 0.9f;
										this.netUpdate = true;
									}
									if (this.type == 323 && (Main.npc[i].type == 158 || Main.npc[i].type == 159))
									{
										num8 *= 10;
									}
									if (this.type == 294)
									{
										this.damage = (int)((double)this.damage * 0.8);
									}
									if (this.type == 477 && this.penetrate > 1)
									{
										int[] array = new int[10];
										int num16 = 0;
										int num17 = 700;
										int num18 = 20;
										for (int k = 0; k < 200; k++)
										{
											if (k != i && Main.npc[k].CanBeChasedBy(this, false))
											{
												float num19 = (base.Center - Main.npc[k].Center).Length();
												if (num19 > (float)num18 && num19 < (float)num17 && Collision.CanHitLine(base.Center, 1, 1, Main.npc[k].Center, 1, 1))
												{
													array[num16] = k;
													num16++;
													if (num16 >= 9)
													{
														break;
													}
												}
											}
										}
										if (num16 > 0)
										{
											num16 = Main.rand.Next(num16);
											Vector2 value4 = Main.npc[array[num16]].Center - base.Center;
											float scaleFactor3 = this.velocity.Length();
											value4.Normalize();
											this.velocity = value4 * scaleFactor3;
											this.netUpdate = true;
										}
									}
									if (this.type == 261)
									{
										float num20 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
										if (num20 < 1f)
										{
											num20 = 1f;
										}
										num8 = (int)((float)num8 * num20 / 8f);
									}
									if (flag4 && this.melee && Main.player[this.owner].parryDamageBuff)
									{
										num8 *= 5;
										Main.player[this.owner].parryDamageBuff = false;
										Main.player[this.owner].ClearBuff(198);
									}
									this.StatusNPC(i);
									if (flag4 && this.type != 221 && this.type != 227 && this.type != 614)
									{
										Main.player[this.owner].OnHit(Main.npc[i].Center.X, Main.npc[i].Center.Y, Main.npc[i]);
									}
									if (this.type == 317)
									{
										this.ai[1] = -1f;
										this.netUpdate = true;
									}
									int hitDirection = this.direction;
									if (this.type == 697 || this.type == 699 || this.type == 707 || this.type == 708)
									{
										hitDirection = ((Main.player[this.owner].Center.X < Main.npc[i].Center.X) ? 1 : -1);
									}
									if (flag4 && !this.hostile && Main.player[this.owner].armorPenetration > 0)
									{
										num8 += Main.npc[i].checkArmorPenetration(Main.player[this.owner].armorPenetration);
									}
									int num21;
									if (flag4)
									{
										num21 = (int)Main.npc[i].StrikeNPC(num8, this.knockBack, hitDirection, flag5, false, false);
									}
									else
									{
										num21 = (int)Main.npc[i].StrikeNPCNoInteraction(num8, this.knockBack, hitDirection, flag5, false, false);
									}
									if (flag4 && Main.player[this.owner].accDreamCatcher)
									{
										Main.player[this.owner].addDPS(num21);
									}
									if (flag4 && !Main.npc[i].immortal)
									{
										if (this.type == 304 && num21 > 0 && Main.npc[i].lifeMax > 5 && !Main.player[this.owner].moonLeech)
										{
											this.vampireHeal(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
										}
										if (Main.npc[i].value > 0f && Main.player[this.owner].coins && Main.rand.Next(5) == 0)
										{
											int num22 = 71;
											if (Main.rand.Next(10) == 0)
											{
												num22 = 72;
											}
											if (Main.rand.Next(100) == 0)
											{
												num22 = 73;
											}
											int num23 = Item.NewItem((int)Main.npc[i].position.X, (int)Main.npc[i].position.Y, Main.npc[i].width, Main.npc[i].height, num22, 1, false, 0, false, false);
											Main.item[num23].stack = Main.rand.Next(1, 11);
											Main.item[num23].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
											Main.item[num23].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
											if (Main.netMode == 1)
											{
												NetMessage.SendData(21, -1, -1, "", num23, 0f, 0f, 0f, 0, 0, 0);
											}
										}
										if (num21 > 0 && Main.npc[i].lifeMax > 5 && this.friendly && !this.hostile && this.aiStyle != 59)
										{
											if (Main.npc[i].canGhostHeal)
											{
												if (Main.player[this.owner].ghostHeal && !Main.player[this.owner].moonLeech)
												{
													this.ghostHeal(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
												}
												if (Main.player[this.owner].ghostHurt)
												{
													this.ghostHurt(num21, new Vector2(Main.npc[i].Center.X, Main.npc[i].Center.Y));
												}
												if (Main.player[this.owner].setNebula && Main.player[this.owner].nebulaCD == 0 && Main.rand.Next(3) == 0)
												{
													Main.player[this.owner].nebulaCD = 30;
													int num24 = Utils.SelectRandom<int>(Main.rand, new int[]
													{
														3453,
														3454,
														3455
													});
													int num25 = Item.NewItem((int)Main.npc[i].position.X, (int)Main.npc[i].position.Y, Main.npc[i].width, Main.npc[i].height, num24, 1, false, 0, false, false);
													Main.item[num25].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
													Main.item[num25].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
													if (Main.netMode == 1)
													{
														NetMessage.SendData(21, -1, -1, "", num25, 0f, 0f, 0f, 0, 0, 0);
													}
												}
											}
											if (this.melee && Main.player[this.owner].beetleOffense && !Main.npc[i].immortal)
											{
												if (Main.player[this.owner].beetleOrbs == 0)
												{
													Main.player[this.owner].beetleCounter += (float)(num21 * 3);
												}
												else if (Main.player[this.owner].beetleOrbs == 1)
												{
													Main.player[this.owner].beetleCounter += (float)(num21 * 2);
												}
												else
												{
													Main.player[this.owner].beetleCounter += (float)num21;
												}
												Main.player[this.owner].beetleCountdown = 0;
											}
											if (this.arrow && this.type != 631 && Main.player[this.owner].phantasmTime > 0)
											{
												Vector2 source = Main.player[this.owner].position + Main.player[this.owner].Size * Utils.RandomVector2(Main.rand, 0f, 1f);
												Vector2 vector2 = Main.npc[i].DirectionFrom(source) * 6f;
												int num26 = (int)((float)this.damage * 0.3f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 0f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 15f);
												Projectile.NewProjectile(source.X, source.Y, vector2.X, vector2.Y, 631, num26, 0f, this.owner, (float)i, 30f);
											}
										}
									}
									if (flag4 && this.melee && Main.player[this.owner].meleeEnchant == 7)
									{
										Projectile.NewProjectile(Main.npc[i].Center.X, Main.npc[i].Center.Y, Main.npc[i].velocity.X, Main.npc[i].velocity.Y, 289, 0, 0f, this.owner, 0f, 0f);
									}
									if (Main.netMode != 0)
									{
										if (flag5)
										{
											NetMessage.SendData(28, -1, -1, "", i, (float)num8, this.knockBack, (float)this.direction, 1, 0, 0);
										}
										else
										{
											NetMessage.SendData(28, -1, -1, "", i, (float)num8, this.knockBack, (float)this.direction, 0, 0, 0);
										}
									}
									if (this.type >= 390 && this.type <= 392)
									{
										this.localAI[1] = 20f;
									}
									if (this.usesIDStaticNPCImmunity)
									{
										Main.npc[i].immune[this.owner] = 0;
										Projectile.perIDStaticNPCImmunity[this.type][i] = this.idStaticNPCHitCooldown;
									}
									else if (this.type == 434)
									{
										this.numUpdates = 0;
									}
									else if (this.type == 598 || this.type == 636 || this.type == 614)
									{
										this.damage = 0;
										int num27 = 6;
										if (this.type == 614)
										{
											num27 = 10;
										}
										if (this.type == 636)
										{
											num27 = 8;
										}
										Point[] array2 = new Point[num27];
										int num28 = 0;
										for (int l = 0; l < 1000; l++)
										{
											if (l != this.whoAmI && Main.projectile[l].active && Main.projectile[l].owner == Main.myPlayer && Main.projectile[l].type == this.type && Main.projectile[l].ai[0] == 1f && Main.projectile[l].ai[1] == (float)i)
											{
												array2[num28++] = new Point(l, Main.projectile[l].timeLeft);
												if (num28 >= array2.Length)
												{
													break;
												}
											}
										}
										if (num28 >= array2.Length)
										{
											int num29 = 0;
											for (int m = 1; m < array2.Length; m++)
											{
												if (array2[m].Y < array2[num29].Y)
												{
													num29 = m;
												}
											}
											Main.projectile[array2[num29].X].Kill();
										}
									}
									else if (this.type == 632)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 514)
									{
										Main.npc[i].immune[this.owner] = 1;
									}
									else if (this.type == 611)
									{
										if (this.localAI[1] <= 0f)
										{
											Projectile.NewProjectile(Main.npc[i].Center.X, Main.npc[i].Center.Y, 0f, 0f, 612, this.damage, 10f, this.owner, 0f, 0.85f + Main.rand.NextFloat() * 1.15f);
										}
										this.localAI[1] = 4f;
									}
									else if (this.type == 595)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type >= 625 && this.type <= 628)
									{
										Main.npc[i].immune[this.owner] = 6;
									}
									else if (this.type == 286)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 514)
									{
										Main.npc[i].immune[this.owner] = 3;
									}
									else if (this.type == 443)
									{
										Main.npc[i].immune[this.owner] = 8;
									}
									else if (this.type >= 424 && this.type <= 426)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 634 || this.type == 635)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 659)
									{
										Main.npc[i].immune[this.owner] = 5;
									}
									else if (this.type == 246)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 249)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 190)
									{
										Main.npc[i].immune[this.owner] = 8;
									}
									else if (this.type == 409)
									{
										Main.npc[i].immune[this.owner] = 6;
									}
									else if (this.type == 407)
									{
										Main.npc[i].immune[this.owner] = 20;
									}
									else if (this.type == 311)
									{
										Main.npc[i].immune[this.owner] = 7;
									}
									else if (this.type == 582)
									{
										Main.npc[i].immune[this.owner] = 7;
										if (this.ai[0] != 1f)
										{
											this.ai[0] = 1f;
											this.netUpdate = true;
										}
									}
									else
									{
										if (this.type == 451)
										{
											if (this.ai[0] == 0f)
											{
												this.ai[0] += (float)this.penetrate;
											}
											else
											{
												this.ai[0] -= (float)(this.penetrate + 1);
											}
											this.ai[1] = 0f;
											this.netUpdate = true;
											break;
										}
										if (this.type == 661)
										{
											this.localNPCImmunity[i] = 8;
											Main.npc[i].immune[this.owner] = 0;
										}
										else if (this.usesLocalNPCImmunity && this.localNPCHitCooldown != -2)
										{
											Main.npc[i].immune[this.owner] = 0;
											this.localNPCImmunity[i] = this.localNPCHitCooldown;
										}
										else if (this.penetrate != 1)
										{
											Main.npc[i].immune[this.owner] = 10;
										}
									}
									if (this.type == 710)
									{
										this.BetsySharpnel(i);
									}
									if (this.penetrate > 0 && this.type != 317)
									{
										if (this.type == 357)
										{
											this.damage = (int)((double)this.damage * 0.9);
										}
										this.penetrate--;
										if (this.penetrate == 0)
										{
											break;
										}
									}
									if (this.aiStyle == 7)
									{
										this.ai[0] = 1f;
										this.damage = 0;
										this.netUpdate = true;
									}
									else if (this.aiStyle == 13)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
									}
									else if (this.aiStyle == 69)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
									}
									else if (this.type == 607)
									{
										this.ai[0] = 1f;
										this.netUpdate = true;
										this.friendly = false;
									}
									else if (this.type == 638 || this.type == 639 || this.type == 640)
									{
										this.localNPCImmunity[i] = -1;
										Main.npc[i].immune[this.owner] = 0;
										this.damage = (int)((double)this.damage * 0.96);
									}
									else if (this.type == 617)
									{
										this.localNPCImmunity[i] = 8;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 656)
									{
										this.localNPCImmunity[i] = 8;
										Main.npc[i].immune[this.owner] = 0;
										this.localAI[0] += 1f;
									}
									else if (this.type == 618)
									{
										this.localNPCImmunity[i] = 20;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 642)
									{
										this.localNPCImmunity[i] = 10;
										Main.npc[i].immune[this.owner] = 0;
									}
									else if (this.type == 611 || this.type == 612)
									{
										this.localNPCImmunity[i] = 6;
										Main.npc[i].immune[this.owner] = 4;
									}
									else if (this.type == 645)
									{
										this.localNPCImmunity[i] = -1;
										Main.npc[i].immune[this.owner] = 0;
										if (this.ai[1] != -1f)
										{
											this.ai[0] = 0f;
											this.ai[1] = -1f;
											this.netUpdate = true;
										}
									}
									this.numHits++;
									if (this.type == 697)
									{
										if (this.ai[0] >= 42f)
										{
											this.localAI[1] = 1f;
										}
									}
									else if (this.type == 699)
									{
										this.SummonMonkGhast();
									}
									else if (this.type == 706)
									{
										this.damage = (int)((float)this.damage * 0.95f);
									}
								}
							}
						}
					}
				}
				if (this.damage > 0 && Main.player[Main.myPlayer].hostile)
				{
					for (int n = 0; n < 255; n++)
					{
						if (n != this.owner && Main.player[n].active && !Main.player[n].dead && !Main.player[n].immune && Main.player[n].hostile && this.playerImmune[n] <= 0 && (Main.player[Main.myPlayer].team == 0 || Main.player[Main.myPlayer].team != Main.player[n].team) && (!this.ownerHitCheck || this.CanHit(Main.player[n])))
						{
							bool flag6 = this.Colliding(myRect, Main.player[n].getRect());
							if (flag6)
							{
								if (this.aiStyle == 3)
								{
									if (this.ai[0] == 0f)
									{
										this.velocity.X = -this.velocity.X;
										this.velocity.Y = -this.velocity.Y;
										this.netUpdate = true;
									}
									this.ai[0] = 1f;
								}
								else if (this.aiStyle == 16)
								{
									if (this.timeLeft > 3)
									{
										this.timeLeft = 3;
									}
									if (Main.player[n].position.X + (float)(Main.player[n].width / 2) < this.position.X + (float)(this.width / 2))
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
								}
								else if (this.aiStyle == 68)
								{
									if (this.timeLeft > 3)
									{
										this.timeLeft = 3;
									}
									if (Main.player[n].position.X + (float)(Main.player[n].width / 2) < this.position.X + (float)(this.width / 2))
									{
										this.direction = -1;
									}
									else
									{
										this.direction = 1;
									}
								}
								PlayerDeathReason playerDeathReason = PlayerDeathReason.ByProjectile(this.owner, this.whoAmI);
								if (this.type == 41 && this.timeLeft > 1)
								{
									this.timeLeft = 1;
								}
								bool flag7 = false;
								if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
								{
									flag7 = true;
								}
								int num30 = Main.DamageVar((float)this.damage);
								if (!Main.player[n].immune)
								{
									this.StatusPvP(n);
								}
								if (this.type != 221 && this.type != 227 && this.type != 614)
								{
									Main.player[this.owner].OnHit(Main.player[n].Center.X, Main.player[n].Center.Y, Main.player[n]);
								}
								int num31 = (int)Main.player[n].Hurt(playerDeathReason, num30, this.direction, true, false, flag7, -1);
								if (num31 > 0 && Main.player[this.owner].ghostHeal && this.friendly && !this.hostile)
								{
									this.ghostHeal(num31, new Vector2(Main.player[n].Center.X, Main.player[n].Center.Y));
								}
								if (this.type == 304 && num31 > 0)
								{
									this.vampireHeal(num31, new Vector2(Main.player[n].Center.X, Main.player[n].Center.Y));
								}
								if (this.melee && Main.player[this.owner].meleeEnchant == 7)
								{
									Projectile.NewProjectile(Main.player[n].Center.X, Main.player[n].Center.Y, Main.player[n].velocity.X, Main.player[n].velocity.Y, 289, 0, 0f, this.owner, 0f, 0f);
								}
								if (Main.netMode != 0)
								{
									NetMessage.SendPlayerHurt(n, playerDeathReason, num30, this.direction, flag7, true, 0, -1, -1);
								}
								this.playerImmune[n] = 40;
								if (this.penetrate > 0)
								{
									this.penetrate--;
									if (this.penetrate == 0)
									{
										break;
									}
								}
								if (this.aiStyle == 7)
								{
									this.ai[0] = 1f;
									this.damage = 0;
									this.netUpdate = true;
								}
								else if (this.aiStyle == 13)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
								}
								else if (this.aiStyle == 69)
								{
									this.ai[0] = 1f;
									this.netUpdate = true;
								}
							}
						}
					}
				}
			}
			if (this.type == 10 && Main.netMode != 1)
			{
				for (int num32 = 0; num32 < 200; num32++)
				{
					if (Main.npc[num32].active && Main.npc[num32].type == 534)
					{
						Rectangle value5 = new Rectangle((int)Main.npc[num32].position.X, (int)Main.npc[num32].position.Y, Main.npc[num32].width, Main.npc[num32].height);
						if (myRect.Intersects(value5))
						{
							Main.npc[num32].Transform(441);
						}
					}
				}
			}
			if (this.type == 11 && Main.netMode != 1)
			{
				for (int num33 = 0; num33 < 200; num33++)
				{
					if (Main.npc[num33].active)
					{
						if (Main.npc[num33].type == 46 || Main.npc[num33].type == 303)
						{
							Rectangle value6 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value6))
							{
								Main.npc[num33].Transform(47);
							}
						}
						else if (Main.npc[num33].type == 55)
						{
							Rectangle value7 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value7))
							{
								Main.npc[num33].Transform(57);
							}
						}
						else if (Main.npc[num33].type == 148 || Main.npc[num33].type == 149)
						{
							Rectangle value8 = new Rectangle((int)Main.npc[num33].position.X, (int)Main.npc[num33].position.Y, Main.npc[num33].width, Main.npc[num33].height);
							if (myRect.Intersects(value8))
							{
								Main.npc[num33].Transform(168);
							}
						}
					}
				}
			}
			if (this.type == 463 && Main.netMode != 1)
			{
				for (int num34 = 0; num34 < 200; num34++)
				{
					if (Main.npc[num34].active)
					{
						if (Main.npc[num34].type == 46 || Main.npc[num34].type == 303)
						{
							Rectangle value9 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value9))
							{
								Main.npc[num34].Transform(464);
							}
						}
						else if (Main.npc[num34].type == 55)
						{
							Rectangle value10 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value10))
							{
								Main.npc[num34].Transform(465);
							}
						}
						else if (Main.npc[num34].type == 148 || Main.npc[num34].type == 149)
						{
							Rectangle value11 = new Rectangle((int)Main.npc[num34].position.X, (int)Main.npc[num34].position.Y, Main.npc[num34].width, Main.npc[num34].height);
							if (myRect.Intersects(value11))
							{
								Main.npc[num34].Transform(470);
							}
						}
					}
				}
			}
			if (Main.netMode != 2 && this.hostile && Main.myPlayer < 255 && this.damage > 0)
			{
				int num35 = -1;
				if (this.type == 455 || this.type == 452 || this.type == 454 || this.type == 462)
				{
					num35 = 1;
				}
				int myPlayer2 = Main.myPlayer;
				if (Main.player[myPlayer2].active && !Main.player[myPlayer2].dead && (!Main.player[myPlayer2].immune || num35 != -1))
				{
					bool flag8 = this.Colliding(myRect, Main.player[myPlayer2].getRect());
					if (flag8)
					{
						int hitDirection2 = this.direction;
						if (Main.player[myPlayer2].position.X + (float)(Main.player[myPlayer2].width / 2) < this.position.X + (float)(this.width / 2))
						{
							hitDirection2 = -1;
						}
						else
						{
							hitDirection2 = 1;
						}
						if (!Main.player[myPlayer2].CanParryAgainst(Main.player[myPlayer2].Hitbox, base.Hitbox, this.velocity))
						{
							int num36 = Main.DamageVar((float)this.damage);
							if (!Main.player[myPlayer2].immune)
							{
								this.StatusPlayer(myPlayer2);
							}
							if (Main.player[myPlayer2].resistCold && this.coldDamage)
							{
								num36 = (int)((float)num36 * 0.7f);
							}
							if (Main.expertMode)
							{
								num36 = (int)((float)num36 * Main.expertDamage);
							}
							Main.player[myPlayer2].Hurt(PlayerDeathReason.ByProjectile(-1, this.whoAmI), num36 * 2, hitDirection2, false, false, false, num35);
							if (this.trap)
							{
								Main.player[myPlayer2].trapDebuffSource = true;
								if (Main.player[myPlayer2].dead)
								{
									AchievementsHelper.HandleSpecialEvent(Main.player[myPlayer2], 4);
								}
							}
						}
						bool flag9 = true;
						if (flag9)
						{
							if (this.type == 435 || this.type == 682)
							{
								this.penetrate--;
							}
							if (this.type == 436)
							{
								this.penetrate--;
							}
							if (this.type == 681)
							{
								this.timeLeft = 0;
							}
							if (this.type == 437)
							{
								this.penetrate--;
							}
						}
					}
				}
			}
		}

		private void SummonMonkGhast()
		{
			if (this.localAI[0] > 0f)
			{
				return;
			}
			this.localAI[0] = 1000f;
			List<NPC> list = new List<NPC>();
			for (int i = 0; i < 200; i++)
			{
				NPC nPC = Main.npc[i];
				if (nPC.CanBeChasedBy(this, false) && base.Distance(nPC.Center) < 800f)
				{
					list.Add(nPC);
				}
			}
			Vector2 center = base.Center;
			Vector2 value = Vector2.Zero;
			if (list.Count > 0)
			{
				NPC nPC2 = list[Main.rand.Next(list.Count)];
				center = nPC2.Center;
				value = nPC2.velocity;
			}
			int num = Main.rand.Next(2) * 2 - 1;
			Vector2 vector = new Vector2((float)num * (4f + (float)Main.rand.Next(3)), 0f);
			Vector2 vector2 = center + new Vector2((float)(-(float)num * 120), 0f);
			vector += (center + value * 15f - vector2).SafeNormalize(Vector2.Zero) * 2f;
			Projectile.NewProjectile(vector2, vector, 700, this.damage, 0f, this.owner, 0f, 0f);
		}

		private void CutTiles()
		{
			if (this.CanCutTiles())
			{
				int num = (int)(this.position.X / 16f);
				int num2 = (int)((this.position.X + (float)this.width) / 16f) + 1;
				int num3 = (int)(this.position.Y / 16f);
				int num4 = (int)((this.position.Y + (float)this.height) / 16f) + 1;
				if (num < 0)
				{
					num = 0;
				}
				if (num2 > Main.maxTilesX)
				{
					num2 = Main.maxTilesX;
				}
				if (num3 < 0)
				{
					num3 = 0;
				}
				if (num4 > Main.maxTilesY)
				{
					num4 = Main.maxTilesY;
				}
				AchievementsHelper.CurrentlyMining = true;
				for (int i = num; i < num2; i++)
				{
					for (int j = num3; j < num4; j++)
					{
						if (Main.tile[i, j] != null && Main.tileCut[(int)Main.tile[i, j].type] && WorldGen.CanCutTile(i, j, TileCuttingContext.AttackProjectile))
						{
							WorldGen.KillTile(i, j, false, false, false);
							if (Main.netMode != 0)
							{
								NetMessage.SendData(17, -1, -1, "", 0, (float)i, (float)j, 0f, 0, 0, 0);
							}
						}
					}
				}
				if (this.type == 461 || this.type == 632 || this.type == 642)
				{
					DelegateMethods.tilecut_0 = TileCuttingContext.AttackProjectile;
					Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
				}
				else if (this.type == 611)
				{
					DelegateMethods.tilecut_0 = TileCuttingContext.AttackProjectile;
					Utils.PlotTileLine(base.Center, base.Center + this.velocity, (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
				}
				else if (this.type == 697 || this.type == 707)
				{
					float num5 = 40f;
					if (this.type == 707)
					{
						num5 = 60f;
					}
					float f = this.rotation - 0.7853982f * (float)Math.Sign(this.velocity.X);
					DelegateMethods.tilecut_0 = TileCuttingContext.AttackProjectile;
					Utils.PlotTileLine(base.Center + f.ToRotationVector2() * -num5, base.Center + f.ToRotationVector2() * num5, (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
				}
				AchievementsHelper.CurrentlyMining = false;
			}
		}

		private bool CanCutTiles()
		{
			return this.aiStyle != 45 && this.aiStyle != 137 && this.aiStyle != 92 && this.aiStyle != 105 && this.aiStyle != 106 && this.type != 463 && this.type != 69 && this.type != 70 && this.type != 621 && this.type != 10 && this.type != 11 && this.type != 379 && this.type != 407 && this.type != 476 && this.type != 623 && (this.type < 625 || this.type > 628);
		}

		public bool Colliding(Rectangle myRect, Rectangle targetRect)
		{
			if (this.type == 598 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 614 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 636 && targetRect.Width > 8 && targetRect.Height > 8)
			{
				targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
			}
			else if (this.type == 607)
			{
				myRect.X += (int)this.velocity.X;
				myRect.Y += (int)this.velocity.Y;
			}
			else if (this.type == 661)
			{
				if (Vector2.Distance(myRect.Center.ToVector2(), targetRect.Center.ToVector2()) > 500f || !Collision.CanHitLine(myRect.Center.ToVector2(), 0, 0, targetRect.Center.ToVector2(), 0, 0))
				{
					return false;
				}
			}
			else if (this.aiStyle == 137)
			{
				if (myRect.Intersects(targetRect) && targetRect.Distance(base.Center) < (float)(this.height / 2 - 20))
				{
					bool flag = this.AI_137_CanHit(targetRect.Center.ToVector2());
					if (flag)
					{
						return true;
					}
					bool flag2 = this.AI_137_CanHit(targetRect.TopLeft() + new Vector2((float)(targetRect.Width / 2), 0f));
					if (flag2)
					{
						return true;
					}
				}
				return false;
			}
			if (myRect.Intersects(targetRect))
			{
				return true;
			}
			if (this.type == 461)
			{
				float num = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num))
				{
					return true;
				}
			}
			else if (this.type == 697 || this.type == 707)
			{
				float f = this.rotation - 0.7853982f * (float)Math.Sign(this.velocity.X);
				float num2 = 0f;
				float num3 = 50f;
				if (this.type == 707)
				{
					num3 = 110f;
				}
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center + f.ToRotationVector2() * -num3, base.Center + f.ToRotationVector2() * num3, 23f * this.scale, ref num2))
				{
					return true;
				}
			}
			else if (this.type == 699)
			{
				float f2 = this.rotation - 0.7853982f * (float)Math.Sign(this.velocity.X) + ((this.spriteDirection == -1) ? 3.14159274f : 0f);
				float num4 = 0f;
				float scaleFactor = -95f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + f2.ToRotationVector2() * scaleFactor, 23f * this.scale, ref num4))
				{
					return true;
				}
			}
			else if (this.type == 642)
			{
				float num5 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 30f * this.scale, ref num5))
				{
					return true;
				}
			}
			else if (this.type == 632)
			{
				float num6 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num6))
				{
					return true;
				}
			}
			else if (this.type == 455)
			{
				float num7 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 36f * this.scale, ref num7))
				{
					return true;
				}
			}
			else if (this.type == 611)
			{
				float num8 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity, 16f * this.scale, ref num8))
				{
					return true;
				}
			}
			else if (this.type == 684)
			{
				float num9 = 0f;
				Vector2 value = this.velocity.SafeNormalize(Vector2.UnitY).RotatedBy(-1.5707963705062866, default(Vector2)) * this.scale;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center - value * 40f, base.Center + value * 40f, 16f * this.scale, ref num9))
				{
					return true;
				}
			}
			else if (this.type == 537)
			{
				float num10 = 0f;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), base.Center, base.Center + this.velocity * this.localAI[1], 22f * this.scale, ref num10))
				{
					return true;
				}
			}
			else if (this.type == 687)
			{
				float num11 = 0f;
				float num12 = this.ai[0] / 25f;
				if (num12 > 1f)
				{
					num12 = 1f;
				}
				float num13 = (this.ai[0] - 38f) / 40f;
				if (num13 < 0f)
				{
					num13 = 0f;
				}
				Vector2 lineStart = base.Center + this.rotation.ToRotationVector2() * 400f * num13;
				Vector2 lineEnd = base.Center + this.rotation.ToRotationVector2() * 400f * num12;
				if (Collision.CheckAABBvLineCollision(targetRect.TopLeft(), targetRect.Size(), lineStart, lineEnd, 40f * this.scale, ref num11))
				{
					return true;
				}
			}
			else if (this.type == 466 || this.type == 580 || this.type == 686)
			{
				for (int i = 0; i < this.oldPos.Length; i++)
				{
					if (this.oldPos[i].X == 0f && this.oldPos[i].Y == 0f)
					{
						break;
					}
					myRect.X = (int)this.oldPos[i].X;
					myRect.Y = (int)this.oldPos[i].Y;
					if (myRect.Intersects(targetRect))
					{
						return true;
					}
				}
			}
			else if (this.type == 711)
			{
				if (this.penetrate != -1)
				{
					for (int j = 0; j < this.oldPos.Length; j++)
					{
						if (this.oldPos[j].X == 0f && this.oldPos[j].Y == 0f)
						{
							break;
						}
						myRect.X = (int)this.oldPos[j].X;
						myRect.Y = (int)this.oldPos[j].Y;
						if (myRect.Intersects(targetRect))
						{
							return true;
						}
					}
				}
			}
			else if (this.type == 464 && this.ai[1] != 1f)
			{
				Vector2 value2 = new Vector2(0f, -720f).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
				float scaleFactor2 = this.ai[0] % 45f / 45f;
				Vector2 spinningpoint = value2 * scaleFactor2;
				for (int k = 0; k < 6; k++)
				{
					float num14 = (float)k * 6.28318548f / 6f;
					Vector2 center = base.Center + spinningpoint.RotatedBy((double)num14, default(Vector2));
					if (Utils.CenteredRectangle(center, new Vector2(30f, 30f)).Intersects(targetRect))
					{
						return true;
					}
				}
			}
			return false;
		}

		public void ProjLight()
		{
			if (this.light > 0f)
			{
				float num = this.light;
				float num2 = this.light;
				float num3 = this.light;
				if (this.type == 446)
				{
					num *= 0f;
					num3 *= 0.8f;
				}
				else if (this.type == 493 || this.type == 494)
				{
					num2 *= 0.3f;
				}
				else if (this.type == 332)
				{
					num3 *= 0.1f;
					num2 *= 0.6f;
				}
				else if (this.type == 259)
				{
					num3 *= 0.1f;
				}
				else if (this.type == 329)
				{
					num3 *= 0.1f;
					num2 *= 0.9f;
				}
				else if (this.type == 2 || this.type == 82)
				{
					num2 *= 0.75f;
					num3 *= 0.55f;
				}
				else if (this.type == 172)
				{
					num2 *= 0.55f;
					num *= 0.35f;
				}
				else if (this.type == 308)
				{
					num2 *= 0.7f;
					num *= 0.1f;
				}
				else if (this.type == 304)
				{
					num2 *= 0.2f;
					num3 *= 0.1f;
				}
				else if (this.type == 263)
				{
					num2 *= 0.7f;
					num *= 0.1f;
				}
				else if (this.type == 274)
				{
					num2 *= 0.1f;
					num *= 0.7f;
				}
				else if (this.type == 254)
				{
					num *= 0.1f;
				}
				else if (this.type == 94)
				{
					num *= 0.5f;
					num2 *= 0f;
				}
				else if (this.type == 95 || this.type == 96 || this.type == 103 || this.type == 104)
				{
					num *= 0.35f;
					num2 *= 1f;
					num3 *= 0f;
				}
				else if (this.type == 4)
				{
					num2 *= 0.1f;
					num *= 0.5f;
				}
				else if (this.type == 257)
				{
					num2 *= 0.9f;
					num *= 0.1f;
				}
				else if (this.type == 9)
				{
					num2 *= 0.1f;
					num3 *= 0.6f;
				}
				else if (this.type == 488)
				{
					num = 0.3f;
					num3 = 0.25f;
					num2 = 0f;
				}
				else if (this.type == 92)
				{
					num2 *= 0.6f;
					num *= 0.8f;
				}
				else if (this.type == 93)
				{
					num2 *= 1f;
					num *= 1f;
					num3 *= 0.01f;
				}
				else if (this.type == 12)
				{
					num *= 0.9f;
					num2 *= 0.8f;
					num3 *= 0.1f;
				}
				else if (this.type == 14 || this.type == 110 || this.type == 180 || this.type == 242 || this.type == 302)
				{
					num2 *= 0.7f;
					num3 *= 0.1f;
				}
				else if (this.type == 15)
				{
					num2 *= 0.4f;
					num3 *= 0.1f;
					num = 1f;
				}
				else if (this.type == 16)
				{
					num *= 0.1f;
					num2 *= 0.4f;
					num3 = 1f;
				}
				else if (this.type == 18)
				{
					num2 *= 0.1f;
					num *= 0.6f;
				}
				else if (this.type == 19)
				{
					num2 *= 0.5f;
					num3 *= 0.1f;
				}
				else if (this.type == 20)
				{
					num *= 0.1f;
					num3 *= 0.3f;
				}
				else if (this.type == 22)
				{
					num = 0f;
					num2 = 0f;
				}
				else if (this.type == 27)
				{
					num *= 0f;
					num2 *= 0.3f;
					num3 = 1f;
				}
				else if (this.type == 34)
				{
					num2 *= 0.1f;
					num3 *= 0.1f;
				}
				else if (this.type == 36)
				{
					num = 0.8f;
					num2 *= 0.2f;
					num3 *= 0.6f;
				}
				else if (this.type == 41)
				{
					num2 *= 0.8f;
					num3 *= 0.6f;
				}
				else if (this.type == 44 || this.type == 45)
				{
					num3 = 1f;
					num *= 0.6f;
					num2 *= 0.1f;
				}
				else if (this.type == 50)
				{
					num *= 0.7f;
					num3 *= 0.8f;
				}
				else if (this.type == 515)
				{
					num2 *= 0.6f;
					num3 *= 0.85f;
				}
				else if (this.type == 53)
				{
					num *= 0.7f;
					num2 *= 0.8f;
				}
				else if (this.type == 473)
				{
					num *= 1.05f;
					num2 *= 0.95f;
					num3 *= 0.55f;
				}
				else if (this.type == 72)
				{
					num *= 0.45f;
					num2 *= 0.75f;
					num3 = 1f;
				}
				else if (this.type == 86)
				{
					num *= 1f;
					num2 *= 0.45f;
					num3 = 0.75f;
				}
				else if (this.type == 87)
				{
					num *= 0.45f;
					num2 = 1f;
					num3 *= 0.75f;
				}
				else if (this.type == 73)
				{
					num *= 0.4f;
					num2 *= 0.6f;
					num3 *= 1f;
				}
				else if (this.type == 74)
				{
					num *= 1f;
					num2 *= 0.4f;
					num3 *= 0.6f;
				}
				else if (this.type == 284)
				{
					num *= 1f;
					num2 *= 0.1f;
					num3 *= 0.8f;
				}
				else if (this.type == 285)
				{
					num *= 0.1f;
					num2 *= 0.5f;
					num3 *= 1f;
				}
				else if (this.type == 286)
				{
					num *= 1f;
					num2 *= 0.5f;
					num3 *= 0.1f;
				}
				else if (this.type == 287)
				{
					num *= 0.9f;
					num2 *= 1f;
					num3 *= 0.4f;
				}
				else if (this.type == 283)
				{
					num *= 0.8f;
					num2 *= 0.1f;
				}
				else if (this.type == 76 || this.type == 77 || this.type == 78)
				{
					num *= 1f;
					num2 *= 0.3f;
					num3 *= 0.6f;
				}
				else if (this.type == 79)
				{
					num = (float)Main.DiscoR / 255f;
					num2 = (float)Main.DiscoG / 255f;
					num3 = (float)Main.DiscoB / 255f;
				}
				else if (this.type == 80)
				{
					num *= 0f;
					num2 *= 0.8f;
					num3 *= 1f;
				}
				else if (this.type == 83 || this.type == 88)
				{
					num *= 0.7f;
					num2 *= 0f;
					num3 *= 1f;
				}
				else if (this.type == 100)
				{
					num *= 1f;
					num2 *= 0.5f;
					num3 *= 0f;
				}
				else if (this.type == 84 || this.type == 389)
				{
					num *= 0.8f;
					num2 *= 0f;
					num3 *= 0.5f;
				}
				else if (this.type == 89 || this.type == 90)
				{
					num2 *= 0.2f;
					num3 *= 1f;
					num *= 0.05f;
				}
				else if (this.type == 106)
				{
					num *= 0f;
					num2 *= 0.5f;
					num3 *= 1f;
				}
				else if (this.type == 113)
				{
					num *= 0.25f;
					num2 *= 0.75f;
					num3 *= 1f;
				}
				else if (this.type == 114 || this.type == 115)
				{
					num *= 0.5f;
					num2 *= 0.05f;
					num3 *= 1f;
				}
				else if (this.type == 116)
				{
					num3 *= 0.25f;
				}
				else if (this.type == 131)
				{
					num *= 0.1f;
					num2 *= 0.4f;
				}
				else if (this.type == 132 || this.type == 157)
				{
					num *= 0.2f;
					num3 *= 0.6f;
				}
				else if (this.type == 156)
				{
					num *= 1f;
					num3 *= 0.6f;
					num2 = 0f;
				}
				else if (this.type == 173)
				{
					num *= 0.3f;
					num3 *= 1f;
					num2 = 0.4f;
				}
				else if (this.type == 207)
				{
					num *= 0.4f;
					num3 *= 0.4f;
				}
				else if (this.type == 253)
				{
					num = 0f;
					num2 *= 0.4f;
				}
				else if (this.type == 211)
				{
					num *= 0.5f;
					num2 *= 0.9f;
					num3 *= 1f;
					if (this.localAI[0] == 0f)
					{
						this.light = 1.5f;
					}
					else
					{
						this.light = 1f;
					}
				}
				else if (this.type == 209)
				{
					float num4 = (255f - (float)this.alpha) / 255f;
					num *= 0.3f;
					num2 *= 0.4f;
					num3 *= 1.75f;
					num3 *= num4;
					num *= num4;
					num2 *= num4;
				}
				else if (this.type == 226 || (this.type == 227 | this.type == 229))
				{
					num *= 0.25f;
					num2 *= 1f;
					num3 *= 0.5f;
				}
				else if (this.type == 251)
				{
					num = (float)Main.DiscoR / 255f;
					num2 = (float)Main.DiscoG / 255f;
					num3 = (float)Main.DiscoB / 255f;
					num = (num + 1f) / 2f;
					num2 = (num2 + 1f) / 2f;
					num3 = (num3 + 1f) / 2f;
					num *= this.light;
					num2 *= this.light;
					num3 *= this.light;
				}
				else if (this.type == 278 || this.type == 279)
				{
					num *= 1f;
					num2 *= 1f;
					num3 *= 0f;
				}
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num, num2, num3);
			}
		}

		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		public void Update(int i)
		{
			if (!this.active)
			{
				return;
			}
			this.numUpdates = this.extraUpdates;
			while (this.numUpdates >= 0)
			{
				this.numUpdates--;
				if (this.type == 640 && this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
				}
				else
				{
					if (this.position.X <= Main.leftWorld || this.position.X + (float)this.width >= Main.rightWorld || this.position.Y <= Main.topWorld || this.position.Y + (float)this.height >= Main.bottomWorld)
					{
						this.active = false;
						return;
					}
					if (this.type != 344 && !this.npcProj)
					{
						if (Main.player[this.owner].frostBurn && (this.melee || this.ranged) && this.friendly && !this.hostile && !this.noEnchantments && Main.rand.Next(2 * (1 + this.extraUpdates)) == 0)
						{
							int num = Dust.NewDust(this.position, this.width, this.height, 135, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2f);
							Main.dust[num].noGravity = true;
							Main.dust[num].velocity *= 0.7f;
							Dust expr_1D3_cp_0 = Main.dust[num];
							expr_1D3_cp_0.velocity.Y = expr_1D3_cp_0.velocity.Y - 0.5f;
						}
						if (this.melee && Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
						{
							if (Main.player[this.owner].meleeEnchant == 1 && Main.rand.Next(3) == 0)
							{
								int num2 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num2].noGravity = true;
								Main.dust[num2].fadeIn = 1.5f;
								Main.dust[num2].velocity *= 0.25f;
							}
							if (Main.player[this.owner].meleeEnchant == 1)
							{
								if (Main.rand.Next(3) == 0)
								{
									int num3 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
									Main.dust[num3].noGravity = true;
									Main.dust[num3].fadeIn = 1.5f;
									Main.dust[num3].velocity *= 0.25f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 2)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num4 = Dust.NewDust(this.position, this.width, this.height, 75, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
									Main.dust[num4].noGravity = true;
									Main.dust[num4].velocity *= 0.7f;
									Dust expr_3F5_cp_0 = Main.dust[num4];
									expr_3F5_cp_0.velocity.Y = expr_3F5_cp_0.velocity.Y - 0.5f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 3)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num5 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 2.5f);
									Main.dust[num5].noGravity = true;
									Main.dust[num5].velocity *= 0.7f;
									Dust expr_4C1_cp_0 = Main.dust[num5];
									expr_4C1_cp_0.velocity.Y = expr_4C1_cp_0.velocity.Y - 0.5f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 4)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num6 = Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 1.1f);
									Main.dust[num6].noGravity = true;
									Dust expr_574_cp_0 = Main.dust[num6];
									expr_574_cp_0.velocity.X = expr_574_cp_0.velocity.X / 2f;
									Dust expr_592_cp_0 = Main.dust[num6];
									expr_592_cp_0.velocity.Y = expr_592_cp_0.velocity.Y / 2f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 5)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num7 = Dust.NewDust(this.position, this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
									Dust expr_615_cp_0 = Main.dust[num7];
									expr_615_cp_0.velocity.X = expr_615_cp_0.velocity.X + (float)this.direction;
									Dust expr_635_cp_0 = Main.dust[num7];
									expr_635_cp_0.velocity.Y = expr_635_cp_0.velocity.Y + 0.2f;
									Main.dust[num7].noGravity = true;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 6)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num8 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
									Dust expr_6C6_cp_0 = Main.dust[num8];
									expr_6C6_cp_0.velocity.X = expr_6C6_cp_0.velocity.X + (float)this.direction;
									Dust expr_6E6_cp_0 = Main.dust[num8];
									expr_6E6_cp_0.velocity.Y = expr_6E6_cp_0.velocity.Y + 0.2f;
									Main.dust[num8].noGravity = true;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 7)
							{
								Vector2 vector = this.velocity;
								if (vector.Length() > 4f)
								{
									vector *= 4f / vector.Length();
								}
								if (Main.rand.Next(20) == 0)
								{
									int num9 = Main.rand.Next(139, 143);
									int num10 = Dust.NewDust(this.position, this.width, this.height, num9, vector.X, vector.Y, 0, default(Color), 1.2f);
									Dust expr_7BA_cp_0 = Main.dust[num10];
									expr_7BA_cp_0.velocity.X = expr_7BA_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Dust expr_7EE_cp_0 = Main.dust[num10];
									expr_7EE_cp_0.velocity.Y = expr_7EE_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Dust expr_822_cp_0 = Main.dust[num10];
									expr_822_cp_0.velocity.X = expr_822_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
									Dust expr_850_cp_0 = Main.dust[num10];
									expr_850_cp_0.velocity.Y = expr_850_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
									Main.dust[num10].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
								}
								if (Main.rand.Next(40) == 0)
								{
									int num11 = Main.rand.Next(276, 283);
									int num12 = Gore.NewGore(this.position, vector, num11, 1f);
									Gore expr_8EA_cp_0 = Main.gore[num12];
									expr_8EA_cp_0.velocity.X = expr_8EA_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Gore expr_91E_cp_0 = Main.gore[num12];
									expr_91E_cp_0.velocity.Y = expr_91E_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
									Main.gore[num12].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
									Gore expr_981_cp_0 = Main.gore[num12];
									expr_981_cp_0.velocity.X = expr_981_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
									Gore expr_9AF_cp_0 = Main.gore[num12];
									expr_9AF_cp_0.velocity.Y = expr_9AF_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
								}
							}
							else if (Main.player[this.owner].meleeEnchant == 8 && Main.rand.Next(4) == 0)
							{
								int num13 = Dust.NewDust(this.position, this.width, this.height, 46, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num13].noGravity = true;
								Main.dust[num13].fadeIn = 1.5f;
								Main.dust[num13].velocity *= 0.25f;
							}
						}
						if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments && Main.rand.Next(3) != 0)
						{
							int num14 = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y - 4f), this.width + 8, this.height + 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num14].scale = 1.5f;
							}
							Main.dust[num14].noGravity = true;
							Dust expr_B54_cp_0 = Main.dust[num14];
							expr_B54_cp_0.velocity.X = expr_B54_cp_0.velocity.X * 2f;
							Dust expr_B72_cp_0 = Main.dust[num14];
							expr_B72_cp_0.velocity.Y = expr_B72_cp_0.velocity.Y * 2f;
						}
					}
					if (this.minion && this.numUpdates == -1 && this.type != 625 && this.type != 628)
					{
						this.minionPos = Main.player[this.owner].numMinions;
						if (Main.player[this.owner].slotsMinions + this.minionSlots > (float)Main.player[this.owner].maxMinions && this.owner == Main.myPlayer)
						{
							if (this.type == 627 || this.type == 626)
							{
								int byUUID = Projectile.GetByUUID(this.owner, this.ai[0]);
								if (byUUID != -1)
								{
									Projectile projectile = Main.projectile[byUUID];
									if (projectile.type != 625)
									{
										projectile.localAI[1] = this.localAI[1];
									}
									projectile = Main.projectile[(int)this.localAI[1]];
									projectile.ai[0] = this.ai[0];
									projectile.ai[1] = 1f;
									projectile.netUpdate = true;
								}
							}
							this.Kill();
						}
						else
						{
							Main.player[this.owner].numMinions++;
							Main.player[this.owner].slotsMinions += this.minionSlots;
						}
					}
					float num15 = 1f + Math.Abs(this.velocity.X) / 3f;
					if (this.gfxOffY > 0f)
					{
						this.gfxOffY -= num15 * this.stepSpeed;
						if (this.gfxOffY < 0f)
						{
							this.gfxOffY = 0f;
						}
					}
					else if (this.gfxOffY < 0f)
					{
						this.gfxOffY += num15 * this.stepSpeed;
						if (this.gfxOffY > 0f)
						{
							this.gfxOffY = 0f;
						}
					}
					if (this.gfxOffY > 16f)
					{
						this.gfxOffY = 16f;
					}
					if (this.gfxOffY < -16f)
					{
						this.gfxOffY = -16f;
					}
					Vector2 velocity = this.velocity;
					this.oldVelocity = this.velocity;
					this.whoAmI = i;
					if (this.soundDelay > 0)
					{
						this.soundDelay--;
					}
					this.netUpdate = false;
					for (int j = 0; j < 255; j++)
					{
						if (this.playerImmune[j] > 0)
						{
							this.playerImmune[j]--;
						}
					}
					if (this.usesLocalNPCImmunity)
					{
						for (int k = 0; k < 200; k++)
						{
							if (this.localNPCImmunity[k] > 0)
							{
								this.localNPCImmunity[k]--;
							}
						}
					}
					this.AI();
					if (this.owner < 255 && !Main.player[this.owner].active)
					{
						this.Kill();
					}
					if (this.type == 242 || this.type == 302 || this.type == 638)
					{
						this.wet = false;
					}
					if (!this.ignoreWater)
					{
						bool flag;
						bool flag2;
						try
						{
							flag = Collision.LavaCollision(this.position, this.width, this.height);
							flag2 = Collision.WetCollision(this.position, this.width, this.height);
							if (flag)
							{
								this.lavaWet = true;
							}
							if (Collision.honey)
							{
								this.honeyWet = true;
							}
						}
						catch
						{
							this.active = false;
							return;
						}
						if (this.wet && !this.lavaWet)
						{
							if (this.type == 85 || this.type == 15 || this.type == 34 || this.type == 188)
							{
								this.Kill();
							}
							if (this.type == 2)
							{
								this.type = 1;
								this.light = 0f;
							}
						}
						if (this.type == 80)
						{
							flag2 = false;
							this.wet = false;
							if (flag && this.ai[0] >= 0f)
							{
								this.Kill();
							}
						}
						if (flag2)
						{
							if (this.type != 155 && this.wetCount == 0 && !this.wet)
							{
								if (!flag)
								{
									if (this.honeyWet)
									{
										for (int l = 0; l < 10; l++)
										{
											int num16 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
											Dust expr_105D_cp_0 = Main.dust[num16];
											expr_105D_cp_0.velocity.Y = expr_105D_cp_0.velocity.Y - 1f;
											Dust expr_107B_cp_0 = Main.dust[num16];
											expr_107B_cp_0.velocity.X = expr_107B_cp_0.velocity.X * 2.5f;
											Main.dust[num16].scale = 1.3f;
											Main.dust[num16].alpha = 100;
											Main.dust[num16].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									}
									else
									{
										for (int m = 0; m < 10; m++)
										{
											int num17 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
											Dust expr_1171_cp_0 = Main.dust[num17];
											expr_1171_cp_0.velocity.Y = expr_1171_cp_0.velocity.Y - 4f;
											Dust expr_118F_cp_0 = Main.dust[num17];
											expr_118F_cp_0.velocity.X = expr_118F_cp_0.velocity.X * 2.5f;
											Main.dust[num17].scale = 1.3f;
											Main.dust[num17].alpha = 100;
											Main.dust[num17].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									}
								}
								else
								{
									for (int n = 0; n < 10; n++)
									{
										int num18 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
										Dust expr_1282_cp_0 = Main.dust[num18];
										expr_1282_cp_0.velocity.Y = expr_1282_cp_0.velocity.Y - 1.5f;
										Dust expr_12A0_cp_0 = Main.dust[num18];
										expr_12A0_cp_0.velocity.X = expr_12A0_cp_0.velocity.X * 2.5f;
										Main.dust[num18].scale = 1.3f;
										Main.dust[num18].alpha = 100;
										Main.dust[num18].noGravity = true;
									}
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
								}
							}
							this.wet = true;
						}
						else if (this.wet)
						{
							this.wet = false;
							if (this.type == 155)
							{
								this.velocity.Y = this.velocity.Y * 0.5f;
							}
							else if (this.wetCount == 0)
							{
								this.wetCount = 10;
								if (!this.lavaWet)
								{
									if (this.honeyWet)
									{
										for (int num19 = 0; num19 < 10; num19++)
										{
											int num20 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
											Dust expr_1401_cp_0 = Main.dust[num20];
											expr_1401_cp_0.velocity.Y = expr_1401_cp_0.velocity.Y - 1f;
											Dust expr_141F_cp_0 = Main.dust[num20];
											expr_141F_cp_0.velocity.X = expr_141F_cp_0.velocity.X * 2.5f;
											Main.dust[num20].scale = 1.3f;
											Main.dust[num20].alpha = 100;
											Main.dust[num20].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									}
									else
									{
										for (int num21 = 0; num21 < 10; num21++)
										{
											int num22 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2)), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
											Dust expr_150F_cp_0 = Main.dust[num22];
											expr_150F_cp_0.velocity.Y = expr_150F_cp_0.velocity.Y - 4f;
											Dust expr_152D_cp_0 = Main.dust[num22];
											expr_152D_cp_0.velocity.X = expr_152D_cp_0.velocity.X * 2.5f;
											Main.dust[num22].scale = 1.3f;
											Main.dust[num22].alpha = 100;
											Main.dust[num22].noGravity = true;
										}
										Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									}
								}
								else
								{
									for (int num23 = 0; num23 < 10; num23++)
									{
										int num24 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
										Dust expr_1620_cp_0 = Main.dust[num24];
										expr_1620_cp_0.velocity.Y = expr_1620_cp_0.velocity.Y - 1.5f;
										Dust expr_163E_cp_0 = Main.dust[num24];
										expr_163E_cp_0.velocity.X = expr_163E_cp_0.velocity.X * 2.5f;
										Main.dust[num24].scale = 1.3f;
										Main.dust[num24].alpha = 100;
										Main.dust[num24].noGravity = true;
									}
									Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
								}
							}
						}
						if (!this.wet)
						{
							this.lavaWet = false;
							this.honeyWet = false;
						}
						if (this.wetCount > 0)
						{
							this.wetCount -= 1;
						}
					}
					this.oldPosition = this.position;
					this.oldDirection = this.direction;
					int num25;
					int num26;
					this.HandleMovement(velocity, out num25, out num26);
					if ((this.aiStyle != 3 || this.ai[0] != 1f) && (this.aiStyle != 7 || this.ai[0] != 1f) && (this.aiStyle != 13 || this.ai[0] != 1f) && this.aiStyle != 65 && this.aiStyle != 69 && this.aiStyle != 114 && this.aiStyle != 123 && this.aiStyle != 112 && !this.manualDirectionChange && this.aiStyle != 67 && this.aiStyle != 26 && this.aiStyle != 15)
					{
						if (this.velocity.X < 0f)
						{
							this.direction = -1;
						}
						else
						{
							this.direction = 1;
						}
					}
					if (this.active)
					{
						this.ProjLight();
						if (!this.npcProj && this.friendly && Main.player[this.owner].magicQuiver && this.extraUpdates < 1 && this.arrow)
						{
							this.extraUpdates = 1;
						}
						if (this.type == 2 || this.type == 82)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						}
						else if (this.type == 172)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
						}
						else if (this.type == 103)
						{
							int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num27].noGravity = true;
								Main.dust[num27].scale *= 2f;
							}
						}
						else if (this.type == 278)
						{
							int num28 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
							if (Main.rand.Next(2) == 0)
							{
								Main.dust[num28].noGravity = true;
								Main.dust[num28].scale *= 1.5f;
							}
						}
						else if (this.type == 4)
						{
							if (Main.rand.Next(5) == 0)
							{
								Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.1f);
							}
						}
						else if (this.type == 5)
						{
							int num29 = Main.rand.Next(3);
							if (num29 == 0)
							{
								num29 = 15;
							}
							else if (num29 == 1)
							{
								num29 = 57;
							}
							else
							{
								num29 = 58;
							}
							Dust.NewDust(this.position, this.width, this.height, num29, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
						}
						this.Damage();
						if (this.type == 434 && this.localAI[0] == 0f && this.numUpdates == 0)
						{
							this.extraUpdates = 1;
							this.velocity = Vector2.Zero;
							this.localAI[0] = 1f;
							this.localAI[1] = 0.9999f;
							this.netUpdate = true;
						}
						if (Main.netMode != 1 && (this.type == 99 || this.type == 444))
						{
							Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 3);
						}
						if (ProjectileID.Sets.TrailingMode[this.type] == 0)
						{
							for (int num30 = this.oldPos.Length - 1; num30 > 0; num30--)
							{
								this.oldPos[num30] = this.oldPos[num30 - 1];
							}
							this.oldPos[0] = this.position;
						}
						else if (ProjectileID.Sets.TrailingMode[this.type] == 1)
						{
							if (this.frameCounter == 0 || this.oldPos[0] == Vector2.Zero)
							{
								for (int num31 = this.oldPos.Length - 1; num31 > 0; num31--)
								{
									this.oldPos[num31] = this.oldPos[num31 - 1];
								}
								this.oldPos[0] = this.position;
								if (this.velocity == Vector2.Zero && this.type == 466)
								{
									float num32 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
									float num33 = (float)Main.rand.NextDouble() * 2f + 2f;
									Vector2 vector2 = new Vector2((float)Math.Cos((double)num32) * num33, (float)Math.Sin((double)num32) * num33);
									int num34 = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector2.X, vector2.Y, 0, default(Color), 1f);
									Main.dust[num34].noGravity = true;
									Main.dust[num34].scale = 1.7f;
								}
								if (this.velocity == Vector2.Zero && this.type == 580)
								{
									float num35 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
									float num36 = (float)Main.rand.NextDouble() * 2f + 2f;
									Vector2 vector3 = new Vector2((float)Math.Cos((double)num35) * num36, (float)Math.Sin((double)num35) * num36);
									int num37 = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector3.X, vector3.Y, 0, default(Color), 1f);
									Main.dust[num37].noGravity = true;
									Main.dust[num37].scale = 1.7f;
								}
							}
						}
						else if (ProjectileID.Sets.TrailingMode[this.type] == 2)
						{
							for (int num38 = this.oldPos.Length - 1; num38 > 0; num38--)
							{
								this.oldPos[num38] = this.oldPos[num38 - 1];
								this.oldRot[num38] = this.oldRot[num38 - 1];
								this.oldSpriteDirection[num38] = this.oldSpriteDirection[num38 - 1];
							}
							this.oldPos[0] = this.position;
							this.oldRot[0] = this.rotation;
							this.oldSpriteDirection[0] = this.spriteDirection;
						}
						if (ProjectileID.Sets.IsADD2Turret[this.type] && DD2Event.Ongoing)
						{
							this.timeLeft++;
						}
						this.timeLeft--;
						if (this.timeLeft <= 0)
						{
							this.Kill();
						}
						if (this.penetrate == 0)
						{
							this.Kill();
						}
						if (!this.active || this.owner != Main.myPlayer)
						{
							continue;
						}
						if (this.netUpdate2)
						{
							this.netUpdate = true;
						}
						if (!this.active)
						{
							this.netSpam = 0;
						}
						if (this.netUpdate)
						{
							if (this.netSpam < 60)
							{
								this.netSpam += 5;
								NetMessage.SendData(27, -1, -1, "", i, 0f, 0f, 0f, 0, 0, 0);
								this.netUpdate2 = false;
							}
							else
							{
								this.netUpdate2 = true;
							}
						}
						if (this.netSpam > 0)
						{
							this.netSpam--;
							continue;
						}
						continue;
					}
					return;
				}
			}
			this.netUpdate = false;
		}

		private void HandleMovement(Vector2 wetVelocity, out int overrideWidth, out int overrideHeight)
		{
			bool flag = false;
			overrideWidth = -1;
			overrideHeight = -1;
			bool flag2 = false;
			bool? flag3 = ProjectileID.Sets.ForcePlateDetection[this.type];
			bool flag4 = flag3.HasValue && !flag3.Value;
			bool flag5 = flag3.HasValue && flag3.Value;
			if (this.tileCollide)
			{
				Vector2 velocity = this.velocity;
				bool flag6 = true;
				Vector2? vector = null;
				if (Main.projPet[this.type])
				{
					flag6 = false;
					if (Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - 12f > this.position.Y + (float)this.height)
					{
						flag6 = true;
					}
				}
				if (this.type == 500)
				{
					flag6 = false;
					if (Main.player[this.owner].Bottom.Y > base.Bottom.Y + 4f)
					{
						flag6 = true;
					}
				}
				if (this.type == 653)
				{
					flag6 = false;
					if (Main.player[this.owner].Bottom.Y > base.Bottom.Y + 4f)
					{
						flag6 = true;
					}
				}
				if (this.aiStyle == 62)
				{
					flag6 = true;
				}
				if (this.aiStyle == 66)
				{
					flag6 = true;
				}
				if (this.type == 317)
				{
					flag6 = true;
				}
				if (this.type == 373)
				{
					flag6 = true;
				}
				if (this.aiStyle == 53)
				{
					flag6 = false;
				}
				if (this.type == 9 || this.type == 12 || this.type == 15 || this.type == 13 || this.type == 31 || this.type == 39 || this.type == 40)
				{
					flag6 = false;
				}
				if (this.type == 24)
				{
					flag6 = false;
				}
				int num = this.type;
				switch (num)
				{
				case 663:
				case 665:
				case 667:
					break;
				case 664:
				case 666:
					goto IL_256;
				default:
					switch (num)
					{
					case 677:
					case 678:
					case 679:
					case 688:
					case 689:
					case 690:
					case 691:
					case 692:
					case 693:
						break;
					case 680:
					case 681:
					case 682:
					case 683:
					case 684:
					case 685:
					case 686:
					case 687:
						goto IL_256;
					default:
						goto IL_256;
					}
					break;
				}
				flag6 = false;
				IL_256:
				if (this.aiStyle == 29 || this.type == 28 || this.aiStyle == 49)
				{
					overrideWidth = this.width - 8;
					overrideHeight = this.height - 8;
				}
				else if (this.type == 250 || this.type == 267 || this.type == 297 || this.type == 323 || this.type == 3 || this.type == 711)
				{
					overrideWidth = 6;
					overrideHeight = 6;
				}
				else if (this.type == 308)
				{
					overrideWidth = 26;
					overrideHeight = this.height;
				}
				else if (this.type == 663 || this.type == 665 || this.type == 667 || this.type == 677 || this.type == 678 || this.type == 679 || this.type == 691 || this.type == 692 || this.type == 693)
				{
					overrideWidth = 16;
					overrideHeight = this.height;
				}
				else if (this.type == 688 || this.type == 689 || this.type == 690)
				{
					overrideWidth = 16;
					overrideHeight = this.height;
					vector = new Vector2?(new Vector2(0.5f, 1f));
				}
				else if (this.type == 669 || this.type == 706)
				{
					overrideWidth = 10;
					overrideHeight = 10;
				}
				else if (this.type == 261 || this.type == 277)
				{
					overrideWidth = 26;
					overrideHeight = 26;
				}
				else if (this.type == 481 || this.type == 491 || this.type == 106 || this.type == 262 || this.type == 271 || this.type == 270 || this.type == 272 || this.type == 273 || this.type == 274 || this.type == 280 || this.type == 288 || this.type == 301 || this.type == 320 || this.type == 333 || this.type == 335 || this.type == 343 || this.type == 344 || this.type == 497 || this.type == 496 || this.type == 6 || this.type == 19 || this.type == 113 || this.type == 52 || this.type == 520 || this.type == 523 || this.type == 585 || this.type == 598 || this.type == 599 || this.type == 636)
				{
					overrideWidth = 10;
					overrideHeight = 10;
				}
				else if (this.type == 514)
				{
					overrideWidth = 4;
					overrideHeight = 4;
				}
				else if (this.type == 248 || this.type == 247 || this.type == 507 || this.type == 508 || this.type == 662 || this.type == 680 || this.type == 685)
				{
					overrideWidth = this.width - 12;
					overrideHeight = this.height - 12;
				}
				else if (this.aiStyle == 18 || this.type == 254)
				{
					overrideWidth = this.width - 36;
					overrideHeight = this.height - 36;
				}
				else if (this.type == 182 || this.type == 190 || this.type == 33 || this.type == 229 || this.type == 237 || this.type == 243)
				{
					overrideWidth = this.width - 20;
					overrideHeight = this.height - 20;
				}
				else if (this.aiStyle == 27)
				{
					overrideWidth = this.width - 12;
					overrideHeight = this.height - 12;
				}
				else if (this.type == 533 && this.ai[0] >= 6f)
				{
					overrideWidth = this.width + 6;
					overrideHeight = this.height + 6;
				}
				else if (this.type == 582 || this.type == 634 || this.type == 635)
				{
					overrideWidth = 8;
					overrideHeight = 8;
				}
				else if (this.type == 617)
				{
					overrideWidth = (int)(20f * this.scale);
					overrideHeight = (int)(20f * this.scale);
				}
				if (((this.type != 440 && this.type != 449 && this.type != 606) || this.ai[1] != 1f) && (this.type != 466 || this.localAI[1] != 1f) && (this.type != 580 || this.localAI[1] <= 0f) && (this.type != 640 || this.localAI[1] <= 0f))
				{
					if (this.aiStyle == 10)
					{
						if (this.type == 42 || this.type == 65 || this.type == 68 || this.type == 354 || (this.type == 31 && this.ai[0] == 2f))
						{
							this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, flag6, flag6, 1);
						}
						else
						{
							this.velocity = Collision.AnyCollision(this.position, this.velocity, this.width, this.height, true);
						}
					}
					else
					{
						Vector2 vector2 = this.position;
						int num2 = (overrideWidth != -1) ? overrideWidth : this.width;
						int num3 = (overrideHeight != -1) ? overrideHeight : this.height;
						if (overrideHeight != -1 || overrideWidth != -1)
						{
							if (vector.HasValue)
							{
								vector2 = base.Center - new Vector2((float)num2, (float)num3) * vector.Value;
							}
							else
							{
								vector2 = new Vector2(this.position.X + (float)(this.width / 2) - (float)(num2 / 2), this.position.Y + (float)(this.height / 2) - (float)(num3 / 2));
							}
						}
						if (this.wet)
						{
							if (this.honeyWet)
							{
								Vector2 velocity2 = this.velocity;
								this.velocity = Collision.TileCollision(vector2, this.velocity, num2, num3, flag6, flag6, 1);
								wetVelocity = this.velocity * 0.25f;
								if (this.velocity.X != velocity2.X)
								{
									wetVelocity.X = this.velocity.X;
								}
								if (this.velocity.Y != velocity2.Y)
								{
									wetVelocity.Y = this.velocity.Y;
								}
							}
							else
							{
								Vector2 velocity3 = this.velocity;
								this.velocity = Collision.TileCollision(vector2, this.velocity, num2, num3, flag6, flag6, 1);
								wetVelocity = this.velocity * 0.5f;
								if (this.velocity.X != velocity3.X)
								{
									wetVelocity.X = this.velocity.X;
								}
								if (this.velocity.Y != velocity3.Y)
								{
									wetVelocity.Y = this.velocity.Y;
								}
							}
						}
						else
						{
							int num4 = Math.Min(num2, num3);
							if (num4 < 3)
							{
								num4 = 3;
							}
							if (num4 > 16)
							{
								num4 = 16;
							}
							if (this.velocity.Length() > (float)num4)
							{
								Vector2 vector3 = Collision.TileCollision(vector2, this.velocity, num2, num3, flag6, flag6, 1);
								float num5 = this.velocity.Length();
								float num6 = (float)num4;
								Vector2 value = Vector2.Normalize(this.velocity);
								if (vector3.Y == 0f)
								{
									value.Y = 0f;
								}
								Vector2 vector4 = Vector2.Zero;
								Vector2 arg_B39_0 = Vector2.Zero;
								Vector2 value2 = Vector2.Zero;
								int num7 = 0;
								while (num5 > 0f)
								{
									num7++;
									if (num7 > 300)
									{
										break;
									}
									Vector2 vector5 = vector2;
									float num8 = num5;
									if (num8 > num6)
									{
										num8 = num6;
									}
									num5 -= num8;
									Vector2 velocity4 = value * num8;
									Vector2 vector6 = Collision.TileCollision(vector2, velocity4, num2, num3, flag6, flag6, 1);
									vector2 += vector6;
									this.velocity = vector6;
									if (!Main.projPet[this.type])
									{
										Vector4 vector7 = Collision.SlopeCollision(vector2, this.velocity, num2, num3, 0f, true);
										Vector2 value3 = this.position - vector2;
										if (vector2.X != vector7.X)
										{
											flag = true;
										}
										if (vector2.Y != vector7.Y)
										{
											flag = true;
										}
										if (this.velocity.X != vector7.Z)
										{
											flag = true;
										}
										if (this.velocity.Y != vector7.W)
										{
											flag = true;
										}
										vector2.X = vector7.X;
										vector2.Y = vector7.Y;
										value2 += vector2 + value3 - this.position;
										this.velocity.X = vector7.Z;
										this.velocity.Y = vector7.W;
									}
									flag2 = true;
									if (this.owner == Main.myPlayer && vector2 != vector5 && !flag4)
									{
										Collision.SwitchTiles(vector2, num2, num3, vector5, 4);
									}
									vector6 = this.velocity;
									vector4 += vector6;
								}
								this.velocity = vector4;
								if (Math.Abs(this.velocity.X - velocity.X) < 0.0001f)
								{
									this.velocity.X = velocity.X;
								}
								if (Math.Abs(this.velocity.Y - velocity.Y) < 0.0001f)
								{
									this.velocity.Y = velocity.Y;
								}
								if (!Main.projPet[this.type])
								{
									Vector4 vector8 = Collision.SlopeCollision(vector2, this.velocity, num2, num3, 0f, true);
									Vector2 value4 = this.position - vector2;
									if (vector2.X != vector8.X)
									{
										flag = true;
									}
									if (vector2.Y != vector8.Y)
									{
										flag = true;
									}
									if (this.velocity.X != vector8.Z)
									{
										flag = true;
									}
									if (this.velocity.Y != vector8.W)
									{
										flag = true;
									}
									vector2.X = vector8.X;
									vector2.Y = vector8.Y;
									this.position = vector2 + value4;
									this.velocity.X = vector8.Z;
									this.velocity.Y = vector8.W;
								}
							}
							else
							{
								this.velocity = Collision.TileCollision(vector2, this.velocity, num2, num3, flag6, flag6, 1);
								if (!Main.projPet[this.type])
								{
									Vector4 vector9 = Collision.SlopeCollision(vector2, this.velocity, num2, num3, 0f, true);
									Vector2 value5 = this.position - vector2;
									if (vector2.X != vector9.X)
									{
										flag = true;
									}
									if (vector2.Y != vector9.Y)
									{
										flag = true;
									}
									if (this.velocity.X != vector9.Z)
									{
										flag = true;
									}
									if (this.velocity.Y != vector9.W)
									{
										flag = true;
									}
									vector2.X = vector9.X;
									vector2.Y = vector9.Y;
									this.position = vector2 + value5;
									this.velocity.X = vector9.Z;
									this.velocity.Y = vector9.W;
								}
							}
						}
					}
				}
				if (velocity != this.velocity)
				{
					flag = true;
				}
				if (flag)
				{
					if (this.type == 663 || this.type == 665 || this.type == 667 || this.type == 677 || this.type == 678 || this.type == 679 || this.type == 691 || this.type == 692 || this.type == 693 || this.type == 688 || this.type == 689 || this.type == 690)
					{
						this.position += this.velocity;
						this.velocity = Vector2.Zero;
					}
					else if (this.type == 434)
					{
						this.position += this.velocity;
						this.numUpdates = 0;
					}
					else if (this.type == 601)
					{
						if (this.owner == Main.myPlayer)
						{
							PortalHelper.TryPlacingPortal(this, velocity, this.velocity);
						}
						this.position += this.velocity;
						this.Kill();
					}
					else if (this.type == 451)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
						this.velocity = velocity / 2f;
					}
					else if (this.type == 645)
					{
						this.ai[0] = 0f;
						this.ai[1] = -1f;
						this.netUpdate = true;
					}
					else if (this.type == 584)
					{
						bool flag7 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.75f;
							flag7 = true;
						}
						if ((this.velocity.Y != velocity.Y && velocity.Y > 2f) || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -0.75f;
							flag7 = true;
						}
						if (flag7)
						{
							float num9 = velocity.Length() / this.velocity.Length();
							if (num9 == 0f)
							{
								num9 = 1f;
							}
							this.velocity /= num9;
							this.penetrate--;
						}
					}
					else if (this.type == 532)
					{
						bool flag8 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.75f;
							flag8 = true;
						}
						if ((this.velocity.Y != velocity.Y && velocity.Y > 2f) || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -0.75f;
							flag8 = true;
						}
						if (flag8)
						{
							float num10 = velocity.Length() / this.velocity.Length();
							if (num10 == 0f)
							{
								num10 = 1f;
							}
							this.velocity /= num10;
							this.penetrate--;
							Collision.HitTiles(this.position, velocity, this.width, this.height);
						}
					}
					else if (this.type == 533)
					{
						float num11 = 1f;
						bool flag9 = false;
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -num11;
							flag9 = true;
						}
						if (this.velocity.Y != velocity.Y || this.velocity.Y == 0f)
						{
							this.velocity.Y = velocity.Y * -num11 * 0.5f;
							flag9 = true;
						}
						if (flag9)
						{
							float num12 = velocity.Length() / this.velocity.Length();
							if (num12 == 0f)
							{
								num12 = 1f;
							}
							this.velocity /= num12;
							if (this.ai[0] == 7f && (double)this.velocity.Y < -0.1)
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							if (this.ai[0] >= 6f && this.ai[0] < 9f)
							{
								Collision.HitTiles(this.position, velocity, this.width, this.height);
							}
						}
					}
					else if (this.type == 502)
					{
						this.ai[0] += 1f;
						Main.PlaySound(37, (int)this.position.X, (int)this.position.Y, 5 + (int)this.ai[0], 1f, 0f);
						if (this.ai[0] >= 5f)
						{
							this.position += this.velocity;
							this.Kill();
						}
						else
						{
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = -velocity.Y;
							}
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = -velocity.X;
							}
						}
						Vector2 spinningpoint = new Vector2(0f, -3f - this.ai[0]).RotatedByRandom(3.1415927410125732);
						float num13 = 10f + this.ai[0] * 4f;
						Vector2 value6 = new Vector2(1.05f, 1f);
						for (float num14 = 0f; num14 < num13; num14 += 1f)
						{
							int num15 = Dust.NewDust(base.Center, 0, 0, 66, 0f, 0f, 0, Color.Transparent, 1f);
							Main.dust[num15].position = base.Center;
							Main.dust[num15].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num14 / num13), default(Vector2)) * value6 * (0.8f + Main.rand.NextFloat() * 0.4f);
							Main.dust[num15].color = Main.hslToRgb(num14 / num13, 1f, 0.5f);
							Main.dust[num15].noGravity = true;
							Main.dust[num15].scale = 1f + this.ai[0] / 3f;
						}
						if (Main.myPlayer == this.owner)
						{
							int width = this.width;
							int height = this.height;
							int num16 = this.penetrate;
							this.position = base.Center;
							this.width = (this.height = 40 + 8 * (int)this.ai[0]);
							base.Center = this.position;
							this.penetrate = -1;
							this.Damage();
							this.penetrate = num16;
							this.position = base.Center;
							this.width = width;
							this.height = height;
							base.Center = this.position;
						}
					}
					else if (this.type == 653)
					{
						if (this.velocity.Y != velocity.Y && this.velocity.Y == 0f && velocity.Y > 1f && velocity.Y < 4f)
						{
							this.velocity.Y = -velocity.Y * 2f;
						}
					}
					else if (this.type == 444)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = -velocity.X;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = -velocity.Y;
						}
						this.ai[0] = this.velocity.ToRotation();
					}
					else if (this.type == 617)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = -velocity.X * 0.35f;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = -velocity.Y * 0.35f;
						}
					}
					else if (this.type == 440 || this.type == 449 || this.type == 606)
					{
						if (this.ai[1] != 1f)
						{
							this.ai[1] = 1f;
							this.position += this.velocity;
							this.velocity = velocity;
						}
					}
					else if (this.type == 466 || this.type == 580 || this.type == 640)
					{
						if (this.localAI[1] < 1f)
						{
							this.localAI[1] += 2f;
							this.position += this.velocity;
							this.velocity = Vector2.Zero;
						}
					}
					else if (this.aiStyle == 54)
					{
						if (this.velocity.X != velocity.X)
						{
							this.velocity.X = velocity.X * -0.6f;
						}
						if (this.velocity.Y != velocity.Y)
						{
							this.velocity.Y = velocity.Y * -0.6f;
						}
					}
					else if (!Main.projPet[this.type] && this.type != 500 && this.type != 650)
					{
						if (this.aiStyle == 99)
						{
							if (this.type >= 556 && this.type <= 561)
							{
								bool flag10 = false;
								if (this.velocity.X != velocity.X)
								{
									flag10 = true;
									this.velocity.X = velocity.X * -1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									flag10 = true;
									this.velocity.Y = velocity.Y * -1f;
								}
								if (flag10)
								{
									Vector2 vector10 = Main.player[this.owner].Center - base.Center;
									vector10.Normalize();
									vector10 *= this.velocity.Length();
									vector10 *= 0.25f;
									this.velocity *= 0.75f;
									this.velocity += vector10;
									if (this.velocity.Length() > 6f)
									{
										this.velocity *= 0.5f;
									}
								}
							}
						}
						else if (this.type == 604)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = -velocity.X;
							}
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = -velocity.Y;
							}
						}
						else if (this.type == 379)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -0.6f;
							}
							if (this.velocity.Y != velocity.Y && velocity.Y > 2f)
							{
								this.velocity.Y = velocity.Y * -0.6f;
							}
						}
						else if (this.type == 491)
						{
							if (this.ai[0] <= 0f)
							{
								this.ai[0] = -10f;
							}
							if (this.velocity.X != velocity.X && Math.Abs(velocity.X) > 0f)
							{
								this.velocity.X = velocity.X * -1f;
							}
							if (this.velocity.Y != velocity.Y && Math.Abs(velocity.Y) > 0f)
							{
								this.velocity.Y = velocity.Y * -1f;
							}
						}
						else if ((this.type >= 515 && this.type <= 517) || this.type == 637)
						{
							if (this.velocity.X != velocity.X && Math.Abs(velocity.X) > 1f)
							{
								this.velocity.X = velocity.X * -0.9f;
							}
							if (this.velocity.Y != velocity.Y && Math.Abs(velocity.Y) > 1f)
							{
								this.velocity.Y = velocity.Y * -0.9f;
							}
						}
						else if (this.type == 681)
						{
							this.timeLeft = 4;
						}
						else if (this.type == 409)
						{
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -1f;
							}
							if (this.velocity.Y != velocity.Y)
							{
								this.velocity.Y = velocity.Y * -1f;
							}
						}
						else if (this.type == 254)
						{
							this.tileCollide = false;
							this.velocity = velocity;
							if (this.timeLeft > 30)
							{
								this.timeLeft = 30;
							}
						}
						else if (this.type == 225 && this.penetrate > 0)
						{
							this.velocity.X = -velocity.X;
							this.velocity.Y = -velocity.Y;
							this.penetrate--;
						}
						else if (this.type == 155)
						{
							if (this.ai[1] > 10f)
							{
								string textValue = Language.GetTextValue("Game.BallBounceResult", this.name, this.ai[1]);
								if (Main.netMode == 0)
								{
									Main.NewText(textValue, 255, 240, 20, false);
								}
								else if (Main.netMode == 2)
								{
									NetMessage.SendData(25, -1, -1, textValue, 255, 255f, 240f, 20f, 0, 0, 0);
								}
							}
							this.ai[1] = 0f;
							if (this.velocity.X != velocity.X)
							{
								this.velocity.X = velocity.X * -0.6f;
							}
							if (this.velocity.Y != velocity.Y && velocity.Y > 2f)
							{
								this.velocity.Y = velocity.Y * -0.6f;
							}
						}
						else if (this.aiStyle == 33)
						{
							if (this.localAI[0] == 0f)
							{
								if (this.wet)
								{
									this.position += velocity / 2f;
								}
								else
								{
									this.position += velocity;
								}
								this.velocity *= 0f;
								this.localAI[0] = 1f;
							}
						}
						else if (this.type != 308 && this.type != 377)
						{
							if (this.type == 477)
							{
								if (this.velocity.Y != velocity.Y || this.velocity.X != velocity.X)
								{
									this.penetrate--;
									if (this.penetrate <= 0)
									{
										this.Kill();
									}
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								if (this.penetrate > 0 && this.owner == Main.myPlayer)
								{
									int[] array = new int[10];
									int num17 = 0;
									int num18 = 700;
									int num19 = 20;
									for (int i = 0; i < 200; i++)
									{
										if (Main.npc[i].CanBeChasedBy(this, false))
										{
											float num20 = (base.Center - Main.npc[i].Center).Length();
											if (num20 > (float)num19 && num20 < (float)num18 && Collision.CanHitLine(base.Center, 1, 1, Main.npc[i].Center, 1, 1))
											{
												array[num17] = i;
												num17++;
												if (num17 >= 9)
												{
													break;
												}
											}
										}
									}
									if (num17 > 0)
									{
										num17 = Main.rand.Next(num17);
										Vector2 value7 = Main.npc[array[num17]].Center - base.Center;
										float scaleFactor = this.velocity.Length();
										value7.Normalize();
										this.velocity = value7 * scaleFactor;
										this.netUpdate = true;
									}
								}
							}
							else if (this.type == 94)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 496)
							{
								if (this.velocity.X != velocity.X)
								{
									if (Math.Abs(this.velocity.X) < 1f)
									{
										this.velocity.X = -velocity.X;
									}
									else
									{
										this.Kill();
									}
								}
								if (this.velocity.Y != velocity.Y)
								{
									if (Math.Abs(this.velocity.Y) < 1f)
									{
										this.velocity.Y = -velocity.Y;
									}
									else
									{
										this.Kill();
									}
								}
							}
							else if (this.type == 311)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
									this.ai[1] += 1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
									this.ai[1] += 1f;
								}
								if (this.ai[1] > 4f)
								{
									this.Kill();
								}
							}
							else if (this.type == 312)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
									this.ai[1] += 1f;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
									this.ai[1] += 1f;
								}
							}
							else if (this.type == 522 || this.type == 620)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 524)
							{
								this.ai[0] += 100f;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.aiStyle == 93)
							{
								if (this.velocity != velocity)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
									this.netUpdate = true;
									this.tileCollide = false;
									this.position += this.velocity;
									this.velocity = velocity;
									this.velocity.Normalize();
									this.velocity *= 3f;
								}
							}
							else if (this.type == 281)
							{
								float num21 = Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y);
								if (num21 < 2f || this.ai[1] == 2f)
								{
									this.ai[1] = 2f;
								}
								else
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X * 0.5f;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y * 0.5f;
									}
								}
							}
							else if (this.type == 290 || this.type == 294)
							{
								if (this.velocity.X != velocity.X)
								{
									this.position.X = this.position.X + this.velocity.X;
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.position.Y = this.position.Y + this.velocity.Y;
									this.velocity.Y = -velocity.Y;
								}
							}
							else if ((this.type == 181 || this.type == 189 || this.type == 357 || this.type == 566) && this.penetrate > 0)
							{
								if (this.type == 357)
								{
									this.damage = (int)((double)this.damage * 0.9);
								}
								this.penetrate--;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 307 && this.ai[1] < 5f)
							{
								this.ai[1] += 1f;
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.type == 99)
							{
								if (this.velocity.Y != velocity.Y && velocity.Y > 5f)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								if (this.velocity.X != velocity.X)
								{
									this.Kill();
								}
							}
							else if (this.type == 444)
							{
								if (this.velocity.Y != velocity.Y && velocity.Y > 5f)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								if (this.velocity.X != velocity.X)
								{
									this.Kill();
								}
							}
							else if (this.type == 36)
							{
								if (this.penetrate > 1)
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(SoundID.Item10, this.position);
									this.penetrate--;
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.Kill();
								}
							}
							else if (this.aiStyle == 21)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = -velocity.X;
								}
								if (this.velocity.Y != velocity.Y)
								{
									this.velocity.Y = -velocity.Y;
								}
							}
							else if (this.aiStyle == 17)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.75f;
								}
								if (this.velocity.Y != velocity.Y && (double)velocity.Y > 1.5)
								{
									this.velocity.Y = velocity.Y * -0.7f;
								}
							}
							else if (this.aiStyle == 15)
							{
								bool flag11 = false;
								if (velocity.X != this.velocity.X)
								{
									if (Math.Abs(velocity.X) > 4f)
									{
										flag11 = true;
									}
									this.position.X = this.position.X + this.velocity.X;
									this.velocity.X = -velocity.X * 0.2f;
								}
								if (velocity.Y != this.velocity.Y)
								{
									if (Math.Abs(velocity.Y) > 4f)
									{
										flag11 = true;
									}
									this.position.Y = this.position.Y + this.velocity.Y;
									this.velocity.Y = -velocity.Y * 0.2f;
								}
								this.ai[0] = 1f;
								if (flag11)
								{
									this.netUpdate = true;
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
								}
								if (this.wet)
								{
									wetVelocity = this.velocity;
								}
							}
							else if (this.aiStyle == 39)
							{
								Collision.HitTiles(this.position, this.velocity, this.width, this.height);
								if (this.type == 33 || this.type == 106)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.ai[0] = 1f;
									if (this.aiStyle == 3)
									{
										this.velocity.X = -velocity.X;
										this.velocity.Y = -velocity.Y;
									}
								}
								this.netUpdate = true;
								Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
							else if (this.aiStyle == 3 || this.aiStyle == 13 || this.aiStyle == 69 || this.aiStyle == 109)
							{
								Collision.HitTiles(this.position, this.velocity, this.width, this.height);
								if (this.type == 33 || this.type == 106)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
									if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
								}
								else
								{
									this.ai[0] = 1f;
									if ((this.aiStyle == 3 || this.aiStyle == 109) && this.type != 383)
									{
										this.velocity.X = -velocity.X;
										this.velocity.Y = -velocity.Y;
									}
								}
								this.netUpdate = true;
								Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
							else if (this.aiStyle == 8 && this.type != 96)
							{
								Main.PlaySound(SoundID.Item10, this.position);
								this.ai[0] += 1f;
								if ((this.ai[0] >= 5f && this.type != 253) || (this.type == 253 && this.ai[0] >= 8f))
								{
									this.position += this.velocity;
									this.Kill();
								}
								else
								{
									if (this.type == 15 && this.velocity.Y > 4f)
									{
										if (this.velocity.Y != velocity.Y)
										{
											this.velocity.Y = -velocity.Y * 0.8f;
										}
									}
									else if (this.velocity.Y != velocity.Y)
									{
										this.velocity.Y = -velocity.Y;
									}
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = -velocity.X;
									}
								}
							}
							else if (this.aiStyle == 61)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.3f;
								}
								if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
								{
									this.velocity.Y = velocity.Y * -0.3f;
								}
							}
							else if (this.aiStyle == 14)
							{
								if (this.type == 261 && ((this.velocity.X != velocity.X && (velocity.X < -3f || velocity.X > 3f)) || (this.velocity.Y != velocity.Y && (velocity.Y < -3f || velocity.Y > 3f))))
								{
									Collision.HitTiles(this.position, this.velocity, this.width, this.height);
									Main.PlaySound(0, (int)base.Center.X, (int)base.Center.Y, 1, 1f, 0f);
								}
								if (this.type >= 326 && this.type <= 328 && this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.1f;
								}
								if (this.type >= 400 && this.type <= 402)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.1f;
									}
								}
								else if (this.type == 50)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.2f;
									}
									if (this.velocity.Y != velocity.Y && (double)velocity.Y > 1.5)
									{
										this.velocity.Y = velocity.Y * -0.2f;
									}
								}
								else if (this.type == 185)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.9f;
									}
									if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
									{
										this.velocity.Y = velocity.Y * -0.9f;
									}
								}
								else if (this.type == 277)
								{
									if (this.velocity.X != velocity.X)
									{
										this.velocity.X = velocity.X * -0.9f;
									}
									if (this.velocity.Y != velocity.Y && velocity.Y > 3f)
									{
										this.velocity.Y = velocity.Y * -0.9f;
									}
								}
								else if (this.type != 480)
								{
									if (this.type == 450)
									{
										if (this.velocity.X != velocity.X)
										{
											this.velocity.X = velocity.X * -0.1f;
										}
									}
									else
									{
										if (this.velocity.X != velocity.X)
										{
											this.velocity.X = velocity.X * -0.5f;
										}
										if (this.velocity.Y != velocity.Y && velocity.Y > 1f)
										{
											this.velocity.Y = velocity.Y * -0.5f;
										}
									}
								}
							}
							else if (this.aiStyle == 16)
							{
								if (this.velocity.X != velocity.X)
								{
									this.velocity.X = velocity.X * -0.4f;
									if (this.type == 29)
									{
										this.velocity.X = this.velocity.X * 0.8f;
									}
								}
								if (this.velocity.Y != velocity.Y && (double)velocity.Y > 0.7 && this.type != 102)
								{
									this.velocity.Y = velocity.Y * -0.4f;
									if (this.type == 29)
									{
										this.velocity.Y = this.velocity.Y * 0.8f;
									}
								}
								if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303 || (this.type >= 338 && this.type <= 341))
								{
									this.velocity *= 0f;
									this.alpha = 255;
									this.timeLeft = 3;
								}
							}
							else if (this.aiStyle == 68)
							{
								this.velocity *= 0f;
								this.alpha = 255;
								this.timeLeft = 3;
							}
							else if (this.aiStyle != 9 || this.owner == Main.myPlayer)
							{
								this.position += this.velocity;
								this.Kill();
							}
						}
					}
				}
			}
			this.UpdatePosition(wetVelocity);
			if (!flag2 && !flag4 && this.owner == Main.myPlayer && (this.tileCollide || flag5) && this.position != this.oldPosition)
			{
				Vector2 position = this.position;
				Vector2 oldPosition = this.oldPosition;
				int num22 = (overrideWidth != -1) ? overrideWidth : this.width;
				int num23 = (overrideHeight != -1) ? overrideHeight : this.height;
				if (overrideHeight != -1 || overrideWidth != -1)
				{
					position = new Vector2(this.position.X + (float)(this.width / 2) - (float)(num22 / 2), this.position.Y + (float)(this.height / 2) - (float)(num23 / 2));
					oldPosition = new Vector2(this.oldPosition.X + (float)(this.width / 2) - (float)(num22 / 2), this.oldPosition.Y + (float)(this.height / 2) - (float)(num23 / 2));
				}
				Collision.SwitchTiles(position, num22, num23, oldPosition, 4);
			}
		}

		private void UpdatePosition(Vector2 wetVelocity)
		{
			if (this.aiStyle != 4 && this.aiStyle != 38)
			{
				if (this.aiStyle == 84)
				{
					return;
				}
				if (this.aiStyle == 7 && this.ai[0] == 2f)
				{
					return;
				}
				if ((this.type == 440 || this.type == 449 || this.type == 606) && this.ai[1] == 1f)
				{
					return;
				}
				if (this.aiStyle == 93 && this.ai[0] < 0f)
				{
					return;
				}
				if (this.type == 540)
				{
					return;
				}
				if (this.wet)
				{
					this.position += wetVelocity;
				}
				else
				{
					this.position += this.velocity;
				}
				if (Main.projPet[this.type] && this.tileCollide)
				{
					Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, 0f, false);
					this.position.X = vector.X;
					this.position.Y = vector.Y;
					this.velocity.X = vector.Z;
					this.velocity.Y = vector.W;
				}
			}
		}

		public void FishingCheck()
		{
			int num = (int)(base.Center.X / 16f);
			int num2 = (int)(base.Center.Y / 16f);
			if (Main.tile[num, num2].liquid < 0)
			{
				num2++;
			}
			bool flag = false;
			bool flag2 = false;
			int num3 = num;
			int num4 = num;
			while (num3 > 10 && Main.tile[num3, num2].liquid > 0)
			{
				if (WorldGen.SolidTile(num3, num2))
				{
					break;
				}
				num3--;
			}
			while (num4 < Main.maxTilesX - 10 && Main.tile[num4, num2].liquid > 0 && !WorldGen.SolidTile(num4, num2))
			{
				num4++;
			}
			int num5 = 0;
			for (int i = num3; i <= num4; i++)
			{
				int num6 = num2;
				while (Main.tile[i, num6].liquid > 0 && !WorldGen.SolidTile(i, num6) && num6 < Main.maxTilesY - 10)
				{
					num5++;
					num6++;
					if (Main.tile[i, num6].lava())
					{
						flag = true;
					}
					else if (Main.tile[i, num6].honey())
					{
						flag2 = true;
					}
				}
			}
			if (flag2)
			{
				num5 = (int)((double)num5 * 1.5);
			}
			if (num5 < 75)
			{
				Main.player[this.owner].displayedFishingInfo = Language.GetTextValue("GameUI.NotEnoughWater");
				return;
			}
			int num7 = Main.player[this.owner].FishingLevel();
			if (num7 == 0)
			{
				return;
			}
			Main.player[this.owner].displayedFishingInfo = Language.GetTextValue("GameUI.FishingPower", num7);
			if (num7 < 0)
			{
				if (num7 == -1)
				{
					Main.player[this.owner].displayedFishingInfo = Language.GetTextValue("GameUI.FishingWarning");
					if ((num < 380 || num > Main.maxTilesX - 380) && num5 > 1000 && !NPC.AnyNPCs(370))
					{
						this.ai[1] = (float)(Main.rand.Next(-180, -60) - 100);
						this.localAI[1] = (float)num7;
						this.netUpdate = true;
					}
				}
				return;
			}
			int num8 = 300;
			float num9 = (float)(Main.maxTilesX / 4200);
			num9 *= num9;
			float num10 = (float)((double)(this.position.Y / 16f - (60f + 10f * num9)) / (Main.worldSurface / 6.0));
			if ((double)num10 < 0.25)
			{
				num10 = 0.25f;
			}
			if (num10 > 1f)
			{
				num10 = 1f;
			}
			num8 = (int)((float)num8 * num10);
			float num11 = (float)num5 / (float)num8;
			if (num11 < 1f)
			{
				num7 = (int)((float)num7 * num11);
			}
			num11 = 1f - num11;
			if (num5 < num8)
			{
				Main.player[this.owner].displayedFishingInfo = Language.GetTextValue("GameUI.FullFishingPower", num7, -Math.Round((double)(num11 * 100f)));
			}
			int num12 = (num7 + 75) / 2;
			if (Main.player[this.owner].wet)
			{
				return;
			}
			if (Main.rand.Next(100) > num12)
			{
				return;
			}
			int num13 = 0;
			int num14;
			if ((double)num2 < Main.worldSurface * 0.5)
			{
				num14 = 0;
			}
			else if ((double)num2 < Main.worldSurface)
			{
				num14 = 1;
			}
			else if ((double)num2 < Main.rockLayer)
			{
				num14 = 2;
			}
			else if (num2 < Main.maxTilesY - 300)
			{
				num14 = 3;
			}
			else
			{
				num14 = 4;
			}
			int num15 = 150;
			int num16 = num15 / num7;
			int num17 = num15 * 2 / num7;
			int num18 = num15 * 7 / num7;
			int num19 = num15 * 15 / num7;
			int num20 = num15 * 30 / num7;
			if (num16 < 2)
			{
				num16 = 2;
			}
			if (num17 < 3)
			{
				num17 = 3;
			}
			if (num18 < 4)
			{
				num18 = 4;
			}
			if (num19 < 5)
			{
				num19 = 5;
			}
			if (num20 < 6)
			{
				num20 = 6;
			}
			bool flag3 = false;
			bool flag4 = false;
			bool flag5 = false;
			bool flag6 = false;
			bool flag7 = false;
			if (Main.rand.Next(num16) == 0)
			{
				flag3 = true;
			}
			if (Main.rand.Next(num17) == 0)
			{
				flag4 = true;
			}
			if (Main.rand.Next(num18) == 0)
			{
				flag5 = true;
			}
			if (Main.rand.Next(num19) == 0)
			{
				flag6 = true;
			}
			if (Main.rand.Next(num20) == 0)
			{
				flag7 = true;
			}
			int num21 = 10;
			if (Main.player[this.owner].cratePotion)
			{
				num21 += 10;
			}
			int num22 = Main.anglerQuestItemNetIDs[Main.anglerQuest];
			if (Main.player[this.owner].HasItem(num22))
			{
				num22 = -1;
			}
			if (Main.anglerQuestFinished)
			{
				num22 = -1;
			}
			if (flag)
			{
				if (!ItemID.Sets.CanFishInLava[Main.player[this.owner].HeldItem.type])
				{
					return;
				}
				if (flag7)
				{
					num13 = 2331;
				}
				else if (flag6)
				{
					num13 = 2312;
				}
				else if (flag5)
				{
					num13 = 2315;
				}
			}
			else if (flag2)
			{
				if (flag5 || (flag4 && Main.rand.Next(2) == 0))
				{
					num13 = 2314;
				}
				else if (flag4 && num22 == 2451)
				{
					num13 = 2451;
				}
			}
			else if (Main.rand.Next(50) > num7 && Main.rand.Next(50) > num7 && num5 < num8)
			{
				num13 = Main.rand.Next(2337, 2340);
			}
			else if (Main.rand.Next(100) < num21)
			{
				if (flag6 || flag7)
				{
					num13 = 2336;
				}
				else if (flag5 && Main.player[this.owner].ZoneCorrupt)
				{
					num13 = 3203;
				}
				else if (flag5 && Main.player[this.owner].ZoneCrimson)
				{
					num13 = 3204;
				}
				else if (flag5 && Main.player[this.owner].ZoneHoly)
				{
					num13 = 3207;
				}
				else if (flag5 && Main.player[this.owner].ZoneDungeon)
				{
					num13 = 3205;
				}
				else if (flag5 && Main.player[this.owner].ZoneJungle)
				{
					num13 = 3208;
				}
				else if (flag5 && num14 == 0)
				{
					num13 = 3206;
				}
				else if (flag4)
				{
					num13 = 2335;
				}
				else
				{
					num13 = 2334;
				}
			}
			else if (flag7 && Main.rand.Next(5) == 0)
			{
				num13 = 2423;
			}
			else if (flag7 && Main.rand.Next(5) == 0)
			{
				num13 = 3225;
			}
			else if (flag7 && Main.rand.Next(10) == 0)
			{
				num13 = 2420;
			}
			else if (!flag7 && !flag6 && flag4 && Main.rand.Next(5) == 0)
			{
				num13 = 3196;
			}
			else
			{
				bool flag8 = Main.player[this.owner].ZoneCorrupt;
				bool flag9 = Main.player[this.owner].ZoneCrimson;
				if (flag8 && flag9)
				{
					if (Main.rand.Next(2) == 0)
					{
						flag9 = false;
					}
					else
					{
						flag8 = false;
					}
				}
				if (flag8)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3210;
					}
					else if (flag5)
					{
						num13 = 2330;
					}
					else if (flag4 && num22 == 2454)
					{
						num13 = 2454;
					}
					else if (flag4 && num22 == 2485)
					{
						num13 = 2485;
					}
					else if (flag4 && num22 == 2457)
					{
						num13 = 2457;
					}
					else if (flag4)
					{
						num13 = 2318;
					}
				}
				else if (flag9)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3211;
					}
					else if (flag4 && num22 == 2477)
					{
						num13 = 2477;
					}
					else if (flag4 && num22 == 2463)
					{
						num13 = 2463;
					}
					else if (flag4)
					{
						num13 = 2319;
					}
					else if (flag3)
					{
						num13 = 2305;
					}
				}
				else if (Main.player[this.owner].ZoneHoly)
				{
					if (flag7 && Main.hardMode && Main.player[this.owner].ZoneSnow && num14 == 3 && Main.rand.Next(3) != 0)
					{
						num13 = 2429;
					}
					else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
					{
						num13 = 3209;
					}
					else if (num14 > 1 && flag6)
					{
						num13 = 2317;
					}
					else if (num14 > 1 && flag5 && num22 == 2465)
					{
						num13 = 2465;
					}
					else if (num14 < 2 && flag5 && num22 == 2468)
					{
						num13 = 2468;
					}
					else if (flag5)
					{
						num13 = 2310;
					}
					else if (flag4 && num22 == 2471)
					{
						num13 = 2471;
					}
					else if (flag4)
					{
						num13 = 2307;
					}
				}
				if (num13 == 0 && Main.player[this.owner].ZoneSnow)
				{
					if (num14 < 2 && flag4 && num22 == 2467)
					{
						num13 = 2467;
					}
					else if (num14 == 1 && flag4 && num22 == 2470)
					{
						num13 = 2470;
					}
					else if (num14 >= 2 && flag4 && num22 == 2484)
					{
						num13 = 2484;
					}
					else if (num14 > 1 && flag4 && num22 == 2466)
					{
						num13 = 2466;
					}
					else if ((flag3 && Main.rand.Next(12) == 0) || (flag4 && Main.rand.Next(6) == 0))
					{
						num13 = 3197;
					}
					else if (flag4)
					{
						num13 = 2306;
					}
					else if (flag3)
					{
						num13 = 2299;
					}
					else if (num14 > 1 && Main.rand.Next(3) == 0)
					{
						num13 = 2309;
					}
				}
				if (num13 == 0 && Main.player[this.owner].ZoneJungle)
				{
					if (num14 == 1 && flag4 && num22 == 2452)
					{
						num13 = 2452;
					}
					else if (num14 == 1 && flag4 && num22 == 2483)
					{
						num13 = 2483;
					}
					else if (num14 == 1 && flag4 && num22 == 2488)
					{
						num13 = 2488;
					}
					else if (num14 >= 1 && flag4 && num22 == 2486)
					{
						num13 = 2486;
					}
					else if (num14 > 1 && flag4)
					{
						num13 = 2311;
					}
					else if (flag4)
					{
						num13 = 2313;
					}
					else if (flag3)
					{
						num13 = 2302;
					}
				}
				if (num13 == 0 && Main.shroomTiles > 200 && flag4 && num22 == 2475)
				{
					num13 = 2475;
				}
				if (num13 == 0)
				{
					if (num14 <= 1 && (num < 380 || num > Main.maxTilesX - 380) && num5 > 1000)
					{
						if (flag6 && Main.rand.Next(2) == 0)
						{
							num13 = 2341;
						}
						else if (flag6)
						{
							num13 = 2342;
						}
						else if (flag5 && Main.rand.Next(5) == 0)
						{
							num13 = 2438;
						}
						else if (flag5 && Main.rand.Next(2) == 0)
						{
							num13 = 2332;
						}
						else if (flag4 && num22 == 2480)
						{
							num13 = 2480;
						}
						else if (flag4 && num22 == 2481)
						{
							num13 = 2481;
						}
						else if (flag4)
						{
							num13 = 2316;
						}
						else if (flag3 && Main.rand.Next(2) == 0)
						{
							num13 = 2301;
						}
						else if (flag3)
						{
							num13 = 2300;
						}
						else
						{
							num13 = 2297;
						}
					}
					else
					{
						int arg_C6E_0 = Main.sandTiles;
					}
				}
				if (num13 == 0)
				{
					if (num14 < 2 && flag4 && num22 == 2461)
					{
						num13 = 2461;
					}
					else if (num14 == 0 && flag4 && num22 == 2453)
					{
						num13 = 2453;
					}
					else if (num14 == 0 && flag4 && num22 == 2473)
					{
						num13 = 2473;
					}
					else if (num14 == 0 && flag4 && num22 == 2476)
					{
						num13 = 2476;
					}
					else if (num14 < 2 && flag4 && num22 == 2458)
					{
						num13 = 2458;
					}
					else if (num14 < 2 && flag4 && num22 == 2459)
					{
						num13 = 2459;
					}
					else if (num14 == 0 && flag4)
					{
						num13 = 2304;
					}
					else if (num14 > 0 && num14 < 3 && flag4 && num22 == 2455)
					{
						num13 = 2455;
					}
					else if (num14 == 1 && flag4 && num22 == 2479)
					{
						num13 = 2479;
					}
					else if (num14 == 1 && flag4 && num22 == 2456)
					{
						num13 = 2456;
					}
					else if (num14 == 1 && flag4 && num22 == 2474)
					{
						num13 = 2474;
					}
					else if (num14 > 1 && flag5 && Main.rand.Next(5) == 0)
					{
						if (Main.hardMode && Main.rand.Next(2) == 0)
						{
							num13 = 2437;
						}
						else
						{
							num13 = 2436;
						}
					}
					else if (num14 > 1 && flag7)
					{
						num13 = 2308;
					}
					else if (num14 > 1 && flag6 && Main.rand.Next(2) == 0)
					{
						num13 = 2320;
					}
					else if (num14 > 1 && flag5)
					{
						num13 = 2321;
					}
					else if (num14 > 1 && flag4 && num22 == 2478)
					{
						num13 = 2478;
					}
					else if (num14 > 1 && flag4 && num22 == 2450)
					{
						num13 = 2450;
					}
					else if (num14 > 1 && flag4 && num22 == 2464)
					{
						num13 = 2464;
					}
					else if (num14 > 1 && flag4 && num22 == 2469)
					{
						num13 = 2469;
					}
					else if (num14 > 2 && flag4 && num22 == 2462)
					{
						num13 = 2462;
					}
					else if (num14 > 2 && flag4 && num22 == 2482)
					{
						num13 = 2482;
					}
					else if (num14 > 2 && flag4 && num22 == 2472)
					{
						num13 = 2472;
					}
					else if (num14 > 2 && flag4 && num22 == 2460)
					{
						num13 = 2460;
					}
					else if (num14 > 1 && flag4 && Main.rand.Next(4) != 0)
					{
						num13 = 2303;
					}
					else if (num14 > 1 && (flag4 || flag3 || Main.rand.Next(4) == 0))
					{
						if (Main.rand.Next(4) == 0)
						{
							num13 = 2303;
						}
						else
						{
							num13 = 2309;
						}
					}
					else if (flag4 && num22 == 2487)
					{
						num13 = 2487;
					}
					else if (num5 > 1000 && flag3)
					{
						num13 = 2298;
					}
					else
					{
						num13 = 2290;
					}
				}
			}
			if (num13 > 0)
			{
				if (Main.player[this.owner].sonarPotion)
				{
					Item item = new Item();
					item.SetDefaults(num13, false);
					item.position = this.position;
					ItemText.NewText(item, 1, true, false);
				}
				float num23 = (float)num7;
				this.ai[1] = (float)Main.rand.Next(-240, -90) - num23;
				this.localAI[1] = (float)num13;
				this.netUpdate = true;
			}
		}

		public bool CanReflect()
		{
			return this.active && this.friendly && !this.hostile && this.damage > 0 && (this.aiStyle == 1 || this.aiStyle == 2 || this.aiStyle == 8 || this.aiStyle == 21 || this.aiStyle == 24 || this.aiStyle == 28 || this.aiStyle == 29 || this.aiStyle == 131);
		}

		public float GetPrismHue(float indexing)
		{
			string name;
			if (Main.player[this.owner].active && (name = Main.player[this.owner].name) != null)
			{
 				switch (name)
 				{
 				case "Tsuki":
 				case "Yoraiz0r":
 					return 0.85f;
 				case "Ghostar":
 					return 0.33f;
 				case "Devalaous":
 					return 0.66f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.1f;
 				case "Leinfors":
 					return 0.77f;
 				case "Aeroblop":
 					return 0.25f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.1f;
 				case "Doylee":
 					return 0f;
 				case "Darkhalis":
 				case "Arkhalis":
 					return 0.75f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.07f;
 				case "Nike Leon":
 					return 0.075f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.07f;
 				case "Suweeka":
 					return 0.5f + (float)Math.Cos(Main.time / 180.0 * 6.2831854820251465) * 0.18f;
 				case "W1K":
 					return 0.75f + (float)Math.Cos(Main.time / 120.0 * 6.2831854820251465) * 0.05f;
 				case "Grox The Great":
 					return 0.31f + (float)Math.Cos(Main.time / 120.0 * 6.2831854820251465) * 0.03f;
 				case "Random":
 					return Main.rand.NextFloat();
				}
			}
			return (float)((int)indexing) / 6f;
		}

		public static int GetByUUID(int owner, float uuid)
		{
			return Projectile.GetByUUID(owner, (int)uuid);
		}

		public static int GetByUUID(int owner, int uuid)
		{
			if (uuid < 0 || uuid >= 1000 || owner < 0 || owner >= 255)
			{
				return -1;
			}
			int num = Main.projectileIdentity[owner, uuid];
			if (num >= 0 && Main.projectile[num].active)
			{
				return num;
			}
			return -1;
		}

		public void ProjectileFixDesperation()
		{
			if (this.owner < 0 || this.owner >= 1000)
			{
				return;
			}
			int num = this.type;
			if (num != 461 && num != 632)
			{
				switch (num)
				{
				case 642:
				case 644:
					break;
				case 643:
					return;
				default:
					return;
				}
			}
			for (int i = 0; i < 1000; i++)
			{
				if (Main.projectile[i].owner == this.owner && (float)Main.projectile[i].identity == this.ai[1] && Main.projectile[i].active)
				{
					this.ai[1] = (float)i;
					return;
				}
			}
		}

		public void AI()
		{
			if (this.aiStyle == 1)
			{
				this.AI_001();
				return;
			}
			if (this.aiStyle == 2)
			{
				if (this.type == 93 && Main.rand.Next(5) == 0)
				{
					int num = Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 0.3f);
					Dust expr_A0_cp_0 = Main.dust[num];
					expr_A0_cp_0.velocity.X = expr_A0_cp_0.velocity.X * 0.3f;
					Dust expr_BD_cp_0 = Main.dust[num];
					expr_BD_cp_0.velocity.Y = expr_BD_cp_0.velocity.Y * 0.3f;
				}
				if (this.type == 304 && this.localAI[0] == 0f)
				{
					this.localAI[0] += 1f;
					this.alpha = 0;
				}
				if (this.type == 335)
				{
					this.frame = (int)this.ai[1];
				}
				if (this.type == 510)
				{
					this.rotation += Math.Abs(this.velocity.X) * 0.04f * (float)this.direction;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.03f * (float)this.direction;
				}
				if (this.type == 162)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(SoundID.Item14, this.position);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.Y = this.velocity.Y + 0.28f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int i = 0; i < 10; i++)
							{
								int num2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num2].velocity *= 0.5f;
								Main.dust[num2].velocity += this.velocity * 0.1f;
							}
							for (int j = 0; j < 5; j++)
							{
								int num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num3].noGravity = true;
								Main.dust[num3].velocity *= 3f;
								Main.dust[num3].velocity += this.velocity * 0.2f;
								num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num3].velocity *= 2f;
								Main.dust[num3].velocity += this.velocity * 0.3f;
							}
							for (int k = 0; k < 1; k++)
							{
								int num4 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num4].position += this.velocity * 1.25f;
								Main.gore[num4].scale = 1.5f;
								Main.gore[num4].velocity += this.velocity * 0.5f;
								Main.gore[num4].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 281)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(SoundID.Item14, this.position);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.Y = this.velocity.Y + 0.28f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int l = 0; l < 10; l++)
							{
								int num5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num5].velocity *= 0.5f;
								Main.dust[num5].velocity += this.velocity * 0.1f;
							}
							for (int m = 0; m < 5; m++)
							{
								int num6 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num6].noGravity = true;
								Main.dust[num6].velocity *= 3f;
								Main.dust[num6].velocity += this.velocity * 0.2f;
								num6 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num6].velocity *= 2f;
								Main.dust[num6].velocity += this.velocity * 0.3f;
							}
							for (int n = 0; n < 1; n++)
							{
								int num7 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num7].position += this.velocity * 1.25f;
								Main.gore[num7].scale = 1.5f;
								Main.gore[num7].velocity += this.velocity * 0.5f;
								Main.gore[num7].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 240)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(SoundID.Item14, this.position);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 16f)
					{
						this.velocity.Y = this.velocity.Y + 0.18f;
						this.velocity.X = this.velocity.X * 0.991f;
					}
					if (this.ai[0] > 2f)
					{
						this.alpha = 0;
						if (this.ai[0] == 3f)
						{
							for (int num8 = 0; num8 < 7; num8++)
							{
								int num9 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
								Main.dust[num9].velocity *= 0.5f;
								Main.dust[num9].velocity += this.velocity * 0.1f;
							}
							for (int num10 = 0; num10 < 3; num10++)
							{
								int num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
								Main.dust[num11].noGravity = true;
								Main.dust[num11].velocity *= 3f;
								Main.dust[num11].velocity += this.velocity * 0.2f;
								num11 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num11].velocity *= 2f;
								Main.dust[num11].velocity += this.velocity * 0.3f;
							}
							for (int num12 = 0; num12 < 1; num12++)
							{
								int num13 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
								Main.gore[num13].position += this.velocity * 1.25f;
								Main.gore[num13].scale = 1.25f;
								Main.gore[num13].velocity += this.velocity * 0.5f;
								Main.gore[num13].velocity *= 0.02f;
							}
						}
					}
				}
				else if (this.type == 497)
				{
					int num14 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num14].position = (Main.dust[num14].position + base.Center) / 2f;
					Main.dust[num14].noGravity = true;
					Main.dust[num14].velocity *= 0.3f;
					Main.dust[num14].velocity -= this.velocity * 0.1f;
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.Y = this.velocity.Y + 0.5f;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 249)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 0f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
					}
				}
				else if (this.type == 347)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 5f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
					}
				}
				else if (this.type == 501)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 18f)
					{
						this.velocity.X = this.velocity.X * 0.995f;
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
				}
				else if (this.type == 504)
				{
					this.alpha = 255;
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						int num15 = 100;
						if (this.ai[0] > 20f)
						{
							int num16 = 40;
							float num17 = this.ai[0] - 20f;
							num15 = (int)(100f * (1f - num17 / (float)num16));
							if (num17 >= (float)num16)
							{
								this.Kill();
							}
						}
						if (this.ai[0] <= 10f)
						{
							num15 = (int)this.ai[0] * 10;
						}
						if (Main.rand.Next(100) < num15)
						{
							int num18 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 150, default(Color), 1f);
							Main.dust[num18].position = (Main.dust[num18].position + base.Center) / 2f;
							Main.dust[num18].noGravity = true;
							Main.dust[num18].velocity *= 2f;
							Main.dust[num18].scale *= 1.2f;
							Main.dust[num18].velocity += this.velocity;
						}
					}
					if (this.ai[0] >= 20f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
						this.velocity.Y = this.velocity.Y + 0.1f;
					}
				}
				else if (this.type == 69 || this.type == 70 || this.type == 621)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 10f)
					{
						this.velocity.Y = this.velocity.Y + 0.25f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				else if (this.type == 166)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 20f)
					{
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.98f;
					}
				}
				else if (this.type == 300)
				{
					if (this.ai[0] == 0f)
					{
						Main.PlaySound(SoundID.Item1, this.position);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 60f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				else if (this.type == 306)
				{
					if (this.alpha <= 200)
					{
						for (int num19 = 0; num19 < 4; num19++)
						{
							float num20 = this.velocity.X / 4f * (float)num19;
							float num21 = this.velocity.Y / 4f * (float)num19;
							int num22 = Dust.NewDust(this.position, this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num22].position.X = base.Center.X - num20;
							Main.dust[num22].position.Y = base.Center.Y - num21;
							Main.dust[num22].velocity *= 0f;
							Main.dust[num22].scale = 0.7f;
						}
					}
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
				}
				else if (this.type == 304)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						this.alpha += 10;
						this.damage = (int)((double)this.damage * 0.9);
						this.knockBack = (float)((int)((double)this.knockBack * 0.9));
						if (this.alpha >= 255)
						{
							this.active = false;
						}
					}
					if (this.ai[0] < 30f)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 370 || this.type == 371)
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 15f)
					{
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.98f;
					}
				}
				else
				{
					this.ai[0] += 1f;
					if (this.ai[0] >= 20f)
					{
						this.velocity.Y = this.velocity.Y + 0.4f;
						this.velocity.X = this.velocity.X * 0.97f;
					}
					else if (this.type == 48 || this.type == 54 || this.type == 93 || this.type == 520 || this.type == 599)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
				}
				if (this.type == 54 && Main.rand.Next(20) == 0)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					return;
				}
			}
			else if (this.aiStyle == 3)
			{
				if (this.soundDelay == 0 && this.type != 383)
				{
					this.soundDelay = 8;
					Main.PlaySound(SoundID.Item7, this.position);
				}
				if (this.type == 19)
				{
					for (int num23 = 0; num23 < 2; num23++)
					{
						int num24 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num24].noGravity = true;
						Dust expr_1744_cp_0 = Main.dust[num24];
						expr_1744_cp_0.velocity.X = expr_1744_cp_0.velocity.X * 0.3f;
						Dust expr_1762_cp_0 = Main.dust[num24];
						expr_1762_cp_0.velocity.Y = expr_1762_cp_0.velocity.Y * 0.3f;
					}
				}
				else if (this.type == 33)
				{
					if (Main.rand.Next(1) == 0)
					{
						int num25 = Dust.NewDust(this.position, this.width, this.height, 40, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, default(Color), 1.4f);
						Main.dust[num25].noGravity = true;
					}
				}
				else if (this.type == 320)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num26 = Dust.NewDust(this.position, this.width, this.height, 5, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 0, default(Color), 1.1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num26].scale = 0.9f;
							Main.dust[num26].velocity *= 0.2f;
						}
						else
						{
							Main.dust[num26].noGravity = true;
						}
					}
				}
				else if (this.type == 6)
				{
					if (Main.rand.Next(5) == 0)
					{
						int num27 = Main.rand.Next(3);
						if (num27 == 0)
						{
							num27 = 15;
						}
						else if (num27 == 1)
						{
							num27 = 57;
						}
						else
						{
							num27 = 58;
						}
						Dust.NewDust(this.position, this.width, this.height, num27, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, default(Color), 0.7f);
					}
				}
				else if (this.type == 113 && Main.rand.Next(1) == 0)
				{
					int num28 = Dust.NewDust(this.position, this.width, this.height, 76, this.velocity.X * 0.15f, this.velocity.Y * 0.15f, 0, default(Color), 1.1f);
					Main.dust[num28].noGravity = true;
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X * 0.05f, this.velocity.Y * 0.05f, 150, default(Color), 0.6f);
				}
				if (this.ai[0] == 0f)
				{
					this.ai[1] += 1f;
					if (this.type == 106 && this.ai[1] >= 45f)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
					if (this.type == 320 || this.type == 383)
					{
						if (this.ai[1] >= 10f)
						{
							this.velocity.Y = this.velocity.Y + 0.5f;
							if (this.type == 383 && this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + 0.35f;
							}
							this.velocity.X = this.velocity.X * 0.95f;
							if (this.velocity.Y > 16f)
							{
								this.velocity.Y = 16f;
							}
							if (this.type == 383 && Vector2.Distance(base.Center, Main.player[this.owner].Center) > 800f)
							{
								this.ai[0] = 1f;
							}
						}
					}
					else if (this.type == 182)
					{
						if (Main.rand.Next(2) == 0)
						{
							int num29 = Dust.NewDust(this.position, this.width, this.height, 57, 0f, 0f, 255, default(Color), 0.75f);
							Main.dust[num29].velocity *= 0.1f;
							Main.dust[num29].noGravity = true;
						}
						if (this.velocity.X > 0f)
						{
							this.spriteDirection = 1;
						}
						else if (this.velocity.X < 0f)
						{
							this.spriteDirection = -1;
						}
						float num30 = this.position.X;
						float num31 = this.position.Y;
						bool flag = false;
						if (this.ai[1] > 10f)
						{
							for (int num32 = 0; num32 < 200; num32++)
							{
								if (Main.npc[num32].CanBeChasedBy(this, false))
								{
									float num33 = Main.npc[num32].position.X + (float)(Main.npc[num32].width / 2);
									float num34 = Main.npc[num32].position.Y + (float)(Main.npc[num32].height / 2);
									float num35 = Math.Abs(this.position.X + (float)(this.width / 2) - num33) + Math.Abs(this.position.Y + (float)(this.height / 2) - num34);
									if (num35 < 800f && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num32].position, Main.npc[num32].width, Main.npc[num32].height))
									{
										num30 = num33;
										num31 = num34;
										flag = true;
									}
								}
							}
						}
						if (!flag)
						{
							num30 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
							num31 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
							if (this.ai[1] >= 30f)
							{
								this.ai[0] = 1f;
								this.ai[1] = 0f;
								this.netUpdate = true;
							}
						}
						float num36 = 12f;
						float num37 = 0.25f;
						Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num38 = num30 - vector.X;
						float num39 = num31 - vector.Y;
						float num40 = (float)Math.Sqrt((double)(num38 * num38 + num39 * num39));
						num40 = num36 / num40;
						num38 *= num40;
						num39 *= num40;
						if (this.velocity.X < num38)
						{
							this.velocity.X = this.velocity.X + num37;
							if (this.velocity.X < 0f && num38 > 0f)
							{
								this.velocity.X = this.velocity.X + num37 * 2f;
							}
						}
						else if (this.velocity.X > num38)
						{
							this.velocity.X = this.velocity.X - num37;
							if (this.velocity.X > 0f && num38 < 0f)
							{
								this.velocity.X = this.velocity.X - num37 * 2f;
							}
						}
						if (this.velocity.Y < num39)
						{
							this.velocity.Y = this.velocity.Y + num37;
							if (this.velocity.Y < 0f && num39 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num37 * 2f;
							}
						}
						else if (this.velocity.Y > num39)
						{
							this.velocity.Y = this.velocity.Y - num37;
							if (this.velocity.Y > 0f && num39 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num37 * 2f;
							}
						}
					}
					else if (this.type == 301)
					{
						if (this.ai[1] >= 20f)
						{
							this.ai[0] = 1f;
							this.ai[1] = 0f;
							this.netUpdate = true;
						}
					}
					else if (this.ai[1] >= 30f)
					{
						this.ai[0] = 1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
				}
				else
				{
					this.tileCollide = false;
					float num41 = 9f;
					float num42 = 0.4f;
					if (this.type == 19)
					{
						num41 = 13f;
						num42 = 0.6f;
					}
					else if (this.type == 33)
					{
						num41 = 15f;
						num42 = 0.8f;
					}
					else if (this.type == 182)
					{
						num41 = 16f;
						num42 = 1.2f;
					}
					else if (this.type == 106)
					{
						num41 = 16f;
						num42 = 1.2f;
					}
					else if (this.type == 272)
					{
						num41 = 15f;
						num42 = 1f;
					}
					else if (this.type == 333)
					{
						num41 = 12f;
						num42 = 0.6f;
					}
					else if (this.type == 301)
					{
						num41 = 15f;
						num42 = 3f;
					}
					else if (this.type == 320)
					{
						num41 = 15f;
						num42 = 3f;
					}
					else if (this.type == 383)
					{
						num41 = 16f;
						num42 = 4f;
					}
					Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num43 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
					float num44 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
					float num45 = (float)Math.Sqrt((double)(num43 * num43 + num44 * num44));
					if (num45 > 3000f)
					{
						this.Kill();
					}
					num45 = num41 / num45;
					num43 *= num45;
					num44 *= num45;
					if (this.type == 383)
					{
						Vector2 vector3 = new Vector2(num43, num44) - this.velocity;
						if (vector3 != Vector2.Zero)
						{
							Vector2 value = vector3;
							value.Normalize();
							this.velocity += value * Math.Min(num42, vector3.Length());
						}
					}
					else
					{
						if (this.velocity.X < num43)
						{
							this.velocity.X = this.velocity.X + num42;
							if (this.velocity.X < 0f && num43 > 0f)
							{
								this.velocity.X = this.velocity.X + num42;
							}
						}
						else if (this.velocity.X > num43)
						{
							this.velocity.X = this.velocity.X - num42;
							if (this.velocity.X > 0f && num43 < 0f)
							{
								this.velocity.X = this.velocity.X - num42;
							}
						}
						if (this.velocity.Y < num44)
						{
							this.velocity.Y = this.velocity.Y + num42;
							if (this.velocity.Y < 0f && num44 > 0f)
							{
								this.velocity.Y = this.velocity.Y + num42;
							}
						}
						else if (this.velocity.Y > num44)
						{
							this.velocity.Y = this.velocity.Y - num42;
							if (this.velocity.Y > 0f && num44 < 0f)
							{
								this.velocity.Y = this.velocity.Y - num42;
							}
						}
					}
					if (Main.myPlayer == this.owner)
					{
						Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
						Rectangle value2 = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
						if (rectangle.Intersects(value2))
						{
							this.Kill();
						}
					}
				}
				if (this.type == 106)
				{
					this.rotation += 0.3f * (float)this.direction;
					return;
				}
				if (this.type != 383)
				{
					this.rotation += 0.4f * (float)this.direction;
					return;
				}
				if (this.ai[0] == 0f)
				{
					Vector2 velocity = this.velocity;
					velocity.Normalize();
					this.rotation = (float)Math.Atan2((double)velocity.Y, (double)velocity.X) + 1.57f;
					return;
				}
				Vector2 vector4 = base.Center - Main.player[this.owner].Center;
				vector4.Normalize();
				this.rotation = (float)Math.Atan2((double)vector4.Y, (double)vector4.X) + 1.57f;
				return;
			}
			else if (this.aiStyle == 4)
			{
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				if (this.ai[0] == 0f)
				{
					if (this.type >= 150 && this.type <= 152 && this.ai[1] == 0f && this.alpha == 255 && Main.rand.Next(2) == 0)
					{
						this.type++;
						this.netUpdate = true;
					}
					this.alpha -= 50;
					if (this.type >= 150 && this.type <= 152)
					{
						this.alpha -= 25;
					}
					else if (this.type == 493 || this.type == 494)
					{
						this.alpha -= 50;
					}
					if (this.alpha <= 0)
					{
						this.alpha = 0;
						this.ai[0] = 1f;
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							this.position += this.velocity * 1f;
						}
						if (this.type == 7 && Main.myPlayer == this.owner)
						{
							int num46 = this.type;
							if (this.ai[1] >= 6f)
							{
								num46++;
							}
							int num47 = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num46, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num47].damage = this.damage;
							Main.projectile[num47].ai[1] = this.ai[1] + 1f;
							NetMessage.SendData(27, -1, -1, "", num47, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						if (this.type == 494 && Main.myPlayer == this.owner)
						{
							int num48 = this.type;
							if (this.ai[1] >= (float)(7 + Main.rand.Next(2)))
							{
								num48--;
							}
							int num49 = this.damage;
							float num50 = this.knockBack;
							if (num48 == 493)
							{
								num49 = (int)((double)this.damage * 1.25);
								num50 = this.knockBack * 1.25f;
							}
							int number = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num48, num49, num50, this.owner, 0f, this.ai[1] + 1f);
							NetMessage.SendData(27, -1, -1, "", number, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
						if ((this.type == 150 || this.type == 151) && Main.myPlayer == this.owner)
						{
							int num51 = this.type;
							if (this.type == 150)
							{
								num51 = 151;
							}
							else if (this.type == 151)
							{
								num51 = 150;
							}
							if (this.ai[1] >= 10f && this.type == 151)
							{
								num51 = 152;
							}
							int num52 = Projectile.NewProjectile(this.position.X + this.velocity.X + (float)(this.width / 2), this.position.Y + this.velocity.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, num51, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num52].damage = this.damage;
							Main.projectile[num52].ai[1] = this.ai[1] + 1f;
							NetMessage.SendData(27, -1, -1, "", num52, 0f, 0f, 0f, 0, 0, 0);
							return;
						}
					}
				}
				else
				{
					if (this.alpha < 170 && this.alpha + 5 >= 170)
					{
						if (this.type >= 150 && this.type <= 152)
						{
							for (int num53 = 0; num53 < 8; num53++)
							{
								int num54 = Dust.NewDust(this.position, this.width, this.height, 7, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, default(Color), 1.3f);
								Main.dust[num54].noGravity = true;
								Main.dust[num54].velocity *= 0.5f;
							}
						}
						else if (this.type == 493 || this.type == 494)
						{
							for (int num55 = 0; num55 < 8; num55++)
							{
								int num56 = Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(68, 71), this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 200, default(Color), 1.3f);
								Main.dust[num56].noGravity = true;
								Main.dust[num56].velocity *= 0.5f;
							}
						}
						else
						{
							for (int num57 = 0; num57 < 3; num57++)
							{
								Dust.NewDust(this.position, this.width, this.height, 18, this.velocity.X * 0.025f, this.velocity.Y * 0.025f, 170, default(Color), 1.2f);
							}
							Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 170, default(Color), 1.1f);
						}
					}
					if (this.type >= 150 && this.type <= 152)
					{
						this.alpha += 3;
					}
					else if (this.type == 493 || this.type == 494)
					{
						this.alpha += 7;
					}
					else
					{
						this.alpha += 5;
					}
					if (this.alpha >= 255)
					{
						this.Kill();
						return;
					}
				}
			}
			else if (this.aiStyle == 5)
			{
				if (this.type == 503)
				{
					if (base.Center.Y > this.ai[1])
					{
						this.tileCollide = true;
					}
				}
				else if (this.type == 92)
				{
					if (this.position.Y > this.ai[1])
					{
						this.tileCollide = true;
					}
				}
				else
				{
					if (this.ai[1] == 0f && !Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.ai[1] = 1f;
						this.netUpdate = true;
					}
					if (this.ai[1] != 0f)
					{
						this.tileCollide = true;
					}
				}
				if (this.soundDelay == 0)
				{
					this.soundDelay = 20 + Main.rand.Next(40);
					Main.PlaySound(SoundID.Item9, this.position);
				}
				if (this.type == 503)
				{
					this.alpha -= 15;
					int num58 = 150;
					if (base.Center.Y >= this.ai[1])
					{
						num58 = 0;
					}
					if (this.alpha < num58)
					{
						this.alpha = num58;
					}
					this.localAI[0] += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f * (float)this.direction;
				}
				else
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
					}
					this.alpha += (int)(25f * this.localAI[0]);
					if (this.alpha > 200)
					{
						this.alpha = 200;
						this.localAI[0] = -1f;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
						this.localAI[0] = 1f;
					}
				}
				if (this.type == 503)
				{
					this.rotation = this.velocity.ToRotation() - 1.57079637f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f * (float)this.direction;
				}
				if (this.type == 503)
				{
					if (Main.rand.Next(16) == 0)
					{
						Vector2 value3 = Vector2.UnitX.RotatedByRandom(1.5707963705062866).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num59 = Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
						Main.dust[num59].velocity = value3 * 0.66f;
						Main.dust[num59].position = base.Center + value3 * 12f;
					}
					if (Main.rand.Next(48) == 0)
					{
						int num60 = Gore.NewGore(base.Center, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), 16, 1f);
						Main.gore[num60].velocity *= 0.66f;
						Main.gore[num60].velocity += this.velocity * 0.3f;
					}
				}
				if (this.ai[1] == 1f || this.type == 92)
				{
					this.light = 0.9f;
					if (Main.rand.Next(10) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.2f);
					}
					if (Main.rand.Next(20) == 0)
					{
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.2f, this.velocity.Y * 0.2f), Main.rand.Next(16, 18), 1f);
						return;
					}
				}
			}
			else if (this.aiStyle == 6)
			{
				this.velocity *= 0.95f;
				this.ai[0] += 1f;
				if (this.ai[0] == 180f)
				{
					this.Kill();
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					int num61 = 10 + this.type;
					if (this.type == 463)
					{
						num61 = 231;
					}
					for (int num62 = 0; num62 < 30; num62++)
					{
						Dust.NewDust(this.position, this.width, this.height, num61, this.velocity.X, this.velocity.Y, 50, default(Color), 1f);
					}
				}
				if (this.type == 10 || this.type == 11 || this.type == 463)
				{
					int num63 = (int)(this.position.X / 16f) - 1;
					int num64 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num65 = (int)(this.position.Y / 16f) - 1;
					int num66 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num63 < 0)
					{
						num63 = 0;
					}
					if (num64 > Main.maxTilesX)
					{
						num64 = Main.maxTilesX;
					}
					if (num65 < 0)
					{
						num65 = 0;
					}
					if (num66 > Main.maxTilesY)
					{
						num66 = Main.maxTilesY;
					}
					for (int num67 = num63; num67 < num64; num67++)
					{
						for (int num68 = num65; num68 < num66; num68++)
						{
							Vector2 vector5;
							vector5.X = (float)(num67 * 16);
							vector5.Y = (float)(num68 * 16);
							if (this.position.X + (float)this.width > vector5.X && this.position.X < vector5.X + 16f && this.position.Y + (float)this.height > vector5.Y && this.position.Y < vector5.Y + 16f && Main.myPlayer == this.owner && Main.tile[num67, num68].active())
							{
								if (this.type == 10)
								{
									if (Main.tile[num67, num68].type == 23 || Main.tile[num67, num68].type == 199)
									{
										Main.tile[num67, num68].type = 2;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 25 || Main.tile[num67, num68].type == 203)
									{
										Main.tile[num67, num68].type = 1;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 112 || Main.tile[num67, num68].type == 234)
									{
										Main.tile[num67, num68].type = 53;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 163 || Main.tile[num67, num68].type == 200)
									{
										Main.tile[num67, num68].type = 161;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 400 || Main.tile[num67, num68].type == 401)
									{
										Main.tile[num67, num68].type = 396;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 398 || Main.tile[num67, num68].type == 399)
									{
										Main.tile[num67, num68].type = 397;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
								}
								else if (this.type == 11 || this.type == 463)
								{
									if (Main.tile[num67, num68].type == 109)
									{
										Main.tile[num67, num68].type = 2;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 116)
									{
										Main.tile[num67, num68].type = 53;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 117)
									{
										Main.tile[num67, num68].type = 1;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 164)
									{
										Main.tile[num67, num68].type = 161;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 403)
									{
										Main.tile[num67, num68].type = 396;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
									if (Main.tile[num67, num68].type == 402)
									{
										Main.tile[num67, num68].type = 397;
										WorldGen.SquareTileFrame(num67, num68, true);
										if (Main.netMode == 1)
										{
											NetMessage.SendTileSquare(-1, num67, num68, 1, TileChangeType.None);
										}
									}
								}
							}
						}
					}
					return;
				}
			}
			else if (this.aiStyle == 7)
			{
				if (Main.player[this.owner].dead || Main.player[this.owner].stoned || Main.player[this.owner].webbed || Main.player[this.owner].frozen)
				{
					this.Kill();
					return;
				}
				Vector2 mountedCenter = Main.player[this.owner].MountedCenter;
				Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num69 = mountedCenter.X - vector6.X;
				float num70 = mountedCenter.Y - vector6.Y;
				float num71 = (float)Math.Sqrt((double)(num69 * num69 + num70 * num70));
				this.rotation = (float)Math.Atan2((double)num70, (double)num69) - 1.57f;
				if (this.type == 256)
				{
					this.rotation = (float)Math.Atan2((double)num70, (double)num69) + 3.92500019f;
				}
				if (this.type == 446)
				{
					Lighting.AddLight(mountedCenter, 0f, 0.4f, 0.3f);
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 28f)
					{
						this.localAI[0] = 0f;
					}
					DelegateMethods.v3_1 = new Vector3(0f, 0.4f, 0.3f);
					Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				}
				if (this.type == 652 && ++this.frameCounter >= 7)
				{
					this.frameCounter = 0;
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.type >= 646 && this.type <= 649)
				{
					Vector3 zero = Vector3.Zero;
					switch (this.type)
					{
					case 646:
						zero = new Vector3(0.7f, 0.5f, 0.1f);
						break;
					case 647:
						zero = new Vector3(0f, 0.6f, 0.7f);
						break;
					case 648:
						zero = new Vector3(0.6f, 0.2f, 0.6f);
						break;
					case 649:
						zero = new Vector3(0.6f, 0.6f, 0.9f);
						break;
					}
					Lighting.AddLight(mountedCenter, zero);
					Lighting.AddLight(base.Center, zero);
					DelegateMethods.v3_1 = zero;
					Utils.PlotTileLine(base.Center, mountedCenter, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				}
				if (this.ai[0] == 0f)
				{
					if ((num71 > 300f && this.type == 13) || (num71 > 400f && this.type == 32) || (num71 > 440f && this.type == 73) || (num71 > 440f && this.type == 74) || (num71 > 250f && this.type == 165) || (num71 > 350f && this.type == 256) || (num71 > 500f && this.type == 315) || (num71 > 550f && this.type == 322) || (num71 > 400f && this.type == 331) || (num71 > 550f && this.type == 332) || (num71 > 400f && this.type == 372) || (num71 > 300f && this.type == 396) || (num71 > 550f && this.type >= 646 && this.type <= 649) || (num71 > 600f && this.type == 652) || (num71 > 480f && this.type >= 486 && this.type <= 489) || (num71 > 500f && this.type == 446))
					{
						this.ai[0] = 1f;
					}
					else if (this.type >= 230 && this.type <= 235)
					{
						int num72 = 300 + (this.type - 230) * 30;
						if (num71 > (float)num72)
						{
							this.ai[0] = 1f;
						}
					}
					Vector2 value4 = base.Center - new Vector2(5f);
					Vector2 value5 = base.Center + new Vector2(5f);
					Point point = (value4 - new Vector2(16f)).ToTileCoordinates();
					Point point2 = (value5 + new Vector2(32f)).ToTileCoordinates();
					int num73 = point.X;
					int num74 = point2.X;
					int num75 = point.Y;
					int num76 = point2.Y;
					if (num73 < 0)
					{
						num73 = 0;
					}
					if (num74 > Main.maxTilesX)
					{
						num74 = Main.maxTilesX;
					}
					if (num75 < 0)
					{
						num75 = 0;
					}
					if (num76 > Main.maxTilesY)
					{
						num76 = Main.maxTilesY;
					}
					for (int num77 = num73; num77 < num74; num77++)
					{
						int num78 = num75;
						while (num78 < num76)
						{
							if (Main.tile[num77, num78] == null)
							{
								Main.tile[num77, num78] = new Tile();
							}
							Vector2 vector7;
							vector7.X = (float)(num77 * 16);
							vector7.Y = (float)(num78 * 16);
							if (value4.X + 10f > vector7.X && value4.X < vector7.X + 16f && value4.Y + 10f > vector7.Y && value4.Y < vector7.Y + 16f && Main.tile[num77, num78].nactive() && (Main.tileSolid[(int)Main.tile[num77, num78].type] || Main.tile[num77, num78].type == 314) && (this.type != 403 || Main.tile[num77, num78].type == 314))
							{
								if (Main.player[this.owner].grapCount < 10)
								{
									Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = this.whoAmI;
									Main.player[this.owner].grapCount++;
								}
								if (Main.myPlayer == this.owner)
								{
									int num79 = 0;
									int num80 = -1;
									int num81 = 100000;
									if (this.type == 73 || this.type == 74)
									{
										for (int num82 = 0; num82 < 1000; num82++)
										{
											if (num82 != this.whoAmI && Main.projectile[num82].active && Main.projectile[num82].owner == this.owner && Main.projectile[num82].aiStyle == 7 && Main.projectile[num82].ai[0] == 2f)
											{
												Main.projectile[num82].Kill();
											}
										}
									}
									else
									{
										int num83 = 3;
										if (this.type == 165)
										{
											num83 = 8;
										}
										if (this.type == 256)
										{
											num83 = 2;
										}
										if (this.type == 372)
										{
											num83 = 2;
										}
										if (this.type == 652)
										{
											num83 = 1;
										}
										if (this.type >= 646 && this.type <= 649)
										{
											num83 = 4;
										}
										for (int num84 = 0; num84 < 1000; num84++)
										{
											if (Main.projectile[num84].active && Main.projectile[num84].owner == this.owner && Main.projectile[num84].aiStyle == 7)
											{
												if (Main.projectile[num84].timeLeft < num81)
												{
													num80 = num84;
													num81 = Main.projectile[num84].timeLeft;
												}
												num79++;
											}
										}
										if (num79 > num83)
										{
											Main.projectile[num80].Kill();
										}
									}
								}
								WorldGen.KillTile(num77, num78, true, true, false);
								Main.PlaySound(0, num77 * 16, num78 * 16, 1, 1f, 0f);
								this.velocity.X = 0f;
								this.velocity.Y = 0f;
								this.ai[0] = 2f;
								this.position.X = (float)(num77 * 16 + 8 - this.width / 2);
								this.position.Y = (float)(num78 * 16 + 8 - this.height / 2);
								this.damage = 0;
								this.netUpdate = true;
								if (Main.myPlayer == this.owner)
								{
									NetMessage.SendData(13, -1, -1, "", this.owner, 0f, 0f, 0f, 0, 0, 0);
									break;
								}
								break;
							}
							else
							{
								num78++;
							}
						}
						if (this.ai[0] == 2f)
						{
							return;
						}
					}
					return;
				}
				if (this.ai[0] == 1f)
				{
					float num85 = 11f;
					if (this.type == 32)
					{
						num85 = 15f;
					}
					if (this.type == 73 || this.type == 74)
					{
						num85 = 17f;
					}
					if (this.type == 315)
					{
						num85 = 20f;
					}
					if (this.type == 322)
					{
						num85 = 22f;
					}
					if (this.type >= 230 && this.type <= 235)
					{
						num85 = 11f + (float)(this.type - 230) * 0.75f;
					}
					if (this.type == 446)
					{
						num85 = 20f;
					}
					if (this.type >= 486 && this.type <= 489)
					{
						num85 = 18f;
					}
					if (this.type >= 646 && this.type <= 649)
					{
						num85 = 24f;
					}
					if (this.type == 652)
					{
						num85 = 24f;
					}
					if (this.type == 332)
					{
						num85 = 17f;
					}
					if (num71 < 24f)
					{
						this.Kill();
					}
					num71 = num85 / num71;
					num69 *= num71;
					num70 *= num71;
					this.velocity.X = num69;
					this.velocity.Y = num70;
					return;
				}
				if (this.ai[0] == 2f)
				{
					int num86 = (int)(this.position.X / 16f) - 1;
					int num87 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num88 = (int)(this.position.Y / 16f) - 1;
					int num89 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num86 < 0)
					{
						num86 = 0;
					}
					if (num87 > Main.maxTilesX)
					{
						num87 = Main.maxTilesX;
					}
					if (num88 < 0)
					{
						num88 = 0;
					}
					if (num89 > Main.maxTilesY)
					{
						num89 = Main.maxTilesY;
					}
					bool flag2 = true;
					for (int num90 = num86; num90 < num87; num90++)
					{
						for (int num91 = num88; num91 < num89; num91++)
						{
							if (Main.tile[num90, num91] == null)
							{
								Main.tile[num90, num91] = new Tile();
							}
							Vector2 vector8;
							vector8.X = (float)(num90 * 16);
							vector8.Y = (float)(num91 * 16);
							if (this.position.X + (float)(this.width / 2) > vector8.X && this.position.X + (float)(this.width / 2) < vector8.X + 16f && this.position.Y + (float)(this.height / 2) > vector8.Y && this.position.Y + (float)(this.height / 2) < vector8.Y + 16f && Main.tile[num90, num91].nactive() && (Main.tileSolid[(int)Main.tile[num90, num91].type] || Main.tile[num90, num91].type == 314 || Main.tile[num90, num91].type == 5))
							{
								flag2 = false;
							}
						}
					}
					if (flag2)
					{
						this.ai[0] = 1f;
						return;
					}
					if (Main.player[this.owner].grapCount < 10)
					{
						Main.player[this.owner].grappling[Main.player[this.owner].grapCount] = this.whoAmI;
						Main.player[this.owner].grapCount++;
						return;
					}
				}
			}
			else if (this.aiStyle == 8)
			{
				if (this.type == 258 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item20, this.position);
				}
				if (this.type == 96 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item20, this.position);
				}
				if (this.type == 27)
				{
					for (int num92 = 0; num92 < 5; num92++)
					{
						float num93 = this.velocity.X / 3f * (float)num92;
						float num94 = this.velocity.Y / 3f * (float)num92;
						int num95 = 4;
						int num96 = Dust.NewDust(new Vector2(this.position.X + (float)num95, this.position.Y + (float)num95), this.width - num95 * 2, this.height - num95 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
						Main.dust[num96].noGravity = true;
						Main.dust[num96].velocity *= 0.1f;
						Main.dust[num96].velocity += this.velocity * 0.1f;
						Dust expr_4837_cp_0 = Main.dust[num96];
						expr_4837_cp_0.position.X = expr_4837_cp_0.position.X - num93;
						Dust expr_4852_cp_0 = Main.dust[num96];
						expr_4852_cp_0.position.Y = expr_4852_cp_0.position.Y - num94;
					}
					if (Main.rand.Next(5) == 0)
					{
						int num97 = 4;
						int num98 = Dust.NewDust(new Vector2(this.position.X + (float)num97, this.position.Y + (float)num97), this.width - num97 * 2, this.height - num97 * 2, 172, 0f, 0f, 100, default(Color), 0.6f);
						Main.dust[num98].velocity *= 0.25f;
						Main.dust[num98].velocity += this.velocity * 0.5f;
					}
				}
				else if (this.type == 502)
				{
					float num99 = (float)Main.DiscoR / 255f;
					float num100 = (float)Main.DiscoG / 255f;
					float num101 = (float)Main.DiscoB / 255f;
					num99 = (0.5f + num99) / 2f;
					num100 = (0.5f + num100) / 2f;
					num101 = (0.5f + num101) / 2f;
					Lighting.AddLight(base.Center, num99, num100, num101);
				}
				else if (this.type == 95 || this.type == 96)
				{
					int num102 = Dust.NewDust(new Vector2(this.position.X + this.velocity.X, this.position.Y + this.velocity.Y), this.width, this.height, 75, this.velocity.X, this.velocity.Y, 100, default(Color), 3f * this.scale);
					Main.dust[num102].noGravity = true;
				}
				else if (this.type == 253)
				{
					for (int num103 = 0; num103 < 2; num103++)
					{
						int num104 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num104].noGravity = true;
						Dust expr_4AED_cp_0 = Main.dust[num104];
						expr_4AED_cp_0.velocity.X = expr_4AED_cp_0.velocity.X * 0.3f;
						Dust expr_4B0B_cp_0 = Main.dust[num104];
						expr_4B0B_cp_0.velocity.Y = expr_4B0B_cp_0.velocity.Y * 0.3f;
					}
				}
				else
				{
					for (int num105 = 0; num105 < 2; num105++)
					{
						int num106 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num106].noGravity = true;
						Dust expr_4BB8_cp_0 = Main.dust[num106];
						expr_4BB8_cp_0.velocity.X = expr_4BB8_cp_0.velocity.X * 0.3f;
						Dust expr_4BD6_cp_0 = Main.dust[num106];
						expr_4BD6_cp_0.velocity.Y = expr_4BD6_cp_0.velocity.Y * 0.3f;
					}
				}
				if (this.type != 27 && this.type != 96 && this.type != 258)
				{
					this.ai[1] += 1f;
				}
				if (this.ai[1] >= 20f)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
				}
				if (this.type == 502)
				{
					this.rotation = this.velocity.ToRotation() + 1.57079637f;
					if (this.velocity.X != 0f)
					{
						this.spriteDirection = (this.direction = Math.Sign(this.velocity.X));
					}
				}
				else
				{
					this.rotation += 0.3f * (float)this.direction;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 9)
			{
				if (this.type == 491)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num107 = Main.rand.Next(3);
						if (num107 == 0)
						{
							num107 = 15;
						}
						else if (num107 == 1)
						{
							num107 = 57;
						}
						else
						{
							num107 = 58;
						}
						int num108 = Dust.NewDust(this.position, this.width, this.height, num107, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 255, default(Color), 0.7f);
						Main.dust[num108].velocity *= 0.25f;
						Main.dust[num108].position = (Main.dust[num108].position + this.position) / 2f;
					}
				}
				else if (this.type == 34)
				{
					int num109 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 3.5f);
					Main.dust[num109].noGravity = true;
					Main.dust[num109].velocity *= 1.4f;
					num109 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
				}
				else if (this.type == 79)
				{
					if (this.soundDelay == 0 && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 2f)
					{
						this.soundDelay = 10;
						Main.PlaySound(SoundID.Item9, this.position);
					}
					for (int num110 = 0; num110 < 1; num110++)
					{
						int num111 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2.5f);
						Main.dust[num111].velocity *= 0.1f;
						Main.dust[num111].velocity += this.velocity * 0.2f;
						Main.dust[num111].position.X = this.position.X + (float)(this.width / 2) + 4f + (float)Main.rand.Next(-2, 3);
						Main.dust[num111].position.Y = this.position.Y + (float)(this.height / 2) + (float)Main.rand.Next(-2, 3);
						Main.dust[num111].noGravity = true;
					}
				}
				else
				{
					if (this.soundDelay == 0 && Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 2f)
					{
						this.soundDelay = 10;
						Main.PlaySound(SoundID.Item9, this.position);
					}
					int num112 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num112].velocity *= 0.3f;
					Main.dust[num112].position.X = this.position.X + (float)(this.width / 2) + 4f + (float)Main.rand.Next(-4, 5);
					Main.dust[num112].position.Y = this.position.Y + (float)(this.height / 2) + (float)Main.rand.Next(-4, 5);
					Main.dust[num112].noGravity = true;
				}
				if (Main.myPlayer == this.owner && this.ai[0] <= 0f)
				{
					if (Main.player[this.owner].channel)
					{
						float num113 = 12f;
						if (this.type == 16)
						{
							num113 = 15f;
						}
						if (this.type == 491)
						{
							num113 = 20f;
						}
						Vector2 vector9 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num114 = (float)Main.mouseX + Main.screenPosition.X - vector9.X;
						float num115 = (float)Main.mouseY + Main.screenPosition.Y - vector9.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num115 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector9.Y;
						}
						float num116 = (float)Math.Sqrt((double)(num114 * num114 + num115 * num115));
						num116 = (float)Math.Sqrt((double)(num114 * num114 + num115 * num115));
						if (this.ai[0] < 0f)
						{
							this.ai[0] += 1f;
						}
						if (this.type == 491 && num116 < 100f)
						{
							if (this.velocity.Length() < num113)
							{
								this.velocity *= 1.1f;
								if (this.velocity.Length() > num113)
								{
									this.velocity.Normalize();
									this.velocity *= num113;
								}
							}
							if (this.ai[0] == 0f)
							{
								this.ai[0] = -10f;
							}
						}
						else if (num116 > num113)
						{
							num116 = num113 / num116;
							num114 *= num116;
							num115 *= num116;
							int num117 = (int)(num114 * 1000f);
							int num118 = (int)(this.velocity.X * 1000f);
							int num119 = (int)(num115 * 1000f);
							int num120 = (int)(this.velocity.Y * 1000f);
							if (num117 != num118 || num119 != num120)
							{
								this.netUpdate = true;
							}
							if (this.type == 491)
							{
								Vector2 value6 = new Vector2(num114, num115);
								this.velocity = (this.velocity * 4f + value6) / 5f;
							}
							else
							{
								this.velocity.X = num114;
								this.velocity.Y = num115;
							}
						}
						else
						{
							int num121 = (int)(num114 * 1000f);
							int num122 = (int)(this.velocity.X * 1000f);
							int num123 = (int)(num115 * 1000f);
							int num124 = (int)(this.velocity.Y * 1000f);
							if (num121 != num122 || num123 != num124)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num114;
							this.velocity.Y = num115;
						}
					}
					else if (this.ai[0] <= 0f)
					{
						this.netUpdate = true;
						if (this.type != 491)
						{
							float num125 = 12f;
							Vector2 vector10 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num126 = (float)Main.mouseX + Main.screenPosition.X - vector10.X;
							float num127 = (float)Main.mouseY + Main.screenPosition.Y - vector10.Y;
							if (Main.player[this.owner].gravDir == -1f)
							{
								num127 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector10.Y;
							}
							float num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
							if (num128 == 0f || this.ai[0] < 0f)
							{
								vector10 = new Vector2(Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2), Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2));
								num126 = this.position.X + (float)this.width * 0.5f - vector10.X;
								num127 = this.position.Y + (float)this.height * 0.5f - vector10.Y;
								num128 = (float)Math.Sqrt((double)(num126 * num126 + num127 * num127));
							}
							num128 = num125 / num128;
							num126 *= num128;
							num127 *= num128;
							this.velocity.X = num126;
							this.velocity.Y = num127;
							if (this.velocity.X == 0f && this.velocity.Y == 0f)
							{
								this.Kill();
							}
						}
						this.ai[0] = 1f;
					}
				}
				if (this.type == 491)
				{
					this.localAI[0] += 1f;
					if (this.ai[0] > 0f && this.localAI[0] > 15f)
					{
						this.tileCollide = false;
						Vector2 vector11 = Main.player[this.owner].Center - base.Center;
						if (vector11.Length() < 20f)
						{
							this.Kill();
						}
						vector11.Normalize();
						vector11 *= 25f;
						this.velocity = (this.velocity * 5f + vector11) / 6f;
					}
					if (this.ai[0] < 0f || (this.velocity.X == 0f && this.velocity.Y == 0f))
					{
						this.rotation += 0.3f;
					}
					else if (this.ai[0] > 0f)
					{
						this.rotation += 0.3f * (float)this.direction;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 34)
				{
					this.rotation += 0.3f * (float)this.direction;
				}
				else if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 2.355f;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 10)
			{
				if (this.type == 31 && this.ai[0] != 2f)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num129 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Dust expr_59B0_cp_0 = Main.dust[num129];
						expr_59B0_cp_0.velocity.X = expr_59B0_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 39)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num130 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 38, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Dust expr_5A4A_cp_0 = Main.dust[num130];
						expr_5A4A_cp_0.velocity.X = expr_5A4A_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type >= 411 && this.type <= 414)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num131 = 9;
						if (this.type == 412 || this.type == 414)
						{
							num131 = 11;
						}
						if (this.type == 413)
						{
							num131 = 19;
						}
						int num132 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num131, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num132].noGravity = true;
						Main.dust[num132].velocity -= this.velocity * 0.5f;
					}
				}
				else if (this.type == 40)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num133 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num133].velocity *= 0.4f;
					}
				}
				else if (this.type == 42 || this.type == 31)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num134 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5C73_cp_0 = Main.dust[num134];
						expr_5C73_cp_0.velocity.X = expr_5C73_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 56 || this.type == 65)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num135 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5D0B_cp_0 = Main.dust[num135];
						expr_5D0B_cp_0.velocity.X = expr_5D0B_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 67 || this.type == 68)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num136 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 51, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5DA3_cp_0 = Main.dust[num136];
						expr_5DA3_cp_0.velocity.X = expr_5DA3_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 71)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num137 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 53, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5E31_cp_0 = Main.dust[num137];
						expr_5E31_cp_0.velocity.X = expr_5E31_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 179)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num138 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 149, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5EC5_cp_0 = Main.dust[num138];
						expr_5EC5_cp_0.velocity.X = expr_5EC5_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type == 241 || this.type == 354)
				{
					if (Main.rand.Next(2) == 0)
					{
						int num139 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, 0f, 0, default(Color), 1f);
						Dust expr_5F60_cp_0 = Main.dust[num139];
						expr_5F60_cp_0.velocity.X = expr_5F60_cp_0.velocity.X * 0.4f;
					}
				}
				else if (this.type != 109 && Main.rand.Next(20) == 0)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 1f);
				}
				this.tileCollide = true;
				this.localAI[1] = 0f;
				if (Main.myPlayer == this.owner && this.ai[0] == 0f)
				{
					this.tileCollide = false;
					if (Main.player[this.owner].channel)
					{
						this.localAI[1] = -1f;
						float num140 = 12f;
						Vector2 vector12 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num141 = (float)Main.mouseX + Main.screenPosition.X - vector12.X;
						float num142 = (float)Main.mouseY + Main.screenPosition.Y - vector12.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num142 = Main.screenPosition.Y + (float)Main.screenHeight - (float)Main.mouseY - vector12.Y;
						}
						float num143 = (float)Math.Sqrt((double)(num141 * num141 + num142 * num142));
						num143 = (float)Math.Sqrt((double)(num141 * num141 + num142 * num142));
						if (num143 > num140)
						{
							num143 = num140 / num143;
							num141 *= num143;
							num142 *= num143;
							if (num141 != this.velocity.X || num142 != this.velocity.Y)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num141;
							this.velocity.Y = num142;
						}
						else
						{
							if (num141 != this.velocity.X || num142 != this.velocity.Y)
							{
								this.netUpdate = true;
							}
							this.velocity.X = num141;
							this.velocity.Y = num142;
						}
					}
					else
					{
						this.ai[0] = 1f;
						this.netUpdate = true;
					}
				}
				if (this.ai[0] == 1f && this.type != 109)
				{
					if (this.type == 42 || this.type == 65 || this.type == 68 || this.type == 354)
					{
						this.ai[1] += 1f;
						if (this.ai[1] >= 60f)
						{
							this.ai[1] = 60f;
							this.velocity.Y = this.velocity.Y + 0.2f;
						}
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 0.41f;
					}
				}
				else if (this.ai[0] == 2f && this.type != 109)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
					if ((double)this.velocity.X < -0.04)
					{
						this.velocity.X = this.velocity.X + 0.04f;
					}
					else if ((double)this.velocity.X > 0.04)
					{
						this.velocity.X = this.velocity.X - 0.04f;
					}
					else
					{
						this.velocity.X = 0f;
					}
				}
				this.rotation += 0.1f;
				if (this.velocity.Y > 10f)
				{
					this.velocity.Y = 10f;
					return;
				}
			}
			else if (this.aiStyle == 11)
			{
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
					}
					else if (this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					this.rotation = this.velocity.X * 0.1f;
					this.frameCounter++;
					if (this.frameCounter >= 4)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
					if (Main.rand.Next(6) == 0)
					{
						int num144 = 56;
						if (this.type == 86)
						{
							num144 = 73;
						}
						else if (this.type == 87)
						{
							num144 = 74;
						}
						int num145 = Dust.NewDust(this.position, this.width, this.height, num144, 0f, 0f, 200, default(Color), 0.8f);
						Main.dust[num145].velocity *= 0.3f;
						Main.dust[num145].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
					}
				}
				else
				{
					this.rotation += 0.02f;
				}
				if (Main.myPlayer == this.owner)
				{
					if (this.type == 72)
					{
						if (Main.player[Main.myPlayer].blueFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (this.type == 86)
					{
						if (Main.player[Main.myPlayer].redFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (this.type == 87)
					{
						if (Main.player[Main.myPlayer].greenFairy)
						{
							this.timeLeft = 2;
						}
					}
					else if (Main.player[Main.myPlayer].lightOrb)
					{
						this.timeLeft = 2;
					}
				}
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				float num146 = 3f;
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					num146 = 3.75f;
				}
				Vector2 vector13 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num147 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector13.X;
				float num148 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector13.Y;
				int num149 = 70;
				if (this.type == 18)
				{
					if (Main.player[this.owner].controlUp)
					{
						num148 = Main.player[this.owner].position.Y - 40f - vector13.Y;
						num147 -= 6f;
						num149 = 4;
					}
					else if (Main.player[this.owner].controlDown)
					{
						num148 = Main.player[this.owner].position.Y + (float)Main.player[this.owner].height + 40f - vector13.Y;
						num147 -= 6f;
						num149 = 4;
					}
				}
				float num150 = (float)Math.Sqrt((double)(num147 * num147 + num148 * num148));
				num150 = (float)Math.Sqrt((double)(num147 * num147 + num148 * num148));
				if (this.type == 72 || this.type == 86 || this.type == 87)
				{
					num149 = 40;
				}
				if (num150 > 800f)
				{
					this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
					this.position.Y = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - (float)(this.height / 2);
					return;
				}
				if (num150 > (float)num149)
				{
					num150 = num146 / num150;
					num147 *= num150;
					num148 *= num150;
					this.velocity.X = num147;
					this.velocity.Y = num148;
					return;
				}
				this.velocity.X = 0f;
				this.velocity.Y = 0f;
				return;
			}
			else if (this.aiStyle == 12)
			{
				if (this.type == 288 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
				}
				if (this.type == 280 || this.type == 288)
				{
					this.scale -= 0.002f;
					if (this.scale <= 0f)
					{
						this.Kill();
					}
					if (this.type == 288)
					{
						this.ai[0] = 4f;
					}
					if (this.ai[0] <= 3f)
					{
						this.ai[0] += 1f;
						return;
					}
					this.velocity.Y = this.velocity.Y + 0.075f;
					for (int num151 = 0; num151 < 3; num151++)
					{
						float num152 = this.velocity.X / 3f * (float)num151;
						float num153 = this.velocity.Y / 3f * (float)num151;
						int num154 = 14;
						int num155 = Dust.NewDust(new Vector2(this.position.X + (float)num154, this.position.Y + (float)num154), this.width - num154 * 2, this.height - num154 * 2, 170, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num155].noGravity = true;
						Main.dust[num155].velocity *= 0.1f;
						Main.dust[num155].velocity += this.velocity * 0.5f;
						Dust expr_6A14_cp_0 = Main.dust[num155];
						expr_6A14_cp_0.position.X = expr_6A14_cp_0.position.X - num152;
						Dust expr_6A2F_cp_0 = Main.dust[num155];
						expr_6A2F_cp_0.position.Y = expr_6A2F_cp_0.position.Y - num153;
					}
					if (Main.rand.Next(8) == 0)
					{
						int num156 = 16;
						int num157 = Dust.NewDust(new Vector2(this.position.X + (float)num156, this.position.Y + (float)num156), this.width - num156 * 2, this.height - num156 * 2, 170, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num157].velocity *= 0.25f;
						Main.dust[num157].velocity += this.velocity * 0.5f;
						return;
					}
				}
				else
				{
					this.scale -= 0.02f;
					if (this.scale <= 0f)
					{
						this.Kill();
					}
					if (this.ai[0] > 3f)
					{
						this.velocity.Y = this.velocity.Y + 0.2f;
						for (int num158 = 0; num158 < 1; num158++)
						{
							for (int num159 = 0; num159 < 3; num159++)
							{
								float num160 = this.velocity.X / 3f * (float)num159;
								float num161 = this.velocity.Y / 3f * (float)num159;
								int num162 = 6;
								int num163 = Dust.NewDust(new Vector2(this.position.X + (float)num162, this.position.Y + (float)num162), this.width - num162 * 2, this.height - num162 * 2, 172, 0f, 0f, 100, default(Color), 1.2f);
								Main.dust[num163].noGravity = true;
								Main.dust[num163].velocity *= 0.3f;
								Main.dust[num163].velocity += this.velocity * 0.5f;
								Dust expr_6C7A_cp_0 = Main.dust[num163];
								expr_6C7A_cp_0.position.X = expr_6C7A_cp_0.position.X - num160;
								Dust expr_6C95_cp_0 = Main.dust[num163];
								expr_6C95_cp_0.position.Y = expr_6C95_cp_0.position.Y - num161;
							}
							if (Main.rand.Next(8) == 0)
							{
								int num164 = 6;
								int num165 = Dust.NewDust(new Vector2(this.position.X + (float)num164, this.position.Y + (float)num164), this.width - num164 * 2, this.height - num164 * 2, 172, 0f, 0f, 100, default(Color), 0.75f);
								Main.dust[num165].velocity *= 0.5f;
								Main.dust[num165].velocity += this.velocity * 0.5f;
							}
						}
						return;
					}
					this.ai[0] += 1f;
					return;
				}
			}
			else if (this.aiStyle == 13)
			{
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				if (this.type != 481)
				{
					Main.player[this.owner].itemAnimation = 5;
					Main.player[this.owner].itemTime = 5;
				}
				if (this.alpha == 0)
				{
					if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
					{
						Main.player[this.owner].ChangeDir(1);
					}
					else
					{
						Main.player[this.owner].ChangeDir(-1);
					}
				}
				if (this.type == 481)
				{
					if (this.ai[0] == 0f)
					{
						this.extraUpdates = 0;
					}
					else
					{
						this.extraUpdates = 1;
					}
				}
				Vector2 vector14 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num166 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector14.X;
				float num167 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector14.Y;
				float num168 = (float)Math.Sqrt((double)(num166 * num166 + num167 * num167));
				if (this.ai[0] == 0f)
				{
					if (num168 > 700f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 262 && num168 > 500f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 271 && num168 > 200f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 273 && num168 > 150f)
					{
						this.ai[0] = 1f;
					}
					else if (this.type == 481 && num168 > 350f)
					{
						this.ai[0] = 1f;
					}
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					this.ai[1] += 1f;
					if (this.ai[1] > 5f)
					{
						this.alpha = 0;
					}
					if (this.type == 262 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 271 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 273 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 481 && this.ai[1] > 8f)
					{
						this.ai[1] = 8f;
					}
					if (this.type == 404 && this.ai[1] > 8f)
					{
						this.ai[1] = 0f;
					}
					if (this.ai[1] >= 10f)
					{
						this.ai[1] = 15f;
						this.velocity.Y = this.velocity.Y + 0.3f;
					}
					if (this.type == 262 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
					}
					else if (this.type == 262)
					{
						this.spriteDirection = 1;
					}
					if (this.type == 271 && this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						return;
					}
					if (this.type == 271)
					{
						this.spriteDirection = 1;
						return;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.tileCollide = false;
					this.rotation = (float)Math.Atan2((double)num167, (double)num166) - 1.57f;
					float num169 = 20f;
					if (this.type == 262)
					{
						num169 = 30f;
					}
					if (num168 < 50f)
					{
						this.Kill();
					}
					num168 = num169 / num168;
					num166 *= num168;
					num167 *= num168;
					this.velocity.X = num166;
					this.velocity.Y = num167;
					if (this.type == 262 && this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
					}
					else if (this.type == 262)
					{
						this.spriteDirection = -1;
					}
					if (this.type == 271 && this.velocity.X < 0f)
					{
						this.spriteDirection = 1;
						return;
					}
					if (this.type == 271)
					{
						this.spriteDirection = -1;
						return;
					}
				}
			}
			else if (this.aiStyle == 14)
			{
				if (this.type == 473 && Main.netMode != 2)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 10f)
					{
						this.localAI[0] = 0f;
						int num170 = 30;
						if ((base.Center - Main.player[Main.myPlayer].Center).Length() < (float)(Main.screenWidth + num170 * 16))
						{
							int num171 = (int)base.Center.X / 16;
							int num172 = (int)base.Center.Y / 16;
							for (int num173 = num171 - num170; num173 <= num171 + num170; num173++)
							{
								for (int num174 = num172 - num170; num174 <= num172 + num170; num174++)
								{
									if (Main.rand.Next(4) == 0)
									{
										Vector2 vector15 = new Vector2((float)(num171 - num173), (float)(num172 - num174));
										if (vector15.Length() < (float)num170 && num173 > 0 && num173 < Main.maxTilesX - 1 && num174 > 0 && num174 < Main.maxTilesY - 1 && Main.tile[num173, num174] != null && Main.tile[num173, num174].active())
										{
											bool flag3 = false;
											if (Main.tile[num173, num174].type == 185 && Main.tile[num173, num174].frameY == 18)
											{
												if (Main.tile[num173, num174].frameX >= 576 && Main.tile[num173, num174].frameX <= 882)
												{
													flag3 = true;
												}
											}
											else if (Main.tile[num173, num174].type == 186 && Main.tile[num173, num174].frameX >= 864 && Main.tile[num173, num174].frameX <= 1170)
											{
												flag3 = true;
											}
											if (flag3 || Main.tileSpelunker[(int)Main.tile[num173, num174].type] || (Main.tileAlch[(int)Main.tile[num173, num174].type] && Main.tile[num173, num174].type != 82))
											{
												int num175 = Dust.NewDust(new Vector2((float)(num173 * 16), (float)(num174 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
												Main.dust[num175].fadeIn = 0.75f;
												Main.dust[num175].velocity *= 0.1f;
												Main.dust[num175].noLight = true;
											}
										}
									}
								}
							}
						}
					}
				}
				if (this.type == 352)
				{
					if (this.localAI[1] == 0f)
					{
						this.localAI[1] = 1f;
					}
					this.alpha += (int)(25f * this.localAI[1]);
					if (this.alpha <= 0)
					{
						this.alpha = 0;
						this.localAI[1] = 1f;
					}
					else if (this.alpha >= 255)
					{
						this.alpha = 255;
						this.localAI[1] = -1f;
					}
					this.scale += this.localAI[1] * 0.01f;
				}
				if (this.type == 346)
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(SoundID.Item1, this.position);
					}
					this.frame = (int)this.ai[1];
					if (this.owner == Main.myPlayer && this.timeLeft == 1)
					{
						for (int num176 = 0; num176 < 5; num176++)
						{
							float num177 = 10f;
							Vector2 vector16 = new Vector2(base.Center.X, base.Center.Y);
							float num178 = (float)Main.rand.Next(-20, 21);
							float num179 = (float)Main.rand.Next(-20, 0);
							float num180 = (float)Math.Sqrt((double)(num178 * num178 + num179 * num179));
							num180 = num177 / num180;
							num178 *= num180;
							num179 *= num180;
							num178 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
							num179 *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
							Projectile.NewProjectile(vector16.X, vector16.Y, num178, num179, 347, 40, 0f, Main.myPlayer, 0f, this.ai[1]);
						}
					}
				}
				if (this.type == 196)
				{
					int num181 = Main.rand.Next(1, 3);
					for (int num182 = 0; num182 < num181; num182++)
					{
						int num183 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num183].alpha += Main.rand.Next(100);
						Main.dust[num183].velocity *= 0.3f;
						Dust expr_78AD_cp_0 = Main.dust[num183];
						expr_78AD_cp_0.velocity.X = expr_78AD_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.025f;
						Dust expr_78DB_cp_0 = Main.dust[num183];
						expr_78DB_cp_0.velocity.Y = expr_78DB_cp_0.velocity.Y - (0.4f + (float)Main.rand.Next(-3, 14) * 0.15f);
						Main.dust[num183].fadeIn = 1.25f + (float)Main.rand.Next(20) * 0.15f;
					}
				}
				if (this.type == 53)
				{
					try
					{
						int num184 = (int)(this.position.X / 16f) - 1;
						int num185 = (int)((this.position.X + (float)this.width) / 16f) + 2;
						int num186 = (int)(this.position.Y / 16f) - 1;
						int num187 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
						if (num184 < 0)
						{
							num184 = 0;
						}
						if (num185 > Main.maxTilesX)
						{
							num185 = Main.maxTilesX;
						}
						if (num186 < 0)
						{
							num186 = 0;
						}
						if (num187 > Main.maxTilesY)
						{
							num187 = Main.maxTilesY;
						}
						for (int num188 = num184; num188 < num185; num188++)
						{
							for (int num189 = num186; num189 < num187; num189++)
							{
								if (Main.tile[num188, num189] != null && Main.tile[num188, num189].nactive() && (Main.tileSolid[(int)Main.tile[num188, num189].type] || (Main.tileSolidTop[(int)Main.tile[num188, num189].type] && Main.tile[num188, num189].frameY == 0)))
								{
									Vector2 vector17;
									vector17.X = (float)(num188 * 16);
									vector17.Y = (float)(num189 * 16);
									if (this.position.X + (float)this.width > vector17.X && this.position.X < vector17.X + 16f && this.position.Y + (float)this.height > vector17.Y && this.position.Y < vector17.Y + 16f)
									{
										this.velocity.X = 0f;
										this.velocity.Y = -0.2f;
									}
								}
							}
						}
					}
					catch
					{
					}
				}
				if (this.type == 277)
				{
					if (this.alpha > 0)
					{
						this.alpha -= 30;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
					if (Main.expertMode)
					{
						float scaleFactor = 12f;
						int num190 = (int)Player.FindClosest(base.Center, 1, 1);
						Vector2 value7 = Main.player[num190].Center - base.Center;
						value7.Normalize();
						value7 *= scaleFactor;
						int num191 = 200;
						this.velocity.X = (this.velocity.X * (float)(num191 - 1) + value7.X) / (float)num191;
						if (this.velocity.Length() > 16f)
						{
							this.velocity.Normalize();
							this.velocity *= 16f;
						}
					}
				}
				if (this.type == 261 || this.type == 277)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 15f)
					{
						this.ai[0] = 15f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.Kill();
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.05f;
				}
				else if (this.type == 378)
				{
					if (this.localAI[0] == 0f)
					{
						Main.PlaySound(SoundID.Item17, this.position);
						this.localAI[0] += 1f;
					}
					Rectangle rectangle2 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					for (int num192 = 0; num192 < 200; num192++)
					{
						if (Main.npc[num192].CanBeChasedBy(this, true))
						{
							Rectangle value8 = new Rectangle((int)Main.npc[num192].position.X, (int)Main.npc[num192].position.Y, Main.npc[num192].width, Main.npc[num192].height);
							if (rectangle2.Intersects(value8))
							{
								this.Kill();
								return;
							}
						}
					}
					this.ai[0] += 1f;
					if (this.ai[0] > 10f)
					{
						this.ai[0] = 90f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.Kill();
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.1f;
				}
				else if (this.type == 483)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 5f)
					{
						if (this.owner == Main.myPlayer && this.ai[0] > (float)Main.rand.Next(20, 130))
						{
							this.Kill();
						}
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.3f;
						this.velocity.X = this.velocity.X * 0.99f;
					}
					this.rotation += this.velocity.X * 0.05f;
				}
				else if (this.type == 538)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 60f || this.velocity.Y >= 0f)
					{
						this.alpha += 6;
						this.velocity *= 0.5f;
					}
					else if (this.ai[0] > 5f)
					{
						this.velocity.Y = this.velocity.Y + 0.1f;
						this.velocity.X = this.velocity.X * 1.025f;
						this.alpha -= 23;
						this.scale = 0.8f * (255f - (float)this.alpha) / 255f;
						if (this.alpha < 0)
						{
							this.alpha = 0;
						}
					}
					if (this.alpha >= 255 && this.ai[0] > 5f)
					{
						this.Kill();
						return;
					}
				}
				else
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 5f)
					{
						this.ai[0] = 5f;
						if (this.velocity.Y == 0f && this.velocity.X != 0f)
						{
							this.velocity.X = this.velocity.X * 0.97f;
							if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
							{
								this.velocity.X = 0f;
								this.netUpdate = true;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
					this.rotation += this.velocity.X * 0.1f;
				}
				if (this.type == 538)
				{
					if (this.localAI[1] == 0f)
					{
						this.localAI[1] = 1f;
						Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7, 1f, 0f);
					}
					if (this.velocity.Y < 0f && this.ai[0] < 60f)
					{
						if (Main.rand.Next(4) == 0)
						{
							int num193 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num193].position = base.Center;
							Main.dust[num193].scale += (float)Main.rand.Next(50) * 0.01f;
							Main.dust[num193].noGravity = true;
							Dust expr_835D_cp_0 = Main.dust[num193];
							expr_835D_cp_0.velocity.Y = expr_835D_cp_0.velocity.Y - 2f;
						}
						if (Main.rand.Next(6) == 0)
						{
							int num194 = Dust.NewDust(this.position, this.width, this.height, 176, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num194].position = base.Center;
							Main.dust[num194].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
							Main.dust[num194].noGravity = true;
							Main.dust[num194].velocity *= 0.1f;
						}
					}
				}
				if (this.type == 450)
				{
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
						Main.PlaySound(SoundID.Item13, this.position);
					}
					if (Main.rand.Next(2) == 0)
					{
						int num195 = Dust.NewDust(this.position, this.width, this.height, 228, 0f, 0f, 100, default(Color), 1f);
						Dust expr_84BD_cp_0 = Main.dust[num195];
						expr_84BD_cp_0.position.X = expr_84BD_cp_0.position.X - 2f;
						Dust expr_84DB_cp_0 = Main.dust[num195];
						expr_84DB_cp_0.position.Y = expr_84DB_cp_0.position.Y + 2f;
						Main.dust[num195].scale += (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num195].noGravity = true;
						Dust expr_852E_cp_0 = Main.dust[num195];
						expr_852E_cp_0.velocity.Y = expr_852E_cp_0.velocity.Y - 2f;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num196 = Dust.NewDust(this.position, this.width, this.height, 228, 0f, 0f, 100, default(Color), 1f);
						Dust expr_8599_cp_0 = Main.dust[num196];
						expr_8599_cp_0.position.X = expr_8599_cp_0.position.X - 2f;
						Dust expr_85B7_cp_0 = Main.dust[num196];
						expr_85B7_cp_0.position.Y = expr_85B7_cp_0.position.Y + 2f;
						Main.dust[num196].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num196].noGravity = true;
						Main.dust[num196].velocity *= 0.1f;
					}
					if (++this.frameCounter >= 3)
					{
						this.frameCounter = 0;
						if (++this.frame >= 5)
						{
							this.frame = 0;
						}
					}
					if ((double)this.velocity.Y < 0.25 && (double)this.velocity.Y > 0.15)
					{
						this.velocity.X = this.velocity.X * 0.8f;
					}
					this.rotation = -this.velocity.X * 0.05f;
				}
				if (this.type == 480)
				{
					this.alpha = 255;
					int num197 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
					Dust expr_8721_cp_0 = Main.dust[num197];
					expr_8721_cp_0.position.X = expr_8721_cp_0.position.X - 2f;
					Dust expr_873F_cp_0 = Main.dust[num197];
					expr_873F_cp_0.position.Y = expr_873F_cp_0.position.Y + 2f;
					Main.dust[num197].scale += (float)Main.rand.Next(50) * 0.01f;
					Main.dust[num197].noGravity = true;
					Dust expr_8792_cp_0 = Main.dust[num197];
					expr_8792_cp_0.velocity.Y = expr_8792_cp_0.velocity.Y - 2f;
					if (Main.rand.Next(2) == 0)
					{
						int num198 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
						Dust expr_87FA_cp_0 = Main.dust[num198];
						expr_87FA_cp_0.position.X = expr_87FA_cp_0.position.X - 2f;
						Dust expr_8818_cp_0 = Main.dust[num198];
						expr_8818_cp_0.position.Y = expr_8818_cp_0.position.Y + 2f;
						Main.dust[num198].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num198].noGravity = true;
						Main.dust[num198].velocity *= 0.1f;
					}
				}
				if ((this.type >= 326 && this.type <= 328) || (this.type >= 400 && this.type <= 402))
				{
					if (this.wet)
					{
						this.Kill();
					}
					if (this.ai[1] == 0f && this.type >= 326 && this.type <= 328)
					{
						this.ai[1] = 1f;
						Main.PlaySound(SoundID.Item13, this.position);
					}
					int num199 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
					Dust expr_8956_cp_0 = Main.dust[num199];
					expr_8956_cp_0.position.X = expr_8956_cp_0.position.X - 2f;
					Dust expr_8974_cp_0 = Main.dust[num199];
					expr_8974_cp_0.position.Y = expr_8974_cp_0.position.Y + 2f;
					Main.dust[num199].scale += (float)Main.rand.Next(50) * 0.01f;
					Main.dust[num199].noGravity = true;
					Dust expr_89C7_cp_0 = Main.dust[num199];
					expr_89C7_cp_0.velocity.Y = expr_89C7_cp_0.velocity.Y - 2f;
					if (Main.rand.Next(2) == 0)
					{
						int num200 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						Dust expr_8A2E_cp_0 = Main.dust[num200];
						expr_8A2E_cp_0.position.X = expr_8A2E_cp_0.position.X - 2f;
						Dust expr_8A4C_cp_0 = Main.dust[num200];
						expr_8A4C_cp_0.position.Y = expr_8A4C_cp_0.position.Y + 2f;
						Main.dust[num200].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
						Main.dust[num200].noGravity = true;
						Main.dust[num200].velocity *= 0.1f;
					}
					if ((double)this.velocity.Y < 0.25 && (double)this.velocity.Y > 0.15)
					{
						this.velocity.X = this.velocity.X * 0.8f;
					}
					this.rotation = -this.velocity.X * 0.05f;
				}
				if (this.velocity.Y > 16f)
				{
					this.velocity.Y = 16f;
					return;
				}
			}
			else if (this.aiStyle == 15)
			{
				if (this.type == 25)
				{
					if (Main.rand.Next(15) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.3f);
					}
				}
				else if (this.type == 26)
				{
					int num201 = Dust.NewDust(this.position, this.width, this.height, 172, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, default(Color), 1.5f);
					Main.dust[num201].noGravity = true;
					Dust expr_8C1E_cp_0 = Main.dust[num201];
					expr_8C1E_cp_0.velocity.X = expr_8C1E_cp_0.velocity.X / 2f;
					Dust expr_8C3C_cp_0 = Main.dust[num201];
					expr_8C3C_cp_0.velocity.Y = expr_8C3C_cp_0.velocity.Y / 2f;
				}
				else if (this.type == 35)
				{
					int num202 = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 100, default(Color), 3f);
					Main.dust[num202].noGravity = true;
					Dust expr_8CCB_cp_0 = Main.dust[num202];
					expr_8CCB_cp_0.velocity.X = expr_8CCB_cp_0.velocity.X * 2f;
					Dust expr_8CE9_cp_0 = Main.dust[num202];
					expr_8CE9_cp_0.velocity.Y = expr_8CE9_cp_0.velocity.Y * 2f;
				}
				else if (this.type == 154)
				{
					int num203 = Dust.NewDust(this.position, this.width, this.height, 115, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, default(Color), 1.5f);
					Main.dust[num203].noGravity = true;
					Main.dust[num203].velocity *= 0.25f;
				}
				if (Main.player[this.owner].dead)
				{
					this.Kill();
					return;
				}
				Main.player[this.owner].itemAnimation = 10;
				Main.player[this.owner].itemTime = 10;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
				Vector2 mountedCenter2 = Main.player[this.owner].MountedCenter;
				Vector2 vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num204 = mountedCenter2.X - vector18.X;
				float num205 = mountedCenter2.Y - vector18.Y;
				float num206 = (float)Math.Sqrt((double)(num204 * num204 + num205 * num205));
				if (this.ai[0] == 0f)
				{
					float num207 = 160f;
					if (this.type == 63)
					{
						num207 *= 1.5f;
					}
					if (this.type == 247)
					{
						num207 *= 1.5f;
					}
					this.tileCollide = true;
					if (num206 > num207)
					{
						this.ai[0] = 1f;
						this.netUpdate = true;
					}
					else if (!Main.player[this.owner].channel)
					{
						if (this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
						this.velocity.Y = this.velocity.Y + 1f;
						this.velocity.X = this.velocity.X * 0.9f;
					}
				}
				else if (this.ai[0] == 1f)
				{
					float num208 = 14f / Main.player[this.owner].meleeSpeed;
					float num209 = 0.9f / Main.player[this.owner].meleeSpeed;
					float num210 = 300f;
					if (this.type == 63)
					{
						num210 *= 1.5f;
						num208 *= 1.5f;
						num209 *= 1.5f;
					}
					if (this.type == 247)
					{
						num210 *= 1.5f;
						num208 = 15.9f;
						num209 *= 2f;
					}
					Math.Abs(num204);
					Math.Abs(num205);
					if (this.ai[1] == 1f)
					{
						this.tileCollide = false;
					}
					if (!Main.player[this.owner].channel || num206 > num210 || !this.tileCollide)
					{
						this.ai[1] = 1f;
						if (this.tileCollide)
						{
							this.netUpdate = true;
						}
						this.tileCollide = false;
						if (num206 < 20f)
						{
							this.Kill();
						}
					}
					if (!this.tileCollide)
					{
						num209 *= 2f;
					}
					int num211 = 60;
					if (this.type == 247)
					{
						num211 = 100;
					}
					if (num206 > (float)num211 || !this.tileCollide)
					{
						num206 = num208 / num206;
						num204 *= num206;
						num205 *= num206;
						new Vector2(this.velocity.X, this.velocity.Y);
						float num212 = num204 - this.velocity.X;
						float num213 = num205 - this.velocity.Y;
						float num214 = (float)Math.Sqrt((double)(num212 * num212 + num213 * num213));
						num214 = num209 / num214;
						num212 *= num214;
						num213 *= num214;
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y * 0.98f;
						this.velocity.X = this.velocity.X + num212;
						this.velocity.Y = this.velocity.Y + num213;
					}
					else
					{
						if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 6f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
							this.velocity.Y = this.velocity.Y + 0.2f;
						}
						if (Main.player[this.owner].velocity.X == 0f)
						{
							this.velocity.X = this.velocity.X * 0.96f;
						}
					}
				}
				if (this.type != 247)
				{
					this.rotation = (float)Math.Atan2((double)num205, (double)num204) - this.velocity.X * 0.1f;
					return;
				}
				if (this.velocity.X < 0f)
				{
					this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
				}
				float num215 = this.position.X;
				float num216 = this.position.Y;
				float num217 = 600f;
				bool flag4 = false;
				if (this.owner == Main.myPlayer)
				{
					this.localAI[1] += 1f;
					if (this.localAI[1] > 20f)
					{
						this.localAI[1] = 20f;
						for (int num218 = 0; num218 < 200; num218++)
						{
							if (Main.npc[num218].CanBeChasedBy(this, false))
							{
								float num219 = Main.npc[num218].position.X + (float)(Main.npc[num218].width / 2);
								float num220 = Main.npc[num218].position.Y + (float)(Main.npc[num218].height / 2);
								float num221 = Math.Abs(this.position.X + (float)(this.width / 2) - num219) + Math.Abs(this.position.Y + (float)(this.height / 2) - num220);
								if (num221 < num217 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num218].position, Main.npc[num218].width, Main.npc[num218].height))
								{
									num217 = num221;
									num215 = num219;
									num216 = num220;
									flag4 = true;
								}
							}
						}
					}
				}
				if (flag4)
				{
					this.localAI[1] = 0f;
					float num222 = 14f;
					vector18 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					num204 = num215 - vector18.X;
					num205 = num216 - vector18.Y;
					num206 = (float)Math.Sqrt((double)(num204 * num204 + num205 * num205));
					num206 = num222 / num206;
					num204 *= num206;
					num205 *= num206;
					Projectile.NewProjectile(vector18.X, vector18.Y, num204, num205, 248, (int)((double)this.damage / 1.5), this.knockBack / 2f, Main.myPlayer, 0f, 0f);
					return;
				}
			}
			else if (this.aiStyle == 16)
			{
				if (this.type == 108 || this.type == 164)
				{
					this.ai[0] += 1f;
					if (this.ai[0] > 3f)
					{
						this.Kill();
					}
				}
				if (this.type != 37 && this.type != 397 && this.type != 470)
				{
					if (this.type != 519)
					{
						goto IL_98B0;
					}
				}
				try
				{
					int num223 = (int)(this.position.X / 16f) - 1;
					int num224 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num225 = (int)(this.position.Y / 16f) - 1;
					int num226 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num223 < 0)
					{
						num223 = 0;
					}
					if (num224 > Main.maxTilesX)
					{
						num224 = Main.maxTilesX;
					}
					if (num225 < 0)
					{
						num225 = 0;
					}
					if (num226 > Main.maxTilesY)
					{
						num226 = Main.maxTilesY;
					}
					for (int num227 = num223; num227 < num224; num227++)
					{
						for (int num228 = num225; num228 < num226; num228++)
						{
							if (Main.tile[num227, num228] != null && Main.tile[num227, num228].nactive() && (Main.tileSolid[(int)Main.tile[num227, num228].type] || (Main.tileSolidTop[(int)Main.tile[num227, num228].type] && Main.tile[num227, num228].frameY == 0)))
							{
								Vector2 vector19;
								vector19.X = (float)(num227 * 16);
								vector19.Y = (float)(num228 * 16);
								if (this.position.X + (float)this.width - 4f > vector19.X && this.position.X + 4f < vector19.X + 16f && this.position.Y + (float)this.height - 4f > vector19.Y && this.position.Y + 4f < vector19.Y + 16f)
								{
									this.velocity.X = 0f;
									this.velocity.Y = -0.2f;
								}
							}
						}
					}
				}
				catch
				{
				}
				IL_98B0:
				if (this.type == 519)
				{
					this.localAI[1] += 1f;
					float num229 = 180f - this.localAI[1];
					if (num229 < 0f)
					{
						num229 = 0f;
					}
					this.frameCounter++;
					if (num229 < 15f)
					{
						this.frameCounter++;
					}
					if ((float)this.frameCounter >= (num229 / 10f + 6f) / 2f)
					{
						this.frame++;
						this.frameCounter = 0;
						if (this.frame >= Main.projFrames[this.type])
						{
							this.frame = 0;
						}
					}
				}
				if (this.type == 681 && this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
				}
				if (this.type == 102)
				{
					if (this.velocity.Y > 10f)
					{
						this.velocity.Y = 10f;
					}
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(SoundID.Item10, this.position);
					}
					this.frameCounter++;
					if (this.frameCounter > 3)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame > 1)
					{
						this.frame = 0;
					}
					if (this.velocity.Y == 0f)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 40;
						this.knockBack = 8f;
						this.timeLeft = 3;
						this.netUpdate = true;
					}
				}
				if (this.type == 303 && this.timeLeft <= 3 && this.hostile)
				{
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				if (this.owner == Main.myPlayer && this.timeLeft <= 3)
				{
					this.tileCollide = false;
					this.ai[1] = 0f;
					this.alpha = 255;
					if (this.type == 28 || this.type == 37 || this.type == 75 || this.type == 516 || this.type == 519)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 100;
						this.knockBack = 8f;
					}
					else if (this.type == 29 || this.type == 470 || this.type == 637)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 250;
						this.height = 250;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 250;
						this.knockBack = 10f;
					}
					else if (this.type == 30 || this.type == 397 || this.type == 517 || this.type == 588)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 8f;
					}
					else if (this.type == 681)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 80;
						this.height = 80;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 8f;
					}
					else if (this.type == 133 || this.type == 134 || this.type == 135 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 338 || this.type == 339)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 8f;
					}
					else if (this.type == 139 || this.type == 140 || this.type == 141 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 340 || this.type == 341)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 200;
						this.height = 200;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.knockBack = 10f;
					}
				}
				else
				{
					if (this.type != 30 && this.type != 517 && this.type != 681 && this.type != 588 && this.type != 397 && this.type != 108 && this.type != 133 && this.type != 134 && this.type != 135 && this.type != 136 && this.type != 137 && this.type != 138 && this.type != 139 && this.type != 140 && this.type != 141 && this.type != 142 && this.type != 143 && this.type != 144 && this.type != 164 && this.type != 303 && this.type < 338 && this.type < 341)
					{
						this.damage = 0;
					}
					if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
					{
						this.localAI[1] += 1f;
						if (this.localAI[1] > 6f)
						{
							this.alpha = 0;
						}
						else
						{
							this.alpha = (int)(255f - 42f * this.localAI[1]) + 100;
							if (this.alpha > 255)
							{
								this.alpha = 255;
							}
						}
						for (int num230 = 0; num230 < 2; num230++)
						{
							float num231 = 0f;
							float num232 = 0f;
							if (num230 == 1)
							{
								num231 = this.velocity.X * 0.5f;
								num232 = this.velocity.Y * 0.5f;
							}
							if (this.localAI[1] > 9f)
							{
								if (Main.rand.Next(2) == 0)
								{
									int num233 = Dust.NewDust(new Vector2(this.position.X + 3f + num231, this.position.Y + 3f + num232) - this.velocity * 0.5f, this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 1f);
									Main.dust[num233].scale *= 1.4f + (float)Main.rand.Next(10) * 0.1f;
									Main.dust[num233].velocity *= 0.2f;
									Main.dust[num233].noGravity = true;
								}
								if (Main.rand.Next(2) == 0)
								{
									int num234 = Dust.NewDust(new Vector2(this.position.X + 3f + num231, this.position.Y + 3f + num232) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 0.5f);
									Main.dust[num234].fadeIn = 0.5f + (float)Main.rand.Next(5) * 0.1f;
									Main.dust[num234].velocity *= 0.05f;
								}
							}
						}
						float num235 = this.position.X;
						float num236 = this.position.Y;
						float num237 = 600f;
						bool flag5 = false;
						this.ai[0] += 1f;
						if (this.ai[0] > 30f)
						{
							this.ai[0] = 30f;
							for (int num238 = 0; num238 < 200; num238++)
							{
								if (Main.npc[num238].CanBeChasedBy(this, false))
								{
									float num239 = Main.npc[num238].position.X + (float)(Main.npc[num238].width / 2);
									float num240 = Main.npc[num238].position.Y + (float)(Main.npc[num238].height / 2);
									float num241 = Math.Abs(this.position.X + (float)(this.width / 2) - num239) + Math.Abs(this.position.Y + (float)(this.height / 2) - num240);
									if (num241 < num237 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num238].position, Main.npc[num238].width, Main.npc[num238].height))
									{
										num237 = num241;
										num235 = num239;
										num236 = num240;
										flag5 = true;
									}
								}
							}
						}
						if (!flag5)
						{
							num235 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
							num236 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
						}
						float num242 = 16f;
						Vector2 vector20 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
						float num243 = num235 - vector20.X;
						float num244 = num236 - vector20.Y;
						float num245 = (float)Math.Sqrt((double)(num243 * num243 + num244 * num244));
						num245 = num242 / num245;
						num243 *= num245;
						num244 *= num245;
						this.velocity.X = (this.velocity.X * 11f + num243) / 12f;
						this.velocity.Y = (this.velocity.Y * 11f + num244) / 12f;
					}
					else if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303)
					{
						if (Math.Abs(this.velocity.X) >= 8f || Math.Abs(this.velocity.Y) >= 8f)
						{
							for (int num246 = 0; num246 < 2; num246++)
							{
								float num247 = 0f;
								float num248 = 0f;
								if (num246 == 1)
								{
									num247 = this.velocity.X * 0.5f;
									num248 = this.velocity.Y * 0.5f;
								}
								int num249 = Dust.NewDust(new Vector2(this.position.X + 3f + num247, this.position.Y + 3f + num248) - this.velocity * 0.5f, this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 1f);
								Main.dust[num249].scale *= 2f + (float)Main.rand.Next(10) * 0.1f;
								Main.dust[num249].velocity *= 0.2f;
								Main.dust[num249].noGravity = true;
								num249 = Dust.NewDust(new Vector2(this.position.X + 3f + num247, this.position.Y + 3f + num248) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 0.5f);
								Main.dust[num249].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
								Main.dust[num249].velocity *= 0.05f;
							}
						}
						if (Math.Abs(this.velocity.X) < 15f && Math.Abs(this.velocity.Y) < 15f)
						{
							this.velocity *= 1.1f;
						}
					}
					else if (this.type == 133 || this.type == 136 || this.type == 139 || this.type == 142)
					{
						int num250 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num250].scale *= 1f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num250].velocity *= 0.2f;
						Main.dust[num250].noGravity = true;
					}
					else if (this.type == 135 || this.type == 138 || this.type == 141 || this.type == 144)
					{
						if ((double)this.velocity.X > -0.2 && (double)this.velocity.X < 0.2 && (double)this.velocity.Y > -0.2 && (double)this.velocity.Y < 0.2)
						{
							this.alpha += 2;
							if (this.alpha > 200)
							{
								this.alpha = 200;
							}
						}
						else
						{
							this.alpha = 0;
							int num251 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 3f) - this.velocity * 0.5f, this.width - 8, this.height - 8, 31, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num251].scale *= 1.6f + (float)Main.rand.Next(5) * 0.1f;
							Main.dust[num251].velocity *= 0.05f;
							Main.dust[num251].noGravity = true;
						}
					}
					else if (this.type != 30 && this.type != 517 && this.type != 681 && this.type != 397 && this.type != 519 && this.type != 588 && Main.rand.Next(2) == 0)
					{
						int num252 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num252].scale = 0.1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].fadeIn = 1.5f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].noGravity = true;
						Main.dust[num252].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
						Main.rand.Next(2);
						num252 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num252].scale = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num252].noGravity = true;
						Main.dust[num252].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2 - 6)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
					}
					else if (this.type == 681)
					{
						Dust dust = Dust.NewDustDirect(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
						dust.scale = 1f + (float)Main.rand.Next(5) * 0.1f;
						dust.noGravity = true;
						dust.position = base.Center + new Vector2((float)(6 * Math.Sign(this.velocity.X)), (float)(-(float)this.height / 2 - 6)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
					}
				}
				this.ai[0] += 1f;
				if (this.type == 338 || this.type == 339 || this.type == 340 || this.type == 341)
				{
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X)) - 1.57f;
					}
					else
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 134 || this.type == 137 || this.type == 140 || this.type == 143 || this.type == 303)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
				else if (this.type == 135 || this.type == 138 || this.type == 141 || this.type == 144)
				{
					this.velocity.Y = this.velocity.Y + 0.2f;
					this.velocity *= 0.97f;
					if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
					{
						this.velocity.X = 0f;
					}
					if ((double)this.velocity.Y > -0.1 && (double)this.velocity.Y < 0.1)
					{
						this.velocity.Y = 0f;
					}
				}
				else if (this.type == 133 || this.type == 136 || this.type == 139 || this.type == 142)
				{
					if (this.ai[0] > 15f)
					{
						if (this.velocity.Y == 0f)
						{
							this.velocity.X = this.velocity.X * 0.95f;
						}
						this.velocity.Y = this.velocity.Y + 0.2f;
					}
				}
				else if (((this.type == 30 || this.type == 397 || this.type == 517 || this.type == 681 || this.type == 588) && this.ai[0] > 10f) || (this.type != 30 && this.type != 397 && this.type != 517 && this.type != 588 && this.ai[0] > 5f))
				{
					this.ai[0] = 10f;
					if (this.velocity.Y == 0f && this.velocity.X != 0f)
					{
						this.velocity.X = this.velocity.X * 0.97f;
						if (this.type == 29 || this.type == 470 || this.type == 637)
						{
							this.velocity.X = this.velocity.X * 0.99f;
						}
						if ((double)this.velocity.X > -0.01 && (double)this.velocity.X < 0.01)
						{
							this.velocity.X = 0f;
							this.netUpdate = true;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.2f;
				}
				if (this.type == 519)
				{
					this.rotation += this.velocity.X * 0.06f;
					return;
				}
				if (this.type != 134 && this.type != 137 && this.type != 140 && this.type != 143 && this.type != 303 && (this.type < 338 || this.type > 341))
				{
					this.rotation += this.velocity.X * 0.1f;
					return;
				}
			}
			else if (this.aiStyle == 17)
			{
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.98f;
				}
				this.rotation += this.velocity.X * 0.1f;
				this.velocity.Y = this.velocity.Y + 0.2f;
				if (this.owner == Main.myPlayer)
				{
					int num253 = (int)((this.position.X + (float)(this.width / 2)) / 16f);
					int num254 = (int)((this.position.Y + (float)this.height - 4f) / 16f);
					if (Main.tile[num253, num254] != null && !Main.tile[num253, num254].active())
					{
						int num255 = 0;
						if (this.type >= 201 && this.type <= 205)
						{
							num255 = this.type - 200;
						}
						if (this.type >= 527 && this.type <= 531)
						{
							num255 = this.type - 527 + 6;
						}
						WorldGen.PlaceTile(num253, num254, 85, false, false, this.owner, num255);
						if (Main.tile[num253, num254].active())
						{
							if (Main.netMode != 0)
							{
								NetMessage.SendData(17, -1, -1, "", 1, (float)num253, (float)num254, 85f, num255, 0, 0);
							}
							int num256 = Sign.ReadSign(num253, num254, true);
							if (num256 >= 0)
							{
								Sign.TextSign(num256, this.miscText);
							}
							this.Kill();
							return;
						}
					}
				}
			}
			else if (this.aiStyle == 18)
			{
				if (this.ai[1] == 0f && this.type == 44)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item8, this.position);
				}
				if (this.type != 263 && this.type != 274)
				{
					this.rotation += (float)this.direction * 0.8f;
					this.ai[0] += 1f;
					if (this.ai[0] >= 30f)
					{
						if (this.ai[0] < 100f)
						{
							this.velocity *= 1.06f;
						}
						else
						{
							this.ai[0] = 200f;
						}
					}
					for (int num257 = 0; num257 < 2; num257++)
					{
						int num258 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num258].noGravity = true;
					}
					return;
				}
				if (this.type == 274 && this.velocity.X < 0f)
				{
					this.spriteDirection = -1;
				}
				this.rotation += (float)this.direction * 0.05f;
				this.rotation += (float)this.direction * 0.5f * ((float)this.timeLeft / 180f);
				if (this.type == 274)
				{
					this.velocity *= 0.96f;
					return;
				}
				this.velocity *= 0.95f;
				return;
			}
			else if (this.aiStyle == 19)
			{
				Vector2 vector21 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
				this.direction = Main.player[this.owner].direction;
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemTime = Main.player[this.owner].itemAnimation;
				this.position.X = vector21.X - (float)(this.width / 2);
				this.position.Y = vector21.Y - (float)(this.height / 2);
				if (!Main.player[this.owner].frozen)
				{
					if (this.type == 46)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.6f;
						}
						else
						{
							this.ai[0] += 1.4f;
						}
					}
					else if (this.type == 105)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 367)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.6f;
						}
						else
						{
							this.ai[0] += 1.5f;
						}
					}
					else if (this.type == 368)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.5f;
						}
						else
						{
							this.ai[0] += 1.4f;
						}
					}
					else if (this.type == 222)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
							if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
							{
								this.localAI[0] = 1f;
								Projectile.NewProjectile(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0], this.velocity.X, this.velocity.Y, 228, this.damage, this.knockBack, this.owner, 0f, 0f);
							}
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 342)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.4f;
							if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
							{
								this.localAI[0] = 1f;
								if (Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, new Vector2(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0]), this.width, this.height))
								{
									Projectile.NewProjectile(base.Center.X + this.velocity.X * this.ai[0], base.Center.Y + this.velocity.Y * this.ai[0], this.velocity.X * 2.4f, this.velocity.Y * 2.4f, 343, (int)((double)this.damage * 0.8), this.knockBack * 0.85f, this.owner, 0f, 0f);
								}
							}
						}
						else
						{
							this.ai[0] += 2.1f;
						}
					}
					else if (this.type == 47)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.2f;
						}
						else
						{
							this.ai[0] += 0.9f;
						}
					}
					else if (this.type == 153)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.5f;
						}
						else
						{
							this.ai[0] += 1.3f;
						}
					}
					else if (this.type == 49)
					{
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 4f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.1f;
						}
						else
						{
							this.ai[0] += 0.85f;
						}
					}
					else if (this.type == 64 || this.type == 215)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.9f;
						}
						else
						{
							this.ai[0] += 1.7f;
						}
					}
					else if (this.type == 66 || this.type == 97 || this.type == 212 || this.type == 218)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 2.1f;
						}
						else
						{
							this.ai[0] += 1.9f;
						}
					}
					else if (this.type == 130)
					{
						this.spriteDirection = -this.direction;
						if (this.ai[0] == 0f)
						{
							this.ai[0] = 3f;
							this.netUpdate = true;
						}
						if (Main.player[this.owner].itemAnimation < Main.player[this.owner].itemAnimationMax / 3)
						{
							this.ai[0] -= 1.3f;
						}
						else
						{
							this.ai[0] += 1f;
						}
					}
				}
				this.position += this.velocity * this.ai[0];
				if (this.type == 130)
				{
					if (this.ai[1] == 0f || this.ai[1] == 4f || this.ai[1] == 8f || this.ai[1] == 12f || this.ai[1] == 16f || this.ai[1] == 20f || this.ai[1] == 24f)
					{
						Projectile.NewProjectile(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2), this.velocity.X, this.velocity.Y, 131, this.damage / 3, 0f, this.owner, 0f, 0f);
					}
					this.ai[1] += 1f;
				}
				if (Main.player[this.owner].itemAnimation == 0)
				{
					this.Kill();
				}
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 2.355f;
				if (this.spriteDirection == -1)
				{
					this.rotation -= 1.57f;
				}
				if (this.type == 46)
				{
					if (Main.rand.Next(5) == 0)
					{
						Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.4f);
					}
					int num259 = Dust.NewDust(this.position, this.width, this.height, 27, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, default(Color), 1.2f);
					Main.dust[num259].noGravity = true;
					Dust expr_C625_cp_0 = Main.dust[num259];
					expr_C625_cp_0.velocity.X = expr_C625_cp_0.velocity.X / 2f;
					Dust expr_C645_cp_0 = Main.dust[num259];
					expr_C645_cp_0.velocity.Y = expr_C645_cp_0.velocity.Y / 2f;
					num259 = Dust.NewDust(this.position - this.velocity * 2f, this.width, this.height, 27, 0f, 0f, 150, default(Color), 1.4f);
					Dust expr_C6B9_cp_0 = Main.dust[num259];
					expr_C6B9_cp_0.velocity.X = expr_C6B9_cp_0.velocity.X / 5f;
					Dust expr_C6D9_cp_0 = Main.dust[num259];
					expr_C6D9_cp_0.velocity.Y = expr_C6D9_cp_0.velocity.Y / 5f;
					return;
				}
				if (this.type == 105)
				{
					if (Main.rand.Next(3) == 0)
					{
						int num260 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 57, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 200, default(Color), 1.2f);
						Main.dust[num260].velocity += this.velocity * 0.3f;
						Main.dust[num260].velocity *= 0.2f;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num261 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 43, 0f, 0f, 254, default(Color), 0.3f);
						Main.dust[num261].velocity += this.velocity * 0.5f;
						Main.dust[num261].velocity *= 0.5f;
						return;
					}
				}
				else if (this.type == 153)
				{
					int num262 = Dust.NewDust(this.position - this.velocity * 3f, this.width, this.height, 115, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 140, default(Color), 1f);
					Main.dust[num262].noGravity = true;
					Main.dust[num262].fadeIn = 1.25f;
					Main.dust[num262].velocity *= 0.25f;
					return;
				}
			}
			else if (this.aiStyle == 20)
			{
				if (this.type == 252)
				{
					this.frameCounter++;
					if (this.frameCounter >= 4)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.frame > 3)
					{
						this.frame = 0;
					}
				}
				if (this.type == 509)
				{
					this.frameCounter++;
					if (this.frameCounter >= 2)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.frame > 1)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					Main.PlaySound(SoundID.Item22, this.position);
					this.soundDelay = 30;
				}
				Vector2 vector22 = Main.player[this.owner].RotatedRelativePoint(Main.player[this.owner].MountedCenter, true);
				if (Main.myPlayer == this.owner)
				{
					if (Main.player[this.owner].channel)
					{
						float num263 = Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shootSpeed * this.scale;
						Vector2 vector23 = vector22;
						float num264 = (float)Main.mouseX + Main.screenPosition.X - vector23.X;
						float num265 = (float)Main.mouseY + Main.screenPosition.Y - vector23.Y;
						if (Main.player[this.owner].gravDir == -1f)
						{
							num265 = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector23.Y;
						}
						float num266 = (float)Math.Sqrt((double)(num264 * num264 + num265 * num265));
						num266 = (float)Math.Sqrt((double)(num264 * num264 + num265 * num265));
						num266 = num263 / num266;
						num264 *= num266;
						num265 *= num266;
						if (num264 != this.velocity.X || num265 != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity.X = num264;
						this.velocity.Y = num265;
					}
					else
					{
						this.Kill();
					}
				}
				if (this.velocity.X > 0f)
				{
					Main.player[this.owner].ChangeDir(1);
				}
				else if (this.velocity.X < 0f)
				{
					Main.player[this.owner].ChangeDir(-1);
				}
				this.spriteDirection = this.direction;
				Main.player[this.owner].ChangeDir(this.direction);
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemTime = 2;
				Main.player[this.owner].itemAnimation = 2;
				this.position.X = vector22.X - (float)(this.width / 2);
				this.position.Y = vector22.Y - (float)(this.height / 2);
				this.rotation = (float)(Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.5700000524520874);
				if (Main.player[this.owner].direction == 1)
				{
					Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				}
				else
				{
					Main.player[this.owner].itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
				}
				this.velocity.X = this.velocity.X * (1f + (float)Main.rand.Next(-3, 4) * 0.01f);
				if (Main.rand.Next(6) == 0)
				{
					int num267 = Dust.NewDust(this.position + this.velocity * (float)Main.rand.Next(6, 10) * 0.1f, this.width, this.height, 31, 0f, 0f, 80, default(Color), 1.4f);
					Dust expr_CDF6_cp_0 = Main.dust[num267];
					expr_CDF6_cp_0.position.X = expr_CDF6_cp_0.position.X - 4f;
					Main.dust[num267].noGravity = true;
					Main.dust[num267].velocity *= 0.2f;
					Main.dust[num267].velocity.Y = (float)(-(float)Main.rand.Next(7, 13)) * 0.15f;
					return;
				}
			}
			else if (this.aiStyle == 21)
			{
				this.rotation = this.velocity.X * 0.1f;
				this.spriteDirection = -this.direction;
				if (Main.rand.Next(3) == 0)
				{
					int num268 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 80, default(Color), 1f);
					Main.dust[num268].noGravity = true;
					Main.dust[num268].velocity *= 0.2f;
				}
				if (this.ai[1] == 1f)
				{
					this.ai[1] = 0f;
					Main.harpNote = this.ai[0];
					Main.PlaySound(SoundID.Item26, this.position);
					return;
				}
			}
			else if (this.aiStyle == 22)
			{
				if (this.velocity.X == 0f && this.velocity.Y == 0f)
				{
					this.alpha = 255;
				}
				if (this.ai[1] < 0f)
				{
					if (this.velocity.X > 0f)
					{
						this.rotation += 0.3f;
					}
					else
					{
						this.rotation -= 0.3f;
					}
					int num269 = (int)(this.position.X / 16f) - 1;
					int num270 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num271 = (int)(this.position.Y / 16f) - 1;
					int num272 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num269 < 0)
					{
						num269 = 0;
					}
					if (num270 > Main.maxTilesX)
					{
						num270 = Main.maxTilesX;
					}
					if (num271 < 0)
					{
						num271 = 0;
					}
					if (num272 > Main.maxTilesY)
					{
						num272 = Main.maxTilesY;
					}
					int num273 = (int)this.position.X + 4;
					int num274 = (int)this.position.Y + 4;
					for (int num275 = num269; num275 < num270; num275++)
					{
						for (int num276 = num271; num276 < num272; num276++)
						{
							if (Main.tile[num275, num276] != null && Main.tile[num275, num276].active() && Main.tile[num275, num276].type != 127 && Main.tileSolid[(int)Main.tile[num275, num276].type] && !Main.tileSolidTop[(int)Main.tile[num275, num276].type])
							{
								Vector2 vector24;
								vector24.X = (float)(num275 * 16);
								vector24.Y = (float)(num276 * 16);
								if ((float)(num273 + 8) > vector24.X && (float)num273 < vector24.X + 16f && (float)(num274 + 8) > vector24.Y && (float)num274 < vector24.Y + 16f)
								{
									this.Kill();
								}
							}
						}
					}
					int num277 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num277].noGravity = true;
					Main.dust[num277].velocity *= 0.3f;
					return;
				}
				if (this.ai[0] < 0f)
				{
					if (this.ai[0] == -1f)
					{
						for (int num278 = 0; num278 < 10; num278++)
						{
							int num279 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1.1f);
							Main.dust[num279].noGravity = true;
							Main.dust[num279].velocity *= 1.3f;
						}
					}
					else if (Main.rand.Next(30) == 0)
					{
						int num280 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num280].velocity *= 0.2f;
					}
					int num281 = (int)this.position.X / 16;
					int num282 = (int)this.position.Y / 16;
					if (Main.tile[num281, num282] == null || !Main.tile[num281, num282].active())
					{
						this.Kill();
					}
					this.ai[0] -= 1f;
					if (this.ai[0] <= -900f && (Main.myPlayer == this.owner || Main.netMode == 2) && Main.tile[num281, num282].active() && Main.tile[num281, num282].type == 127)
					{
						WorldGen.KillTile(num281, num282, false, false, false);
						if (Main.netMode == 1)
						{
							NetMessage.SendData(17, -1, -1, "", 0, (float)num281, (float)num282, 0f, 0, 0, 0);
						}
						this.Kill();
						return;
					}
				}
				else
				{
					int num283 = (int)(this.position.X / 16f) - 1;
					int num284 = (int)((this.position.X + (float)this.width) / 16f) + 2;
					int num285 = (int)(this.position.Y / 16f) - 1;
					int num286 = (int)((this.position.Y + (float)this.height) / 16f) + 2;
					if (num283 < 0)
					{
						num283 = 0;
					}
					if (num284 > Main.maxTilesX)
					{
						num284 = Main.maxTilesX;
					}
					if (num285 < 0)
					{
						num285 = 0;
					}
					if (num286 > Main.maxTilesY)
					{
						num286 = Main.maxTilesY;
					}
					int num287 = (int)this.position.X + 4;
					int num288 = (int)this.position.Y + 4;
					for (int num289 = num283; num289 < num284; num289++)
					{
						for (int num290 = num285; num290 < num286; num290++)
						{
							if (Main.tile[num289, num290] != null && Main.tile[num289, num290].nactive() && Main.tile[num289, num290].type != 127 && Main.tileSolid[(int)Main.tile[num289, num290].type] && !Main.tileSolidTop[(int)Main.tile[num289, num290].type])
							{
								Vector2 vector25;
								vector25.X = (float)(num289 * 16);
								vector25.Y = (float)(num290 * 16);
								if ((float)(num287 + 8) > vector25.X && (float)num287 < vector25.X + 16f && (float)(num288 + 8) > vector25.Y && (float)num288 < vector25.Y + 16f)
								{
									this.Kill();
								}
							}
						}
					}
					if (this.lavaWet)
					{
						this.Kill();
					}
					if (this.active)
					{
						int num291 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num291].noGravity = true;
						Main.dust[num291].velocity *= 0.3f;
						int num292 = (int)this.ai[0];
						int num293 = (int)this.ai[1];
						if (WorldGen.SolidTile(num292, num293))
						{
							if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
							{
								if (base.Center.Y < (float)(num293 * 16 + 8) && !WorldGen.SolidTile(num292, num293 - 1))
								{
									num293--;
								}
								else if (!WorldGen.SolidTile(num292, num293 + 1))
								{
									num293++;
								}
								else if (!WorldGen.SolidTile(num292, num293 - 1))
								{
									num293--;
								}
								else if (base.Center.X < (float)(num292 * 16 + 8) && !WorldGen.SolidTile(num292 - 1, num293))
								{
									num292--;
								}
								else if (!WorldGen.SolidTile(num292 + 1, num293))
								{
									num292++;
								}
								else if (!WorldGen.SolidTile(num292 - 1, num293))
								{
									num292--;
								}
							}
							else if (base.Center.X < (float)(num292 * 16 + 8) && !WorldGen.SolidTile(num292 - 1, num293))
							{
								num292--;
							}
							else if (!WorldGen.SolidTile(num292 + 1, num293))
							{
								num292++;
							}
							else if (!WorldGen.SolidTile(num292 - 1, num293))
							{
								num292--;
							}
							else if (base.Center.Y < (float)(num293 * 16 + 8) && !WorldGen.SolidTile(num292, num293 - 1))
							{
								num293--;
							}
							else if (!WorldGen.SolidTile(num292, num293 + 1))
							{
								num293++;
							}
							else if (!WorldGen.SolidTile(num292, num293 - 1))
							{
								num293--;
							}
						}
						if (this.velocity.X > 0f)
						{
							this.rotation += 0.3f;
						}
						else
						{
							this.rotation -= 0.3f;
						}
						if (Main.myPlayer == this.owner)
						{
							int num294 = (int)((this.position.X + (float)(this.width / 2)) / 16f);
							int num295 = (int)((this.position.Y + (float)(this.height / 2)) / 16f);
							bool flag6 = false;
							if (num294 == num292 && num295 == num293)
							{
								flag6 = true;
							}
							if (((this.velocity.X <= 0f && num294 <= num292) || (this.velocity.X >= 0f && num294 >= num292)) && ((this.velocity.Y <= 0f && num295 <= num293) || (this.velocity.Y >= 0f && num295 >= num293)))
							{
								flag6 = true;
							}
							if (flag6)
							{
								if (WorldGen.PlaceTile(num292, num293, 127, false, false, this.owner, 0))
								{
									if (Main.netMode == 1)
									{
										NetMessage.SendData(17, -1, -1, "", 1, (float)((int)this.ai[0]), (float)((int)this.ai[1]), 127f, 0, 0, 0);
									}
									this.damage = 0;
									this.ai[0] = -1f;
									this.velocity *= 0f;
									this.alpha = 255;
									this.position.X = (float)(num292 * 16);
									this.position.Y = (float)(num293 * 16);
									this.netUpdate = true;
									return;
								}
								this.ai[1] = -1f;
								return;
							}
						}
					}
				}
			}
			else
			{
				if (this.aiStyle == 23)
				{
					if (this.type == 188 && this.ai[0] < 8f)
					{
						this.ai[0] = 8f;
					}
					if (this.timeLeft > 60)
					{
						this.timeLeft = 60;
					}
					if (this.ai[0] > 7f)
					{
						float num296 = 1f;
						if (this.ai[0] == 8f)
						{
							num296 = 0.25f;
						}
						else if (this.ai[0] == 9f)
						{
							num296 = 0.5f;
						}
						else if (this.ai[0] == 10f)
						{
							num296 = 0.75f;
						}
						this.ai[0] += 1f;
						int num297 = 6;
						if (this.type == 101)
						{
							num297 = 75;
						}
						if (num297 == 6 || Main.rand.Next(2) == 0)
						{
							for (int num298 = 0; num298 < 1; num298++)
							{
								int num299 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num297, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
								if (Main.rand.Next(3) != 0 || (num297 == 75 && Main.rand.Next(3) == 0))
								{
									Main.dust[num299].noGravity = true;
									Main.dust[num299].scale *= 3f;
									Dust expr_DD5D_cp_0 = Main.dust[num299];
									expr_DD5D_cp_0.velocity.X = expr_DD5D_cp_0.velocity.X * 2f;
									Dust expr_DD7D_cp_0 = Main.dust[num299];
									expr_DD7D_cp_0.velocity.Y = expr_DD7D_cp_0.velocity.Y * 2f;
								}
								if (this.type == 188)
								{
									Main.dust[num299].scale *= 1.25f;
								}
								else
								{
									Main.dust[num299].scale *= 1.5f;
								}
								Dust expr_DDE2_cp_0 = Main.dust[num299];
								expr_DDE2_cp_0.velocity.X = expr_DDE2_cp_0.velocity.X * 1.2f;
								Dust expr_DE02_cp_0 = Main.dust[num299];
								expr_DE02_cp_0.velocity.Y = expr_DE02_cp_0.velocity.Y * 1.2f;
								Main.dust[num299].scale *= num296;
								if (num297 == 75)
								{
									Main.dust[num299].velocity += this.velocity;
									if (!Main.dust[num299].noGravity)
									{
										Main.dust[num299].velocity *= 0.5f;
									}
								}
							}
						}
					}
					else
					{
						this.ai[0] += 1f;
					}
					this.rotation += 0.3f * (float)this.direction;
					return;
				}
				if (this.aiStyle == 24)
				{
					this.light = this.scale * 0.5f;
					this.rotation += this.velocity.X * 0.2f;
					this.ai[1] += 1f;
					if (this.type == 94)
					{
						if (Main.rand.Next(4) == 0)
						{
							int num300 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 70, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num300].noGravity = true;
							Main.dust[num300].velocity *= 0.5f;
							Main.dust[num300].scale *= 0.9f;
						}
						this.velocity *= 0.985f;
						if (this.ai[1] > 130f)
						{
							this.scale -= 0.05f;
							if ((double)this.scale <= 0.2)
							{
								this.scale = 0.2f;
								this.Kill();
								return;
							}
						}
					}
					else
					{
						this.velocity *= 0.96f;
						if (this.ai[1] > 15f)
						{
							this.scale -= 0.05f;
							if ((double)this.scale <= 0.2)
							{
								this.scale = 0.2f;
								this.Kill();
								return;
							}
						}
					}
				}
				else if (this.aiStyle == 25)
				{
					if (this.ai[0] != 0f && this.velocity.Y <= 0f && this.velocity.X == 0f)
					{
						float num301 = 0.5f;
						int i2 = (int)((this.position.X - 8f) / 16f);
						int num302 = (int)(this.position.Y / 16f);
						bool flag7 = false;
						bool flag8 = false;
						if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
						{
							flag7 = true;
						}
						i2 = (int)((this.position.X + (float)this.width + 8f) / 16f);
						if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
						{
							flag8 = true;
						}
						if (flag7)
						{
							this.velocity.X = num301;
						}
						else if (flag8)
						{
							this.velocity.X = -num301;
						}
						else
						{
							i2 = (int)((this.position.X - 8f - 16f) / 16f);
							num302 = (int)(this.position.Y / 16f);
							flag7 = false;
							flag8 = false;
							if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
							{
								flag7 = true;
							}
							i2 = (int)((this.position.X + (float)this.width + 8f + 16f) / 16f);
							if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
							{
								flag8 = true;
							}
							if (flag7)
							{
								this.velocity.X = num301;
							}
							else if (flag8)
							{
								this.velocity.X = -num301;
							}
							else
							{
								i2 = (int)((this.position.X + 4f) / 16f);
								num302 = (int)((this.position.Y + (float)this.height + 8f) / 16f);
								if (WorldGen.SolidTile(i2, num302) || WorldGen.SolidTile(i2, num302 + 1))
								{
									flag7 = true;
								}
								if (!flag7)
								{
									this.velocity.X = num301;
								}
								else
								{
									this.velocity.X = -num301;
								}
							}
						}
					}
					this.rotation += this.velocity.X * 0.06f;
					this.ai[0] = 1f;
					if (this.velocity.Y > 16f)
					{
						this.velocity.Y = 16f;
					}
					if (this.velocity.Y <= 6f)
					{
						if (this.velocity.X > 0f && this.velocity.X < 7f)
						{
							this.velocity.X = this.velocity.X + 0.05f;
						}
						if (this.velocity.X < 0f && this.velocity.X > -7f)
						{
							this.velocity.X = this.velocity.X - 0.05f;
						}
					}
					this.velocity.Y = this.velocity.Y + 0.3f;
					if (this.type == 655 && this.wet)
					{
						this.Kill();
						return;
					}
				}
				else
				{
					if (this.aiStyle == 26)
					{
						this.AI_026();
						return;
					}
					if (this.aiStyle == 27)
					{
						if (this.type == 115)
						{
							this.ai[0] += 1f;
							if (this.ai[0] < 30f)
							{
								this.velocity *= 1.125f;
							}
						}
						if (this.type == 115 && this.localAI[1] < 5f)
						{
							this.localAI[1] = 5f;
							for (int num303 = 5; num303 < 25; num303++)
							{
								float num304 = this.velocity.X * (30f / (float)num303);
								float num305 = this.velocity.Y * (30f / (float)num303);
								num304 *= 80f;
								num305 *= 80f;
								int num306 = Dust.NewDust(new Vector2(this.position.X - num304, this.position.Y - num305), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.9f);
								Main.dust[num306].velocity *= 0.25f;
								Main.dust[num306].velocity -= this.velocity * 5f;
							}
						}
						if (this.localAI[1] > 7f && this.type == 173)
						{
							int num307 = Main.rand.Next(3);
							if (num307 == 0)
							{
								num307 = 15;
							}
							else if (num307 == 1)
							{
								num307 = 57;
							}
							else
							{
								num307 = 58;
							}
							int num308 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, num307, 0f, 0f, 100, default(Color), 1.25f);
							Main.dust[num308].velocity *= 0.1f;
						}
						if (this.localAI[1] > 7f && this.type == 132)
						{
							int num309 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.25f);
							Main.dust[num309].velocity *= -0.25f;
							num309 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 4f + 2f, this.position.Y + 2f - this.velocity.Y * 4f), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.25f);
							Main.dust[num309].velocity *= -0.25f;
							Main.dust[num309].position -= this.velocity * 0.5f;
						}
						if (this.localAI[1] < 15f)
						{
							this.localAI[1] += 1f;
						}
						else
						{
							if (this.type == 114 || this.type == 115)
							{
								int num310 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 4f), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.6f);
								Main.dust[num310].velocity *= -0.25f;
							}
							else if (this.type == 116)
							{
								int num311 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 5f + 2f, this.position.Y + 2f - this.velocity.Y * 5f), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.5f);
								Main.dust[num311].velocity *= -0.25f;
								Main.dust[num311].noGravity = true;
							}
							if (this.localAI[0] == 0f)
							{
								this.scale -= 0.02f;
								this.alpha += 30;
								if (this.alpha >= 250)
								{
									this.alpha = 255;
									this.localAI[0] = 1f;
								}
							}
							else if (this.localAI[0] == 1f)
							{
								this.scale += 0.02f;
								this.alpha -= 30;
								if (this.alpha <= 0)
								{
									this.alpha = 0;
									this.localAI[0] = 0f;
								}
							}
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							if (this.type == 132)
							{
								Main.PlaySound(SoundID.Item60, this.position);
							}
							else
							{
								Main.PlaySound(SoundID.Item8, this.position);
							}
						}
						if (this.type == 157)
						{
							this.rotation += (float)this.direction * 0.4f;
							this.spriteDirection = this.direction;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 0.785f;
						}
						if (this.velocity.Y > 16f)
						{
							this.velocity.Y = 16f;
							return;
						}
					}
					else if (this.aiStyle == 28)
					{
						if (this.type == 177)
						{
							for (int num312 = 0; num312 < 3; num312++)
							{
								int num313 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 137, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(-20, 40) * 0.01f);
								Main.dust[num313].noGravity = true;
								Main.dust[num313].velocity *= 0.3f;
							}
						}
						if (this.type == 118)
						{
							for (int num314 = 0; num314 < 2; num314++)
							{
								int num315 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num315].noGravity = true;
								Main.dust[num315].velocity *= 0.3f;
							}
						}
						if (this.type == 119 || this.type == 128 || this.type == 359)
						{
							for (int num316 = 0; num316 < 3; num316++)
							{
								int num317 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num317].noGravity = true;
								Main.dust[num317].velocity *= 0.3f;
							}
						}
						if (this.type == 309)
						{
							for (int num318 = 0; num318 < 3; num318++)
							{
								int num319 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 185, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num319].noGravity = true;
								Main.dust[num319].velocity *= 0.3f;
							}
						}
						if (this.type == 129)
						{
							for (int num320 = 0; num320 < 6; num320++)
							{
								int num321 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 106, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
								Main.dust[num321].noGravity = true;
								Main.dust[num321].velocity *= 0.1f + (float)Main.rand.Next(4) * 0.1f;
								Main.dust[num321].scale *= 1f + (float)Main.rand.Next(5) * 0.1f;
							}
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							Main.PlaySound(SoundID.Item28, this.position);
							return;
						}
					}
					else if (this.aiStyle == 29)
					{
						if (this.type == 619)
						{
							int num322 = (int)this.ai[0];
							for (int num323 = 0; num323 < 3; num323++)
							{
								int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, num322, default(Color), 1.2f);
								Main.dust[num324].position = (Main.dust[num324].position + base.Center) / 2f;
								Main.dust[num324].noGravity = true;
								Main.dust[num324].velocity *= 0.5f;
							}
							for (int num325 = 0; num325 < 2; num325++)
							{
								int num324 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, num322, default(Color), 0.4f);
								if (num325 == 0)
								{
									Main.dust[num324].position = (Main.dust[num324].position + base.Center * 5f) / 6f;
								}
								else if (num325 == 1)
								{
									Main.dust[num324].position = (Main.dust[num324].position + (base.Center + this.velocity / 2f) * 5f) / 6f;
								}
								Main.dust[num324].velocity *= 0.1f;
								Main.dust[num324].noGravity = true;
								Main.dust[num324].fadeIn = 1f;
							}
							return;
						}
						if (this.type == 620)
						{
							int num326 = (int)this.ai[0];
							this.ai[1] += 1f;
							float num327 = (60f - this.ai[1]) / 60f;
							if (this.ai[1] > 40f)
							{
								this.Kill();
							}
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y > 18f)
							{
								this.velocity.Y = 18f;
							}
							this.velocity.X = this.velocity.X * 0.98f;
							for (int num328 = 0; num328 < 2; num328++)
							{
								int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num326, this.velocity.X, this.velocity.Y, 50, default(Color), 1.1f);
								Main.dust[num329].position = (Main.dust[num329].position + base.Center) / 2f;
								Main.dust[num329].noGravity = true;
								Main.dust[num329].velocity *= 0.3f;
								Main.dust[num329].scale *= num327;
							}
							for (int num330 = 0; num330 < 1; num330++)
							{
								int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num326, this.velocity.X, this.velocity.Y, 50, default(Color), 0.6f);
								Main.dust[num329].position = (Main.dust[num329].position + base.Center * 5f) / 6f;
								Main.dust[num329].velocity *= 0.1f;
								Main.dust[num329].noGravity = true;
								Main.dust[num329].fadeIn = 0.9f * num327;
								Main.dust[num329].scale *= num327;
							}
							return;
						}
						if (this.type == 521)
						{
							for (int num331 = 0; num331 < 3; num331++)
							{
								int num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
								Main.dust[num332].position = (Main.dust[num332].position + base.Center) / 2f;
								Main.dust[num332].noGravity = true;
								Main.dust[num332].velocity *= 0.5f;
							}
							for (int num333 = 0; num333 < 2; num333++)
							{
								int num332 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, 50, default(Color), 0.4f);
								if (num333 == 0)
								{
									Main.dust[num332].position = (Main.dust[num332].position + base.Center * 5f) / 6f;
								}
								else if (num333 == 1)
								{
									Main.dust[num332].position = (Main.dust[num332].position + (base.Center + this.velocity / 2f) * 5f) / 6f;
								}
								Main.dust[num332].velocity *= 0.1f;
								Main.dust[num332].noGravity = true;
								Main.dust[num332].fadeIn = 1f;
							}
							return;
						}
						if (this.type == 522)
						{
							this.ai[1] += 1f;
							float num334 = (60f - this.ai[1]) / 60f;
							if (this.ai[1] > 40f)
							{
								this.Kill();
							}
							this.velocity.Y = this.velocity.Y + 0.2f;
							if (this.velocity.Y > 18f)
							{
								this.velocity.Y = 18f;
							}
							this.velocity.X = this.velocity.X * 0.98f;
							for (int num335 = 0; num335 < 2; num335++)
							{
								int num336 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X, this.velocity.Y, 50, default(Color), 1.1f);
								Main.dust[num336].position = (Main.dust[num336].position + base.Center) / 2f;
								Main.dust[num336].noGravity = true;
								Main.dust[num336].velocity *= 0.3f;
								Main.dust[num336].scale *= num334;
							}
							for (int num337 = 0; num337 < 1; num337++)
							{
								int num336 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 255, this.velocity.X, this.velocity.Y, 50, default(Color), 0.6f);
								Main.dust[num336].position = (Main.dust[num336].position + base.Center * 5f) / 6f;
								Main.dust[num336].velocity *= 0.1f;
								Main.dust[num336].noGravity = true;
								Main.dust[num336].fadeIn = 0.9f * num334;
								Main.dust[num336].scale *= num334;
							}
							return;
						}
						int num338 = this.type - 121 + 86;
						if (this.type == 597)
						{
							num338 = 262;
						}
						for (int num339 = 0; num339 < 2; num339++)
						{
							int num340 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num338, this.velocity.X, this.velocity.Y, 50, default(Color), 1.2f);
							Main.dust[num340].noGravity = true;
							Main.dust[num340].velocity *= 0.3f;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] = 1f;
							Main.PlaySound(SoundID.Item8, this.position);
							return;
						}
					}
					else if (this.aiStyle == 30)
					{
						this.velocity *= 0.8f;
						this.rotation += 0.2f;
						this.alpha += 4;
						if (this.alpha >= 255)
						{
							this.Kill();
							return;
						}
					}
					else
					{
						if (this.aiStyle == 31)
						{
							int num341 = 110;
							int conversionType = 0;
							if (this.type == 146)
							{
								num341 = 111;
								conversionType = 2;
							}
							if (this.type == 147)
							{
								num341 = 112;
								conversionType = 1;
							}
							if (this.type == 148)
							{
								num341 = 113;
								conversionType = 3;
							}
							if (this.type == 149)
							{
								num341 = 114;
								conversionType = 4;
							}
							if (this.owner == Main.myPlayer)
							{
								WorldGen.Convert((int)(this.position.X + (float)(this.width / 2)) / 16, (int)(this.position.Y + (float)(this.height / 2)) / 16, conversionType, 2);
							}
							if (this.timeLeft > 133)
							{
								this.timeLeft = 133;
							}
							if (this.ai[0] > 7f)
							{
								float num342 = 1f;
								if (this.ai[0] == 8f)
								{
									num342 = 0.2f;
								}
								else if (this.ai[0] == 9f)
								{
									num342 = 0.4f;
								}
								else if (this.ai[0] == 10f)
								{
									num342 = 0.6f;
								}
								else if (this.ai[0] == 11f)
								{
									num342 = 0.8f;
								}
								this.ai[0] += 1f;
								for (int num343 = 0; num343 < 1; num343++)
								{
									int num344 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num341, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
									Main.dust[num344].noGravity = true;
									Main.dust[num344].scale *= 1.75f;
									Dust expr_FDA5_cp_0 = Main.dust[num344];
									expr_FDA5_cp_0.velocity.X = expr_FDA5_cp_0.velocity.X * 2f;
									Dust expr_FDC5_cp_0 = Main.dust[num344];
									expr_FDC5_cp_0.velocity.Y = expr_FDC5_cp_0.velocity.Y * 2f;
									Main.dust[num344].scale *= num342;
								}
							}
							else
							{
								this.ai[0] += 1f;
							}
							this.rotation += 0.3f * (float)this.direction;
							return;
						}
						if (this.aiStyle == 32)
						{
							this.timeLeft = 10;
							this.ai[0] += 1f;
							if (this.ai[0] >= 20f)
							{
								this.ai[0] = 15f;
								for (int num345 = 0; num345 < 255; num345++)
								{
									Rectangle rectangle3 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									if (Main.player[num345].active)
									{
										Rectangle value9 = new Rectangle((int)Main.player[num345].position.X, (int)Main.player[num345].position.Y, Main.player[num345].width, Main.player[num345].height);
										if (rectangle3.Intersects(value9))
										{
											this.ai[0] = 0f;
											this.velocity.Y = -4.5f;
											if (this.velocity.X > 2f)
											{
												this.velocity.X = 2f;
											}
											if (this.velocity.X < -2f)
											{
												this.velocity.X = -2f;
											}
											this.velocity.X = (this.velocity.X + (float)Main.player[num345].direction * 1.75f) / 2f;
											this.velocity.X = this.velocity.X + Main.player[num345].velocity.X * 3f;
											this.velocity.Y = this.velocity.Y + Main.player[num345].velocity.Y;
											if (this.velocity.X > 6f)
											{
												this.velocity.X = 6f;
											}
											if (this.velocity.X < -6f)
											{
												this.velocity.X = -6f;
											}
											this.netUpdate = true;
											this.ai[1] += 1f;
										}
									}
								}
							}
							if (this.velocity.X == 0f && this.velocity.Y == 0f)
							{
								this.Kill();
							}
							this.rotation += 0.02f * this.velocity.X;
							if (this.velocity.Y == 0f)
							{
								this.velocity.X = this.velocity.X * 0.98f;
							}
							else if (this.wet)
							{
								this.velocity.X = this.velocity.X * 0.99f;
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.995f;
							}
							if ((double)this.velocity.X > -0.03 && (double)this.velocity.X < 0.03)
							{
								this.velocity.X = 0f;
							}
							if (this.wet)
							{
								this.ai[1] = 0f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.Y = this.velocity.Y * 0.95f;
								}
								this.velocity.Y = this.velocity.Y - 0.1f;
								if (this.velocity.Y < -4f)
								{
									this.velocity.Y = -4f;
								}
								if (this.velocity.X == 0f)
								{
									this.Kill();
								}
							}
							else
							{
								this.velocity.Y = this.velocity.Y + 0.1f;
							}
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
						else
						{
							if (this.aiStyle == 33)
							{
								if (this.alpha > 0)
								{
									this.alpha -= 50;
									if (this.alpha < 0)
									{
										this.alpha = 0;
									}
								}
								float num346 = 4f;
								float num347 = this.ai[0];
								float num348 = this.ai[1];
								if (num347 == 0f && num348 == 0f)
								{
									num347 = 1f;
								}
								float num349 = (float)Math.Sqrt((double)(num347 * num347 + num348 * num348));
								num349 = num346 / num349;
								num347 *= num349;
								num348 *= num349;
								if (this.alpha < 70)
								{
									int num350 = 127;
									if (this.type == 310)
									{
										num350 = 187;
									}
									int num351 = Dust.NewDust(new Vector2(this.position.X, this.position.Y - 2f), 6, 6, num350, this.velocity.X, this.velocity.Y, 100, default(Color), 1.6f);
									Main.dust[num351].noGravity = true;
									Dust expr_103BA_cp_0 = Main.dust[num351];
									expr_103BA_cp_0.position.X = expr_103BA_cp_0.position.X - num347 * 1f;
									Dust expr_103DF_cp_0 = Main.dust[num351];
									expr_103DF_cp_0.position.Y = expr_103DF_cp_0.position.Y - num348 * 1f;
									Dust expr_10404_cp_0 = Main.dust[num351];
									expr_10404_cp_0.velocity.X = expr_10404_cp_0.velocity.X - num347;
									Dust expr_10423_cp_0 = Main.dust[num351];
									expr_10423_cp_0.velocity.Y = expr_10423_cp_0.velocity.Y - num348;
								}
								if (this.localAI[0] == 0f)
								{
									this.ai[0] = this.velocity.X;
									this.ai[1] = this.velocity.Y;
									this.localAI[1] += 1f;
									if (this.localAI[1] >= 30f)
									{
										this.velocity.Y = this.velocity.Y + 0.09f;
										this.localAI[1] = 30f;
									}
								}
								else
								{
									if (!Collision.SolidCollision(this.position, this.width, this.height))
									{
										this.localAI[0] = 0f;
										this.localAI[1] = 30f;
									}
									this.damage = 0;
								}
								if (this.velocity.Y > 16f)
								{
									this.velocity.Y = 16f;
								}
								this.rotation = (float)Math.Atan2((double)this.ai[1], (double)this.ai[0]) + 1.57f;
								return;
							}
							if (this.aiStyle == 34)
							{
								this.rotation = this.velocity.ToRotation() + 1.57079637f;
								if (this.ai[1] == 1f)
								{
									this.ai[0] += 1f;
									if (this.ai[0] == 1f)
									{
										for (int num352 = 0; num352 < 8; num352++)
										{
											int num353 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.8f);
											Main.dust[num353].noGravity = true;
											Main.dust[num353].velocity *= 3f;
											Main.dust[num353].fadeIn = 0.5f;
											Main.dust[num353].position += this.velocity / 2f;
											Main.dust[num353].velocity += this.velocity / 4f + Main.player[this.owner].velocity * 0.1f;
										}
									}
									if (this.ai[0] > 2f)
									{
										int num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 15f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										num354 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 10f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num354].noGravity = true;
										Main.dust[num354].velocity *= 0.2f;
										Main.dust[num354].position = Main.dust[num354].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
								}
								else
								{
									if (this.type < 415 || this.type > 418)
									{
										int num355 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num355].noGravity = true;
										Main.dust[num355].velocity *= 0.2f;
										Main.dust[num355].position = Main.dust[num355].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
									this.ai[0] += 1f;
									if (this.ai[0] > 4f)
									{
										int num356 = Dust.NewDust(new Vector2(this.position.X + 2f, this.position.Y + 20f), 8, 8, 6, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
										Main.dust[num356].noGravity = true;
										Main.dust[num356].velocity *= 0.2f;
										Main.dust[num356].position = Main.dust[num356].position.RotatedBy((double)this.rotation, base.Center);
										return;
									}
								}
							}
							else if (this.aiStyle == 35)
							{
								this.ai[0] += 1f;
								if (this.ai[0] > 30f)
								{
									this.velocity.Y = this.velocity.Y + 0.2f;
									this.velocity.X = this.velocity.X * 0.985f;
									if (this.velocity.Y > 14f)
									{
										this.velocity.Y = 14f;
									}
								}
								this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * (float)this.direction * 0.02f;
								if (this.owner == Main.myPlayer)
								{
									Vector2 vector26 = Collision.TileCollision(this.position, this.velocity, this.width, this.height, true, true, 1);
									bool flag9 = false;
									if (vector26 != this.velocity)
									{
										flag9 = true;
									}
									else
									{
										int num357 = (int)(base.Center.X + this.velocity.X) / 16;
										int num358 = (int)(base.Center.Y + this.velocity.Y) / 16;
										if (Main.tile[num357, num358] != null && Main.tile[num357, num358].active() && Main.tile[num357, num358].bottomSlope())
										{
											flag9 = true;
											this.position.Y = (float)(num358 * 16 + 16 + 8);
											this.position.X = (float)(num357 * 16 + 8);
										}
									}
									if (flag9)
									{
										int num359 = 213;
										if (this.type == 475)
										{
											num359 = 353;
										}
										if (this.type == 506)
										{
											num359 = 366;
										}
										if (this.type == 505)
										{
											num359 = 365;
										}
										int num360 = (int)(this.position.X + (float)(this.width / 2)) / 16;
										int num361 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
										this.position += vector26;
										int num362 = 10;
										if (Main.tile[num360, num361] != null)
										{
											while (Main.tile[num360, num361] != null && Main.tile[num360, num361].active())
											{
												if (!Main.tileRope[(int)Main.tile[num360, num361].type])
												{
													break;
												}
												num361++;
											}
											while (num362 > 0)
											{
												num362--;
												if (Main.tile[num360, num361] == null)
												{
													break;
												}
												if (Main.tile[num360, num361].active() && (Main.tileCut[(int)Main.tile[num360, num361].type] || Main.tile[num360, num361].type == 165))
												{
													WorldGen.KillTile(num360, num361, false, false, false);
													NetMessage.SendData(17, -1, -1, "", 0, (float)num360, (float)num361, 0f, 0, 0, 0);
												}
												if (!Main.tile[num360, num361].active())
												{
													WorldGen.PlaceTile(num360, num361, num359, false, false, -1, 0);
													NetMessage.SendData(17, -1, -1, "", 1, (float)num360, (float)num361, (float)num359, 0, 0, 0);
													this.ai[1] += 1f;
												}
												else
												{
													num362 = 0;
												}
												num361++;
											}
											this.Kill();
											return;
										}
									}
								}
							}
							else if (this.aiStyle == 36)
							{
								if (this.type != 307 && this.wet && !this.honeyWet)
								{
									this.Kill();
								}
								if (this.alpha > 0)
								{
									this.alpha -= 50;
								}
								else
								{
									this.extraUpdates = 0;
								}
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								if (this.type == 307)
								{
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
									this.frameCounter++;
									if (this.frameCounter >= 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 2)
									{
										this.frame = 0;
									}
									for (int num363 = 0; num363 < 3; num363++)
									{
										float num364 = this.velocity.X / 3f * (float)num363;
										float num365 = this.velocity.Y / 3f * (float)num363;
										int num366 = Dust.NewDust(this.position, this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num366].position.X = base.Center.X - num364;
										Main.dust[num366].position.Y = base.Center.Y - num365;
										Main.dust[num366].velocity *= 0f;
										Main.dust[num366].scale = 0.5f;
									}
								}
								else
								{
									if (this.type == 316)
									{
										if (this.velocity.X > 0f)
										{
											this.spriteDirection = -1;
										}
										else if (this.velocity.X < 0f)
										{
											this.spriteDirection = 1;
										}
									}
									else if (this.velocity.X > 0f)
									{
										this.spriteDirection = 1;
									}
									else if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
									}
									this.rotation = this.velocity.X * 0.1f;
									this.frameCounter++;
									if (this.frameCounter >= 3)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 3)
									{
										this.frame = 0;
									}
								}
								float num367 = this.position.X;
								float num368 = this.position.Y;
								float num369 = 100000f;
								bool flag10 = false;
								this.ai[0] += 1f;
								if (this.ai[0] > 30f)
								{
									this.ai[0] = 30f;
									for (int num370 = 0; num370 < 200; num370++)
									{
										if (Main.npc[num370].CanBeChasedBy(this, false) && (!Main.npc[num370].wet || this.type == 307))
										{
											float num371 = Main.npc[num370].position.X + (float)(Main.npc[num370].width / 2);
											float num372 = Main.npc[num370].position.Y + (float)(Main.npc[num370].height / 2);
											float num373 = Math.Abs(this.position.X + (float)(this.width / 2) - num371) + Math.Abs(this.position.Y + (float)(this.height / 2) - num372);
											if (num373 < 800f && num373 < num369 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num370].position, Main.npc[num370].width, Main.npc[num370].height))
											{
												num369 = num373;
												num367 = num371;
												num368 = num372;
												flag10 = true;
											}
										}
									}
								}
								if (!flag10)
								{
									num367 = this.position.X + (float)(this.width / 2) + this.velocity.X * 100f;
									num368 = this.position.Y + (float)(this.height / 2) + this.velocity.Y * 100f;
								}
								else if (this.type == 307)
								{
									this.friendly = true;
								}
								float num374 = 6f;
								float num375 = 0.1f;
								if (this.type == 189)
								{
									num374 = 7f;
									num375 = 0.15f;
								}
								if (this.type == 307)
								{
									num374 = 9f;
									num375 = 0.2f;
								}
								if (this.type == 316)
								{
									num374 = 10f;
									num375 = 0.25f;
								}
								if (this.type == 566)
								{
									num374 = 6.8f;
									num375 = 0.14f;
								}
								Vector2 vector27 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num376 = num367 - vector27.X;
								float num377 = num368 - vector27.Y;
								float num378 = (float)Math.Sqrt((double)(num376 * num376 + num377 * num377));
								num378 = num374 / num378;
								num376 *= num378;
								num377 *= num378;
								if (this.velocity.X < num376)
								{
									this.velocity.X = this.velocity.X + num375;
									if (this.velocity.X < 0f && num376 > 0f)
									{
										this.velocity.X = this.velocity.X + num375 * 2f;
									}
								}
								else if (this.velocity.X > num376)
								{
									this.velocity.X = this.velocity.X - num375;
									if (this.velocity.X > 0f && num376 < 0f)
									{
										this.velocity.X = this.velocity.X - num375 * 2f;
									}
								}
								if (this.velocity.Y < num377)
								{
									this.velocity.Y = this.velocity.Y + num375;
									if (this.velocity.Y < 0f && num377 > 0f)
									{
										this.velocity.Y = this.velocity.Y + num375 * 2f;
										return;
									}
								}
								else if (this.velocity.Y > num377)
								{
									this.velocity.Y = this.velocity.Y - num375;
									if (this.velocity.Y > 0f && num377 < 0f)
									{
										this.velocity.Y = this.velocity.Y - num375 * 2f;
										return;
									}
								}
							}
							else if (this.aiStyle == 37)
							{
								if (this.ai[1] == 0f)
								{
									this.ai[1] = 1f;
									this.localAI[0] = base.Center.X - this.velocity.X * 1.5f;
									this.localAI[1] = base.Center.Y - this.velocity.Y * 1.5f;
								}
								Vector2 value10 = new Vector2(this.localAI[0], this.localAI[1]);
								this.rotation = (base.Center - value10).ToRotation() - 1.57079637f;
								if (this.ai[0] == 0f)
								{
									if (Collision.SolidCollision(this.position, this.width, this.height))
									{
										this.velocity *= -1f;
										this.ai[0] += 1f;
										return;
									}
									float num379 = Vector2.Distance(base.Center, value10);
									if (num379 > 300f)
									{
										this.velocity *= -1f;
										this.ai[0] += 1f;
										return;
									}
								}
								else if (Collision.SolidCollision(this.position, this.width, this.height) || Vector2.Distance(base.Center, value10) < this.velocity.Length())
								{
									this.Kill();
									return;
								}
							}
							else if (this.aiStyle == 38)
							{
								this.ai[0] += 1f;
								if (this.ai[0] >= 6f)
								{
									this.ai[0] = 0f;
									Main.PlaySound(SoundID.Item34, this.position);
									if (Main.myPlayer == this.owner)
									{
										Projectile.NewProjectile(this.position.X, this.position.Y, this.velocity.X, this.velocity.Y, 188, this.damage, this.knockBack, this.owner, 0f, 0f);
										return;
									}
								}
							}
							else if (this.aiStyle == 39)
							{
								this.alpha -= 50;
								if (this.alpha < 0)
								{
									this.alpha = 0;
								}
								if (Main.player[this.owner].dead)
								{
									this.Kill();
									return;
								}
								if (this.alpha == 0)
								{
									Main.player[this.owner].itemAnimation = 5;
									Main.player[this.owner].itemTime = 5;
									if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
									{
										Main.player[this.owner].ChangeDir(1);
									}
									else
									{
										Main.player[this.owner].ChangeDir(-1);
									}
								}
								Vector2 vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
								float num380 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector28.X;
								float num381 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector28.Y;
								float num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
								if (!Main.player[this.owner].channel && this.alpha == 0)
								{
									this.ai[0] = 1f;
									this.ai[1] = -1f;
								}
								if (this.ai[1] > 0f && num382 > 1500f)
								{
									this.ai[1] = 0f;
									this.ai[0] = 1f;
								}
								if (this.ai[1] > 0f)
								{
									this.tileCollide = false;
									int num383 = (int)this.ai[1] - 1;
									if (Main.npc[num383].active && Main.npc[num383].life > 0)
									{
										float num384 = 16f;
										vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										num380 = Main.npc[num383].position.X + (float)(Main.npc[num383].width / 2) - vector28.X;
										num381 = Main.npc[num383].position.Y + (float)(Main.npc[num383].height / 2) - vector28.Y;
										num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
										if (num382 < num384)
										{
											this.velocity.X = num380;
											this.velocity.Y = num381;
											if (num382 > num384 / 2f)
											{
												if (this.velocity.X < 0f)
												{
													this.spriteDirection = -1;
													this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
												}
												else
												{
													this.spriteDirection = 1;
													this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
												}
											}
										}
										else
										{
											num382 = num384 / num382;
											num380 *= num382;
											num381 *= num382;
											this.velocity.X = num380;
											this.velocity.Y = num381;
											if (this.velocity.X < 0f)
											{
												this.spriteDirection = -1;
												this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
											}
											else
											{
												this.spriteDirection = 1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
											}
										}
										this.ai[0] = 1f;
									}
									else
									{
										this.ai[1] = 0f;
										float num385 = this.position.X;
										float num386 = this.position.Y;
										float num387 = 3000f;
										int num388 = -1;
										for (int num389 = 0; num389 < 200; num389++)
										{
											if (Main.npc[num389].CanBeChasedBy(this, false))
											{
												float num390 = Main.npc[num389].position.X + (float)(Main.npc[num389].width / 2);
												float num391 = Main.npc[num389].position.Y + (float)(Main.npc[num389].height / 2);
												float num392 = Math.Abs(this.position.X + (float)(this.width / 2) - num390) + Math.Abs(this.position.Y + (float)(this.height / 2) - num391);
												if (num392 < num387 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num389].position, Main.npc[num389].width, Main.npc[num389].height))
												{
													num387 = num392;
													num385 = num390;
													num386 = num391;
													num388 = num389;
												}
											}
										}
										if (num388 >= 0)
										{
											float num393 = 16f;
											vector28 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											num380 = num385 - vector28.X;
											num381 = num386 - vector28.Y;
											num382 = (float)Math.Sqrt((double)(num380 * num380 + num381 * num381));
											num382 = num393 / num382;
											num380 *= num382;
											num381 *= num382;
											this.velocity.X = num380;
											this.velocity.Y = num381;
											this.ai[0] = 0f;
											this.ai[1] = (float)(num388 + 1);
										}
									}
								}
								else if (this.ai[0] == 0f)
								{
									if (num382 > 700f)
									{
										this.ai[0] = 1f;
									}
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
								}
								else if (this.ai[0] == 1f)
								{
									this.tileCollide = false;
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
									if (this.velocity.X < 0f)
									{
										this.spriteDirection = -1;
										this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
									}
									else
									{
										this.spriteDirection = 1;
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
									}
									float num394 = 20f;
									if (num382 < 70f)
									{
										this.Kill();
									}
									num382 = num394 / num382;
									num380 *= num382;
									num381 *= num382;
									this.velocity.X = num380;
									this.velocity.Y = num381;
								}
								this.frameCounter++;
								if (this.frameCounter >= 4)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 4)
								{
									this.frame = 0;
									return;
								}
							}
							else
							{
								if (this.aiStyle == 40)
								{
									this.localAI[0] += 1f;
									if (this.localAI[0] > 3f)
									{
										this.localAI[0] = 100f;
										this.alpha -= 50;
										if (this.alpha < 0)
										{
											this.alpha = 0;
										}
									}
									this.frameCounter++;
									if (this.frameCounter >= 3)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 5)
									{
										this.frame = 0;
									}
									this.velocity.X = this.velocity.X + this.ai[0];
									this.velocity.Y = this.velocity.Y + this.ai[1];
									this.localAI[1] += 1f;
									if (this.localAI[1] == 50f)
									{
										this.localAI[1] = 51f;
										this.ai[0] = (float)Main.rand.Next(-100, 101) * 6E-05f;
										this.ai[1] = (float)Main.rand.Next(-100, 101) * 6E-05f;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > 16f)
									{
										this.velocity.X = this.velocity.X * 0.95f;
										this.velocity.Y = this.velocity.Y * 0.95f;
									}
									if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 12f)
									{
										this.velocity.X = this.velocity.X * 1.05f;
										this.velocity.Y = this.velocity.Y * 1.05f;
									}
									this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
									return;
								}
								if (this.aiStyle == 41)
								{
									if (this.localAI[0] == 0f)
									{
										this.localAI[0] = 1f;
										this.frame = Main.rand.Next(3);
									}
									this.rotation += this.velocity.X * 0.01f;
									return;
								}
								if (this.aiStyle == 42)
								{
									if (!Main.player[this.owner].crystalLeaf)
									{
										this.Kill();
										return;
									}
									this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
									this.position.Y = Main.player[this.owner].Center.Y - (float)(this.height / 2) + Main.player[this.owner].gfxOffY - 60f;
									if (Main.player[this.owner].gravDir == -1f)
									{
										this.position.Y = this.position.Y + 120f;
										this.rotation = 3.14f;
									}
									else
									{
										this.rotation = 0f;
									}
									this.position.X = (float)((int)this.position.X);
									this.position.Y = (float)((int)this.position.Y);
									float num395 = (float)Main.mouseTextColor / 200f - 0.35f;
									num395 *= 0.2f;
									this.scale = num395 + 0.95f;
									if (this.owner == Main.myPlayer)
									{
										if (this.ai[0] != 0f)
										{
											this.ai[0] -= 1f;
											return;
										}
										float num396 = this.position.X;
										float num397 = this.position.Y;
										float num398 = 700f;
										bool flag11 = false;
										for (int num399 = 0; num399 < 200; num399++)
										{
											if (Main.npc[num399].CanBeChasedBy(this, true))
											{
												float num400 = Main.npc[num399].position.X + (float)(Main.npc[num399].width / 2);
												float num401 = Main.npc[num399].position.Y + (float)(Main.npc[num399].height / 2);
												float num402 = Math.Abs(this.position.X + (float)(this.width / 2) - num400) + Math.Abs(this.position.Y + (float)(this.height / 2) - num401);
												if (num402 < num398 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num399].position, Main.npc[num399].width, Main.npc[num399].height))
												{
													num398 = num402;
													num396 = num400;
													num397 = num401;
													flag11 = true;
												}
											}
										}
										if (flag11)
										{
											float num403 = 12f;
											Vector2 vector29 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num404 = num396 - vector29.X;
											float num405 = num397 - vector29.Y;
											float num406 = (float)Math.Sqrt((double)(num404 * num404 + num405 * num405));
											num406 = num403 / num406;
											num404 *= num406;
											num405 *= num406;
											Projectile.NewProjectile(base.Center.X - 4f, base.Center.Y, num404, num405, 227, Player.crystalLeafDamage, (float)Player.crystalLeafKB, this.owner, 0f, 0f);
											this.ai[0] = 50f;
											return;
										}
									}
								}
								else
								{
									if (this.aiStyle == 43)
									{
										if (this.localAI[1] == 0f)
										{
											Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
											this.localAI[1] += 1f;
											for (int num407 = 0; num407 < 5; num407++)
											{
												int num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num408].noGravity = true;
												Main.dust[num408].velocity *= 3f;
												Main.dust[num408].scale = 1.5f;
											}
										}
										this.ai[0] = (float)Main.rand.Next(-100, 101) * 0.0025f;
										this.ai[1] = (float)Main.rand.Next(-100, 101) * 0.0025f;
										if (this.localAI[0] == 0f)
										{
											this.scale += 0.05f;
											if ((double)this.scale > 1.2)
											{
												this.localAI[0] = 1f;
											}
										}
										else
										{
											this.scale -= 0.05f;
											if ((double)this.scale < 0.8)
											{
												this.localAI[0] = 0f;
											}
										}
										this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
										int num409 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num409].noGravity = true;
										Main.dust[num409].velocity *= 0.1f;
										Main.dust[num409].scale = 1.5f;
										return;
									}
									if (this.aiStyle == 44)
									{
										if (this.type == 228)
										{
											this.velocity *= 0.96f;
											this.alpha += 4;
											if (this.alpha > 255)
											{
												this.Kill();
											}
										}
										else if (this.type == 229)
										{
											if (this.ai[0] == 0f)
											{
												Main.PlaySound(SoundID.Item8, this.position);
											}
											this.ai[0] += 1f;
											if (this.ai[0] > 20f)
											{
												this.velocity.Y = this.velocity.Y + 0.3f;
												this.velocity.X = this.velocity.X * 0.98f;
											}
										}
										this.frameCounter++;
										if (this.frameCounter > 5)
										{
											this.frame++;
											this.frameCounter = 0;
										}
										if (this.frame >= Main.projFrames[this.type])
										{
											this.frame = 0;
											return;
										}
									}
									else if (this.aiStyle == 45)
									{
										if (this.type == 237 || this.type == 243)
										{
											float num410 = this.ai[0];
											float num411 = this.ai[1];
											if (num410 != 0f && num411 != 0f)
											{
												bool flag12 = false;
												bool flag13 = false;
												if ((this.velocity.X < 0f && base.Center.X < num410) || (this.velocity.X > 0f && base.Center.X > num410))
												{
													flag12 = true;
												}
												if ((this.velocity.Y < 0f && base.Center.Y < num411) || (this.velocity.Y > 0f && base.Center.Y > num411))
												{
													flag13 = true;
												}
												if (flag12 && flag13)
												{
													this.Kill();
												}
											}
											this.rotation += this.velocity.X * 0.02f;
											this.frameCounter++;
											if (this.frameCounter > 4)
											{
												this.frameCounter = 0;
												this.frame++;
												if (this.frame > 3)
												{
													this.frame = 0;
													return;
												}
											}
										}
										else if (this.type == 238 || this.type == 244)
										{
											this.frameCounter++;
											if (this.frameCounter > 8)
											{
												this.frameCounter = 0;
												this.frame++;
												if (this.frame > 5)
												{
													this.frame = 0;
												}
											}
											this.ai[1] += 1f;
											if (this.type == 244 && this.ai[1] >= 3600f)
											{
												this.alpha += 5;
												if (this.alpha > 255)
												{
													this.alpha = 255;
													this.Kill();
												}
											}
											else if (this.type == 238 && this.ai[1] >= 7200f)
											{
												this.alpha += 5;
												if (this.alpha > 255)
												{
													this.alpha = 255;
													this.Kill();
												}
											}
											else
											{
												this.ai[0] += 1f;
												if (this.type == 244)
												{
													if (this.ai[0] > 10f)
													{
														this.ai[0] = 0f;
														if (this.owner == Main.myPlayer)
														{
															int num412 = (int)(this.position.X + 14f + (float)Main.rand.Next(this.width - 28));
															int num413 = (int)(this.position.Y + (float)this.height + 4f);
															Projectile.NewProjectile((float)num412, (float)num413, 0f, 5f, 245, this.damage, 0f, this.owner, 0f, 0f);
														}
													}
												}
												else if (this.ai[0] > 8f)
												{
													this.ai[0] = 0f;
													if (this.owner == Main.myPlayer)
													{
														int num414 = (int)(this.position.X + 14f + (float)Main.rand.Next(this.width - 28));
														int num415 = (int)(this.position.Y + (float)this.height + 4f);
														Projectile.NewProjectile((float)num414, (float)num415, 0f, 5f, 239, this.damage, 0f, this.owner, 0f, 0f);
													}
												}
											}
											this.localAI[0] += 1f;
											if (this.localAI[0] >= 10f)
											{
												this.localAI[0] = 0f;
												int num416 = 0;
												int num417 = 0;
												float num418 = 0f;
												int num419 = this.type;
												for (int num420 = 0; num420 < 1000; num420++)
												{
													if (Main.projectile[num420].active && Main.projectile[num420].owner == this.owner && Main.projectile[num420].type == num419 && Main.projectile[num420].ai[1] < 3600f)
													{
														num416++;
														if (Main.projectile[num420].ai[1] > num418)
														{
															num417 = num420;
															num418 = Main.projectile[num420].ai[1];
														}
													}
												}
												if (this.type == 244)
												{
													if (num416 > 1)
													{
														Main.projectile[num417].netUpdate = true;
														Main.projectile[num417].ai[1] = 36000f;
														return;
													}
												}
												else if (num416 > 2)
												{
													Main.projectile[num417].netUpdate = true;
													Main.projectile[num417].ai[1] = 36000f;
													return;
												}
											}
										}
										else
										{
											if (this.type == 239)
											{
												this.alpha = 50;
												return;
											}
											if (this.type == 245)
											{
												this.alpha = 100;
												return;
											}
											if (this.type == 264)
											{
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
												return;
											}
										}
									}
									else if (this.aiStyle == 46)
									{
										int num421 = 1200;
										if (this.type == 250)
										{
											if (this.owner == Main.myPlayer)
											{
												this.localAI[0] += 1f;
												if (this.localAI[0] > 4f)
												{
													this.localAI[0] = 3f;
													Projectile.NewProjectile(base.Center.X, base.Center.Y, this.velocity.X * 0.001f, this.velocity.Y * 0.001f, 251, this.damage, this.knockBack, this.owner, 0f, 0f);
												}
												if (this.timeLeft > num421)
												{
													this.timeLeft = num421;
												}
											}
											float num422 = 1f;
											if (this.velocity.Y < 0f)
											{
												num422 -= this.velocity.Y / 3f;
											}
											this.ai[0] += num422;
											if (this.ai[0] > 30f)
											{
												this.velocity.Y = this.velocity.Y + 0.5f;
												if (this.velocity.Y > 0f)
												{
													this.velocity.X = this.velocity.X * 0.95f;
												}
												else
												{
													this.velocity.X = this.velocity.X * 1.05f;
												}
											}
											float num423 = this.velocity.X;
											float num424 = this.velocity.Y;
											float num425 = (float)Math.Sqrt((double)(num423 * num423 + num424 * num424));
											num425 = 15.95f * this.scale / num425;
											num423 *= num425;
											num424 *= num425;
											this.velocity.X = num423;
											this.velocity.Y = num424;
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											return;
										}
										if (this.localAI[0] == 0f)
										{
											if (this.velocity.X > 0f)
											{
												this.spriteDirection = -1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											}
											else
											{
												this.spriteDirection = 1;
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
											}
											this.localAI[0] = 1f;
											this.timeLeft = num421;
										}
										this.velocity.X = this.velocity.X * 0.98f;
										this.velocity.Y = this.velocity.Y * 0.98f;
										if (this.rotation == 0f)
										{
											this.alpha = 255;
											return;
										}
										if (this.timeLeft < 10)
										{
											this.alpha = 255 - (int)(255f * (float)this.timeLeft / 10f);
											return;
										}
										if (this.timeLeft > num421 - 10)
										{
											int num426 = num421 - this.timeLeft;
											this.alpha = 255 - (int)(255f * (float)num426 / 10f);
											return;
										}
										this.alpha = 0;
										return;
									}
									else if (this.aiStyle == 47)
									{
										if (this.ai[0] == 0f)
										{
											this.ai[0] = this.velocity.X;
											this.ai[1] = this.velocity.Y;
										}
										if (this.velocity.X > 0f)
										{
											this.rotation += (Math.Abs(this.velocity.Y) + Math.Abs(this.velocity.X)) * 0.001f;
										}
										else
										{
											this.rotation -= (Math.Abs(this.velocity.Y) + Math.Abs(this.velocity.X)) * 0.001f;
										}
										this.frameCounter++;
										if (this.frameCounter > 6)
										{
											this.frameCounter = 0;
											this.frame++;
											if (this.frame > 4)
											{
												this.frame = 0;
											}
										}
										if (Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y)) > 2.0)
										{
											this.velocity *= 0.98f;
										}
										for (int num427 = 0; num427 < 1000; num427++)
										{
											if (num427 != this.whoAmI && Main.projectile[num427].active && Main.projectile[num427].owner == this.owner && Main.projectile[num427].type == this.type && this.timeLeft > Main.projectile[num427].timeLeft && Main.projectile[num427].timeLeft > 30)
											{
												Main.projectile[num427].timeLeft = 30;
											}
										}
										int[] array = new int[20];
										int num428 = 0;
										float num429 = 300f;
										bool flag14 = false;
										for (int num430 = 0; num430 < 200; num430++)
										{
											if (Main.npc[num430].CanBeChasedBy(this, false))
											{
												float num431 = Main.npc[num430].position.X + (float)(Main.npc[num430].width / 2);
												float num432 = Main.npc[num430].position.Y + (float)(Main.npc[num430].height / 2);
												float num433 = Math.Abs(this.position.X + (float)(this.width / 2) - num431) + Math.Abs(this.position.Y + (float)(this.height / 2) - num432);
												if (num433 < num429 && Collision.CanHit(base.Center, 1, 1, Main.npc[num430].Center, 1, 1))
												{
													if (num428 < 20)
													{
														array[num428] = num430;
														num428++;
													}
													flag14 = true;
												}
											}
										}
										if (this.timeLeft < 30)
										{
											flag14 = false;
										}
										if (flag14)
										{
											int num434 = Main.rand.Next(num428);
											num434 = array[num434];
											float num435 = Main.npc[num434].position.X + (float)(Main.npc[num434].width / 2);
											float num436 = Main.npc[num434].position.Y + (float)(Main.npc[num434].height / 2);
											this.localAI[0] += 1f;
											if (this.localAI[0] > 8f)
											{
												this.localAI[0] = 0f;
												float num437 = 6f;
												Vector2 value11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												value11 += this.velocity * 4f;
												float num438 = num435 - value11.X;
												float num439 = num436 - value11.Y;
												float num440 = (float)Math.Sqrt((double)(num438 * num438 + num439 * num439));
												num440 = num437 / num440;
												num438 *= num440;
												num439 *= num440;
												Projectile.NewProjectile(value11.X, value11.Y, num438, num439, 255, this.damage, this.knockBack, this.owner, 0f, 0f);
												return;
											}
										}
									}
									else if (this.aiStyle == 48)
									{
										if (this.type == 255)
										{
											for (int num441 = 0; num441 < 4; num441++)
											{
												Vector2 vector30 = this.position;
												vector30 -= this.velocity * ((float)num441 * 0.25f);
												this.alpha = 255;
												int num442 = Dust.NewDust(vector30, 1, 1, 160, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num442].position = vector30;
												Dust expr_13BF5_cp_0 = Main.dust[num442];
												expr_13BF5_cp_0.position.X = expr_13BF5_cp_0.position.X + (float)(this.width / 2);
												Dust expr_13C19_cp_0 = Main.dust[num442];
												expr_13C19_cp_0.position.Y = expr_13C19_cp_0.position.Y + (float)(this.height / 2);
												Main.dust[num442].scale = (float)Main.rand.Next(70, 110) * 0.013f;
												Main.dust[num442].velocity *= 0.2f;
											}
											return;
										}
										if (this.type == 433)
										{
											for (int num443 = 0; num443 < 2; num443++)
											{
												Vector2 vector31 = this.position;
												vector31 -= this.velocity * ((float)num443 * 0.25f);
												this.alpha = 255;
												int num444 = Dust.NewDust(vector31, 1, 1, 160, 0f, 0f, 0, default(Color), 1f);
												Main.dust[num444].position = vector31;
												Dust expr_13D2C_cp_0 = Main.dust[num444];
												expr_13D2C_cp_0.position.X = expr_13D2C_cp_0.position.X + (float)(this.width / 2);
												Dust expr_13D50_cp_0 = Main.dust[num444];
												expr_13D50_cp_0.position.Y = expr_13D50_cp_0.position.Y + (float)(this.height / 2);
												if (Main.rand.Next(2) == 0)
												{
													Main.dust[num444].color = Color.LimeGreen;
												}
												else
												{
													Main.dust[num444].color = Color.CornflowerBlue;
												}
												Main.dust[num444].scale = (float)Main.rand.Next(70, 110) * 0.013f;
												Main.dust[num444].velocity *= 0.2f;
											}
											return;
										}
										if (this.type == 290)
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(SoundID.Item8, this.position);
											}
											this.localAI[0] += 1f;
											if (this.localAI[0] > 3f)
											{
												for (int num445 = 0; num445 < 3; num445++)
												{
													Vector2 vector32 = this.position;
													vector32 -= this.velocity * ((float)num445 * 0.3334f);
													this.alpha = 255;
													int num446 = Dust.NewDust(vector32, 1, 1, 173, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num446].position = vector32;
													Main.dust[num446].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num446].velocity *= 0.2f;
												}
												return;
											}
										}
										else if (this.type == 294)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 9f)
											{
												for (int num447 = 0; num447 < 4; num447++)
												{
													Vector2 vector33 = this.position;
													vector33 -= this.velocity * ((float)num447 * 0.25f);
													this.alpha = 255;
													int num448 = Dust.NewDust(vector33, 1, 1, 173, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num448].position = vector33;
													Main.dust[num448].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num448].velocity *= 0.2f;
												}
												return;
											}
										}
										else
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 3f)
											{
												for (int num449 = 0; num449 < 4; num449++)
												{
													Vector2 vector34 = this.position;
													vector34 -= this.velocity * ((float)num449 * 0.25f);
													this.alpha = 255;
													int num450 = Dust.NewDust(vector34, 1, 1, 162, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num450].position = vector34;
													Dust expr_14115_cp_0 = Main.dust[num450];
													expr_14115_cp_0.position.X = expr_14115_cp_0.position.X + (float)(this.width / 2);
													Dust expr_14139_cp_0 = Main.dust[num450];
													expr_14139_cp_0.position.Y = expr_14139_cp_0.position.Y + (float)(this.height / 2);
													Main.dust[num450].scale = (float)Main.rand.Next(70, 110) * 0.013f;
													Main.dust[num450].velocity *= 0.2f;
												}
												return;
											}
										}
									}
									else if (this.aiStyle == 49)
									{
										if (this.ai[1] == 0f)
										{
											this.ai[1] = 1f;
											Main.PlaySound(SoundID.Item14, this.position);
										}
										if (this.ai[1] == 1f)
										{
											if (this.velocity.X > 0f)
											{
												this.direction = 1;
											}
											else if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											this.spriteDirection = this.direction;
											this.ai[0] += 1f;
											this.rotation += this.velocity.X * 0.05f + (float)this.direction * 0.05f;
											if (this.ai[0] >= 18f)
											{
												this.velocity.Y = this.velocity.Y + 0.28f;
												this.velocity.X = this.velocity.X * 0.99f;
											}
											if ((double)this.velocity.Y > 15.9)
											{
												this.velocity.Y = 15.9f;
											}
											if (this.ai[0] > 2f)
											{
												this.alpha = 0;
												if (this.ai[0] == 3f)
												{
													for (int num451 = 0; num451 < 10; num451++)
													{
														int num452 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
														Main.dust[num452].velocity *= 0.5f;
														Main.dust[num452].velocity += this.velocity * 0.1f;
													}
													for (int num453 = 0; num453 < 5; num453++)
													{
														int num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
														Main.dust[num454].noGravity = true;
														Main.dust[num454].velocity *= 3f;
														Main.dust[num454].velocity += this.velocity * 0.2f;
														num454 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
														Main.dust[num454].velocity *= 2f;
														Main.dust[num454].velocity += this.velocity * 0.3f;
													}
													for (int num455 = 0; num455 < 1; num455++)
													{
														int num456 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
														Main.gore[num456].position += this.velocity * 1.25f;
														Main.gore[num456].scale = 1.5f;
														Main.gore[num456].velocity += this.velocity * 0.5f;
														Main.gore[num456].velocity *= 0.02f;
													}
													return;
												}
											}
										}
										else if (this.ai[1] == 2f)
										{
											this.rotation = 0f;
											this.velocity.X = this.velocity.X * 0.95f;
											this.velocity.Y = this.velocity.Y + 0.2f;
											return;
										}
									}
									else if (this.aiStyle == 50)
									{
										if (this.type == 291)
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(SoundID.Item20, this.position);
												this.localAI[0] += 1f;
											}
											bool flag15 = false;
											bool flag16 = false;
											if (this.velocity.X < 0f && this.position.X < this.ai[0])
											{
												flag15 = true;
											}
											if (this.velocity.X > 0f && this.position.X > this.ai[0])
											{
												flag15 = true;
											}
											if (this.velocity.Y < 0f && this.position.Y < this.ai[1])
											{
												flag16 = true;
											}
											if (this.velocity.Y > 0f && this.position.Y > this.ai[1])
											{
												flag16 = true;
											}
											if (flag15 && flag16)
											{
												this.Kill();
											}
											for (int num457 = 0; num457 < 10; num457++)
											{
												int num458 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.2f);
												Main.dust[num458].noGravity = true;
												Main.dust[num458].velocity *= 0.5f;
												Main.dust[num458].velocity += this.velocity * 0.1f;
											}
											return;
										}
										if (this.type == 295)
										{
											for (int num459 = 0; num459 < 8; num459++)
											{
												int num460 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.2f);
												Main.dust[num460].noGravity = true;
												Main.dust[num460].velocity *= 0.5f;
												Main.dust[num460].velocity += this.velocity * 0.1f;
											}
											return;
										}
										if (this.localAI[0] == 0f)
										{
											Main.PlaySound(SoundID.Item74, this.position);
											this.localAI[0] += 1f;
										}
										this.ai[0] += 1f;
										if (this.type == 296)
										{
											this.ai[0] += 3f;
										}
										float num461 = 25f;
										if (this.ai[0] > 180f)
										{
											num461 -= (this.ai[0] - 180f) / 2f;
										}
										if (num461 <= 0f)
										{
											num461 = 0f;
											this.Kill();
										}
										if (this.type == 296)
										{
											num461 *= 0.7f;
										}
										int num462 = 0;
										while ((float)num462 < num461)
										{
											float num463 = (float)Main.rand.Next(-10, 11);
											float num464 = (float)Main.rand.Next(-10, 11);
											float num465 = (float)Main.rand.Next(3, 9);
											float num466 = (float)Math.Sqrt((double)(num463 * num463 + num464 * num464));
											num466 = num465 / num466;
											num463 *= num466;
											num464 *= num466;
											int num467 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 174, 0f, 0f, 100, default(Color), 1.5f);
											Main.dust[num467].noGravity = true;
											Main.dust[num467].position.X = base.Center.X;
											Main.dust[num467].position.Y = base.Center.Y;
											Dust expr_14B5B_cp_0 = Main.dust[num467];
											expr_14B5B_cp_0.position.X = expr_14B5B_cp_0.position.X + (float)Main.rand.Next(-10, 11);
											Dust expr_14B85_cp_0 = Main.dust[num467];
											expr_14B85_cp_0.position.Y = expr_14B85_cp_0.position.Y + (float)Main.rand.Next(-10, 11);
											Main.dust[num467].velocity.X = num463;
											Main.dust[num467].velocity.Y = num464;
											num462++;
										}
										return;
									}
									else if (this.aiStyle == 51)
									{
										if (this.type == 297)
										{
											this.localAI[0] += 1f;
											if (this.localAI[0] > 4f)
											{
												for (int num468 = 0; num468 < 5; num468++)
												{
													int num469 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 2f);
													Main.dust[num469].noGravity = true;
													Main.dust[num469].velocity *= 0f;
												}
											}
										}
										else
										{
											if (this.localAI[0] == 0f)
											{
												Main.PlaySound(SoundID.Item8, this.position);
												this.localAI[0] += 1f;
											}
											for (int num470 = 0; num470 < 9; num470++)
											{
												int num471 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
												Main.dust[num471].noGravity = true;
												Main.dust[num471].velocity *= 0f;
											}
										}
										float num472 = base.Center.X;
										float num473 = base.Center.Y;
										float num474 = 400f;
										bool flag17 = false;
										if (this.type == 297)
										{
											for (int num475 = 0; num475 < 200; num475++)
											{
												if (Main.npc[num475].CanBeChasedBy(this, false) && base.Distance(Main.npc[num475].Center) < num474 && Collision.CanHit(base.Center, 1, 1, Main.npc[num475].Center, 1, 1))
												{
													float num476 = Main.npc[num475].position.X + (float)(Main.npc[num475].width / 2);
													float num477 = Main.npc[num475].position.Y + (float)(Main.npc[num475].height / 2);
													float num478 = Math.Abs(this.position.X + (float)(this.width / 2) - num476) + Math.Abs(this.position.Y + (float)(this.height / 2) - num477);
													if (num478 < num474)
													{
														num474 = num478;
														num472 = num476;
														num473 = num477;
														flag17 = true;
													}
												}
											}
										}
										else
										{
											num474 = 200f;
											for (int num479 = 0; num479 < 255; num479++)
											{
												if (Main.player[num479].active && !Main.player[num479].dead)
												{
													float num480 = Main.player[num479].position.X + (float)(Main.player[num479].width / 2);
													float num481 = Main.player[num479].position.Y + (float)(Main.player[num479].height / 2);
													float num482 = Math.Abs(this.position.X + (float)(this.width / 2) - num480) + Math.Abs(this.position.Y + (float)(this.height / 2) - num481);
													if (num482 < num474)
													{
														num474 = num482;
														num472 = num480;
														num473 = num481;
														flag17 = true;
													}
												}
											}
										}
										if (flag17)
										{
											float num483 = 3f;
											if (this.type == 297)
											{
												num483 = 6f;
											}
											Vector2 vector35 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num484 = num472 - vector35.X;
											float num485 = num473 - vector35.Y;
											float num486 = (float)Math.Sqrt((double)(num484 * num484 + num485 * num485));
											num486 = num483 / num486;
											num484 *= num486;
											num485 *= num486;
											if (this.type == 297)
											{
												this.velocity.X = (this.velocity.X * 20f + num484) / 21f;
												this.velocity.Y = (this.velocity.Y * 20f + num485) / 21f;
												return;
											}
											this.velocity.X = (this.velocity.X * 100f + num484) / 101f;
											this.velocity.Y = (this.velocity.Y * 100f + num485) / 101f;
											return;
										}
									}
									else if (this.aiStyle == 52)
									{
										int num487 = (int)this.ai[0];
										float num488 = 4f;
										Vector2 vector36 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
										float num489 = Main.player[num487].Center.X - vector36.X;
										float num490 = Main.player[num487].Center.Y - vector36.Y;
										float num491 = (float)Math.Sqrt((double)(num489 * num489 + num490 * num490));
										if (num491 < 50f && this.position.X < Main.player[num487].position.X + (float)Main.player[num487].width && this.position.X + (float)this.width > Main.player[num487].position.X && this.position.Y < Main.player[num487].position.Y + (float)Main.player[num487].height && this.position.Y + (float)this.height > Main.player[num487].position.Y)
										{
											if (this.owner == Main.myPlayer && !Main.player[Main.myPlayer].moonLeech)
											{
												int num492 = (int)this.ai[1];
												Main.player[num487].HealEffect(num492, false);
												Main.player[num487].statLife += num492;
												if (Main.player[num487].statLife > Main.player[num487].statLifeMax2)
												{
													Main.player[num487].statLife = Main.player[num487].statLifeMax2;
												}
												NetMessage.SendData(66, -1, -1, "", num487, (float)num492, 0f, 0f, 0, 0, 0);
											}
											this.Kill();
										}
										num491 = num488 / num491;
										num489 *= num491;
										num490 *= num491;
										this.velocity.X = (this.velocity.X * 15f + num489) / 16f;
										this.velocity.Y = (this.velocity.Y * 15f + num490) / 16f;
										if (this.type == 305)
										{
											for (int num493 = 0; num493 < 3; num493++)
											{
												float num494 = this.velocity.X * 0.334f * (float)num493;
												float num495 = -(this.velocity.Y * 0.334f) * (float)num493;
												int num496 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 183, 0f, 0f, 100, default(Color), 1.1f);
												Main.dust[num496].noGravity = true;
												Main.dust[num496].velocity *= 0f;
												Dust expr_1556E_cp_0 = Main.dust[num496];
												expr_1556E_cp_0.position.X = expr_1556E_cp_0.position.X - num494;
												Dust expr_1558D_cp_0 = Main.dust[num496];
												expr_1558D_cp_0.position.Y = expr_1558D_cp_0.position.Y - num495;
											}
											return;
										}
										for (int num497 = 0; num497 < 5; num497++)
										{
											float num498 = this.velocity.X * 0.2f * (float)num497;
											float num499 = -(this.velocity.Y * 0.2f) * (float)num497;
											int num500 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
											Main.dust[num500].noGravity = true;
											Main.dust[num500].velocity *= 0f;
											Dust expr_15685_cp_0 = Main.dust[num500];
											expr_15685_cp_0.position.X = expr_15685_cp_0.position.X - num498;
											Dust expr_156A4_cp_0 = Main.dust[num500];
											expr_156A4_cp_0.position.Y = expr_156A4_cp_0.position.Y - num499;
										}
										return;
									}
									else if (this.aiStyle == 53)
									{
										if (this.localAI[0] == 0f)
										{
											this.localAI[1] = 1f;
											this.localAI[0] = 1f;
											this.ai[0] = 120f;
											int num501 = 80;
											Main.PlaySound(SoundID.Item46, this.position);
											if (this.type == 308)
											{
												for (int num502 = 0; num502 < num501; num502++)
												{
													int num503 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), this.width, this.height - 16, 185, 0f, 0f, 0, default(Color), 1f);
													Main.dust[num503].velocity *= 2f;
													Main.dust[num503].noGravity = true;
													Main.dust[num503].scale *= 1.15f;
												}
											}
											if (this.type == 377)
											{
												this.frame = 4;
												num501 = 40;
												for (int num504 = 0; num504 < num501; num504++)
												{
													int num505 = Dust.NewDust(this.position + Vector2.UnitY * 16f, this.width, this.height - 16, 171, 0f, 0f, 100, default(Color), 1f);
													Main.dust[num505].scale = (float)Main.rand.Next(1, 10) * 0.1f;
													Main.dust[num505].noGravity = true;
													Main.dust[num505].fadeIn = 1.5f;
													Main.dust[num505].velocity *= 0.75f;
												}
											}
										}
										this.velocity.X = 0f;
										this.velocity.Y = this.velocity.Y + 0.2f;
										if (this.velocity.Y > 16f)
										{
											this.velocity.Y = 16f;
										}
										bool flag18 = false;
										float num506 = base.Center.X;
										float num507 = base.Center.Y;
										float num508 = 1000f;
										NPC ownerMinionAttackTargetNPC = this.OwnerMinionAttackTargetNPC;
										if (ownerMinionAttackTargetNPC != null && ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
										{
											float num509 = ownerMinionAttackTargetNPC.position.X + (float)(ownerMinionAttackTargetNPC.width / 2);
											float num510 = ownerMinionAttackTargetNPC.position.Y + (float)(ownerMinionAttackTargetNPC.height / 2);
											float num511 = Math.Abs(this.position.X + (float)(this.width / 2) - num509) + Math.Abs(this.position.Y + (float)(this.height / 2) - num510);
											if (num511 < num508 && Collision.CanHit(this.position, this.width, this.height, ownerMinionAttackTargetNPC.position, ownerMinionAttackTargetNPC.width, ownerMinionAttackTargetNPC.height))
											{
												num508 = num511;
												num506 = num509;
												num507 = num510;
												flag18 = true;
											}
										}
										if (!flag18)
										{
											for (int num512 = 0; num512 < 200; num512++)
											{
												if (Main.npc[num512].CanBeChasedBy(this, false))
												{
													float num513 = Main.npc[num512].position.X + (float)(Main.npc[num512].width / 2);
													float num514 = Main.npc[num512].position.Y + (float)(Main.npc[num512].height / 2);
													float num515 = Math.Abs(this.position.X + (float)(this.width / 2) - num513) + Math.Abs(this.position.Y + (float)(this.height / 2) - num514);
													if (num515 < num508 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num512].position, Main.npc[num512].width, Main.npc[num512].height))
													{
														num508 = num515;
														num506 = num513;
														num507 = num514;
														flag18 = true;
													}
												}
											}
										}
										if (flag18)
										{
											float num516 = num506;
											float num517 = num507;
											num506 -= base.Center.X;
											num507 -= base.Center.Y;
											int num518 = 0;
											if (this.frameCounter > 0)
											{
												this.frameCounter--;
											}
											if (this.frameCounter <= 0)
											{
												int num519 = this.spriteDirection;
												if (num506 < 0f)
												{
													this.spriteDirection = -1;
												}
												else
												{
													this.spriteDirection = 1;
												}
												if (num507 > 0f)
												{
													num518 = 0;
												}
												else if (Math.Abs(num507) > Math.Abs(num506) * 3f)
												{
													num518 = 4;
												}
												else if (Math.Abs(num507) > Math.Abs(num506) * 2f)
												{
													num518 = 3;
												}
												else if (Math.Abs(num506) > Math.Abs(num507) * 3f)
												{
													num518 = 0;
												}
												else if (Math.Abs(num506) > Math.Abs(num507) * 2f)
												{
													num518 = 1;
												}
												else
												{
													num518 = 2;
												}
												int num520 = this.frame;
												if (this.type == 308)
												{
													this.frame = num518 * 2;
												}
												else if (this.type == 377)
												{
													this.frame = num518;
												}
												if (this.ai[0] > 40f && this.localAI[1] == 0f && this.type == 308)
												{
													this.frame++;
												}
												if (num520 != this.frame || num519 != this.spriteDirection)
												{
													this.frameCounter = 8;
													if (this.ai[0] <= 0f)
													{
														this.frameCounter = 4;
													}
												}
											}
											if (this.ai[0] <= 0f)
											{
												this.localAI[1] = 0f;
												this.ai[0] = 60f;
												if (Main.myPlayer == this.owner)
												{
													float num521 = 6f;
													int num522 = 309;
													if (this.type == 377)
													{
														num522 = 378;
														num521 = 9f;
													}
													Vector2 vector37 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
													if (num518 == 0)
													{
														vector37.Y += 12f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num518 == 1)
													{
														vector37.Y += 0f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num518 == 2)
													{
														vector37.Y -= 2f;
														vector37.X += (float)(24 * this.spriteDirection);
													}
													else if (num518 == 3)
													{
														vector37.Y -= 6f;
														vector37.X += (float)(14 * this.spriteDirection);
													}
													else if (num518 == 4)
													{
														vector37.Y -= 14f;
														vector37.X += (float)(2 * this.spriteDirection);
													}
													if (this.spriteDirection < 0)
													{
														vector37.X += 10f;
													}
													float num523 = num516 - vector37.X;
													float num524 = num517 - vector37.Y;
													float num525 = (float)Math.Sqrt((double)(num523 * num523 + num524 * num524));
													num525 = num521 / num525;
													num523 *= num525;
													num524 *= num525;
													int num526 = this.damage;
													Projectile.NewProjectile(vector37.X, vector37.Y, num523, num524, num522, num526, this.knockBack, Main.myPlayer, 0f, 0f);
												}
											}
										}
										else if (this.ai[0] <= 60f && (this.frame == 1 || this.frame == 3 || this.frame == 5 || this.frame == 7 || this.frame == 9))
										{
											this.frame--;
										}
										if (this.ai[0] > 0f)
										{
											this.ai[0] -= 1f;
											return;
										}
									}
									else if (this.aiStyle == 54)
									{
										if (this.type == 317)
										{
											if (Main.player[Main.myPlayer].dead)
											{
												Main.player[Main.myPlayer].raven = false;
											}
											if (Main.player[Main.myPlayer].raven)
											{
												this.timeLeft = 2;
											}
										}
										for (int num527 = 0; num527 < 1000; num527++)
										{
											if (num527 != this.whoAmI && Main.projectile[num527].active && Main.projectile[num527].owner == this.owner && Main.projectile[num527].type == this.type && Math.Abs(this.position.X - Main.projectile[num527].position.X) + Math.Abs(this.position.Y - Main.projectile[num527].position.Y) < (float)this.width)
											{
												if (this.position.X < Main.projectile[num527].position.X)
												{
													this.velocity.X = this.velocity.X - 0.05f;
												}
												else
												{
													this.velocity.X = this.velocity.X + 0.05f;
												}
												if (this.position.Y < Main.projectile[num527].position.Y)
												{
													this.velocity.Y = this.velocity.Y - 0.05f;
												}
												else
												{
													this.velocity.Y = this.velocity.Y + 0.05f;
												}
											}
										}
										float num528 = this.position.X;
										float num529 = this.position.Y;
										float num530 = 900f;
										bool flag19 = false;
										int num531 = 500;
										if (this.ai[1] != 0f || this.friendly)
										{
											num531 = 1400;
										}
										if (Math.Abs(base.Center.X - Main.player[this.owner].Center.X) + Math.Abs(base.Center.Y - Main.player[this.owner].Center.Y) > (float)num531)
										{
											this.ai[0] = 1f;
										}
										if (this.ai[0] == 0f)
										{
											this.tileCollide = true;
											NPC ownerMinionAttackTargetNPC2 = this.OwnerMinionAttackTargetNPC;
											if (ownerMinionAttackTargetNPC2 != null && ownerMinionAttackTargetNPC2.CanBeChasedBy(this, false))
											{
												float num532 = ownerMinionAttackTargetNPC2.position.X + (float)(ownerMinionAttackTargetNPC2.width / 2);
												float num533 = ownerMinionAttackTargetNPC2.position.Y + (float)(ownerMinionAttackTargetNPC2.height / 2);
												float num534 = Math.Abs(this.position.X + (float)(this.width / 2) - num532) + Math.Abs(this.position.Y + (float)(this.height / 2) - num533);
												if (num534 < num530 && Collision.CanHit(this.position, this.width, this.height, ownerMinionAttackTargetNPC2.position, ownerMinionAttackTargetNPC2.width, ownerMinionAttackTargetNPC2.height))
												{
													num530 = num534;
													num528 = num532;
													num529 = num533;
													flag19 = true;
												}
											}
											if (!flag19)
											{
												for (int num535 = 0; num535 < 200; num535++)
												{
													if (Main.npc[num535].CanBeChasedBy(this, false))
													{
														float num536 = Main.npc[num535].position.X + (float)(Main.npc[num535].width / 2);
														float num537 = Main.npc[num535].position.Y + (float)(Main.npc[num535].height / 2);
														float num538 = Math.Abs(this.position.X + (float)(this.width / 2) - num536) + Math.Abs(this.position.Y + (float)(this.height / 2) - num537);
														if (num538 < num530 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num535].position, Main.npc[num535].width, Main.npc[num535].height))
														{
															num530 = num538;
															num528 = num536;
															num529 = num537;
															flag19 = true;
														}
													}
												}
											}
										}
										else
										{
											this.tileCollide = false;
										}
										if (!flag19)
										{
											this.friendly = true;
											float num539 = 8f;
											if (this.ai[0] == 1f)
											{
												num539 = 12f;
											}
											Vector2 vector38 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
											float num540 = Main.player[this.owner].Center.X - vector38.X;
											float num541 = Main.player[this.owner].Center.Y - vector38.Y - 60f;
											float num542 = (float)Math.Sqrt((double)(num540 * num540 + num541 * num541));
											if (num542 < 100f && this.ai[0] == 1f && !Collision.SolidCollision(this.position, this.width, this.height))
											{
												this.ai[0] = 0f;
											}
											if (num542 > 2000f)
											{
												this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
												this.position.Y = Main.player[this.owner].Center.Y - (float)(this.width / 2);
											}
											if (num542 > 70f)
											{
												num542 = num539 / num542;
												num540 *= num542;
												num541 *= num542;
												this.velocity.X = (this.velocity.X * 20f + num540) / 21f;
												this.velocity.Y = (this.velocity.Y * 20f + num541) / 21f;
											}
											else
											{
												if (this.velocity.X == 0f && this.velocity.Y == 0f)
												{
													this.velocity.X = -0.15f;
													this.velocity.Y = -0.05f;
												}
												this.velocity *= 1.01f;
											}
											this.friendly = false;
											this.rotation = this.velocity.X * 0.05f;
											this.frameCounter++;
											if (this.frameCounter >= 4)
											{
												this.frameCounter = 0;
												this.frame++;
											}
											if (this.frame > 3)
											{
												this.frame = 0;
											}
											if ((double)Math.Abs(this.velocity.X) > 0.2)
											{
												this.spriteDirection = -this.direction;
												return;
											}
										}
										else
										{
											if (this.ai[1] == -1f)
											{
												this.ai[1] = 17f;
											}
											if (this.ai[1] > 0f)
											{
												this.ai[1] -= 1f;
											}
											if (this.ai[1] == 0f)
											{
												this.friendly = true;
												float num543 = 8f;
												Vector2 vector39 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												float num544 = num528 - vector39.X;
												float num545 = num529 - vector39.Y;
												float num546 = (float)Math.Sqrt((double)(num544 * num544 + num545 * num545));
												if (num546 < 100f)
												{
													num543 = 10f;
												}
												num546 = num543 / num546;
												num544 *= num546;
												num545 *= num546;
												this.velocity.X = (this.velocity.X * 14f + num544) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num545) / 15f;
											}
											else
											{
												this.friendly = false;
												if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 10f)
												{
													this.velocity *= 1.05f;
												}
											}
											this.rotation = this.velocity.X * 0.05f;
											this.frameCounter++;
											if (this.frameCounter >= 4)
											{
												this.frameCounter = 0;
												this.frame++;
											}
											if (this.frame < 4)
											{
												this.frame = 4;
											}
											if (this.frame > 7)
											{
												this.frame = 4;
											}
											if ((double)Math.Abs(this.velocity.X) > 0.2)
											{
												this.spriteDirection = -this.direction;
												return;
											}
										}
									}
									else if (this.aiStyle == 55)
									{
										this.frameCounter++;
										if (this.frameCounter > 0)
										{
											this.frame++;
											this.frameCounter = 0;
											if (this.frame > 2)
											{
												this.frame = 0;
											}
										}
										if (this.velocity.X < 0f)
										{
											this.spriteDirection = -1;
											this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
										}
										else
										{
											this.spriteDirection = 1;
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
										}
										if (this.ai[0] >= 0f && this.ai[0] < 200f)
										{
											int num547 = (int)this.ai[0];
											if (Main.npc[num547].active)
											{
												float num548 = 8f;
												Vector2 vector40 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
												float num549 = Main.npc[num547].position.X - vector40.X;
												float num550 = Main.npc[num547].position.Y - vector40.Y;
												float num551 = (float)Math.Sqrt((double)(num549 * num549 + num550 * num550));
												num551 = num548 / num551;
												num549 *= num551;
												num550 *= num551;
												this.velocity.X = (this.velocity.X * 14f + num549) / 15f;
												this.velocity.Y = (this.velocity.Y * 14f + num550) / 15f;
											}
											else
											{
												float num552 = 1000f;
												for (int num553 = 0; num553 < 200; num553++)
												{
													if (Main.npc[num553].CanBeChasedBy(this, false))
													{
														float num554 = Main.npc[num553].position.X + (float)(Main.npc[num553].width / 2);
														float num555 = Main.npc[num553].position.Y + (float)(Main.npc[num553].height / 2);
														float num556 = Math.Abs(this.position.X + (float)(this.width / 2) - num554) + Math.Abs(this.position.Y + (float)(this.height / 2) - num555);
														if (num556 < num552 && Collision.CanHit(this.position, this.width, this.height, Main.npc[num553].position, Main.npc[num553].width, Main.npc[num553].height))
														{
															num552 = num556;
															this.ai[0] = (float)num553;
														}
													}
												}
											}
											int num557 = 8;
											int num558 = Dust.NewDust(new Vector2(this.position.X + (float)num557, this.position.Y + (float)num557), this.width - num557 * 2, this.height - num557 * 2, 6, 0f, 0f, 0, default(Color), 1f);
											Main.dust[num558].velocity *= 0.5f;
											Main.dust[num558].velocity += this.velocity * 0.5f;
											Main.dust[num558].noGravity = true;
											Main.dust[num558].noLight = true;
											Main.dust[num558].scale = 1.4f;
											return;
										}
										this.Kill();
										return;
									}
									else
									{
										if (this.aiStyle == 56)
										{
											if (this.localAI[0] == 0f)
											{
												this.localAI[0] = 1f;
												this.rotation = this.ai[0];
												this.spriteDirection = -(int)this.ai[1];
											}
											if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < 16f)
											{
												this.velocity *= 1.05f;
											}
											if (this.velocity.X < 0f)
											{
												this.direction = -1;
											}
											else
											{
												this.direction = 1;
											}
											this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.025f * (float)this.direction;
											return;
										}
										if (this.aiStyle == 57)
										{
											this.ai[0] += 1f;
											if (this.ai[0] > 30f)
											{
												this.ai[0] = 30f;
												this.velocity.Y = this.velocity.Y + 0.25f;
												if (this.velocity.Y > 16f)
												{
													this.velocity.Y = 16f;
												}
												this.velocity.X = this.velocity.X * 0.995f;
											}
											this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
											this.alpha -= 50;
											if (this.alpha < 0)
											{
												this.alpha = 0;
											}
											if (this.owner == Main.myPlayer)
											{
												this.localAI[0] += 1f;
												if (this.localAI[0] >= 4f)
												{
													this.localAI[0] = 0f;
													int num559 = 0;
													for (int num560 = 0; num560 < 1000; num560++)
													{
														if (Main.projectile[num560].active && Main.projectile[num560].owner == this.owner && Main.projectile[num560].type == 344)
														{
															num559++;
														}
													}
													float num561 = (float)this.damage * 0.8f;
													if (num559 > 100)
													{
														float num562 = (float)(num559 - 100);
														num562 = 1f - num562 / 100f;
														num561 *= num562;
													}
													if (num559 > 100)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 120)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 140)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 150)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 160)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 165)
													{
														this.localAI[0] -= 1f;
													}
													if (num559 > 170)
													{
														this.localAI[0] -= 2f;
													}
													if (num559 > 175)
													{
														this.localAI[0] -= 3f;
													}
													if (num559 > 180)
													{
														this.localAI[0] -= 4f;
													}
													if (num559 > 185)
													{
														this.localAI[0] -= 5f;
													}
													if (num559 > 190)
													{
														this.localAI[0] -= 6f;
													}
													if (num559 > 195)
													{
														this.localAI[0] -= 7f;
													}
													if (num561 > (float)this.damage * 0.1f)
													{
														Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 344, (int)num561, this.knockBack * 0.55f, this.owner, 0f, (float)Main.rand.Next(3));
														return;
													}
												}
											}
										}
										else
										{
											if (this.aiStyle == 58)
											{
												this.alpha -= 50;
												if (this.alpha < 0)
												{
													this.alpha = 0;
												}
												if (this.ai[0] == 0f)
												{
													this.frame = 0;
													this.ai[1] += 1f;
													if (this.ai[1] > 30f)
													{
														this.velocity.Y = this.velocity.Y + 0.1f;
													}
													if (this.velocity.Y >= 0f)
													{
														this.ai[0] = 1f;
													}
												}
												if (this.ai[0] == 1f)
												{
													this.frame = 1;
													this.velocity.Y = this.velocity.Y + 0.1f;
													if (this.velocity.Y > 3f)
													{
														this.velocity.Y = 3f;
													}
													this.velocity.X = this.velocity.X * 0.99f;
												}
												this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
												return;
											}
											if (this.aiStyle == 59)
											{
												this.ai[1] += 1f;
												if (this.ai[1] >= 60f)
												{
													this.friendly = true;
													int num563 = (int)this.ai[0];
													if (!Main.npc[num563].active)
													{
														int[] array2 = new int[200];
														int num564 = 0;
														for (int num565 = 0; num565 < 200; num565++)
														{
															if (Main.npc[num565].CanBeChasedBy(this, false))
															{
																float num566 = Math.Abs(Main.npc[num565].position.X + (float)(Main.npc[num565].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.npc[num565].position.Y + (float)(Main.npc[num565].height / 2) - this.position.Y + (float)(this.height / 2));
																if (num566 < 800f)
																{
																	array2[num564] = num565;
																	num564++;
																}
															}
														}
														if (num564 == 0)
														{
															this.Kill();
															return;
														}
														num563 = array2[Main.rand.Next(num564)];
														this.ai[0] = (float)num563;
													}
													float num567 = 4f;
													Vector2 vector41 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
													float num568 = Main.npc[num563].Center.X - vector41.X;
													float num569 = Main.npc[num563].Center.Y - vector41.Y;
													float num570 = (float)Math.Sqrt((double)(num568 * num568 + num569 * num569));
													num570 = num567 / num570;
													num568 *= num570;
													num569 *= num570;
													int num571 = 30;
													this.velocity.X = (this.velocity.X * (float)(num571 - 1) + num568) / (float)num571;
													this.velocity.Y = (this.velocity.Y * (float)(num571 - 1) + num569) / (float)num571;
												}
												for (int num572 = 0; num572 < 5; num572++)
												{
													float num573 = this.velocity.X * 0.2f * (float)num572;
													float num574 = -(this.velocity.Y * 0.2f) * (float)num572;
													int num575 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 175, 0f, 0f, 100, default(Color), 1.3f);
													Main.dust[num575].noGravity = true;
													Main.dust[num575].velocity *= 0f;
													Dust expr_178B4_cp_0 = Main.dust[num575];
													expr_178B4_cp_0.position.X = expr_178B4_cp_0.position.X - num573;
													Dust expr_178D3_cp_0 = Main.dust[num575];
													expr_178D3_cp_0.position.Y = expr_178D3_cp_0.position.Y - num574;
												}
												return;
											}
											if (this.aiStyle == 60)
											{
												this.scale -= 0.015f;
												if (this.scale <= 0f)
												{
													this.velocity *= 5f;
													this.oldVelocity = this.velocity;
													this.Kill();
												}
												if (this.ai[0] <= 3f)
												{
													this.ai[0] += 1f;
													return;
												}
												int num576 = 103;
												if (this.type == 406)
												{
													num576 = 137;
												}
												if (this.owner == Main.myPlayer)
												{
													Rectangle rectangle4 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
													for (int num577 = 0; num577 < 200; num577++)
													{
														if (Main.npc[num577].active && !Main.npc[num577].dontTakeDamage && Main.npc[num577].lifeMax > 1)
														{
															Rectangle value12 = new Rectangle((int)Main.npc[num577].position.X, (int)Main.npc[num577].position.Y, Main.npc[num577].width, Main.npc[num577].height);
															if (rectangle4.Intersects(value12))
															{
																Main.npc[num577].AddBuff(num576, 1500, false);
																this.Kill();
															}
														}
													}
													for (int num578 = 0; num578 < 255; num578++)
													{
														if (num578 != this.owner && Main.player[num578].active && !Main.player[num578].dead)
														{
															Rectangle value13 = new Rectangle((int)Main.player[num578].position.X, (int)Main.player[num578].position.Y, Main.player[num578].width, Main.player[num578].height);
															if (rectangle4.Intersects(value13))
															{
																Main.player[num578].AddBuff(num576, 1500, false);
																this.Kill();
															}
														}
													}
												}
												this.ai[0] += this.ai[1];
												if (this.ai[0] > 30f)
												{
													this.velocity.Y = this.velocity.Y + 0.1f;
												}
												if (this.type == 358)
												{
													for (int num579 = 0; num579 < 1; num579++)
													{
														for (int num580 = 0; num580 < 6; num580++)
														{
															float num581 = this.velocity.X / 6f * (float)num580;
															float num582 = this.velocity.Y / 6f * (float)num580;
															int num583 = 6;
															int num584 = Dust.NewDust(new Vector2(this.position.X + (float)num583, this.position.Y + (float)num583), this.width - num583 * 2, this.height - num583 * 2, 211, 0f, 0f, 75, default(Color), 1.2f);
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num584].alpha += 25;
															}
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num584].alpha += 25;
															}
															if (Main.rand.Next(2) == 0)
															{
																Main.dust[num584].alpha += 25;
															}
															Main.dust[num584].noGravity = true;
															Main.dust[num584].velocity *= 0.3f;
															Main.dust[num584].velocity += this.velocity * 0.5f;
															Main.dust[num584].position = base.Center;
															Dust expr_17D66_cp_0 = Main.dust[num584];
															expr_17D66_cp_0.position.X = expr_17D66_cp_0.position.X - num581;
															Dust expr_17D85_cp_0 = Main.dust[num584];
															expr_17D85_cp_0.position.Y = expr_17D85_cp_0.position.Y - num582;
															Main.dust[num584].velocity *= 0.2f;
														}
														if (Main.rand.Next(4) == 0)
														{
															int num585 = 6;
															int num586 = Dust.NewDust(new Vector2(this.position.X + (float)num585, this.position.Y + (float)num585), this.width - num585 * 2, this.height - num585 * 2, 211, 0f, 0f, 75, default(Color), 0.65f);
															Main.dust[num586].velocity *= 0.5f;
															Main.dust[num586].velocity += this.velocity * 0.5f;
														}
													}
												}
												if (this.type == 406)
												{
													int num587 = 175;
													Color newColor = new Color(0, 80, 255, 100);
													for (int num588 = 0; num588 < 6; num588++)
													{
														Vector2 vector42 = this.velocity * (float)num588 / 6f;
														int num589 = 6;
														int num590 = Dust.NewDust(this.position + Vector2.One * 6f, this.width - num589 * 2, this.height - num589 * 2, 4, 0f, 0f, num587, newColor, 1.2f);
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num590].alpha += 25;
														}
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num590].alpha += 25;
														}
														if (Main.rand.Next(2) == 0)
														{
															Main.dust[num590].alpha += 25;
														}
														Main.dust[num590].noGravity = true;
														Main.dust[num590].velocity *= 0.3f;
														Main.dust[num590].velocity += this.velocity * 0.5f;
														Main.dust[num590].position = base.Center;
														Dust expr_18042_cp_0 = Main.dust[num590];
														expr_18042_cp_0.position.X = expr_18042_cp_0.position.X - vector42.X;
														Dust expr_18066_cp_0 = Main.dust[num590];
														expr_18066_cp_0.position.Y = expr_18066_cp_0.position.Y - vector42.Y;
														Main.dust[num590].velocity *= 0.2f;
													}
													if (Main.rand.Next(4) == 0)
													{
														int num591 = 6;
														int num592 = Dust.NewDust(this.position + Vector2.One * 6f, this.width - num591 * 2, this.height - num591 * 2, 4, 0f, 0f, num587, newColor, 1.2f);
														Main.dust[num592].velocity *= 0.5f;
														Main.dust[num592].velocity += this.velocity * 0.5f;
														return;
													}
												}
											}
											else
											{
												if (this.aiStyle == 61)
												{
													this.AI_061_FishingBobber();
													return;
												}
												if (this.aiStyle == 62)
												{
													this.AI_062();
													return;
												}
												if (this.aiStyle == 63)
												{
													if (!Main.player[this.owner].active)
													{
														this.active = false;
														return;
													}
													Vector2 value14 = this.position;
													bool flag20 = false;
													float num593 = 500f;
													for (int num594 = 0; num594 < 200; num594++)
													{
														NPC nPC = Main.npc[num594];
														if (nPC.CanBeChasedBy(this, false))
														{
															float num595 = Vector2.Distance(nPC.Center, base.Center);
															if (((Vector2.Distance(base.Center, value14) > num595 && num595 < num593) || !flag20) && Collision.CanHit(this.position, this.width, this.height, nPC.position, nPC.width, nPC.height))
															{
																num593 = num595;
																value14 = nPC.Center;
																flag20 = true;
															}
														}
													}
													if (!flag20)
													{
														this.velocity.X = this.velocity.X * 0.95f;
													}
													else
													{
														float num596 = 5f;
														float num597 = 0.08f;
														if (this.velocity.Y == 0f)
														{
															bool flag21 = false;
															if (base.Center.Y - 50f > value14.Y)
															{
																flag21 = true;
															}
															if (flag21)
															{
																this.velocity.Y = -6f;
															}
														}
														else
														{
															num596 = 8f;
															num597 = 0.12f;
														}
														this.velocity.X = this.velocity.X + (float)Math.Sign(value14.X - base.Center.X) * num597;
														if (this.velocity.X < -num596)
														{
															this.velocity.X = -num596;
														}
														if (this.velocity.X > num596)
														{
															this.velocity.X = num596;
														}
													}
													float num598 = 0f;
													Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref num598, ref this.gfxOffY, 1, false, 0);
													if (this.velocity.Y != 0f)
													{
														this.frame = 3;
													}
													else
													{
														if (Math.Abs(this.velocity.X) > 0.2f)
														{
															this.frameCounter++;
														}
														if (this.frameCounter >= 9)
														{
															this.frameCounter = 0;
														}
														if (this.frameCounter >= 6)
														{
															this.frame = 2;
														}
														else if (this.frameCounter >= 3)
														{
															this.frame = 1;
														}
														else
														{
															this.frame = 0;
														}
													}
													if (this.velocity.X != 0f)
													{
														this.direction = Math.Sign(this.velocity.X);
													}
													this.spriteDirection = -this.direction;
													this.velocity.Y = this.velocity.Y + 0.2f;
													if (this.velocity.Y > 16f)
													{
														this.velocity.Y = 16f;
														return;
													}
												}
												else if (this.aiStyle == 64)
												{
													int num599 = 10;
													int num600 = 15;
													float num601 = 1f;
													int num602 = 150;
													int num603 = 42;
													if (this.type == 386)
													{
														num599 = 16;
														num600 = 16;
														num601 = 1.5f;
													}
													if (this.velocity.X != 0f)
													{
														this.direction = (this.spriteDirection = -Math.Sign(this.velocity.X));
													}
													this.frameCounter++;
													if (this.frameCounter > 2)
													{
														this.frame++;
														this.frameCounter = 0;
													}
													if (this.frame >= 6)
													{
														this.frame = 0;
													}
													if (this.localAI[0] == 0f && Main.myPlayer == this.owner)
													{
														this.localAI[0] = 1f;
														this.position.X = this.position.X + (float)(this.width / 2);
														this.position.Y = this.position.Y + (float)(this.height / 2);
														this.scale = ((float)(num599 + num600) - this.ai[1]) * num601 / (float)(num600 + num599);
														this.width = (int)((float)num602 * this.scale);
														this.height = (int)((float)num603 * this.scale);
														this.position.X = this.position.X - (float)(this.width / 2);
														this.position.Y = this.position.Y - (float)(this.height / 2);
														this.netUpdate = true;
													}
													if (this.ai[1] != -1f)
													{
														this.scale = ((float)(num599 + num600) - this.ai[1]) * num601 / (float)(num600 + num599);
														this.width = (int)((float)num602 * this.scale);
														this.height = (int)((float)num603 * this.scale);
													}
													if (!Collision.SolidCollision(this.position, this.width, this.height))
													{
														this.alpha -= 30;
														if (this.alpha < 60)
														{
															this.alpha = 60;
														}
														if (this.type == 386 && this.alpha < 100)
														{
															this.alpha = 100;
														}
													}
													else
													{
														this.alpha += 30;
														if (this.alpha > 150)
														{
															this.alpha = 150;
														}
													}
													if (this.ai[0] > 0f)
													{
														this.ai[0] -= 1f;
													}
													if (this.ai[0] == 1f && this.ai[1] > 0f && this.owner == Main.myPlayer)
													{
														this.netUpdate = true;
														Vector2 center = base.Center;
														center.Y -= (float)num603 * this.scale / 2f;
														float num604 = ((float)(num599 + num600) - this.ai[1] + 1f) * num601 / (float)(num600 + num599);
														center.Y -= (float)num603 * num604 / 2f;
														center.Y += 2f;
														Projectile.NewProjectile(center.X, center.Y, this.velocity.X, this.velocity.Y, this.type, this.damage, this.knockBack, this.owner, 10f, this.ai[1] - 1f);
														int num605 = 4;
														if (this.type == 386)
														{
															num605 = 2;
														}
														if ((int)this.ai[1] % num605 == 0 && this.ai[1] != 0f)
														{
															int num606 = 372;
															if (this.type == 386)
															{
																num606 = 373;
															}
															int num607 = NPC.NewNPC((int)center.X, (int)center.Y, num606, 0, 0f, 0f, 0f, 0f, 255);
															Main.npc[num607].velocity = this.velocity;
															Main.npc[num607].netUpdate = true;
															if (this.type == 386)
															{
																Main.npc[num607].ai[2] = (float)this.width;
																Main.npc[num607].ai[3] = -1.5f;
															}
														}
													}
													if (this.ai[0] <= 0f)
													{
														float num608 = 0.104719758f;
														float num609 = (float)this.width / 5f;
														if (this.type == 386)
														{
															num609 *= 2f;
														}
														float num610 = (float)(Math.Cos((double)(num608 * -(double)this.ai[0])) - 0.5) * num609;
														this.position.X = this.position.X - num610 * (float)(-(float)this.direction);
														this.ai[0] -= 1f;
														num610 = (float)(Math.Cos((double)(num608 * -(double)this.ai[0])) - 0.5) * num609;
														this.position.X = this.position.X + num610 * (float)(-(float)this.direction);
														return;
													}
												}
												else if (this.aiStyle == 65)
												{
													if (this.ai[1] > 0f)
													{
														int num611 = (int)this.ai[1] - 1;
														if (num611 < 255)
														{
															this.localAI[0] += 1f;
															if (this.localAI[0] > 10f)
															{
																int num612 = 6;
																for (int num613 = 0; num613 < num612; num613++)
																{
																	Vector2 vector43 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f;
																	vector43 = vector43.RotatedBy((double)(num613 - (num612 / 2 - 1)) * 3.1415926535897931 / (double)((float)num612), default(Vector2)) + base.Center;
																	Vector2 value15 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
																	int num614 = Dust.NewDust(vector43 + value15, 0, 0, 172, value15.X * 2f, value15.Y * 2f, 100, default(Color), 1.4f);
																	Main.dust[num614].noGravity = true;
																	Main.dust[num614].noLight = true;
																	Main.dust[num614].velocity /= 4f;
																	Main.dust[num614].velocity -= this.velocity;
																}
																this.alpha -= 5;
																if (this.alpha < 100)
																{
																	this.alpha = 100;
																}
																this.rotation += this.velocity.X * 0.1f;
																this.frame = (int)(this.localAI[0] / 3f) % 3;
															}
															Vector2 value16 = Main.player[num611].Center - base.Center;
															float num615 = 4f;
															num615 += this.localAI[0] / 20f;
															this.velocity = Vector2.Normalize(value16) * num615;
															if (value16.Length() < 50f)
															{
																this.Kill();
															}
														}
													}
													else
													{
														float num616 = 0.209439516f;
														float num617 = 4f;
														float num618 = (float)(Math.Cos((double)(num616 * this.ai[0])) - 0.5) * num617;
														this.velocity.Y = this.velocity.Y - num618;
														this.ai[0] += 1f;
														num618 = (float)(Math.Cos((double)(num616 * this.ai[0])) - 0.5) * num617;
														this.velocity.Y = this.velocity.Y + num618;
														this.localAI[0] += 1f;
														if (this.localAI[0] > 10f)
														{
															this.alpha -= 5;
															if (this.alpha < 100)
															{
																this.alpha = 100;
															}
															this.rotation += this.velocity.X * 0.1f;
															this.frame = (int)(this.localAI[0] / 3f) % 3;
														}
													}
													if (this.wet)
													{
														this.position.Y = this.position.Y - 16f;
														this.Kill();
														return;
													}
												}
												else if (this.aiStyle == 66)
												{
													float num619 = 0f;
													float num620 = 0f;
													float num621 = 0f;
													float num622 = 0f;
													if (this.type == 387 || this.type == 388)
													{
														num619 = 700f;
														num620 = 800f;
														num621 = 1200f;
														num622 = 150f;
														if (Main.player[this.owner].dead)
														{
															Main.player[this.owner].twinsMinion = false;
														}
														if (Main.player[this.owner].twinsMinion)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 533)
													{
														num619 = 1500f;
														num620 = 900f;
														num621 = 1500f;
														num622 = 450f;
														if (Main.player[this.owner].dead)
														{
															Main.player[this.owner].DeadlySphereMinion = false;
														}
														if (Main.player[this.owner].DeadlySphereMinion)
														{
															this.timeLeft = 2;
														}
													}
													float num623 = 0.05f;
													for (int num624 = 0; num624 < 1000; num624++)
													{
														bool flag22 = (Main.projectile[num624].type == 387 || Main.projectile[num624].type == 388) && (this.type == 387 || this.type == 388);
														if (!flag22)
														{
															flag22 = (this.type == 533 && Main.projectile[num624].type == 533);
														}
														if (num624 != this.whoAmI && Main.projectile[num624].active && Main.projectile[num624].owner == this.owner && flag22 && Math.Abs(this.position.X - Main.projectile[num624].position.X) + Math.Abs(this.position.Y - Main.projectile[num624].position.Y) < (float)this.width)
														{
															if (this.position.X < Main.projectile[num624].position.X)
															{
																this.velocity.X = this.velocity.X - num623;
															}
															else
															{
																this.velocity.X = this.velocity.X + num623;
															}
															if (this.position.Y < Main.projectile[num624].position.Y)
															{
																this.velocity.Y = this.velocity.Y - num623;
															}
															else
															{
																this.velocity.Y = this.velocity.Y + num623;
															}
														}
													}
													if (this.type == 533)
													{
														if ((int)this.ai[0] % 3 != 2)
														{
															Lighting.AddLight(base.Center, 0.8f, 0.3f, 0.1f);
														}
														else
														{
															Lighting.AddLight(base.Center, 0.3f, 0.5f, 0.7f);
														}
													}
													bool flag23 = false;
													if (this.ai[0] == 2f && this.type == 388)
													{
														this.ai[1] += 1f;
														this.extraUpdates = 1;
														this.rotation = this.velocity.ToRotation() + 3.14159274f;
														this.frameCounter++;
														if (this.frameCounter > 1)
														{
															this.frame++;
															this.frameCounter = 0;
														}
														if (this.frame > 2)
														{
															this.frame = 0;
														}
														if (this.ai[1] > 40f)
														{
															this.ai[1] = 1f;
															this.ai[0] = 0f;
															this.extraUpdates = 0;
															this.numUpdates = 0;
															this.netUpdate = true;
														}
														else
														{
															flag23 = true;
														}
													}
													if (this.type == 533 && this.ai[0] >= 3f && this.ai[0] <= 5f)
													{
														int num625 = 2;
														flag23 = true;
														this.velocity *= 0.9f;
														this.ai[1] += 1f;
														int num626 = (int)this.ai[1] / num625 + (int)(this.ai[0] - 3f) * 8;
														if (num626 < 4)
														{
															this.frame = 17 + num626;
														}
														else if (num626 < 5)
														{
															this.frame = 0;
														}
														else if (num626 < 8)
														{
															this.frame = 1 + num626 - 5;
														}
														else if (num626 < 11)
														{
															this.frame = 11 - num626;
														}
														else if (num626 < 12)
														{
															this.frame = 0;
														}
														else if (num626 < 16)
														{
															this.frame = num626 - 2;
														}
														else if (num626 < 20)
														{
															this.frame = 29 - num626;
														}
														else if (num626 < 21)
														{
															this.frame = 0;
														}
														else
														{
															this.frame = num626 - 4;
														}
														if (this.ai[1] > (float)(num625 * 8))
														{
															this.ai[0] -= 3f;
															this.ai[1] = 0f;
														}
													}
													if (this.type == 533 && this.ai[0] >= 6f && this.ai[0] <= 8f)
													{
														this.ai[1] += 1f;
														this.MaxUpdates = 2;
														if (this.ai[0] == 7f)
														{
															this.rotation = this.velocity.ToRotation() + 3.14159274f;
														}
														else
														{
															this.rotation += 0.5235988f;
														}
														int num627 = 0;
														switch ((int)this.ai[0])
														{
														case 6:
															this.frame = 5;
															num627 = 40;
															break;
														case 7:
															this.frame = 13;
															num627 = 30;
															break;
														case 8:
															this.frame = 17;
															num627 = 30;
															break;
														}
														if (this.ai[1] > (float)num627)
														{
															this.ai[1] = 1f;
															this.ai[0] -= 6f;
															this.localAI[0] += 1f;
															this.extraUpdates = 0;
															this.numUpdates = 0;
															this.netUpdate = true;
														}
														else
														{
															flag23 = true;
														}
														if (this.ai[0] == 8f)
														{
															for (int num628 = 0; num628 < 4; num628++)
															{
																int num629 = Utils.SelectRandom<int>(Main.rand, new int[]
																{
																	226,
																	228,
																	75
																});
																int num630 = Dust.NewDust(base.Center, 0, 0, num629, 0f, 0f, 0, default(Color), 1f);
																Dust dust2 = Main.dust[num630];
																Vector2 value17 = Vector2.One.RotatedBy((double)((float)num628 * 1.57079637f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																dust2.position = base.Center + value17 * 10f;
																dust2.velocity = value17 * 1f;
																dust2.scale = 0.6f + Main.rand.NextFloat() * 0.5f;
																dust2.noGravity = true;
															}
														}
													}
													if (flag23)
													{
														return;
													}
													Vector2 vector44 = this.position;
													bool flag24 = false;
													if (this.ai[0] != 1f && (this.type == 387 || this.type == 388))
													{
														this.tileCollide = true;
													}
													if (this.type == 533 && this.ai[0] < 9f)
													{
														this.tileCollide = true;
													}
													if (this.tileCollide && WorldGen.SolidTile(Framing.GetTileSafely((int)base.Center.X / 16, (int)base.Center.Y / 16)))
													{
														this.tileCollide = false;
													}
													NPC ownerMinionAttackTargetNPC3 = this.OwnerMinionAttackTargetNPC;
													if (ownerMinionAttackTargetNPC3 != null && ownerMinionAttackTargetNPC3.CanBeChasedBy(this, false))
													{
														float num631 = Vector2.Distance(ownerMinionAttackTargetNPC3.Center, base.Center);
														if (((Vector2.Distance(base.Center, vector44) > num631 && num631 < num619) || !flag24) && Collision.CanHitLine(this.position, this.width, this.height, ownerMinionAttackTargetNPC3.position, ownerMinionAttackTargetNPC3.width, ownerMinionAttackTargetNPC3.height))
														{
															num619 = num631;
															vector44 = ownerMinionAttackTargetNPC3.Center;
															flag24 = true;
														}
													}
													if (!flag24)
													{
														for (int num632 = 0; num632 < 200; num632++)
														{
															NPC nPC2 = Main.npc[num632];
															if (nPC2.CanBeChasedBy(this, false))
															{
																float num633 = Vector2.Distance(nPC2.Center, base.Center);
																if (((Vector2.Distance(base.Center, vector44) > num633 && num633 < num619) || !flag24) && Collision.CanHitLine(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height))
																{
																	num619 = num633;
																	vector44 = nPC2.Center;
																	flag24 = true;
																}
															}
														}
													}
													float num634 = num620;
													if (flag24)
													{
														num634 = num621;
													}
													Player player = Main.player[this.owner];
													if (Vector2.Distance(player.Center, base.Center) > num634)
													{
														if (this.type == 387 || this.type == 388)
														{
															this.ai[0] = 1f;
														}
														if (this.type == 533 && this.ai[0] < 9f)
														{
															this.ai[0] += (float)(3 * (3 - (int)(this.ai[0] / 3f)));
														}
														this.tileCollide = false;
														this.netUpdate = true;
													}
													if ((this.type == 388 || this.type == 387) && flag24 && this.ai[0] == 0f)
													{
														Vector2 vector45 = vector44 - base.Center;
														float num635 = vector45.Length();
														vector45.Normalize();
														if (num635 > 200f)
														{
															float scaleFactor2 = 6f;
															if (this.type == 388)
															{
																scaleFactor2 = 8f;
															}
															vector45 *= scaleFactor2;
															this.velocity = (this.velocity * 40f + vector45) / 41f;
														}
														else
														{
															float num636 = 4f;
															vector45 *= -num636;
															this.velocity = (this.velocity * 40f + vector45) / 41f;
														}
													}
													else
													{
														bool flag25 = false;
														if (!flag25)
														{
															flag25 = (this.ai[0] == 1f && (this.type == 387 || this.type == 388));
														}
														if (!flag25)
														{
															flag25 = (this.ai[0] >= 9f && this.type == 533);
														}
														float num637 = 6f;
														if (this.type == 533)
														{
															num637 = 12f;
														}
														if (flag25)
														{
															num637 = 15f;
														}
														Vector2 center2 = base.Center;
														Vector2 vector46 = player.Center - center2 + new Vector2(0f, -60f);
														float num638 = vector46.Length();
														if (num638 > 200f && num637 < 8f)
														{
															num637 = 8f;
														}
														if (num638 < num622 && flag25 && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															if (this.type == 387 || this.type == 388)
															{
																this.ai[0] = 0f;
															}
															if (this.type == 533)
															{
																this.ai[0] -= 9f;
															}
															this.netUpdate = true;
														}
														if (num638 > 2000f)
														{
															this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
															this.position.Y = Main.player[this.owner].Center.Y - (float)(this.height / 2);
															this.netUpdate = true;
														}
														if (num638 > 70f)
														{
															vector46.Normalize();
															vector46 *= num637;
															this.velocity = (this.velocity * 40f + vector46) / 41f;
														}
														else if (this.velocity.X == 0f && this.velocity.Y == 0f)
														{
															this.velocity.X = -0.15f;
															this.velocity.Y = -0.05f;
														}
													}
													if (this.type == 388)
													{
														this.rotation = this.velocity.ToRotation() + 3.14159274f;
													}
													if (this.type == 387)
													{
														if (flag24)
														{
															this.rotation = (vector44 - base.Center).ToRotation() + 3.14159274f;
														}
														else
														{
															this.rotation = this.velocity.ToRotation() + 3.14159274f;
														}
													}
													if (this.type == 533 && (this.ai[0] < 3f || this.ai[0] >= 9f))
													{
														this.rotation += this.velocity.X * 0.04f;
													}
													if (this.type == 388 || this.type == 387)
													{
														this.frameCounter++;
														if (this.frameCounter > 3)
														{
															this.frame++;
															this.frameCounter = 0;
														}
														if (this.frame > 2)
														{
															this.frame = 0;
														}
													}
													else if (this.type == 533)
													{
														if (this.ai[0] < 3f || this.ai[0] >= 9f)
														{
															this.frameCounter++;
															if (this.frameCounter >= 24)
															{
																this.frameCounter = 0;
															}
															int num639 = this.frameCounter / 4;
															this.frame = 4 + num639;
															int num640 = (int)this.ai[0];
															switch (num640)
															{
															case 0:
																break;
															case 1:
																goto IL_19F4C;
															case 2:
																goto IL_19F67;
															default:
																switch (num640)
																{
																case 9:
																	break;
																case 10:
																	goto IL_19F4C;
																case 11:
																	goto IL_19F67;
																default:
																	goto IL_19F91;
																}
																break;
															}
															this.frame = 4 + num639;
															goto IL_19F91;
															IL_19F4C:
															num639 = this.frameCounter / 8;
															this.frame = 14 + num639;
															goto IL_19F91;
															IL_19F67:
															num639 = this.frameCounter / 3;
															if (num639 >= 4)
															{
																num639 -= 4;
															}
															this.frame = 17 + num639;
														}
														IL_19F91:
														if (this.ai[0] == 2f && Main.rand.Next(2) == 0)
														{
															for (int num641 = 0; num641 < 4; num641++)
															{
																if (Main.rand.Next(2) != 0)
																{
																	int num642 = Utils.SelectRandom<int>(Main.rand, new int[]
																	{
																		226,
																		228,
																		75
																	});
																	int num643 = Dust.NewDust(base.Center, 0, 0, num642, 0f, 0f, 0, default(Color), 1f);
																	Dust dust3 = Main.dust[num643];
																	Vector2 value18 = Vector2.One.RotatedBy((double)((float)num641 * 1.57079637f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																	dust3.position = base.Center + value18 * 10f;
																	dust3.velocity = value18 * 1f;
																	dust3.scale = 0.3f + Main.rand.NextFloat() * 0.5f;
																	dust3.noGravity = true;
																	dust3.customData = this;
																	dust3.noLight = true;
																}
															}
														}
													}
													if (this.ai[1] > 0f && (this.type == 387 || this.type == 388))
													{
														this.ai[1] += (float)Main.rand.Next(1, 4);
													}
													if (this.ai[1] > 90f && this.type == 387)
													{
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													if (this.ai[1] > 40f && this.type == 388)
													{
														this.ai[1] = 0f;
														this.netUpdate = true;
													}
													if (this.ai[1] > 0f && this.type == 533)
													{
														this.ai[1] += 1f;
														int num644 = 10;
														if (this.ai[1] > (float)num644)
														{
															this.ai[1] = 0f;
															this.netUpdate = true;
														}
													}
													if (this.ai[0] == 0f && (this.type == 387 || this.type == 388))
													{
														if (this.type == 387)
														{
															float scaleFactor3 = 8f;
															int num645 = 389;
															if (flag24 && this.ai[1] == 0f)
															{
																this.ai[1] += 1f;
																if (Main.myPlayer == this.owner && Collision.CanHitLine(this.position, this.width, this.height, vector44, 0, 0))
																{
																	Vector2 value19 = vector44 - base.Center;
																	value19.Normalize();
																	value19 *= scaleFactor3;
																	int num646 = Projectile.NewProjectile(base.Center.X, base.Center.Y, value19.X, value19.Y, num645, (int)((float)this.damage * 0.8f), 0f, Main.myPlayer, 0f, 0f);
																	Main.projectile[num646].timeLeft = 300;
																	this.netUpdate = true;
																}
															}
														}
														if (this.type == 388 && this.ai[1] == 0f && flag24 && num619 < 500f)
														{
															this.ai[1] += 1f;
															if (Main.myPlayer == this.owner)
															{
																this.ai[0] = 2f;
																Vector2 value20 = vector44 - base.Center;
																value20.Normalize();
																this.velocity = value20 * 8f;
																this.netUpdate = true;
																return;
															}
														}
													}
													else if (this.type == 533 && this.ai[0] < 3f)
													{
														int num647 = 0;
														switch ((int)this.ai[0])
														{
														case 0:
														case 3:
														case 6:
															num647 = 400;
															break;
														case 1:
														case 4:
														case 7:
															num647 = 400;
															break;
														case 2:
														case 5:
														case 8:
															num647 = 600;
															break;
														}
														if (this.ai[1] == 0f && flag24 && num619 < (float)num647)
														{
															this.ai[1] += 1f;
															if (Main.myPlayer == this.owner)
															{
																if (this.localAI[0] >= 3f)
																{
																	this.ai[0] += 4f;
																	if (this.ai[0] == 6f)
																	{
																		this.ai[0] = 3f;
																	}
																	this.localAI[0] = 0f;
																	return;
																}
																this.ai[0] += 6f;
																Vector2 value21 = vector44 - base.Center;
																value21.Normalize();
																float scaleFactor4 = (this.ai[0] == 8f) ? 12f : 10f;
																this.velocity = value21 * scaleFactor4;
																this.netUpdate = true;
																return;
															}
														}
													}
												}
												else if (this.aiStyle == 67)
												{
													Player player2 = Main.player[this.owner];
													if (!player2.active)
													{
														this.active = false;
														return;
													}
													bool flag26 = this.type == 393 || this.type == 394 || this.type == 395;
													if (flag26)
													{
														if (player2.dead)
														{
															player2.pirateMinion = false;
														}
														if (player2.pirateMinion)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 500)
													{
														if (player2.dead)
														{
															player2.crimsonHeart = false;
														}
														if (player2.crimsonHeart)
														{
															this.timeLeft = 2;
														}
													}
													if (this.type == 653)
													{
														if (player2.dead)
														{
															player2.companionCube = false;
														}
														if (player2.companionCube)
														{
															this.timeLeft = 2;
														}
													}
													Vector2 vector47 = player2.Center;
													if (flag26)
													{
														vector47.X -= (float)((15 + player2.width / 2) * player2.direction);
														vector47.X -= (float)(this.minionPos * 40 * player2.direction);
													}
													if (this.type == 500)
													{
														vector47.X -= (float)((15 + player2.width / 2) * player2.direction);
														vector47.X -= (float)(40 * player2.direction);
													}
													if (this.type == 653)
													{
														float num648 = (float)(15 + (player2.crimsonHeart ? 40 : 0));
														vector47.X -= (num648 + (float)(player2.width / 2)) * (float)player2.direction;
														vector47.X -= (float)(40 * player2.direction);
													}
													if (this.type == 500)
													{
														Lighting.AddLight(base.Center, 0.9f, 0.1f, 0.3f);
														int num649 = 6;
														if (this.frame == 0 || this.frame == 2)
														{
															num649 = 12;
														}
														if (++this.frameCounter >= num649)
														{
															this.frameCounter = 0;
															if (++this.frame >= Main.projFrames[this.type])
															{
																this.frame = 0;
															}
														}
														this.rotation += this.velocity.X / 20f;
														Vector2 vector48 = (-Vector2.UnitY).RotatedBy((double)this.rotation, default(Vector2)).RotatedBy((double)((float)this.direction * 0.2f), default(Vector2));
														int num650 = Dust.NewDust(base.Center + vector48 * 10f - new Vector2(4f), 0, 0, 5, vector48.X, vector48.Y, 0, Color.Transparent, 1f);
														Main.dust[num650].scale = 1f;
														Main.dust[num650].velocity = vector48.RotatedByRandom(0.78539818525314331) * 3.5f;
														Main.dust[num650].noGravity = true;
														Main.dust[num650].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
													}
													if (this.type == 653)
													{
														this.rotation += this.velocity.X / 20f;
														if (this.velocity.Y == 0f)
														{
															this.rotation = this.rotation.AngleTowards(0f, 0.7f);
														}
														if (this.owner >= 0 && this.owner < 255)
														{
															Projectile._CompanionCubeScreamCooldown[this.owner] -= 1f;
															if (Projectile._CompanionCubeScreamCooldown[this.owner] < 0f)
															{
																Projectile._CompanionCubeScreamCooldown[this.owner] = 0f;
															}
														}
														Tile tileSafely = Framing.GetTileSafely(base.Center);
														if (tileSafely.liquid > 0 && tileSafely.lava())
														{
															this.localAI[0] += 1f;
														}
														else
														{
															this.localAI[0] -= 1f;
														}
														this.localAI[0] = MathHelper.Clamp(this.localAI[0], 0f, 20f);
														if (this.localAI[0] >= 20f)
														{
															if (Projectile._CompanionCubeScreamCooldown[this.owner] == 0f)
															{
																Projectile._CompanionCubeScreamCooldown[this.owner] = 3600f;
																Main.PlaySound((Main.rand.Next(10) == 0) ? SoundID.NPCDeath61 : SoundID.NPCDeath59, this.position);
															}
															this.Kill();
														}
														Vector3 vector49 = Lighting.GetColor((int)base.Center.X / 16, (int)base.Center.Y / 16).ToVector3();
														Vector3 vector50 = Lighting.GetColor((int)player2.Center.X / 16, (int)player2.Center.Y / 16).ToVector3();
														if (vector49.Length() < 0.15f && vector50.Length() < 0.15f)
														{
															this.localAI[1] += 1f;
														}
														else if (this.localAI[1] > 0f)
														{
															this.localAI[1] -= 1f;
														}
														this.localAI[1] = MathHelper.Clamp(this.localAI[1], -3600f, 120f);
														if (this.localAI[1] > (float)Main.rand.Next(30, 120) && !player2.immune && player2.velocity == Vector2.Zero)
														{
															if (Main.rand.Next(5) == 0)
															{
																Main.PlaySound(SoundID.Item16, base.Center);
																this.localAI[1] = -600f;
															}
															else
															{
																Main.PlaySound(SoundID.Item1, base.Center);
																player2.Hurt(PlayerDeathReason.ByOther(6), 3, 0, false, false, false, -1);
																player2.immune = false;
																player2.immuneTime = 0;
																this.localAI[1] = (float)(-300 + Main.rand.Next(30) * -10);
															}
														}
													}
													bool flag27 = true;
													if (this.type == 500 || this.type == 653)
													{
														flag27 = false;
													}
													int num651 = -1;
													float num652 = 450f;
													if (flag26)
													{
														num652 = 800f;
													}
													int num653 = 15;
													if (this.ai[0] == 0f && flag27)
													{
														NPC ownerMinionAttackTargetNPC4 = this.OwnerMinionAttackTargetNPC;
														if (ownerMinionAttackTargetNPC4 != null && ownerMinionAttackTargetNPC4.CanBeChasedBy(this, false))
														{
															float num654 = (ownerMinionAttackTargetNPC4.Center - base.Center).Length();
															if (num654 < num652)
															{
																num651 = ownerMinionAttackTargetNPC4.whoAmI;
																num652 = num654;
															}
														}
														if (num651 < 0)
														{
															for (int num655 = 0; num655 < 200; num655++)
															{
																NPC nPC3 = Main.npc[num655];
																if (nPC3.CanBeChasedBy(this, false))
																{
																	float num656 = (nPC3.Center - base.Center).Length();
																	if (num656 < num652)
																	{
																		num651 = num655;
																		num652 = num656;
																	}
																}
															}
														}
													}
													if (this.ai[0] == 1f)
													{
														this.tileCollide = false;
														float num657 = 0.2f;
														float num658 = 10f;
														int num659 = 200;
														if (num658 < Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y))
														{
															num658 = Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y);
														}
														Vector2 value22 = player2.Center - base.Center;
														float num660 = value22.Length();
														if (num660 > 2000f)
														{
															this.position = player2.Center - new Vector2((float)this.width, (float)this.height) / 2f;
														}
														if (num660 < (float)num659 && player2.velocity.Y == 0f && this.position.Y + (float)this.height <= player2.position.Y + (float)player2.height && !Collision.SolidCollision(this.position, this.width, this.height))
														{
															this.ai[0] = 0f;
															this.netUpdate = true;
															if (this.velocity.Y < -6f)
															{
																this.velocity.Y = -6f;
															}
														}
														if (num660 >= 60f)
														{
															value22.Normalize();
															value22 *= num658;
															if (this.velocity.X < value22.X)
															{
																this.velocity.X = this.velocity.X + num657;
																if (this.velocity.X < 0f)
																{
																	this.velocity.X = this.velocity.X + num657 * 1.5f;
																}
															}
															if (this.velocity.X > value22.X)
															{
																this.velocity.X = this.velocity.X - num657;
																if (this.velocity.X > 0f)
																{
																	this.velocity.X = this.velocity.X - num657 * 1.5f;
																}
															}
															if (this.velocity.Y < value22.Y)
															{
																this.velocity.Y = this.velocity.Y + num657;
																if (this.velocity.Y < 0f)
																{
																	this.velocity.Y = this.velocity.Y + num657 * 1.5f;
																}
															}
															if (this.velocity.Y > value22.Y)
															{
																this.velocity.Y = this.velocity.Y - num657;
																if (this.velocity.Y > 0f)
																{
																	this.velocity.Y = this.velocity.Y - num657 * 1.5f;
																}
															}
														}
														if (this.velocity.X != 0f)
														{
															this.spriteDirection = Math.Sign(this.velocity.X);
														}
														if (flag26)
														{
															this.frameCounter++;
															if (this.frameCounter > 3)
															{
																this.frame++;
																this.frameCounter = 0;
															}
															if (this.frame < 10 | this.frame > 13)
															{
																this.frame = 10;
															}
															this.rotation = this.velocity.X * 0.1f;
														}
													}
													if (this.ai[0] == 2f)
													{
														this.friendly = true;
														this.spriteDirection = this.direction;
														this.rotation = 0f;
														this.frame = 4 + (int)((float)num653 - this.ai[1]) / (num653 / 3);
														if (this.velocity.Y != 0f)
														{
															this.frame += 3;
														}
														this.velocity.Y = this.velocity.Y + 0.4f;
														if (this.velocity.Y > 10f)
														{
															this.velocity.Y = 10f;
														}
														this.ai[1] -= 1f;
														if (this.ai[1] <= 0f)
														{
															this.ai[1] = 0f;
															this.ai[0] = 0f;
															this.friendly = false;
															this.netUpdate = true;
															return;
														}
													}
													if (num651 >= 0)
													{
														float num661 = 400f;
														float num662 = 20f;
														if (flag26)
														{
															num661 = 700f;
														}
														if ((double)this.position.Y > Main.worldSurface * 16.0)
														{
															num661 *= 0.7f;
														}
														NPC nPC4 = Main.npc[num651];
														Vector2 center3 = nPC4.Center;
														float num663 = (center3 - base.Center).Length();
														Collision.CanHit(this.position, this.width, this.height, nPC4.position, nPC4.width, nPC4.height);
														if (num663 < num661)
														{
															vector47 = center3;
															if (center3.Y < base.Center.Y - 30f && this.velocity.Y == 0f)
															{
																float num664 = Math.Abs(center3.Y - base.Center.Y);
																if (num664 < 120f)
																{
																	this.velocity.Y = -10f;
																}
																else if (num664 < 210f)
																{
																	this.velocity.Y = -13f;
																}
																else if (num664 < 270f)
																{
																	this.velocity.Y = -15f;
																}
																else if (num664 < 310f)
																{
																	this.velocity.Y = -17f;
																}
																else if (num664 < 380f)
																{
																	this.velocity.Y = -18f;
																}
															}
														}
														if (num663 < num662)
														{
															this.ai[0] = 2f;
															this.ai[1] = (float)num653;
															this.netUpdate = true;
														}
													}
													if (this.ai[0] == 0f && num651 < 0)
													{
														float num665 = 500f;
														if (this.type == 500)
														{
															num665 = 200f;
														}
														if (this.type == 653)
														{
															num665 = 170f;
														}
														if (Main.player[this.owner].rocketDelay2 > 0)
														{
															this.ai[0] = 1f;
															this.netUpdate = true;
														}
														Vector2 vector51 = player2.Center - base.Center;
														if (vector51.Length() > 2000f)
														{
															this.position = player2.Center - new Vector2((float)this.width, (float)this.height) / 2f;
														}
														else if (vector51.Length() > num665 || Math.Abs(vector51.Y) > 300f)
														{
															this.ai[0] = 1f;
															this.netUpdate = true;
															if (this.velocity.Y > 0f && vector51.Y < 0f)
															{
																this.velocity.Y = 0f;
															}
															if (this.velocity.Y < 0f && vector51.Y > 0f)
															{
																this.velocity.Y = 0f;
															}
														}
													}
													if (this.ai[0] == 0f)
													{
														this.tileCollide = true;
														float num666 = 0.5f;
														float num667 = 4f;
														float num668 = 4f;
														float num669 = 0.1f;
														if (num668 < Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y))
														{
															num668 = Math.Abs(player2.velocity.X) + Math.Abs(player2.velocity.Y);
															num666 = 0.7f;
														}
														int num670 = 0;
														bool flag28 = false;
														float num671 = vector47.X - base.Center.X;
														if (Math.Abs(num671) > 5f)
														{
															if (num671 < 0f)
															{
																num670 = -1;
																if (this.velocity.X > -num667)
																{
																	this.velocity.X = this.velocity.X - num666;
																}
																else
																{
																	this.velocity.X = this.velocity.X - num669;
																}
															}
															else
															{
																num670 = 1;
																if (this.velocity.X < num667)
																{
																	this.velocity.X = this.velocity.X + num666;
																}
																else
																{
																	this.velocity.X = this.velocity.X + num669;
																}
															}
															if (!flag26)
															{
																flag28 = true;
															}
														}
														else
														{
															this.velocity.X = this.velocity.X * 0.9f;
															if (Math.Abs(this.velocity.X) < num666 * 2f)
															{
																this.velocity.X = 0f;
															}
														}
														if (num670 != 0)
														{
															int num672 = (int)(this.position.X + (float)(this.width / 2)) / 16;
															int num673 = (int)this.position.Y / 16;
															num672 += num670;
															num672 += (int)this.velocity.X;
															for (int num674 = num673; num674 < num673 + this.height / 16 + 1; num674++)
															{
																if (WorldGen.SolidTile(num672, num674))
																{
																	flag28 = true;
																}
															}
														}
														if (this.type == 500 && this.velocity.X != 0f)
														{
															flag28 = true;
														}
														if (this.type == 653 && this.velocity.X != 0f)
														{
															flag28 = true;
														}
														Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
														if (this.velocity.Y == 0f && flag28)
														{
															int num675 = 0;
															while (num675 < 3)
															{
																int num676 = (int)(this.position.X + (float)(this.width / 2)) / 16;
																if (num675 == 0)
																{
																	num676 = (int)this.position.X / 16;
																}
																if (num675 == 2)
																{
																	num676 = (int)(this.position.X + (float)this.width) / 16;
																}
																int num677 = (int)(this.position.Y + (float)this.height) / 16;
																if (WorldGen.SolidTile(num676, num677) || Main.tile[num676, num677].halfBrick() || Main.tile[num676, num677].slope() > 0)
																{
																	goto Block_1935;
																}
																if (TileID.Sets.Platforms[(int)Main.tile[num676, num677].type] && Main.tile[num676, num677].active() && !Main.tile[num676, num677].inActive())
																{
																	goto Block_1935;
																}
																IL_1BB67:
																num675++;
																continue;
																Block_1935:
																try
																{
																	IL_1BA49:
																	num676 = (int)(this.position.X + (float)(this.width / 2)) / 16;
																	num677 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
																	num676 += num670;
																	num676 += (int)this.velocity.X;
																	if (!WorldGen.SolidTile(num676, num677 - 1) && !WorldGen.SolidTile(num676, num677 - 2))
																	{
																		this.velocity.Y = -5.1f;
																	}
																	else if (!WorldGen.SolidTile(num676, num677 - 2))
																	{
																		this.velocity.Y = -7.1f;
																	}
																	else if (WorldGen.SolidTile(num676, num677 - 5))
																	{
																		this.velocity.Y = -11.1f;
																	}
																	else if (WorldGen.SolidTile(num676, num677 - 4))
																	{
																		this.velocity.Y = -10.1f;
																	}
																	else
																	{
																		this.velocity.Y = -9.1f;
																	}
																}
																catch
																{
																	this.velocity.Y = -9.1f;
																}
																goto IL_1BB67;
															}
														}
														if (this.velocity.X > num668)
														{
															this.velocity.X = num668;
														}
														if (this.velocity.X < -num668)
														{
															this.velocity.X = -num668;
														}
														if (this.velocity.X < 0f)
														{
															this.direction = -1;
														}
														if (this.velocity.X > 0f)
														{
															this.direction = 1;
														}
														if (this.velocity.X > num666 && num670 == 1)
														{
															this.direction = 1;
														}
														if (this.velocity.X < -num666 && num670 == -1)
														{
															this.direction = -1;
														}
														this.spriteDirection = this.direction;
														if (flag26)
														{
															this.rotation = 0f;
															if (this.velocity.Y == 0f)
															{
																if (this.velocity.X == 0f)
																{
																	this.frame = 0;
																	this.frameCounter = 0;
																}
																else if (Math.Abs(this.velocity.X) >= 0.5f)
																{
																	this.frameCounter += (int)Math.Abs(this.velocity.X);
																	this.frameCounter++;
																	if (this.frameCounter > 10)
																	{
																		this.frame++;
																		this.frameCounter = 0;
																	}
																	if (this.frame >= 4)
																	{
																		this.frame = 0;
																	}
																}
																else
																{
																	this.frame = 0;
																	this.frameCounter = 0;
																}
															}
															else if (this.velocity.Y != 0f)
															{
																this.frameCounter = 0;
																this.frame = 14;
															}
														}
														this.velocity.Y = this.velocity.Y + 0.4f;
														if (this.velocity.Y > 10f)
														{
															this.velocity.Y = 10f;
														}
													}
													if (flag26)
													{
														this.localAI[0] += 1f;
														if (this.velocity.X == 0f)
														{
															this.localAI[0] += 1f;
														}
														if (this.localAI[0] >= (float)Main.rand.Next(900, 1200))
														{
															this.localAI[0] = 0f;
															for (int num678 = 0; num678 < 6; num678++)
															{
																int num679 = Dust.NewDust(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f - Vector2.One * 5f + Vector2.UnitY * 8f, 3, 6, 216, (float)(-(float)this.direction), 1f, 0, default(Color), 1f);
																Main.dust[num679].velocity /= 2f;
																Main.dust[num679].scale = 0.8f;
															}
															int num680 = Gore.NewGore(base.Center + Vector2.UnitX * (float)(-(float)this.direction) * 8f, Vector2.Zero, Main.rand.Next(580, 583), 1f);
															Main.gore[num680].velocity /= 2f;
															Main.gore[num680].velocity.Y = Math.Abs(Main.gore[num680].velocity.Y);
															Main.gore[num680].velocity.X = -Math.Abs(Main.gore[num680].velocity.X) * (float)this.direction;
															return;
														}
													}
												}
												else if (this.aiStyle == 68)
												{
													this.rotation += 0.25f * (float)this.direction;
													bool flag29 = this.type == 399;
													bool flag30 = this.type == 669;
													this.ai[0] += 1f;
													if (this.ai[0] >= 3f)
													{
														this.alpha -= 40;
														if (this.alpha < 0)
														{
															this.alpha = 0;
														}
													}
													if (this.ai[0] >= 15f)
													{
														this.velocity.Y = this.velocity.Y + 0.2f;
														if (this.velocity.Y > 16f)
														{
															this.velocity.Y = 16f;
														}
														this.velocity.X = this.velocity.X * 0.99f;
													}
													if (this.alpha == 0)
													{
														if (flag29)
														{
															Vector2 vector52 = new Vector2(4f, -8f);
															float num681 = this.rotation;
															if (this.direction == -1)
															{
																vector52.X = -4f;
															}
															vector52 = vector52.RotatedBy((double)num681, default(Vector2));
															for (int num682 = 0; num682 < 1; num682++)
															{
																int num683 = Dust.NewDust(base.Center + vector52 - Vector2.One * 5f, 4, 4, 6, 0f, 0f, 0, default(Color), 1f);
																Main.dust[num683].scale = 1.5f;
																Main.dust[num683].noGravity = true;
																Main.dust[num683].velocity = Main.dust[num683].velocity * 0.25f + Vector2.Normalize(vector52) * 1f;
																Main.dust[num683].velocity = Main.dust[num683].velocity.RotatedBy((double)(-1.57079637f * (float)this.direction), default(Vector2));
															}
														}
														if (flag30)
														{
															for (int num684 = 0; num684 < 2; num684++)
															{
																Vector2 vector53 = new Vector2(MathHelper.Lerp(-8f, 8f, Main.rand.NextFloat()), -4f);
																float num685 = this.rotation;
																vector53 = vector53.RotatedBy((double)num685, default(Vector2));
																int num686 = Dust.NewDust(base.Center + vector53 - Vector2.One * 5f, 4, 4, 4, 0f, 0f, 0, default(Color), 1f);
																Main.dust[num686].scale = 0.8f - Main.rand.NextFloat() * 0.2f;
																Main.dust[num686].velocity = Main.dust[num686].velocity * 0.25f + Vector2.Normalize(vector53) * 1f;
																Main.dust[num686].velocity = Main.dust[num686].velocity.RotatedBy((double)(-1.57079637f * (float)this.direction), default(Vector2));
																Main.dust[num686].color = Utils.SelectRandom<Color>(Main.rand, new Color[]
																{
																	new Color(255, 255, 255, 110),
																	new Color(245, 200, 30, 110)
																});
															}
														}
													}
													this.spriteDirection = this.direction;
													if (this.owner == Main.myPlayer && this.timeLeft <= 3)
													{
														this.tileCollide = false;
														this.alpha = 255;
														this.position.X = this.position.X + (float)(this.width / 2);
														this.position.Y = this.position.Y + (float)(this.height / 2);
														this.width = 80;
														this.height = 80;
														this.position.X = this.position.X - (float)(this.width / 2);
														this.position.Y = this.position.Y - (float)(this.height / 2);
														this.knockBack = 8f;
													}
													if (this.wet && this.timeLeft > 3)
													{
														this.timeLeft = 3;
														return;
													}
												}
												else if (this.aiStyle == 69)
												{
													Vector2 vector54 = Main.player[this.owner].Center - base.Center;
													this.rotation = vector54.ToRotation() - 1.57f;
													if (Main.player[this.owner].dead)
													{
														this.Kill();
														return;
													}
													Main.player[this.owner].itemAnimation = 10;
													Main.player[this.owner].itemTime = 10;
													float arg_1C53D_0 = vector54.X;
													if (vector54.X < 0f)
													{
														Main.player[this.owner].ChangeDir(1);
														this.direction = 1;
													}
													else
													{
														Main.player[this.owner].ChangeDir(-1);
														this.direction = -1;
													}
													Main.player[this.owner].itemRotation = (vector54 * -1f * (float)this.direction).ToRotation();
													this.spriteDirection = ((vector54.X > 0f) ? -1 : 1);
													if (this.ai[0] == 0f && vector54.Length() > 400f)
													{
														this.ai[0] = 1f;
													}
													if (this.ai[0] == 1f || this.ai[0] == 2f)
													{
														float num687 = vector54.Length();
														if (num687 > 1500f)
														{
															this.Kill();
															return;
														}
														if (num687 > 600f)
														{
															this.ai[0] = 2f;
														}
														this.tileCollide = false;
														float num688 = 20f;
														if (this.ai[0] == 2f)
														{
															num688 = 40f;
														}
														this.velocity = Vector2.Normalize(vector54) * num688;
														if (vector54.Length() < num688)
														{
															this.Kill();
															return;
														}
													}
													this.ai[1] += 1f;
													if (this.ai[1] > 5f)
													{
														this.alpha = 0;
													}
													if ((int)this.ai[1] % 4 == 0 && this.owner == Main.myPlayer)
													{
														Vector2 vector55 = vector54 * -1f;
														vector55.Normalize();
														vector55 *= (float)Main.rand.Next(45, 65) * 0.1f;
														vector55 = vector55.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
														Projectile.NewProjectile(base.Center.X, base.Center.Y, vector55.X, vector55.Y, 405, this.damage, this.knockBack, this.owner, -10f, 0f);
														return;
													}
												}
												else
												{
													if (this.aiStyle == 70)
													{
														if (this.ai[0] == 0f)
														{
															float num689 = 500f;
															int num690 = -1;
															for (int num691 = 0; num691 < 200; num691++)
															{
																NPC nPC5 = Main.npc[num691];
																if (nPC5.CanBeChasedBy(this, false) && Collision.CanHit(this.position, this.width, this.height, nPC5.position, nPC5.width, nPC5.height))
																{
																	float num692 = (nPC5.Center - base.Center).Length();
																	if (num692 < num689)
																	{
																		num690 = num691;
																		num689 = num692;
																	}
																}
															}
															this.ai[0] = (float)(num690 + 1);
															if (this.ai[0] == 0f)
															{
																this.ai[0] = -15f;
															}
															if (this.ai[0] > 0f)
															{
																float scaleFactor5 = (float)Main.rand.Next(35, 75) / 30f;
																this.velocity = (this.velocity * 20f + Vector2.Normalize(Main.npc[(int)this.ai[0] - 1].Center - base.Center + new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101))) * scaleFactor5) / 21f;
																this.netUpdate = true;
															}
														}
														else if (this.ai[0] > 0f)
														{
															Vector2 value23 = Vector2.Normalize(Main.npc[(int)this.ai[0] - 1].Center - base.Center);
															this.velocity = (this.velocity * 40f + value23 * 12f) / 41f;
														}
														else
														{
															this.ai[0] += 1f;
															this.alpha -= 25;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
															this.velocity *= 0.95f;
														}
														if (this.ai[1] == 0f)
														{
															this.ai[1] = (float)Main.rand.Next(80, 121) / 100f;
															this.netUpdate = true;
														}
														this.scale = this.ai[1];
														return;
													}
													if (this.aiStyle == 71)
													{
														this.localAI[1] += 1f;
														if (this.localAI[1] > 10f && Main.rand.Next(3) == 0)
														{
															int num693 = 6;
															for (int num694 = 0; num694 < num693; num694++)
															{
																Vector2 vector56 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width, (float)this.height) / 2f;
																vector56 = vector56.RotatedBy((double)(num694 - (num693 / 2 - 1)) * 3.1415926535897931 / (double)((float)num693), default(Vector2)) + base.Center;
																Vector2 value24 = ((float)(Main.rand.NextDouble() * 3.1415927410125732) - 1.57079637f).ToRotationVector2() * (float)Main.rand.Next(3, 8);
																int num695 = Dust.NewDust(vector56 + value24, 0, 0, 217, value24.X * 2f, value24.Y * 2f, 100, default(Color), 1.4f);
																Main.dust[num695].noGravity = true;
																Main.dust[num695].noLight = true;
																Main.dust[num695].velocity /= 4f;
																Main.dust[num695].velocity -= this.velocity;
															}
															this.alpha -= 5;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
															this.rotation += this.velocity.X * 0.1f;
															this.frame = (int)(this.localAI[1] / 3f) % 3;
															Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.1f, 0.4f, 0.6f);
														}
														int num696 = -1;
														Vector2 vector57 = base.Center;
														float num697 = 500f;
														if (this.localAI[0] > 0f)
														{
															this.localAI[0] -= 1f;
														}
														if (this.ai[0] == 0f && this.localAI[0] == 0f)
														{
															for (int num698 = 0; num698 < 200; num698++)
															{
																NPC nPC6 = Main.npc[num698];
																if (nPC6.CanBeChasedBy(this, false) && (this.ai[0] == 0f || this.ai[0] == (float)(num698 + 1)))
																{
																	Vector2 center4 = nPC6.Center;
																	float num699 = Vector2.Distance(center4, vector57);
																	if (num699 < num697 && Collision.CanHit(this.position, this.width, this.height, nPC6.position, nPC6.width, nPC6.height))
																	{
																		num697 = num699;
																		vector57 = center4;
																		num696 = num698;
																	}
																}
															}
															if (num696 >= 0)
															{
																this.ai[0] = (float)(num696 + 1);
																this.netUpdate = true;
															}
														}
														if (this.localAI[0] == 0f && this.ai[0] == 0f)
														{
															this.localAI[0] = 30f;
														}
														bool flag31 = false;
														if (this.ai[0] != 0f)
														{
															int num700 = (int)(this.ai[0] - 1f);
															if (Main.npc[num700].active && !Main.npc[num700].dontTakeDamage && Main.npc[num700].immune[this.owner] == 0)
															{
																float num701 = Main.npc[num700].position.X + (float)(Main.npc[num700].width / 2);
																float num702 = Main.npc[num700].position.Y + (float)(Main.npc[num700].height / 2);
																float num703 = Math.Abs(this.position.X + (float)(this.width / 2) - num701) + Math.Abs(this.position.Y + (float)(this.height / 2) - num702);
																if (num703 < 1000f)
																{
																	flag31 = true;
																	vector57 = Main.npc[num700].Center;
																}
															}
															else
															{
																this.ai[0] = 0f;
																flag31 = false;
																this.netUpdate = true;
															}
														}
														if (flag31)
														{
															Vector2 v = vector57 - base.Center;
															float num704 = this.velocity.ToRotation();
															float num705 = v.ToRotation();
															double num706 = (double)(num705 - num704);
															if (num706 > 3.1415926535897931)
															{
																num706 -= 6.2831853071795862;
															}
															if (num706 < -3.1415926535897931)
															{
																num706 += 6.2831853071795862;
															}
															this.velocity = this.velocity.RotatedBy(num706 * 0.10000000149011612, default(Vector2));
														}
														float num707 = this.velocity.Length();
														this.velocity.Normalize();
														this.velocity *= num707 + 0.0025f;
														return;
													}
													if (this.aiStyle == 72)
													{
														this.localAI[0] += 1f;
														if (this.localAI[0] > 5f)
														{
															this.alpha -= 25;
															if (this.alpha < 50)
															{
																this.alpha = 50;
															}
														}
														this.velocity *= 0.96f;
														if (this.ai[1] == 0f)
														{
															this.ai[1] = (float)Main.rand.Next(60, 121) / 100f;
															this.netUpdate = true;
														}
														this.scale = this.ai[1];
														this.position = base.Center;
														int num708 = 14;
														int num709 = 14;
														this.width = (int)((float)num708 * this.ai[1]);
														this.height = (int)((float)num709 * this.ai[1]);
														this.position -= new Vector2((float)(this.width / 2), (float)(this.height / 2));
														return;
													}
													if (this.aiStyle == 73)
													{
														int num710 = (int)this.ai[0];
														int num711 = (int)this.ai[1];
														Tile tile = Main.tile[num710, num711];
														if (tile == null || !tile.active() || tile.type != 338)
														{
															this.Kill();
															return;
														}
														float num712 = 2f;
														float num713 = (float)this.timeLeft / 60f;
														if (num713 < 1f)
														{
															num712 *= num713;
														}
														if (this.type == 419)
														{
															for (int num714 = 0; num714 < 2; num714++)
															{
																Vector2 vector58 = new Vector2(0f, -num712);
																vector58 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector58 = vector58.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num715 = Dust.NewDust(this.position, this.width, this.height, 222, 0f, 0f, 100, default(Color), 1f);
																Dust dust4 = Main.dust[num715];
																dust4.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust4.velocity *= 0.5f;
																if (dust4.velocity.Y > 0f)
																{
																	Dust expr_1D36C_cp_0 = dust4;
																	expr_1D36C_cp_0.velocity.Y = expr_1D36C_cp_0.velocity.Y * -1f;
																}
																dust4.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust4.velocity += vector58;
																dust4.scale = 0.6f;
																dust4.fadeIn = dust4.scale + 0.2f;
																Dust expr_1D3F2_cp_0 = dust4;
																expr_1D3F2_cp_0.velocity.Y = expr_1D3F2_cp_0.velocity.Y * 2f;
															}
														}
														if (this.type == 420)
														{
															for (int num716 = 0; num716 < 2; num716++)
															{
																Vector2 vector59 = new Vector2(0f, -num712);
																vector59 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector59 = vector59.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num717 = 219;
																if (Main.rand.Next(5) == 0)
																{
																	num717 = 222;
																}
																int num718 = Dust.NewDust(this.position, this.width, this.height, num717, 0f, 0f, 100, default(Color), 1f);
																Dust dust5 = Main.dust[num718];
																dust5.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust5.velocity *= 0.5f;
																if (dust5.velocity.Y > 0f)
																{
																	Dust expr_1D563_cp_0 = dust5;
																	expr_1D563_cp_0.velocity.Y = expr_1D563_cp_0.velocity.Y * -1f;
																}
																dust5.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust5.velocity += vector59;
																Dust expr_1D5C3_cp_0 = dust5;
																expr_1D5C3_cp_0.velocity.X = expr_1D5C3_cp_0.velocity.X * 0.5f;
																dust5.scale = 0.6f;
																dust5.fadeIn = dust5.scale + 0.2f;
																Dust expr_1D603_cp_0 = dust5;
																expr_1D603_cp_0.velocity.Y = expr_1D603_cp_0.velocity.Y * 2f;
															}
														}
														if (this.type == 421)
														{
															for (int num719 = 0; num719 < 2; num719++)
															{
																Vector2 vector60 = new Vector2(0f, -num712);
																vector60 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector60 = vector60.RotatedBy((Main.rand.NextDouble() - 0.5) * 0.78539818525314331, default(Vector2));
																int num720 = Dust.NewDust(this.position, this.width, this.height, 221, 0f, 0f, 100, default(Color), 1f);
																Dust dust6 = Main.dust[num720];
																dust6.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust6.velocity *= 0.1f;
																if (dust6.velocity.Y > 0f)
																{
																	Dust expr_1D756_cp_0 = dust6;
																	expr_1D756_cp_0.velocity.Y = expr_1D756_cp_0.velocity.Y * -1f;
																}
																dust6.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust6.velocity += vector60;
																dust6.scale = 0.6f;
																dust6.fadeIn = dust6.scale + 0.2f;
																Dust expr_1D7DC_cp_0 = dust6;
																expr_1D7DC_cp_0.velocity.Y = expr_1D7DC_cp_0.velocity.Y * 2.5f;
															}
															if (this.timeLeft % 10 == 0)
															{
																float num721 = 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																for (int num722 = 0; num722 < 9; num722++)
																{
																	Vector2 value25 = new Vector2((float)(num722 - 4) / 5f, -num712 * num721);
																	int num723 = Dust.NewDust(this.position, this.width, this.height, 222, 0f, 0f, 100, default(Color), 1f);
																	Dust dust7 = Main.dust[num723];
																	dust7.scale = 0.7f + (float)Main.rand.NextDouble() * 0.3f;
																	dust7.velocity *= 0f;
																	if (dust7.velocity.Y > 0f)
																	{
																		Dust expr_1D8F8_cp_0 = dust7;
																		expr_1D8F8_cp_0.velocity.Y = expr_1D8F8_cp_0.velocity.Y * -1f;
																	}
																	dust7.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																	dust7.velocity += value25;
																	dust7.scale = 0.6f;
																	dust7.fadeIn = dust7.scale + 0.2f;
																	Dust expr_1D97E_cp_0 = dust7;
																	expr_1D97E_cp_0.velocity.Y = expr_1D97E_cp_0.velocity.Y * 2f;
																}
															}
														}
														if (this.type == 422)
														{
															for (int num724 = 0; num724 < 2; num724++)
															{
																Vector2 vector61 = new Vector2(0f, -num712);
																vector61 *= 0.85f + (float)Main.rand.NextDouble() * 0.2f;
																vector61 = vector61.RotatedBy((Main.rand.NextDouble() - 0.5) * 1.5707963705062866, default(Vector2));
																int num725 = Dust.NewDust(this.position, this.width, this.height, 219 + Main.rand.Next(5), 0f, 0f, 100, default(Color), 1f);
																Dust dust8 = Main.dust[num725];
																dust8.scale = 1f + (float)Main.rand.NextDouble() * 0.3f;
																dust8.velocity *= 0.5f;
																if (dust8.velocity.Y > 0f)
																{
																	Dust expr_1DADE_cp_0 = dust8;
																	expr_1DADE_cp_0.velocity.Y = expr_1DADE_cp_0.velocity.Y * -1f;
																}
																dust8.position -= new Vector2((float)(2 + Main.rand.Next(-2, 3)), 0f);
																dust8.velocity += vector61;
																dust8.scale = 0.6f;
																dust8.fadeIn = dust8.scale + 0.2f;
																Dust expr_1DB64_cp_0 = dust8;
																expr_1DB64_cp_0.velocity.Y = expr_1DB64_cp_0.velocity.Y * 2f;
															}
															return;
														}
													}
													else if (this.aiStyle == 74)
													{
														if (this.extraUpdates == 1)
														{
															this.localAI[0] *= this.localAI[1];
															this.localAI[1] -= 0.001f;
															if ((double)this.localAI[0] < 0.01)
															{
																this.Kill();
																return;
															}
														}
													}
													else
													{
														if (this.aiStyle == 75)
														{
															this.AI_075();
															return;
														}
														if (this.aiStyle == 76)
														{
															Player player3 = Main.player[this.owner];
															player3.heldProj = this.whoAmI;
															if (this.type == 441)
															{
																if (player3.mount.Type != 9)
																{
																	this.Kill();
																	return;
																}
															}
															else if (this.type == 453 && player3.mount.Type != 8)
															{
																this.Kill();
																return;
															}
															if (Main.myPlayer != this.owner)
															{
																this.position.X = player3.position.X + this.ai[0];
																this.position.Y = player3.position.Y + this.ai[1];
																if (this.type == 441)
																{
																	if (!player3.mount.AbilityCharging)
																	{
																		player3.mount.StartAbilityCharge(player3);
																	}
																}
																else if (this.type == 453 && !player3.mount.AbilityActive)
																{
																	player3.mount.UseAbility(player3, this.position, false);
																}
																player3.mount.AimAbility(player3, this.position);
																return;
															}
															this.position.X = Main.screenPosition.X + (float)Main.mouseX;
															this.position.Y = Main.screenPosition.Y + (float)Main.mouseY;
															if (this.ai[0] != this.position.X - player3.position.X || this.ai[1] != this.position.Y - player3.position.Y)
															{
																this.netUpdate = true;
															}
															this.ai[0] = this.position.X - player3.position.X;
															this.ai[1] = this.position.Y - player3.position.Y;
															player3.mount.AimAbility(player3, this.position);
															if (!player3.channel)
															{
																player3.mount.UseAbility(player3, this.position, false);
																this.Kill();
																return;
															}
														}
														else
														{
															if (this.aiStyle == 77)
															{
																ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[0]));
																if (activeSound != null)
																{
																	if (activeSound.Volume == 0f)
																	{
																		activeSound.Stop();
																		this.localAI[0] = SlotId.Invalid.ToFloat();
																	}
																	activeSound.Volume = Math.Max(0f, activeSound.Volume - 0.05f);
																}
																else
																{
																	this.localAI[0] = SlotId.Invalid.ToFloat();
																}
																if (this.ai[1] == 1f)
																{
																	this.friendly = false;
																	if (this.alpha < 255)
																	{
																		this.alpha += 51;
																	}
																	if (this.alpha >= 255)
																	{
																		this.alpha = 255;
																		this.Kill();
																		return;
																	}
																}
																else
																{
																	if (this.alpha > 0)
																	{
																		this.alpha -= 50;
																	}
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																}
																float num726 = 30f;
																float num727 = num726 * 4f;
																this.ai[0] += 1f;
																if (this.ai[0] > num727)
																{
																	this.ai[0] = 0f;
																}
																Vector2 vector62 = -Vector2.UnitY.RotatedBy((double)(6.28318548f * this.ai[0] / num726), default(Vector2));
																float val = 0.75f + vector62.Y * 0.25f;
																float val2 = 0.8f - vector62.Y * 0.2f;
																float num728 = Math.Max(val, val2);
																this.position += new Vector2((float)this.width, (float)this.height) / 2f;
																this.width = (this.height = (int)(80f * num728));
																this.position -= new Vector2((float)this.width, (float)this.height) / 2f;
																this.frameCounter++;
																if (this.frameCounter >= 3)
																{
																	this.frameCounter = 0;
																	this.frame++;
																	if (this.frame >= 4)
																	{
																		this.frame = 0;
																	}
																}
																for (int num729 = 0; num729 < 1; num729++)
																{
																	float num730 = 55f * num728;
																	float num731 = 11f * num728;
																	float num732 = 0.5f;
																	int num733 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.5f);
																	Main.dust[num733].noGravity = true;
																	Main.dust[num733].velocity *= 2f;
																	Main.dust[num733].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num731 + num732 * (float)Main.rand.NextDouble() * num730) + base.Center;
																	Main.dust[num733].velocity = Main.dust[num733].velocity / 2f + Vector2.Normalize(Main.dust[num733].position - base.Center);
																	if (Main.rand.Next(2) == 0)
																	{
																		num733 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.9f);
																		Main.dust[num733].noGravity = true;
																		Main.dust[num733].velocity *= 1.2f;
																		Main.dust[num733].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num731 + num732 * (float)Main.rand.NextDouble() * num730) + base.Center;
																		Main.dust[num733].velocity = Main.dust[num733].velocity / 2f + Vector2.Normalize(Main.dust[num733].position - base.Center);
																	}
																	if (Main.rand.Next(4) == 0)
																	{
																		num733 = Dust.NewDust(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 0.7f);
																		Main.dust[num733].noGravity = true;
																		Main.dust[num733].velocity *= 1.2f;
																		Main.dust[num733].position = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (num731 + num732 * (float)Main.rand.NextDouble() * num730) + base.Center;
																		Main.dust[num733].velocity = Main.dust[num733].velocity / 2f + Vector2.Normalize(Main.dust[num733].position - base.Center);
																	}
																}
																return;
															}
															if (this.aiStyle == 78)
															{
																if (this.alpha > 0)
																{
																	this.alpha -= 30;
																}
																if (this.alpha < 0)
																{
																	this.alpha = 0;
																}
																Vector2 v2 = this.ai[0].ToRotationVector2();
																float num734 = this.velocity.ToRotation();
																float num735 = v2.ToRotation();
																double num736 = (double)(num735 - num734);
																if (num736 > 3.1415926535897931)
																{
																	num736 -= 6.2831853071795862;
																}
																if (num736 < -3.1415926535897931)
																{
																	num736 += 6.2831853071795862;
																}
																this.velocity = this.velocity.RotatedBy(num736 * 0.05000000074505806, default(Vector2));
																this.velocity *= 0.96f;
																this.rotation = this.velocity.ToRotation() - 1.57079637f;
																if (Main.myPlayer == this.owner && this.timeLeft > 60)
																{
																	this.timeLeft = 60;
																	return;
																}
															}
															else if (this.aiStyle == 79)
															{
																bool flag32 = true;
																int num737 = (int)this.ai[0] - 1;
																if (this.type == 447 && (this.ai[0] == 0f || ((!Main.npc[num737].active || Main.npc[num737].type != 392) && (!Main.npc[num737].active || Main.npc[num737].type != 395 || Main.npc[num737].ai[3] % 120f < 60f || Main.npc[num737].ai[0] != 2f))))
																{
																	flag32 = false;
																}
																if (!flag32)
																{
																	this.Kill();
																	return;
																}
																NPC nPC7 = Main.npc[num737];
																float num738 = nPC7.Center.Y + 46f;
																int num739 = (int)nPC7.Center.X / 16;
																int num740 = (int)num738 / 16;
																int num741 = 0;
																bool flag33 = Main.tile[num739, num740].nactive() && Main.tileSolid[(int)Main.tile[num739, num740].type] && !Main.tileSolidTop[(int)Main.tile[num739, num740].type];
																if (flag33)
																{
																	num741 = 1;
																}
																else
																{
																	while (num741 < 150 && num740 + num741 < Main.maxTilesY)
																	{
																		int num742 = num740 + num741;
																		bool flag34 = Main.tile[num739, num742].nactive() && Main.tileSolid[(int)Main.tile[num739, num742].type] && !Main.tileSolidTop[(int)Main.tile[num739, num742].type];
																		if (flag34)
																		{
																			num741--;
																			break;
																		}
																		num741++;
																	}
																}
																this.position.X = nPC7.Center.X - (float)(this.width / 2);
																this.position.Y = num738;
																this.height = (num741 + 1) * 16;
																int num743 = (int)this.position.Y + this.height;
																if (Main.tile[num739, num743 / 16].nactive() && Main.tileSolid[(int)Main.tile[num739, num743 / 16].type] && !Main.tileSolidTop[(int)Main.tile[num739, num743 / 16].type])
																{
																	int num744 = num743 % 16;
																	this.height -= num744 - 2;
																}
																if (this.type == 447)
																{
																	for (int num745 = 0; num745 < 2; num745++)
																	{
																		int num746 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 16f), this.width, 16, 228, 0f, 0f, 0, default(Color), 1f);
																		Main.dust[num746].noGravity = true;
																		Main.dust[num746].velocity *= 0.5f;
																		Dust expr_1E976_cp_0 = Main.dust[num746];
																		expr_1E976_cp_0.velocity.X = expr_1E976_cp_0.velocity.X - ((float)num745 - nPC7.velocity.X * 2f / 3f);
																		Main.dust[num746].scale = 2.8f;
																	}
																	if (Main.rand.Next(5) == 0)
																	{
																		int num747 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - (float)(this.width / 2 * Math.Sign(nPC7.velocity.X)) - 4f, this.position.Y + (float)this.height - 16f), 4, 16, 31, 0f, 0f, 100, default(Color), 1.5f);
																		Main.dust[num747].velocity *= 0.5f;
																		Dust expr_1EA8C_cp_0 = Main.dust[num747];
																		expr_1EA8C_cp_0.velocity.X = expr_1EA8C_cp_0.velocity.X - nPC7.velocity.X / 2f;
																		Main.dust[num747].velocity.Y = -Math.Abs(Main.dust[num747].velocity.Y);
																	}
																}
																if (this.type == 447 && ++this.frameCounter >= 5)
																{
																	this.frameCounter = 0;
																	if (++this.frame >= 4)
																	{
																		this.frame = 0;
																		return;
																	}
																}
															}
															else
															{
																if (this.aiStyle == 80)
																{
																	if (this.ai[0] == 0f && this.ai[1] > 0f)
																	{
																		this.ai[1] -= 1f;
																	}
																	else if (this.ai[0] == 0f && this.ai[1] == 0f)
																	{
																		this.ai[0] = 1f;
																		this.ai[1] = (float)Player.FindClosest(this.position, this.width, this.height);
																		this.netUpdate = true;
																		float num748 = this.velocity.Length();
																		this.velocity = Vector2.Normalize(this.velocity) * (num748 + 4f);
																		for (int num749 = 0; num749 < 8; num749++)
																		{
																			Vector2 vector63 = Vector2.UnitX * -8f;
																			vector63 += -Vector2.UnitY.RotatedBy((double)((float)num749 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 8f);
																			vector63 = vector63.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
																			int num750 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																			Main.dust[num750].scale = 1.5f;
																			Main.dust[num750].noGravity = true;
																			Main.dust[num750].position = base.Center + vector63;
																			Main.dust[num750].velocity = this.velocity * 0f;
																		}
																	}
																	else if (this.ai[0] == 1f)
																	{
																		this.tileCollide = true;
																		this.localAI[1] += 1f;
																		float num751 = 180f;
																		float num752 = 0f;
																		float num753 = 30f;
																		if (this.localAI[1] == num751)
																		{
																			this.Kill();
																			return;
																		}
																		if (this.localAI[1] >= num752 && this.localAI[1] < num752 + num753)
																		{
																			Vector2 v3 = Main.player[(int)this.ai[1]].Center - base.Center;
																			float num754 = this.velocity.ToRotation();
																			float num755 = v3.ToRotation();
																			double num756 = (double)(num755 - num754);
																			if (num756 > 3.1415926535897931)
																			{
																				num756 -= 6.2831853071795862;
																			}
																			if (num756 < -3.1415926535897931)
																			{
																				num756 += 6.2831853071795862;
																			}
																			this.velocity = this.velocity.RotatedBy(num756 * 0.20000000298023224, default(Vector2));
																		}
																		if (this.localAI[1] % 5f == 0f)
																		{
																			for (int num757 = 0; num757 < 4; num757++)
																			{
																				Vector2 vector64 = Vector2.UnitX * -8f;
																				vector64 += -Vector2.UnitY.RotatedBy((double)((float)num757 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 4f);
																				vector64 = vector64.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
																				int num758 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																				Main.dust[num758].scale = 1.5f;
																				Main.dust[num758].noGravity = true;
																				Main.dust[num758].position = base.Center + vector64;
																				Main.dust[num758].velocity = this.velocity * 0f;
																			}
																		}
																	}
																	this.rotation = this.velocity.ToRotation() + 1.57079637f;
																	if (++this.frameCounter >= 3)
																	{
																		this.frameCounter = 0;
																		if (++this.frame >= 3)
																		{
																			this.frame = 0;
																		}
																	}
																	int num759 = 0;
																	while ((float)num759 < 1f + this.ai[0])
																	{
																		Vector2 value26 = Vector2.UnitY.RotatedBy((double)this.rotation, default(Vector2)) * 8f * (float)(num759 + 1);
																		int num760 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 0, default(Color), 1f);
																		Main.dust[num760].position = base.Center + value26;
																		Main.dust[num760].scale = 1f;
																		Main.dust[num760].noGravity = true;
																		num759++;
																	}
																	for (int num761 = 0; num761 < 255; num761++)
																	{
																		Player player4 = Main.player[num761];
																		if (player4.active && !player4.dead && Vector2.Distance(player4.Center, base.Center) <= 42f)
																		{
																			this.Kill();
																			return;
																		}
																	}
																	return;
																}
																if (this.aiStyle == 81)
																{
																	int num762 = this.penetrate;
																	if (this.ai[0] == 0f)
																	{
																		this.tileCollide = true;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] > 7f)
																		{
																			int num763 = Utils.SelectRandom<int>(Main.rand, new int[]
																			{
																				226,
																				229
																			});
																			Vector2 center5 = base.Center;
																			Vector2 vector65 = new Vector2(-16f, 16f);
																			float num764 = 1f;
																			vector65 += new Vector2(-16f, 16f);
																			vector65 = vector65.RotatedBy((double)this.rotation, default(Vector2));
																			int num765 = 4;
																			int num766 = Dust.NewDust(center5 + vector65 + Vector2.One * (float)(-(float)num765), num765 * 2, num765 * 2, num763, 0f, 0f, 100, default(Color), num764);
																			Main.dust[num766].velocity *= 0.1f;
																			if (Main.rand.Next(6) != 0)
																			{
																				Main.dust[num766].noGravity = true;
																			}
																		}
																		float num767 = 0.01f;
																		int num768 = 5;
																		int num769 = num768 * 15;
																		int num770 = 0;
																		if (this.localAI[0] > 7f)
																		{
																			if (this.localAI[1] == 0f)
																			{
																				this.scale -= num767;
																				this.alpha += num768;
																				if (this.alpha > num769)
																				{
																					this.alpha = num769;
																					this.localAI[1] = 1f;
																				}
																			}
																			else if (this.localAI[1] == 1f)
																			{
																				this.scale += num767;
																				this.alpha -= num768;
																				if (this.alpha <= num770)
																				{
																					this.alpha = num770;
																					this.localAI[1] = 0f;
																				}
																			}
																		}
																		this.rotation = this.velocity.ToRotation() + 0.7853982f;
																	}
																	else if (this.ai[0] >= (float)1 && this.ai[0] < (float)(1 + num762))
																	{
																		this.tileCollide = false;
																		this.alpha += 15;
																		this.velocity *= 0.98f;
																		this.localAI[0] = 0f;
																		if (this.alpha >= 255)
																		{
																			if (this.ai[0] == 1f)
																			{
																				this.Kill();
																				return;
																			}
																			int num771 = -1;
																			Vector2 value27 = base.Center;
																			float num772 = 250f;
																			for (int num773 = 0; num773 < 200; num773++)
																			{
																				NPC nPC8 = Main.npc[num773];
																				if (nPC8.CanBeChasedBy(this, false))
																				{
																					Vector2 center6 = nPC8.Center;
																					float num774 = Vector2.Distance(center6, base.Center);
																					if (num774 < num772)
																					{
																						num772 = num774;
																						value27 = center6;
																						num771 = num773;
																					}
																				}
																			}
																			if (num771 >= 0)
																			{
																				this.netUpdate = true;
																				this.ai[0] += (float)num762;
																				this.position = value27 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * 100f - new Vector2((float)this.width, (float)this.height) / 2f;
																				this.velocity = Vector2.Normalize(value27 - base.Center) * 15f;
																				this.rotation = this.velocity.ToRotation() + 0.7853982f;
																			}
																			else
																			{
																				this.Kill();
																			}
																		}
																		if (Main.rand.Next(3) == 0)
																		{
																			int num775 = Utils.SelectRandom<int>(Main.rand, new int[]
																			{
																				226,
																				229
																			});
																			Vector2 center7 = base.Center;
																			Vector2 vector66 = new Vector2(-16f, 16f);
																			vector66 = (vector66 = vector66);
																			float num776 = 0.6f;
																			vector66 += new Vector2(-16f, 16f);
																			vector66 = vector66.RotatedBy((double)this.rotation, default(Vector2));
																			int num777 = 4;
																			int num778 = Dust.NewDust(center7 + vector66 + Vector2.One * (float)(-(float)num777), num777 * 2, num777 * 2, num775, 0f, 0f, 100, default(Color), num776);
																			Main.dust[num778].velocity *= 0.1f;
																			Main.dust[num778].noGravity = true;
																		}
																	}
																	else if (this.ai[0] >= (float)(1 + num762) && this.ai[0] < (float)(1 + num762 * 2))
																	{
																		this.scale = 0.9f;
																		this.tileCollide = false;
																		this.rotation = this.velocity.ToRotation() + 0.7853982f;
																		this.ai[1] += 1f;
																		if (this.ai[1] >= 15f)
																		{
																			this.alpha += 51;
																			this.velocity *= 0.8f;
																			if (this.alpha >= 255)
																			{
																				this.Kill();
																			}
																		}
																		else
																		{
																			this.alpha -= 125;
																			if (this.alpha < 0)
																			{
																				this.alpha = 0;
																			}
																			this.velocity *= 0.98f;
																		}
																		this.localAI[0] += 1f;
																		int num779 = Utils.SelectRandom<int>(Main.rand, new int[]
																		{
																			226,
																			229
																		});
																		Vector2 center8 = base.Center;
																		Vector2 vector67 = new Vector2(-16f, 16f);
																		float num780 = 0.6f;
																		vector67 += new Vector2(-16f, 16f);
																		vector67 = vector67.RotatedBy((double)this.rotation, default(Vector2));
																		int num781 = 4;
																		int num782 = Dust.NewDust(center8 + vector67 + Vector2.One * (float)(-(float)num781), num781 * 2, num781 * 2, num779, 0f, 0f, 100, default(Color), num780);
																		Main.dust[num782].velocity *= 0.1f;
																		Main.dust[num782].noGravity = true;
																	}
																	float num783 = (float)this.alpha / 255f;
																	Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f * num783, 0.4f * num783, 1f * num783);
																	return;
																}
																if (this.aiStyle == 82)
																{
																	this.alpha -= 40;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	if (this.ai[0] == 0f)
																	{
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 45f)
																		{
																			this.localAI[0] = 0f;
																			this.ai[0] = 1f;
																			this.ai[1] = -this.ai[1];
																			this.netUpdate = true;
																		}
																		this.velocity.X = this.velocity.RotatedBy((double)this.ai[1], default(Vector2)).X;
																		this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
																		this.velocity.Y = this.velocity.Y - 0.08f;
																		if (this.velocity.Y > 0f)
																		{
																			this.velocity.Y = this.velocity.Y - 0.2f;
																		}
																		if (this.velocity.Y < -7f)
																		{
																			this.velocity.Y = -7f;
																		}
																	}
																	else if (this.ai[0] == 1f)
																	{
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 90f)
																		{
																			this.localAI[0] = 0f;
																			this.ai[0] = 2f;
																			this.ai[1] = (float)Player.FindClosest(this.position, this.width, this.height);
																			this.netUpdate = true;
																		}
																		this.velocity.X = this.velocity.RotatedBy((double)this.ai[1], default(Vector2)).X;
																		this.velocity.X = MathHelper.Clamp(this.velocity.X, -6f, 6f);
																		this.velocity.Y = this.velocity.Y - 0.08f;
																		if (this.velocity.Y > 0f)
																		{
																			this.velocity.Y = this.velocity.Y - 0.2f;
																		}
																		if (this.velocity.Y < -7f)
																		{
																			this.velocity.Y = -7f;
																		}
																	}
																	else if (this.ai[0] == 2f)
																	{
																		Vector2 vector68 = Main.player[(int)this.ai[1]].Center - base.Center;
																		if (vector68.Length() < 30f)
																		{
																			this.Kill();
																			return;
																		}
																		vector68.Normalize();
																		vector68 *= 14f;
																		vector68 = Vector2.Lerp(this.velocity, vector68, 0.6f);
																		if (vector68.Y < 6f)
																		{
																			vector68.Y = 6f;
																		}
																		float num784 = 0.4f;
																		if (this.velocity.X < vector68.X)
																		{
																			this.velocity.X = this.velocity.X + num784;
																			if (this.velocity.X < 0f && vector68.X > 0f)
																			{
																				this.velocity.X = this.velocity.X + num784;
																			}
																		}
																		else if (this.velocity.X > vector68.X)
																		{
																			this.velocity.X = this.velocity.X - num784;
																			if (this.velocity.X > 0f && vector68.X < 0f)
																			{
																				this.velocity.X = this.velocity.X - num784;
																			}
																		}
																		if (this.velocity.Y < vector68.Y)
																		{
																			this.velocity.Y = this.velocity.Y + num784;
																			if (this.velocity.Y < 0f && vector68.Y > 0f)
																			{
																				this.velocity.Y = this.velocity.Y + num784;
																			}
																		}
																		else if (this.velocity.Y > vector68.Y)
																		{
																			this.velocity.Y = this.velocity.Y - num784;
																			if (this.velocity.Y > 0f && vector68.Y < 0f)
																			{
																				this.velocity.Y = this.velocity.Y - num784;
																			}
																		}
																	}
																	if (this.alpha < 40)
																	{
																		int num785 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 229, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 1.2f);
																		Main.dust[num785].noGravity = true;
																	}
																	this.rotation = this.velocity.ToRotation() + 1.57079637f;
																	return;
																}
																if (this.aiStyle == 83)
																{
																	if (this.alpha > 200)
																	{
																		this.alpha = 200;
																	}
																	this.alpha -= 5;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	float num786 = (float)this.alpha / 255f;
																	this.scale = 1f - num786;
																	if (this.ai[0] >= 0f)
																	{
																		this.ai[0] += 1f;
																	}
																	if (this.ai[0] == -1f)
																	{
																		this.frame = 1;
																		this.extraUpdates = 1;
																	}
																	else if (this.ai[0] < 30f)
																	{
																		this.position = Main.npc[(int)this.ai[1]].Center - new Vector2((float)this.width, (float)this.height) / 2f - this.velocity;
																	}
																	else
																	{
																		this.velocity *= 0.96f;
																		if (++this.frameCounter >= 6)
																		{
																			this.frameCounter = 0;
																			if (++this.frame >= 2)
																			{
																				this.frame = 0;
																			}
																		}
																	}
																	if (this.alpha < 40)
																	{
																		for (int num787 = 0; num787 < 2; num787++)
																		{
																			float num788 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																			if (num788 < -0.5f)
																			{
																				num788 = -0.5f;
																			}
																			if (num788 > 0.5f)
																			{
																				num788 = 0.5f;
																			}
																			Vector2 value28 = new Vector2((float)(-(float)this.width) * 0.65f * this.scale, 0f).RotatedBy((double)(num788 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																			int num789 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 229, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																			Main.dust[num789].velocity = Vector2.Zero;
																			Main.dust[num789].position = base.Center + value28;
																			Main.dust[num789].noGravity = true;
																		}
																		return;
																	}
																}
																else if (this.aiStyle == 84)
																{
																	Vector2? vector69 = null;
																	if (this.velocity.HasNaNs() || this.velocity == Vector2.Zero)
																	{
																		this.velocity = -Vector2.UnitY;
																	}
																	if (this.type == 455 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 396)
																	{
																		Vector2 value29 = new Vector2(27f, 59f);
																		Vector2 value30 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), value29 * Main.npc[(int)this.ai[1]].localAI[1]);
																		this.position = Main.npc[(int)this.ai[1]].Center + value30 - new Vector2((float)this.width, (float)this.height) / 2f;
																	}
																	else if (this.type == 455 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 400)
																	{
																		Vector2 value31 = new Vector2(30f, 30f);
																		Vector2 value32 = Utils.Vector2FromElipse(Main.npc[(int)this.ai[1]].localAI[0].ToRotationVector2(), value31 * Main.npc[(int)this.ai[1]].localAI[1]);
																		this.position = Main.npc[(int)this.ai[1]].Center + value32 - new Vector2((float)this.width, (float)this.height) / 2f;
																	}
																	else if (this.type == 537 && Main.npc[(int)this.ai[1]].active && Main.npc[(int)this.ai[1]].type == 411)
																	{
																		Vector2 value33 = new Vector2((float)(Main.npc[(int)this.ai[1]].direction * 6), -4f);
																		this.position = Main.npc[(int)this.ai[1]].Center + value33 - base.Size / 2f + new Vector2(0f, -Main.npc[(int)this.ai[1]].gfxOffY);
																	}
																	else if (this.type == 461 && Main.projectile[(int)this.ai[1]].active && Main.projectile[(int)this.ai[1]].type == 460)
																	{
																		Vector2 value34 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																		this.position = Main.projectile[(int)this.ai[1]].Center + value34 * 16f - new Vector2((float)this.width, (float)this.height) / 2f + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
																		this.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																	}
																	else if (this.type == 642 && Main.projectile[(int)this.ai[1]].active && Main.projectile[(int)this.ai[1]].type == 641)
																	{
																		base.Center = Main.projectile[(int)this.ai[1]].Center;
																		this.velocity = Vector2.Normalize(Main.projectile[(int)this.ai[1]].ai[1].ToRotationVector2());
																	}
																	else
																	{
																		if (this.type != 632 || !Main.projectile[(int)this.ai[1]].active || Main.projectile[(int)this.ai[1]].type != 633)
																		{
																			this.Kill();
																			return;
																		}
																		float num790 = (float)((int)this.ai[0]) - 2.5f;
																		Vector2 value35 = Vector2.Normalize(Main.projectile[(int)this.ai[1]].velocity);
																		Projectile projectile = Main.projectile[(int)this.ai[1]];
																		float num791 = num790 * 0.5235988f;
																		Vector2 value36 = Vector2.Zero;
																		float num792;
																		float y;
																		float num793;
																		float scaleFactor6;
																		if (projectile.ai[0] < 180f)
																		{
																			num792 = 1f - projectile.ai[0] / 180f;
																			y = 20f - projectile.ai[0] / 180f * 14f;
																			if (projectile.ai[0] < 120f)
																			{
																				num793 = 20f - 4f * (projectile.ai[0] / 120f);
																				this.Opacity = projectile.ai[0] / 120f * 0.4f;
																			}
																			else
																			{
																				num793 = 16f - 10f * ((projectile.ai[0] - 120f) / 60f);
																				this.Opacity = 0.4f + (projectile.ai[0] - 120f) / 60f * 0.6f;
																			}
																			scaleFactor6 = -22f + projectile.ai[0] / 180f * 20f;
																		}
																		else
																		{
																			num792 = 0f;
																			num793 = 1.75f;
																			y = 6f;
																			this.Opacity = 1f;
																			scaleFactor6 = -2f;
																		}
																		float num794 = (projectile.ai[0] + num790 * num793) / (num793 * 6f) * 6.28318548f;
																		num791 = Vector2.UnitY.RotatedBy((double)num794, default(Vector2)).Y * 0.5235988f * num792;
																		value36 = (Vector2.UnitY.RotatedBy((double)num794, default(Vector2)) * new Vector2(4f, y)).RotatedBy((double)projectile.velocity.ToRotation(), default(Vector2));
																		this.position = projectile.Center + value35 * 16f - base.Size / 2f + new Vector2(0f, -Main.projectile[(int)this.ai[1]].gfxOffY);
																		this.position += projectile.velocity.ToRotation().ToRotationVector2() * scaleFactor6;
																		this.position += value36;
																		this.velocity = Vector2.Normalize(projectile.velocity).RotatedBy((double)num791, default(Vector2));
																		this.scale = 1.4f * (1f - num792);
																		this.damage = projectile.damage;
																		if (projectile.ai[0] >= 180f)
																		{
																			this.damage *= 3;
																			vector69 = new Vector2?(projectile.Center);
																		}
																		if (!Collision.CanHitLine(Main.player[this.owner].Center, 0, 0, projectile.Center, 0, 0))
																		{
																			vector69 = new Vector2?(Main.player[this.owner].Center);
																		}
																		this.friendly = (projectile.ai[0] > 30f);
																	}
																	if (this.velocity.HasNaNs() || this.velocity == Vector2.Zero)
																	{
																		this.velocity = -Vector2.UnitY;
																	}
																	if (this.type == 461)
																	{
																		this.ai[0] += 1f;
																		if (this.ai[0] >= 300f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.ai[0] * 3.14159274f / 300f)) * 10f;
																		if (this.scale > 1f)
																		{
																			this.scale = 1f;
																		}
																	}
																	if (this.type == 455)
																	{
																		if (this.localAI[0] == 0f)
																		{
																			Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 104, 1f, 0f);
																		}
																		float num795 = 1f;
																		if (Main.npc[(int)this.ai[1]].type == 400)
																		{
																			num795 = 0.4f;
																		}
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 180f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 180f)) * 10f * num795;
																		if (this.scale > num795)
																		{
																			this.scale = num795;
																		}
																	}
																	if (this.type == 642)
																	{
																		float num796 = 1f;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 50f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 50f)) * 10f * num796;
																		if (this.scale > num796)
																		{
																			this.scale = num796;
																		}
																	}
																	if (this.type == 537)
																	{
																		float num797 = 0.8f;
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 60f)
																		{
																			this.Kill();
																			return;
																		}
																		this.scale = (float)Math.Sin((double)(this.localAI[0] * 3.14159274f / 60f)) * 10f * num797;
																		if (this.scale > num797)
																		{
																			this.scale = num797;
																		}
																	}
																	float num798 = this.velocity.ToRotation();
																	if (this.type == 455)
																	{
																		num798 += this.ai[0];
																	}
																	this.rotation = num798 - 1.57079637f;
																	this.velocity = num798.ToRotationVector2();
																	float num799 = 0f;
																	float num800 = 0f;
																	Vector2 samplingPoint = base.Center;
																	if (vector69.HasValue)
																	{
																		samplingPoint = vector69.Value;
																	}
																	if (this.type == 455)
																	{
																		num799 = 3f;
																		num800 = (float)this.width;
																	}
																	else if (this.type == 461)
																	{
																		num799 = 2f;
																		num800 = 0f;
																	}
																	else if (this.type == 642)
																	{
																		num799 = 2f;
																		num800 = 0f;
																	}
																	else if (this.type == 632)
																	{
																		num799 = 2f;
																		num800 = 0f;
																	}
																	else if (this.type == 537)
																	{
																		num799 = 2f;
																		num800 = 0f;
																	}
																	float[] array3 = new float[(int)num799];
																	Collision.LaserScan(samplingPoint, this.velocity, num800 * this.scale, 2400f, array3);
																	float num801 = 0f;
																	for (int num802 = 0; num802 < array3.Length; num802++)
																	{
																		num801 += array3[num802];
																	}
																	num801 /= num799;
																	float amount = 0.5f;
																	if (this.type == 632)
																	{
																		amount = 0.75f;
																	}
																	this.localAI[1] = MathHelper.Lerp(this.localAI[1], num801, amount);
																	if (this.type == 455)
																	{
																		Vector2 vector70 = base.Center + this.velocity * (this.localAI[1] - 14f);
																		for (int num803 = 0; num803 < 2; num803++)
																		{
																			float num804 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num805 = (float)Main.rand.NextDouble() * 2f + 2f;
																			Vector2 vector71 = new Vector2((float)Math.Cos((double)num804) * num805, (float)Math.Sin((double)num804) * num805);
																			int num806 = Dust.NewDust(vector70, 0, 0, 229, vector71.X, vector71.Y, 0, default(Color), 1f);
																			Main.dust[num806].noGravity = true;
																			Main.dust[num806].scale = 1.7f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value37 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num807 = Dust.NewDust(vector70 + value37 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num807].velocity *= 0.5f;
																			Main.dust[num807].velocity.Y = -Math.Abs(Main.dust[num807].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	else if (this.type == 642)
																	{
																		Vector2 vector72 = base.Center + this.velocity * (this.localAI[1] - 14f);
																		for (int num808 = 0; num808 < 2; num808++)
																		{
																			float num809 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num810 = (float)Main.rand.NextDouble() * 2f + 2f;
																			Vector2 vector73 = new Vector2((float)Math.Cos((double)num809) * num810, (float)Math.Sin((double)num809) * num810);
																			int num811 = Dust.NewDust(vector72, 0, 0, 229, vector73.X, vector73.Y, 0, default(Color), 1f);
																			Main.dust[num811].noGravity = true;
																			Main.dust[num811].scale = 1.7f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value38 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num812 = Dust.NewDust(vector72 + value38 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num812].velocity *= 0.5f;
																			Main.dust[num812].velocity.Y = -Math.Abs(Main.dust[num812].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.3f, 0.65f, 0.7f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 461)
																	{
																		Vector2 vector74 = base.Center + this.velocity * (this.localAI[1] - 8f);
																		for (int num813 = 0; num813 < 2; num813++)
																		{
																			float num814 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num815 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector75 = new Vector2((float)Math.Cos((double)num814) * num815, (float)Math.Sin((double)num814) * num815);
																			int num816 = Dust.NewDust(vector74, 0, 0, 226, vector75.X, vector75.Y, 0, default(Color), 1f);
																			Main.dust[num816].noGravity = true;
																			Main.dust[num816].scale = 1.2f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value39 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num817 = Dust.NewDust(vector74 + value39 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num817].velocity *= 0.5f;
																			Main.dust[num817].velocity.Y = -Math.Abs(Main.dust[num817].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 537)
																	{
																		Vector2 vector76 = base.Center + this.velocity * (this.localAI[1] - 8f);
																		for (int num818 = 0; num818 < 2; num818++)
																		{
																			float num819 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num820 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector77 = new Vector2((float)Math.Cos((double)num819) * num820, (float)Math.Sin((double)num819) * num820);
																			int num821 = Dust.NewDust(vector76, 0, 0, 226, vector77.X, vector77.Y, 0, default(Color), 1f);
																			Main.dust[num821].noGravity = true;
																			Main.dust[num821].scale = 1.2f;
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value40 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num822 = Dust.NewDust(vector76 + value40 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num822].velocity *= 0.5f;
																			Main.dust[num822].velocity.Y = -Math.Abs(Main.dust[num822].velocity.Y);
																		}
																		DelegateMethods.v3_1 = new Vector3(0.4f, 0.85f, 0.9f);
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																	}
																	if (this.type == 632 && Math.Abs(this.localAI[1] - num801) < 100f && this.scale > 0.15f)
																	{
																		float prismHue = this.GetPrismHue(this.ai[0]);
																		Color color = Main.hslToRgb(prismHue, 1f, 0.5f);
																		color.A = 0;
																		Vector2 vector78 = base.Center + this.velocity * (this.localAI[1] - 14.5f * this.scale);
																		float x = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
																		for (int num823 = 0; num823 < 2; num823++)
																		{
																			float num824 = this.velocity.ToRotation() + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																			float num825 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																			Vector2 vector79 = new Vector2((float)Math.Cos((double)num824) * num825, (float)Math.Sin((double)num824) * num825);
																			int num826 = Dust.NewDust(vector78, 0, 0, 267, vector79.X, vector79.Y, 0, default(Color), 1f);
																			Main.dust[num826].color = color;
																			Main.dust[num826].scale = 1.2f;
																			if (this.scale > 1f)
																			{
																				Main.dust[num826].velocity *= this.scale;
																				Main.dust[num826].scale *= this.scale;
																			}
																			Main.dust[num826].noGravity = true;
																			if (this.scale != 1.4f)
																			{
																				Dust dust9 = Dust.CloneDust(num826);
																				dust9.color = Color.White;
																				dust9.scale /= 2f;
																			}
																			float hue = (x + Main.rand.NextFloat() * 0.4f) % 1f;
																			Main.dust[num826].color = Color.Lerp(color, Main.hslToRgb(hue, 1f, 0.75f), this.scale / 1.4f);
																		}
																		if (Main.rand.Next(5) == 0)
																		{
																			Vector2 value41 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																			int num827 = Dust.NewDust(vector78 + value41 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																			Main.dust[num827].velocity *= 0.5f;
																			Main.dust[num827].velocity.Y = -Math.Abs(Main.dust[num827].velocity.Y);
																		}
																		DelegateMethods.v3_1 = color.ToVector3() * 0.3f;
																		float value42 = 0.1f * (float)Math.Sin((double)(Main.GlobalTime * 20f));
																		Vector2 size = new Vector2(this.velocity.Length() * this.localAI[1], (float)this.width * this.scale);
																		float num828 = this.velocity.ToRotation();
																		if (Main.netMode != 2)
																		{
																			((WaterShaderData)Filters.Scene["WaterDistortion"].GetShader()).QueueRipple(this.position + new Vector2(size.X * 0.5f, 0f).RotatedBy((double)num828, default(Vector2)), new Color(0.5f, 0.1f * (float)Math.Sign(value42) + 0.5f, 0f, 1f) * Math.Abs(value42), size, RippleShape.Square, num828);
																		}
																		Utils.PlotTileLine(base.Center, base.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CastLight));
																		return;
																	}
																}
																else if (this.aiStyle == 85)
																{
																	Vector2 value43 = new Vector2(0f, 216f);
																	this.alpha -= 15;
																	if (this.alpha < 0)
																	{
																		this.alpha = 0;
																	}
																	int num829 = (int)Math.Abs(this.ai[0]) - 1;
																	int num830 = (int)this.ai[1];
																	if (!Main.npc[num829].active || Main.npc[num829].type != 396)
																	{
																		this.Kill();
																		return;
																	}
																	this.localAI[0] += 1f;
																	if (this.localAI[0] >= 330f && this.ai[0] > 0f && Main.netMode != 1)
																	{
																		this.ai[0] *= -1f;
																		this.netUpdate = true;
																	}
																	if (Main.netMode != 1 && this.ai[0] > 0f && (!Main.player[(int)this.ai[1]].active || Main.player[(int)this.ai[1]].dead))
																	{
																		this.ai[0] *= -1f;
																		this.netUpdate = true;
																	}
																	this.rotation = (Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center - Main.player[(int)this.ai[1]].Center + value43).ToRotation() + 1.57079637f;
																	if (this.ai[0] > 0f)
																	{
																		Vector2 value44 = Main.player[(int)this.ai[1]].Center - base.Center;
																		if (value44.X != 0f || value44.Y != 0f)
																		{
																			this.velocity = Vector2.Normalize(value44) * Math.Min(16f, value44.Length());
																		}
																		else
																		{
																			this.velocity = Vector2.Zero;
																		}
																		if (value44.Length() < 20f && this.localAI[1] == 0f)
																		{
																			this.localAI[1] = 1f;
																			int time = 840;
																			if (Main.expertMode)
																			{
																				time = 960;
																			}
																			Main.player[num830].AddBuff(145, time, true);
																			return;
																		}
																	}
																	else
																	{
																		Vector2 value45 = Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center - base.Center + value43;
																		if (value45.X != 0f || value45.Y != 0f)
																		{
																			this.velocity = Vector2.Normalize(value45) * Math.Min(16f, value45.Length());
																		}
																		else
																		{
																			this.velocity = Vector2.Zero;
																		}
																		if (value45.Length() < 20f)
																		{
																			this.Kill();
																			return;
																		}
																	}
																}
																else if (this.aiStyle == 86)
																{
																	if (this.localAI[1] == 0f)
																	{
																		this.localAI[1] = 1f;
																		Main.PlaySound(SoundID.Item120, this.position);
																	}
																	this.ai[0] += 1f;
																	if (this.ai[1] == 1f)
																	{
																		if (this.ai[0] >= 130f)
																		{
																			this.alpha += 10;
																		}
																		else
																		{
																			this.alpha -= 10;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		if (this.ai[0] >= 150f)
																		{
																			this.Kill();
																			return;
																		}
																		if (this.ai[0] % 30f == 0f && Main.netMode != 1)
																		{
																			Vector2 vector80 = this.rotation.ToRotationVector2();
																			Projectile.NewProjectile(base.Center.X, base.Center.Y, vector80.X, vector80.Y, 464, this.damage, this.knockBack, this.owner, 0f, 0f);
																		}
																		this.rotation += 0.104719758f;
																		Lighting.AddLight(base.Center, 0.3f, 0.75f, 0.9f);
																		return;
																	}
																	else
																	{
																		this.position -= this.velocity;
																		if (this.ai[0] >= 40f)
																		{
																			this.alpha += 3;
																		}
																		else
																		{
																			this.alpha -= 40;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		if (this.ai[0] >= 45f)
																		{
																			this.Kill();
																			return;
																		}
																		Vector2 value46 = new Vector2(0f, -720f).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																		float scaleFactor7 = this.ai[0] % 45f / 45f;
																		Vector2 spinningpoint = value46 * scaleFactor7;
																		for (int num831 = 0; num831 < 6; num831++)
																		{
																			Vector2 vector81 = base.Center + spinningpoint.RotatedBy((double)((float)num831 * 6.28318548f / 6f), default(Vector2));
																			Lighting.AddLight(vector81, 0.3f, 0.75f, 0.9f);
																			for (int num832 = 0; num832 < 2; num832++)
																			{
																				int num833 = Dust.NewDust(vector81 + Utils.RandomVector2(Main.rand, -8f, 8f) / 2f, 8, 8, 197, 0f, 0f, 100, Color.Transparent, 1f);
																				Main.dust[num833].noGravity = true;
																			}
																		}
																		return;
																	}
																}
																else
																{
																	if (this.aiStyle == 87)
																	{
																		this.position.Y = this.ai[0];
																		this.height = (int)this.ai[1];
																		if (base.Center.X > Main.player[this.owner].Center.X)
																		{
																			this.direction = 1;
																		}
																		else
																		{
																			this.direction = -1;
																		}
																		this.velocity.X = (float)this.direction * 1E-06f;
																		if (this.owner == Main.myPlayer)
																		{
																			for (int num834 = 0; num834 < 1000; num834++)
																			{
																				if (Main.projectile[num834].active && num834 != this.whoAmI && Main.projectile[num834].type == this.type && Main.projectile[num834].owner == this.owner && Main.projectile[num834].timeLeft > this.timeLeft)
																				{
																					this.Kill();
																					return;
																				}
																			}
																		}
																		float num835 = (float)(this.width * this.height) * 0.0045f;
																		int num836 = 0;
																		while ((float)num836 < num835)
																		{
																			int num837 = Dust.NewDust(this.position, this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
																			Main.dust[num837].noGravity = true;
																			Main.dust[num837].velocity *= 0.5f;
																			Dust expr_225FA_cp_0 = Main.dust[num837];
																			expr_225FA_cp_0.velocity.Y = expr_225FA_cp_0.velocity.Y - 0.5f;
																			Main.dust[num837].scale = 1.4f;
																			Dust expr_2262E_cp_0 = Main.dust[num837];
																			expr_2262E_cp_0.position.X = expr_2262E_cp_0.position.X + 6f;
																			Dust expr_2264E_cp_0 = Main.dust[num837];
																			expr_2264E_cp_0.position.Y = expr_2264E_cp_0.position.Y - 2f;
																			num836++;
																		}
																		return;
																	}
																	if (this.aiStyle == 88)
																	{
																		if (this.type == 465)
																		{
																			if (this.localAI[1] == 0f)
																			{
																				Main.PlaySound(SoundID.Item121, this.position);
																				this.localAI[1] = 1f;
																			}
																			if (this.ai[0] < 180f)
																			{
																				this.alpha -= 5;
																				if (this.alpha < 0)
																				{
																					this.alpha = 0;
																				}
																			}
																			else
																			{
																				this.alpha += 5;
																				if (this.alpha > 255)
																				{
																					this.alpha = 255;
																					this.Kill();
																					return;
																				}
																			}
																			this.ai[0] += 1f;
																			if (this.ai[0] % 30f == 0f && this.ai[0] < 180f && Main.netMode != 1)
																			{
																				int[] array4 = new int[5];
																				Vector2[] array5 = new Vector2[5];
																				int num838 = 0;
																				float num839 = 2000f;
																				for (int num840 = 0; num840 < 255; num840++)
																				{
																					if (Main.player[num840].active && !Main.player[num840].dead)
																					{
																						Vector2 center9 = Main.player[num840].Center;
																						float num841 = Vector2.Distance(center9, base.Center);
																						if (num841 < num839 && Collision.CanHit(base.Center, 1, 1, center9, 1, 1))
																						{
																							array4[num838] = num840;
																							array5[num838] = center9;
																							if (++num838 >= array5.Length)
																							{
																								break;
																							}
																						}
																					}
																				}
																				for (int num842 = 0; num842 < num838; num842++)
																				{
																					Vector2 vector82 = array5[num842] - base.Center;
																					float ai = (float)Main.rand.Next(100);
																					Vector2 vector83 = Vector2.Normalize(vector82.RotatedByRandom(0.78539818525314331)) * 7f;
																					Projectile.NewProjectile(base.Center.X, base.Center.Y, vector83.X, vector83.Y, 466, this.damage, 0f, Main.myPlayer, vector82.ToRotation(), ai);
																				}
																			}
																			Lighting.AddLight(base.Center, 0.4f, 0.85f, 0.9f);
																			if (++this.frameCounter >= 4)
																			{
																				this.frameCounter = 0;
																				if (++this.frame >= Main.projFrames[this.type])
																				{
																					this.frame = 0;
																				}
																			}
																			if (this.alpha < 150 && this.ai[0] < 180f)
																			{
																				for (int num843 = 0; num843 < 1; num843++)
																				{
																					float num844 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																					if (num844 < -0.5f)
																					{
																						num844 = -0.5f;
																					}
																					if (num844 > 0.5f)
																					{
																						num844 = 0.5f;
																					}
																					Vector2 value47 = new Vector2((float)(-(float)this.width) * 0.2f * this.scale, 0f).RotatedBy((double)(num844 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																					int num845 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 226, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																					Main.dust[num845].position = base.Center + value47;
																					Main.dust[num845].velocity = Vector2.Normalize(Main.dust[num845].position - base.Center) * 2f;
																					Main.dust[num845].noGravity = true;
																				}
																				for (int num846 = 0; num846 < 1; num846++)
																				{
																					float num847 = (float)Main.rand.NextDouble() * 1f - 0.5f;
																					if (num847 < -0.5f)
																					{
																						num847 = -0.5f;
																					}
																					if (num847 > 0.5f)
																					{
																						num847 = 0.5f;
																					}
																					Vector2 value48 = new Vector2((float)(-(float)this.width) * 0.6f * this.scale, 0f).RotatedBy((double)(num847 * 6.28318548f), default(Vector2)).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
																					int num848 = Dust.NewDust(base.Center - Vector2.One * 5f, 10, 10, 226, -this.velocity.X / 3f, -this.velocity.Y / 3f, 150, Color.Transparent, 0.7f);
																					Main.dust[num848].velocity = Vector2.Zero;
																					Main.dust[num848].position = base.Center + value48;
																					Main.dust[num848].noGravity = true;
																				}
																				return;
																			}
																		}
																		else if (this.type == 466)
																		{
																			this.frameCounter++;
																			Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
																			if (this.velocity == Vector2.Zero)
																			{
																				if (this.frameCounter >= this.extraUpdates * 2)
																				{
																					this.frameCounter = 0;
																					bool flag35 = true;
																					for (int num849 = 1; num849 < this.oldPos.Length; num849++)
																					{
																						if (this.oldPos[num849] != this.oldPos[0])
																						{
																							flag35 = false;
																						}
																					}
																					if (flag35)
																					{
																						this.Kill();
																						return;
																					}
																				}
																				if (Main.rand.Next(this.extraUpdates) == 0)
																				{
																					for (int num850 = 0; num850 < 2; num850++)
																					{
																						float num851 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																						float num852 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																						Vector2 vector84 = new Vector2((float)Math.Cos((double)num851) * num852, (float)Math.Sin((double)num851) * num852);
																						int num853 = Dust.NewDust(base.Center, 0, 0, 226, vector84.X, vector84.Y, 0, default(Color), 1f);
																						Main.dust[num853].noGravity = true;
																						Main.dust[num853].scale = 1.2f;
																					}
																					if (Main.rand.Next(5) == 0)
																					{
																						Vector2 value49 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																						int num854 = Dust.NewDust(base.Center + value49 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																						Main.dust[num854].velocity *= 0.5f;
																						Main.dust[num854].velocity.Y = -Math.Abs(Main.dust[num854].velocity.Y);
																						return;
																					}
																				}
																			}
																			else if (this.frameCounter >= this.extraUpdates * 2)
																			{
																				this.frameCounter = 0;
																				float num855 = this.velocity.Length();
																				UnifiedRandom unifiedRandom = new UnifiedRandom((int)this.ai[1]);
																				int num856 = 0;
																				Vector2 spinningpoint2 = -Vector2.UnitY;
																				Vector2 vector85;
																				do
																				{
																					int num857 = unifiedRandom.Next();
																					this.ai[1] = (float)num857;
																					num857 %= 100;
																					float f = (float)num857 / 100f * 6.28318548f;
																					vector85 = f.ToRotationVector2();
																					if (vector85.Y > 0f)
																					{
																						vector85.Y *= -1f;
																					}
																					bool flag36 = false;
																					if (vector85.Y > -0.02f)
																					{
																						flag36 = true;
																					}
																					if (vector85.X * (float)(this.extraUpdates + 1) * 2f * num855 + this.localAI[0] > 40f)
																					{
																						flag36 = true;
																					}
																					if (vector85.X * (float)(this.extraUpdates + 1) * 2f * num855 + this.localAI[0] < -40f)
																					{
																						flag36 = true;
																					}
																					if (!flag36)
																					{
																						goto IL_230B7;
																					}
																				}
																				while (num856++ < 100);
																				this.velocity = Vector2.Zero;
																				this.localAI[1] = 1f;
																				goto IL_230BF;
																				IL_230B7:
																				spinningpoint2 = vector85;
																				IL_230BF:
																				if (this.velocity != Vector2.Zero)
																				{
																					this.localAI[0] += spinningpoint2.X * (float)(this.extraUpdates + 1) * 2f * num855;
																					this.velocity = spinningpoint2.RotatedBy((double)(this.ai[0] + 1.57079637f), default(Vector2)) * num855;
																					this.rotation = this.velocity.ToRotation() + 1.57079637f;
																					return;
																				}
																			}
																		}
																		else if (this.type == 580)
																		{
																			if (this.localAI[1] == 0f && this.ai[0] >= 900f)
																			{
																				this.ai[0] -= 1000f;
																				this.localAI[1] = -1f;
																			}
																			this.frameCounter++;
																			Lighting.AddLight(base.Center, 0.3f, 0.45f, 0.5f);
																			if (this.velocity == Vector2.Zero)
																			{
																				if (this.frameCounter >= this.extraUpdates * 2)
																				{
																					this.frameCounter = 0;
																					bool flag37 = true;
																					for (int num858 = 1; num858 < this.oldPos.Length; num858++)
																					{
																						if (this.oldPos[num858] != this.oldPos[0])
																						{
																							flag37 = false;
																						}
																					}
																					if (flag37)
																					{
																						this.Kill();
																						return;
																					}
																				}
																				if (Main.rand.Next(this.extraUpdates) == 0 && (this.velocity != Vector2.Zero || Main.rand.Next((this.localAI[1] == 2f) ? 2 : 6) == 0))
																				{
																					for (int num859 = 0; num859 < 2; num859++)
																					{
																						float num860 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
																						float num861 = (float)Main.rand.NextDouble() * 0.8f + 1f;
																						Vector2 vector86 = new Vector2((float)Math.Cos((double)num860) * num861, (float)Math.Sin((double)num860) * num861);
																						int num862 = Dust.NewDust(base.Center, 0, 0, 226, vector86.X, vector86.Y, 0, default(Color), 1f);
																						Main.dust[num862].noGravity = true;
																						Main.dust[num862].scale = 1.2f;
																					}
																					if (Main.rand.Next(5) == 0)
																					{
																						Vector2 value50 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
																						int num863 = Dust.NewDust(base.Center + value50 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
																						Main.dust[num863].velocity *= 0.5f;
																						Main.dust[num863].velocity.Y = -Math.Abs(Main.dust[num863].velocity.Y);
																						return;
																					}
																				}
																			}
																			else if (this.frameCounter >= this.extraUpdates * 2)
																			{
																				this.frameCounter = 0;
																				float num864 = this.velocity.Length();
																				UnifiedRandom unifiedRandom2 = new UnifiedRandom((int)this.ai[1]);
																				int num865 = 0;
																				Vector2 spinningpoint3 = -Vector2.UnitY;
																				Vector2 vector87;
																				do
																				{
																					int num866 = unifiedRandom2.Next();
																					this.ai[1] = (float)num866;
																					num866 %= 100;
																					float f2 = (float)num866 / 100f * 6.28318548f;
																					vector87 = f2.ToRotationVector2();
																					if (vector87.Y > 0f)
																					{
																						vector87.Y *= -1f;
																					}
																					bool flag38 = false;
																					if (vector87.Y > -0.02f)
																					{
																						flag38 = true;
																					}
																					if (vector87.X * (float)(this.extraUpdates + 1) * 2f * num864 + this.localAI[0] > 40f)
																					{
																						flag38 = true;
																					}
																					if (vector87.X * (float)(this.extraUpdates + 1) * 2f * num864 + this.localAI[0] < -40f)
																					{
																						flag38 = true;
																					}
																					if (!flag38)
																					{
																						goto IL_2361B;
																					}
																				}
																				while (num865++ < 100);
																				this.velocity = Vector2.Zero;
																				if (this.localAI[1] < 1f)
																				{
																					this.localAI[1] += 2f;
																					goto IL_23623;
																				}
																				goto IL_23623;
																				IL_2361B:
																				spinningpoint3 = vector87;
																				IL_23623:
																				if (this.velocity != Vector2.Zero)
																				{
																					this.localAI[0] += spinningpoint3.X * (float)(this.extraUpdates + 1) * 2f * num864;
																					this.velocity = spinningpoint3.RotatedBy((double)(this.ai[0] + 1.57079637f), default(Vector2)) * num864;
																					this.rotation = this.velocity.ToRotation() + 1.57079637f;
																					if (Main.rand.Next(4) == 0 && Main.netMode != 1 && this.localAI[1] == 0f)
																					{
																						float num867 = (float)Main.rand.Next(-3, 4) * 1.04719758f / 3f;
																						Vector2 vector88 = this.ai[0].ToRotationVector2().RotatedBy((double)num867, default(Vector2)) * this.velocity.Length();
																						if (!Collision.CanHitLine(base.Center, 0, 0, base.Center + vector88 * 50f, 0, 0))
																						{
																							Projectile.NewProjectile(base.Center.X - vector88.X, base.Center.Y - vector88.Y, vector88.X, vector88.Y, this.type, this.damage, this.knockBack, this.owner, vector88.ToRotation() + 1000f, this.ai[1]);
																							return;
																						}
																					}
																				}
																			}
																		}
																	}
																	else if (this.aiStyle == 89)
																	{
																		if (this.ai[1] == -1f)
																		{
																			this.alpha += 12;
																		}
																		else if (this.ai[0] < 300f)
																		{
																			this.alpha -= 5;
																		}
																		else
																		{
																			this.alpha += 12;
																		}
																		if (this.alpha < 0)
																		{
																			this.alpha = 0;
																		}
																		if (this.alpha > 255)
																		{
																			this.alpha = 255;
																		}
																		this.scale = 1f - (float)this.alpha / 255f;
																		this.scale *= 0.6f;
																		this.rotation += 0.0149599658f;
																		if (this.localAI[1] == 0f)
																		{
																			this.localAI[1] = 1f;
																			Main.PlaySound(SoundID.Item123, this.position);
																		}
																		if (this.alpha == 0)
																		{
																			for (int num868 = 0; num868 < 2; num868++)
																			{
																				float num869 = (float)Main.rand.Next(2, 4);
																				float num870 = this.scale;
																				if (num868 == 1)
																				{
																					num870 *= 0.42f;
																					num869 *= -0.75f;
																				}
																				Vector2 value51 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																				value51.Normalize();
																				int num871 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 2f);
																				Main.dust[num871].noGravity = true;
																				Main.dust[num871].noLight = true;
																				Main.dust[num871].position = base.Center + value51 * 204f * num870;
																				if (Main.rand.Next(8) == 0)
																				{
																					Main.dust[num871].velocity = value51 * -num869 * 2f;
																					Main.dust[num871].scale += 0.5f;
																				}
																				else
																				{
																					Main.dust[num871].velocity = value51 * -num869;
																				}
																			}
																		}
																		this.ai[0] += 1f;
																		if (this.ai[0] >= 60f)
																		{
																			int arg_23AB5_0 = (int)(this.ai[0] - 0f) / 60;
																			for (int num872 = 0; num872 < 1; num872++)
																			{
																				float scaleFactor8 = (float)Main.rand.Next(1, 3);
																				Vector2 value52 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																				value52.Normalize();
																				int num873 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 2f);
																				Main.dust[num873].noGravity = true;
																				Main.dust[num873].noLight = true;
																				Main.dust[num873].position = base.Center;
																				if (Main.rand.Next(2) == 0)
																				{
																					Main.dust[num873].velocity = value52 * scaleFactor8 * 2f;
																					Main.dust[num873].scale += 0.5f;
																				}
																				else
																				{
																					Main.dust[num873].velocity = value52 * scaleFactor8;
																				}
																				Main.dust[num873].fadeIn = 2f;
																			}
																		}
																		if (this.ai[0] == 300f && this.ai[1] != -1f && Main.netMode != 1)
																		{
																			if (!NPC.AnyNPCs(454))
																			{
																				this.ai[1] = (float)NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 454, 0, 0f, 0f, 0f, 0f, 255);
																			}
																			else
																			{
																				this.ai[1] = (float)NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 521, 0, 0f, 0f, 0f, 0f, 255);
																			}
																		}
																		else if (this.ai[0] == 320f)
																		{
																			this.Kill();
																			return;
																		}
																		bool flag39 = false;
																		if (this.ai[1] == -1f)
																		{
																			if (this.alpha == 255)
																			{
																				flag39 = true;
																			}
																		}
																		else
																		{
																			flag39 = (this.ai[1] < 0f || !Main.npc[(int)this.ai[1]].active);
																			if ((flag39 || Main.npc[(int)this.ai[1]].type != 439) && (flag39 || Main.npc[(int)this.ai[1]].type != 454) && (flag39 || Main.npc[(int)this.ai[1]].type != 521))
																			{
																				flag39 = true;
																			}
																		}
																		if (flag39)
																		{
																			this.Kill();
																			return;
																		}
																		Lighting.AddLight(base.Center, 1.1f, 0.9f, 0.4f);
																		return;
																	}
																	else if (this.aiStyle == 90)
																	{
																		if (Main.player[this.owner].dead)
																		{
																			this.Kill();
																		}
																		if (Main.myPlayer == this.owner && Main.player[this.owner].magicLantern)
																		{
																			this.timeLeft = 2;
																		}
																		if (this.tileCollide)
																		{
																			if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.owner].Center, 1, 1))
																			{
																				this.tileCollide = false;
																			}
																			else if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHitLine(this.position, this.width, this.height, Main.player[this.owner].Center, 1, 1))
																			{
																				this.tileCollide = true;
																			}
																		}
																		this.direction = Main.player[this.owner].direction;
																		this.spriteDirection = this.direction;
																		Lighting.AddLight(this.position, 0.35f, 0.35f, 0.1f);
																		this.localAI[0] += 1f;
																		if (this.localAI[0] >= 10f)
																		{
																			this.localAI[0] = 0f;
																			int num874 = 17;
																			if ((base.Center - Main.player[Main.myPlayer].Center).Length() < (float)(Main.screenWidth + num874 * 16))
																			{
																				int num875 = (int)base.Center.X / 16;
																				int num876 = (int)base.Center.Y / 16;
																				for (int num877 = num875 - num874; num877 <= num875 + num874; num877++)
																				{
																					for (int num878 = num876 - num874; num878 <= num876 + num874; num878++)
																					{
																						if (Main.rand.Next(4) == 0)
																						{
																							Vector2 vector89 = new Vector2((float)(num875 - num877), (float)(num876 - num878));
																							if (vector89.Length() < (float)num874 && num877 > 0 && num877 < Main.maxTilesX - 1 && num878 > 0 && num878 < Main.maxTilesY - 1 && Main.tile[num877, num878] != null && Main.tile[num877, num878].active())
																							{
																								bool flag40 = false;
																								if (Main.tile[num877, num878].type == 185 && Main.tile[num877, num878].frameY == 18)
																								{
																									if (Main.tile[num877, num878].frameX >= 576 && Main.tile[num877, num878].frameX <= 882)
																									{
																										flag40 = true;
																									}
																								}
																								else if (Main.tile[num877, num878].type == 186 && Main.tile[num877, num878].frameX >= 864 && Main.tile[num877, num878].frameX <= 1170)
																								{
																									flag40 = true;
																								}
																								if (flag40 || Main.tileSpelunker[(int)Main.tile[num877, num878].type] || (Main.tileAlch[(int)Main.tile[num877, num878].type] && Main.tile[num877, num878].type != 82))
																								{
																									int num879 = Dust.NewDust(new Vector2((float)(num877 * 16), (float)(num878 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
																									Main.dust[num879].fadeIn = 0.75f;
																									Main.dust[num879].velocity *= 0.1f;
																									Main.dust[num879].noLight = true;
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																		Vector2 vector90 = Main.player[this.owner].Center - base.Center;
																		vector90.X += (float)(40 * this.direction);
																		vector90.Y -= 40f;
																		float num880 = vector90.Length();
																		if (num880 > 1000f)
																		{
																			base.Center = Main.player[this.owner].Center;
																		}
																		float num881 = 3f;
																		float num882 = 4f;
																		if (num880 > 200f)
																		{
																			num882 += (num880 - 200f) * 0.1f;
																			this.tileCollide = false;
																		}
																		if (num880 < num882)
																		{
																			this.velocity *= 0.25f;
																			num882 = num880;
																		}
																		if (vector90.X != 0f || vector90.Y != 0f)
																		{
																			vector90.Normalize();
																			vector90 *= num882;
																		}
																		this.velocity = (this.velocity * (num881 - 1f) + vector90) / num881;
																		if (this.velocity.Length() > 6f)
																		{
																			float num883 = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
																			if ((double)Math.Abs(this.rotation - num883) >= 3.14)
																			{
																				if (num883 < this.rotation)
																				{
																					this.rotation -= 6.28f;
																				}
																				else
																				{
																					this.rotation += 6.28f;
																				}
																			}
																			this.rotation = (this.rotation * 4f + num883) / 5f;
																			this.frameCounter++;
																			if (this.frameCounter > 4)
																			{
																				this.frameCounter = 0;
																				this.frame++;
																				if (this.frame > 7)
																				{
																					this.frame = 4;
																				}
																			}
																			if (this.frame < 4)
																			{
																				this.frame = 7;
																				return;
																			}
																		}
																		else
																		{
																			if ((double)this.rotation > 3.14)
																			{
																				this.rotation -= 6.28f;
																			}
																			if ((double)this.rotation > -0.01 && (double)this.rotation < 0.01)
																			{
																				this.rotation = 0f;
																			}
																			else
																			{
																				this.rotation *= 0.9f;
																			}
																			this.frameCounter++;
																			if (this.frameCounter > 6)
																			{
																				this.frameCounter = 0;
																				this.frame++;
																				if (this.frame > 3)
																				{
																					this.frame = 0;
																					return;
																				}
																			}
																		}
																	}
																	else if (this.aiStyle == 91)
																	{
																		Vector2 center10 = base.Center;
																		this.scale = 1f - this.localAI[0];
																		this.width = (int)(20f * this.scale);
																		this.height = this.width;
																		this.position.X = center10.X - (float)(this.width / 2);
																		this.position.Y = center10.Y - (float)(this.height / 2);
																		if ((double)this.localAI[0] < 0.1)
																		{
																			this.localAI[0] += 0.01f;
																		}
																		else
																		{
																			this.localAI[0] += 0.025f;
																		}
																		if (this.localAI[0] >= 0.95f)
																		{
																			this.Kill();
																		}
																		this.velocity.X = this.velocity.X + this.ai[0] * 1.5f;
																		this.velocity.Y = this.velocity.Y + this.ai[1] * 1.5f;
																		if (this.velocity.Length() > 16f)
																		{
																			this.velocity.Normalize();
																			this.velocity *= 16f;
																		}
																		this.ai[0] *= 1.05f;
																		this.ai[1] *= 1.05f;
																		if (this.scale < 1f)
																		{
																			int num884 = 0;
																			while ((float)num884 < this.scale * 10f)
																			{
																				int num885 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.1f);
																				Main.dust[num885].position = (Main.dust[num885].position + base.Center) / 2f;
																				Main.dust[num885].noGravity = true;
																				Main.dust[num885].velocity *= 0.1f;
																				Main.dust[num885].velocity -= this.velocity * (1.3f - this.scale);
																				Main.dust[num885].fadeIn = (float)(100 + this.owner);
																				Main.dust[num885].scale += this.scale * 0.75f;
																				num884++;
																			}
																			return;
																		}
																	}
																	else
																	{
																		if (this.aiStyle == 92)
																		{
																			this.tileCollide = false;
																			this.ai[1] += 1f;
																			if (this.ai[1] > 60f)
																			{
																				this.ai[0] += 10f;
																			}
																			if (this.ai[0] > 255f)
																			{
																				this.Kill();
																				this.ai[0] = 255f;
																			}
																			this.alpha = (int)(100.0 + (double)this.ai[0] * 0.7);
																			this.rotation += this.velocity.X * 0.1f;
																			this.rotation += (float)this.direction * 0.003f;
																			this.velocity *= 0.96f;
																			Rectangle rectangle5 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
																			for (int num886 = 0; num886 < 1000; num886++)
																			{
																				if (num886 != this.whoAmI && Main.projectile[num886].active && Main.projectile[num886].type >= 511 && Main.projectile[num886].type <= 513)
																				{
																					Rectangle value53 = new Rectangle((int)Main.projectile[num886].position.X, (int)Main.projectile[num886].position.Y, Main.projectile[num886].width, Main.projectile[num886].height);
																					if (rectangle5.Intersects(value53))
																					{
																						Vector2 vector91 = Main.projectile[num886].Center - base.Center;
																						if (vector91.X == 0f && vector91.Y == 0f)
																						{
																							if (num886 < this.whoAmI)
																							{
																								vector91.X = -1f;
																								vector91.Y = 1f;
																							}
																							else
																							{
																								vector91.X = 1f;
																								vector91.Y = -1f;
																							}
																						}
																						vector91.Normalize();
																						vector91 *= 0.005f;
																						this.velocity -= vector91;
																						Main.projectile[num886].velocity += vector91;
																					}
																				}
																			}
																			return;
																		}
																		if (this.aiStyle == 93)
																		{
																			if (this.alpha > 0)
																			{
																				this.alpha -= 25;
																				if (this.alpha <= 0)
																				{
																					this.alpha = 0;
																				}
																			}
																			if (this.velocity.Y > 18f)
																			{
																				this.velocity.Y = 18f;
																			}
																			if (this.ai[0] == 0f)
																			{
																				this.ai[1] += 1f;
																				if (this.ai[1] > 20f)
																				{
																					this.velocity.Y = this.velocity.Y + 0.1f;
																					this.velocity.X = this.velocity.X * 0.992f;
																				}
																				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
																				return;
																			}
																			this.tileCollide = false;
																			if (this.ai[0] == 1f)
																			{
																				this.tileCollide = false;
																				this.velocity *= 0.6f;
																			}
																			else
																			{
																				this.tileCollide = false;
																				int num887 = (int)(-(int)this.ai[0]);
																				num887--;
																				this.position = Main.npc[num887].Center - this.velocity;
																				this.position.X = this.position.X - (float)(this.width / 2);
																				this.position.Y = this.position.Y - (float)(this.height / 2);
																				if (!Main.npc[num887].active || Main.npc[num887].life < 0)
																				{
																					this.tileCollide = true;
																					this.ai[0] = 0f;
																					this.ai[1] = 20f;
																					this.velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
																					this.velocity.Normalize();
																					this.velocity *= 6f;
																					this.netUpdate = true;
																				}
																				else if (this.velocity.Length() > (float)((Main.npc[num887].width + Main.npc[num887].height) / 3))
																				{
																					this.velocity *= 0.99f;
																				}
																			}
																			if (this.ai[0] != 0f)
																			{
																				this.ai[1] += 1f;
																				if (this.ai[1] > 90f)
																				{
																					this.Kill();
																					return;
																				}
																			}
																		}
																		else
																		{
																			if (this.aiStyle == 94)
																			{
																				if (++this.frameCounter >= 4)
																				{
																					this.frameCounter = 0;
																					if (++this.frame >= Main.projFrames[this.type])
																					{
																						this.frame = 0;
																					}
																				}
																				this.ai[0] += 1f;
																				if (this.ai[0] <= 40f)
																				{
																					this.alpha -= 5;
																					if (this.alpha < 0)
																					{
																						this.alpha = 0;
																					}
																					this.velocity *= 0.85f;
																					if (this.ai[0] == 40f)
																					{
																						this.netUpdate = true;
																						switch (Main.rand.Next(3))
																						{
																						case 0:
																							this.ai[1] = 10f;
																							break;
																						case 1:
																							this.ai[1] = 15f;
																							break;
																						case 2:
																							this.ai[1] = 30f;
																							break;
																						}
																					}
																				}
																				else if (this.ai[0] <= 60f)
																				{
																					this.velocity = Vector2.Zero;
																					if (this.ai[0] == 60f)
																					{
																						this.netUpdate = true;
																					}
																				}
																				else if (this.ai[0] <= 210f)
																				{
																					if (Main.netMode != 1 && (this.localAI[0] += 1f) >= this.ai[1])
																					{
																						this.localAI[0] = 0f;
																						int num888 = Item.NewItem((int)base.Center.X, (int)base.Center.Y, 0, 0, 73, 1, false, 0, false, false);
																						Main.item[num888].velocity = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * new Vector2(3f, 2f) * (Main.rand.NextFloat() * 0.5f + 0.5f) - Vector2.UnitY * 1f;
																					}
																					if (this.ai[0] == 210f)
																					{
																						this.netUpdate = true;
																					}
																				}
																				else
																				{
																					this.scale -= 0.0333333351f;
																					this.alpha += 15;
																					if (this.ai[0] == 239f)
																					{
																						this.netUpdate = true;
																					}
																					if (this.ai[0] == 240f)
																					{
																						this.Kill();
																					}
																				}
																				if (this.alpha < 90 && Main.rand.Next(3) == 0)
																				{
																					Vector2 vector92 = new Vector2((float)this.width, (float)this.height) * this.scale * 0.85f;
																					vector92 /= 2f;
																					Vector2 value54 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * vector92;
																					int num889 = Dust.NewDust(base.Center + value54, 0, 0, 246, 0f, 0f, 0, default(Color), 1f);
																					Main.dust[num889].position = base.Center + value54;
																					Main.dust[num889].velocity = Vector2.Zero;
																				}
																				float num890 = 0.8f;
																				float num891 = 0.709803939f;
																				float num892 = 0.282352954f;
																				Lighting.AddLight(base.Center, num890 * 0.3f, num891 * 0.3f, num892 * 0.3f);
																				return;
																			}
																			if (this.aiStyle == 95)
																			{
																				if (this.localAI[0] > 2f)
																				{
																					this.alpha -= 20;
																					if (this.alpha < 100)
																					{
																						this.alpha = 100;
																					}
																				}
																				else
																				{
																					this.localAI[0] += 1f;
																				}
																				if (this.ai[0] > 30f)
																				{
																					if (this.velocity.Y > -8f)
																					{
																						this.velocity.Y = this.velocity.Y - 0.05f;
																					}
																					this.velocity.X = this.velocity.X * 0.98f;
																				}
																				else
																				{
																					this.ai[0] += 1f;
																				}
																				this.rotation = this.velocity.X * 0.1f;
																				if (this.wet)
																				{
																					if (this.velocity.Y > 0f)
																					{
																						this.velocity.Y = this.velocity.Y * 0.98f;
																					}
																					if (this.velocity.Y > -8f)
																					{
																						this.velocity.Y = this.velocity.Y - 0.2f;
																					}
																					this.velocity.X = this.velocity.X * 0.94f;
																					return;
																				}
																			}
																			else
																			{
																				if (this.aiStyle == 96)
																				{
																					this.ai[0] += 0.6f;
																					if (this.ai[0] > 500f)
																					{
																						this.Kill();
																					}
																					for (int num893 = 0; num893 < 2; num893++)
																					{
																						if (Main.rand.Next(3) != 0)
																						{
																							int num894 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 170, 0f, 0f, 100, default(Color), 1f);
																							Main.dust[num894].position = (Main.dust[num894].position + base.Center) / 2f;
																							Main.dust[num894].noGravity = true;
																							Main.dust[num894].velocity *= 0.1f;
																							if (num893 == 1)
																							{
																								Main.dust[num894].position += this.velocity / 2f;
																							}
																							float num895 = (800f - this.ai[0]) / 800f;
																							Main.dust[num894].scale *= num895 + 0.1f;
																						}
																					}
																					this.velocity.Y = this.velocity.Y + 0.008f;
																					return;
																				}
																				if (this.aiStyle == 97)
																				{
																					this.frameCounter++;
																					float num896 = 4f;
																					if ((float)this.frameCounter < num896 * 1f)
																					{
																						this.frame = 0;
																					}
																					else if ((float)this.frameCounter < num896 * 2f)
																					{
																						this.frame = 1;
																					}
																					else if ((float)this.frameCounter < num896 * 3f)
																					{
																						this.frame = 2;
																					}
																					else if ((float)this.frameCounter < num896 * 4f)
																					{
																						this.frame = 3;
																					}
																					else if ((float)this.frameCounter < num896 * 5f)
																					{
																						this.frame = 4;
																					}
																					else if ((float)this.frameCounter < num896 * 6f)
																					{
																						this.frame = 3;
																					}
																					else if ((float)this.frameCounter < num896 * 7f)
																					{
																						this.frame = 2;
																					}
																					else if ((float)this.frameCounter < num896 * 8f)
																					{
																						this.frame = 1;
																					}
																					else
																					{
																						this.frameCounter = 0;
																						this.frame = 0;
																					}
																					if (this.owner == Main.myPlayer)
																					{
																						for (int num897 = 0; num897 < 1000; num897++)
																						{
																							if (num897 != this.whoAmI && Main.projectile[num897].active && Main.projectile[num897].owner == this.owner && Main.projectile[num897].type == this.type)
																							{
																								if (this.timeLeft >= Main.projectile[num897].timeLeft)
																								{
																									Main.projectile[num897].Kill();
																								}
																								else
																								{
																									this.Kill();
																								}
																							}
																						}
																					}
																					if (this.ai[0] == 0f)
																					{
																						if ((double)this.velocity.Length() < 0.1)
																						{
																							this.velocity.X = 0f;
																							this.velocity.Y = 0f;
																							this.ai[0] = 1f;
																							this.ai[1] = 45f;
																							return;
																						}
																						this.velocity *= 0.94f;
																						if (this.velocity.X < 0f)
																						{
																							this.direction = -1;
																						}
																						else
																						{
																							this.direction = 1;
																						}
																						this.spriteDirection = this.direction;
																						return;
																					}
																					else
																					{
																						if (Main.player[this.owner].Center.X < base.Center.X)
																						{
																							this.direction = -1;
																						}
																						else
																						{
																							this.direction = 1;
																						}
																						this.spriteDirection = this.direction;
																						this.ai[1] += 1f;
																						float num898 = 0.005f;
																						if (this.ai[1] > 0f)
																						{
																							this.velocity.Y = this.velocity.Y - num898;
																						}
																						else
																						{
																							this.velocity.Y = this.velocity.Y + num898;
																						}
																						if (this.ai[1] >= 90f)
																						{
																							this.ai[1] *= -1f;
																							return;
																						}
																					}
																				}
																				else if (this.aiStyle == 98)
																				{
																					Vector2 value55 = new Vector2(this.ai[0], this.ai[1]);
																					Vector2 vector93 = value55 - base.Center;
																					if (vector93.Length() < this.velocity.Length())
																					{
																						this.Kill();
																						return;
																					}
																					vector93.Normalize();
																					vector93 *= 15f;
																					this.velocity = Vector2.Lerp(this.velocity, vector93, 0.1f);
																					for (int num899 = 0; num899 < 2; num899++)
																					{
																						int num900 = Dust.NewDust(base.Center, 0, 0, 228, 0f, 0f, 100, default(Color), 1f);
																						Main.dust[num900].noGravity = true;
																						Main.dust[num900].position += new Vector2(4f);
																						Main.dust[num900].scale += Main.rand.NextFloat() * 1f;
																					}
																					return;
																				}
																				else
																				{
																					if (this.aiStyle == 99 && this.type >= 556 && this.type <= 561)
																					{
																						this.AI_099_1();
																						return;
																					}
																					if (this.aiStyle == 99)
																					{
																						this.AI_099_2();
																						return;
																					}
																					if (this.aiStyle == 100)
																					{
																						Player player5 = Main.player[this.owner];
																						Vector2 zero2 = Vector2.Zero;
																						if (this.type == 535)
																						{
																							zero2.X = (float)player5.direction * 6f;
																							zero2.Y = player5.gravDir * -14f;
																							this.ai[0] += 1f;
																							int num901 = 0;
																							if (this.ai[0] >= 60f)
																							{
																								num901++;
																							}
																							if (this.ai[0] >= 180f)
																							{
																								num901++;
																							}
																							if (this.ai[0] >= 240f)
																							{
																								this.Kill();
																								return;
																							}
																							bool flag41 = false;
																							if (this.ai[0] == 60f || this.ai[0] == 180f)
																							{
																								flag41 = true;
																							}
																							bool flag42 = this.ai[0] >= 180f;
																							if (flag42)
																							{
																								if (this.frame < 8)
																								{
																									this.frame = 8;
																								}
																								if (this.frame >= 12)
																								{
																									this.frame = 8;
																								}
																								this.frameCounter++;
																								if (++this.frameCounter >= 5)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 12)
																									{
																										this.frame = 8;
																									}
																								}
																							}
																							else if (++this.frameCounter >= 5)
																							{
																								this.frameCounter = 0;
																								if (++this.frame >= 8)
																								{
																									this.frame = 0;
																								}
																							}
																							Vector2 center11 = player5.Center;
																							Vector2 vector94 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - center11;
																							if (player5.gravDir == -1f)
																							{
																								vector94.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - center11.Y;
																							}
																							Vector2 velocity2 = new Vector2((float)Math.Sign((vector94.X == 0f) ? ((float)player5.direction) : vector94.X), 0f);
																							if (velocity2.X != this.velocity.X || velocity2.Y != this.velocity.Y)
																							{
																								this.netUpdate = true;
																							}
																							this.velocity = velocity2;
																							if (this.soundDelay <= 0 && !flag42)
																							{
																								this.soundDelay = 10;
																								this.soundDelay *= 2;
																								if (this.ai[0] != 1f)
																								{
																									Main.PlaySound(SoundID.Item15, this.position);
																								}
																							}
																							if (this.ai[0] == 181f)
																							{
																								Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 17, 1f, 0f);
																							}
																							if (this.ai[0] > 10f && !flag42)
																							{
																								Vector2 vector95 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
																								float scaleFactor9 = MathHelper.Lerp(30f, 10f, (this.ai[0] - 10f) / 180f);
																								float num902 = Main.rand.NextFloat() * 6.28318548f;
																								for (float num903 = 0f; num903 < 1f; num903 += 1f)
																								{
																									Vector2 value56 = Vector2.UnitY.RotatedBy((double)(num903 / 1f * 6.28318548f + num902), default(Vector2));
																									Dust dust10 = Main.dust[Dust.NewDust(vector95, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
																									dust10.position = vector95 + value56 * scaleFactor9;
																									dust10.noGravity = true;
																									dust10.customData = player5;
																									dust10.velocity = value56 * -2f;
																								}
																							}
																							if (this.ai[0] > 180f && this.ai[0] <= 182f)
																							{
																								Vector2 vector96 = base.Center + new Vector2((float)(player5.direction * 2), player5.gravDir * 5f);
																								float scaleFactor10 = MathHelper.Lerp(20f, 30f, (this.ai[0] - 180f) / 182f);
																								Main.rand.NextFloat();
																								for (float num904 = 0f; num904 < 10f; num904 += 1f)
																								{
																									Vector2 value57 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (Main.rand.NextFloat() * 0.5f + 0.5f);
																									Dust dust11 = Main.dust[Dust.NewDust(vector96, 0, 0, 228, 0f, 0f, 0, default(Color), 1f)];
																									dust11.position = vector96 + value57 * scaleFactor10;
																									dust11.noGravity = true;
																									dust11.customData = player5;
																									dust11.velocity = value57 * 4f;
																									dust11.scale = 0.5f + Main.rand.NextFloat();
																								}
																							}
																							if (Main.myPlayer == this.owner)
																							{
																								bool flag43 = !flag41 || player5.CheckMana(player5.inventory[player5.selectedItem].mana, true, false);
																								bool flag44 = player5.channel && flag43;
																								if ((!flag42 && !flag44) || this.ai[0] == 180f)
																								{
																									Vector2 vector97 = player5.Center + new Vector2((float)(player5.direction * 4), player5.gravDir * 2f);
																									int num905 = this.damage * (1 + num901);
																									vector97 = base.Center;
																									int num906 = 0;
																									float num907 = 0f;
																									for (int num908 = 0; num908 < 200; num908++)
																									{
																										NPC nPC9 = Main.npc[num908];
																										if (nPC9.active && base.Distance(nPC9.Center) < 500f && nPC9.CanBeChasedBy(this, false) && Collision.CanHitLine(nPC9.position, nPC9.width, nPC9.height, vector97, 0, 0))
																										{
																											Vector2 v4 = nPC9.Center - vector97;
																											num907 += v4.ToRotation();
																											num906++;
																											int num909 = Projectile.NewProjectile(vector97.X, vector97.Y, v4.X, v4.Y, 536, 0, 0f, this.owner, (float)this.whoAmI, 0f);
																											Main.projectile[num909].Center = nPC9.Center;
																											Main.projectile[num909].damage = num905;
																											Main.projectile[num909].Damage();
																											Main.projectile[num909].damage = 0;
																											Main.projectile[num909].Center = vector97;
																											this.ai[0] = 180f;
																										}
																									}
																									if (num906 != 0)
																									{
																										num907 /= (float)num906;
																									}
																									else
																									{
																										num907 = ((player5.direction == 1) ? 0f : 3.14159274f);
																									}
																									for (int num910 = 0; num910 < 6; num910++)
																									{
																										Vector2 vector98 = Vector2.Zero;
																										if (Main.rand.Next(4) != 0)
																										{
																											vector98 = Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)num907, default(Vector2)) * new Vector2(200f, 50f) * (Main.rand.NextFloat() * 0.7f + 0.3f);
																										}
																										else
																										{
																											vector98 = Vector2.UnitX.RotatedByRandom(6.2831854820251465) * new Vector2(200f, 50f) * (Main.rand.NextFloat() * 0.7f + 0.3f);
																										}
																										Projectile.NewProjectile(vector97.X, vector97.Y, vector98.X, vector98.Y, 536, 0, 0f, this.owner, (float)this.whoAmI, 0f);
																									}
																									this.ai[0] = 180f;
																									this.netUpdate = true;
																								}
																							}
																							Lighting.AddLight(base.Center, 0.9f, 0.75f, 0.1f);
																						}
																						this.rotation = ((player5.gravDir == 1f) ? 0f : 3.14159274f);
																						this.spriteDirection = this.direction;
																						this.timeLeft = 2;
																						Vector2 vector99 = Main.OffsetsPlayerOnhand[player5.bodyFrame.Y / 56] * 2f;
																						if (player5.direction != 1)
																						{
																							vector99.X = (float)player5.bodyFrame.Width - vector99.X;
																						}
																						vector99 -= (player5.bodyFrame.Size() - new Vector2((float)player5.width, 42f)) / 2f;
																						base.Center = (player5.position + vector99 + zero2 - this.velocity).Floor();
																						player5.ChangeDir(this.direction);
																						player5.heldProj = this.whoAmI;
																						player5.itemTime = 2;
																						player5.itemAnimation = 2;
																						return;
																					}
																					if (this.aiStyle == 101)
																					{
																						float num911 = 20f;
																						this.localAI[0] += 1f;
																						this.alpha = (int)MathHelper.Lerp(0f, 255f, this.localAI[0] / num911);
																						int num912 = (int)this.ai[0];
																						int num913 = -1;
																						int num914 = -1;
																						int num640 = this.type;
																						if (num640 != 536)
																						{
																							if (num640 == 591)
																							{
																								num914 = 1;
																							}
																						}
																						else
																						{
																							num913 = 535;
																							num914 = 0;
																						}
																						if (num914 == 1)
																						{
																							if (this.localAI[0] >= num911 || num912 < 0 || num912 > 255 || !Main.player[num912].active || Main.player[num912].dead)
																							{
																								this.Kill();
																								return;
																							}
																							if (this.type == 591)
																							{
																								base.Center = Mount.GetMinecartMechPoint(Main.player[num912], 20, -19) - this.velocity;
																								this.rotation = this.velocity.ToRotation() + 1.57079637f;
																								if (Math.Sign(this.velocity.X) != Math.Sign(Main.player[num912].velocity.X) && Main.player[num912].velocity.X != 0f)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else
																							{
																								base.Center = Main.player[num912].Center - this.velocity;
																							}
																						}
																						else if (num914 == 0)
																						{
																							if (this.localAI[0] >= num911 || num912 < 0 || num912 > 1000 || !Main.projectile[num912].active || Main.projectile[num912].type != num913)
																							{
																								this.Kill();
																								return;
																							}
																							base.Center = Main.projectile[num912].Center - this.velocity;
																						}
																						this.rotation = this.velocity.ToRotation() + 1.57079637f;
																						return;
																					}
																					if (this.aiStyle == 102)
																					{
																						int num915 = 0;
																						float num916 = 0f;
																						float x2 = 0f;
																						float y2 = 0f;
																						int num917 = -1;
																						int num918 = 0;
																						float num919 = 0f;
																						bool flag45 = true;
																						bool flag46 = false;
																						bool flag47 = false;
																						int num640 = this.type;
																						if (num640 != 539)
																						{
																							switch (num640)
																							{
																							case 573:
																								num915 = 424;
																								num916 = 90f;
																								num919 = 20f;
																								flag45 = false;
																								flag46 = true;
																								break;
																							case 574:
																								num915 = 420;
																								num916 = 180f;
																								x2 = 0.15f;
																								y2 = 0.075f;
																								num919 = 8f;
																								flag45 = false;
																								num917 = 576;
																								num918 = 65;
																								if (Main.expertMode)
																								{
																									num918 = 50;
																								}
																								flag47 = true;
																								break;
																							}
																						}
																						else
																						{
																							num915 = 407;
																							num916 = 210f;
																							x2 = 0.15f;
																							y2 = 0.075f;
																							num919 = 16f;
																						}
																						if (flag47)
																						{
																							int num920 = (int)this.ai[1];
																							if (!Main.npc[num920].active || Main.npc[num920].type != num915)
																							{
																								this.Kill();
																								return;
																							}
																							this.timeLeft = 2;
																						}
																						this.ai[0] += 1f;
																						if (this.ai[0] < num916)
																						{
																							bool flag48 = true;
																							int num921 = (int)this.ai[1];
																							if (Main.npc[num921].active && Main.npc[num921].type == num915)
																							{
																								if (!flag46 && Main.npc[num921].oldPos[1] != Vector2.Zero)
																								{
																									this.position += Main.npc[num921].position - Main.npc[num921].oldPos[1];
																								}
																							}
																							else
																							{
																								this.ai[0] = num916;
																								flag48 = false;
																							}
																							if (flag48 && !flag46)
																							{
																								this.velocity += new Vector2((float)Math.Sign(Main.npc[num921].Center.X - base.Center.X), (float)Math.Sign(Main.npc[num921].Center.Y - base.Center.Y)) * new Vector2(x2, y2);
																								if (this.velocity.Length() > 6f)
																								{
																									this.velocity *= 6f / this.velocity.Length();
																								}
																							}
																							if (this.type == 539)
																							{
																								if (Main.rand.Next(12) == 0)
																								{
																									int num922 = Dust.NewDust(base.Center, 8, 8, 180, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num922].position = base.Center;
																									Main.dust[num922].velocity *= 0.2f;
																									Main.dust[num922].noGravity = true;
																								}
																								if (++this.frameCounter >= 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								this.rotation = this.velocity.X * 0.1f;
																							}
																							if (this.type == 573)
																							{
																								if (Main.rand.Next(2) == 0)
																								{
																									int num923 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num923].position = base.Center;
																									Main.dust[num923].velocity = this.velocity;
																									Main.dust[num923].noGravity = true;
																									Main.dust[num923].scale = 1.5f;
																								}
																								this.alpha = 255;
																							}
																							if (this.type == 574)
																							{
																								if (Main.rand.Next(10) == 0)
																								{
																									int num924 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num924].position = base.Center;
																									Main.dust[num924].velocity = this.velocity;
																									Main.dust[num924].noGravity = true;
																									Main.dust[num924].scale = 1.5f;
																								}
																								if (flag48)
																								{
																									int target = Main.npc[num921].target;
																									float num925 = this.velocity.ToRotation();
																									if (Collision.CanHitLine(base.Center, 0, 0, Main.player[target].Center, 0, 0))
																									{
																										num925 = base.DirectionTo(Main.player[target].Center).ToRotation();
																									}
																									this.rotation = this.rotation.AngleLerp(num925 + 1.57079637f, 0.2f);
																								}
																								this.frame = 1;
																							}
																						}
																						if (this.ai[0] == num916)
																						{
																							bool flag49 = true;
																							int num926 = -1;
																							if (!flag45)
																							{
																								int num927 = (int)this.ai[1];
																								if (Main.npc[num927].active && Main.npc[num927].type == num915)
																								{
																									num926 = Main.npc[num927].target;
																								}
																								else
																								{
																									flag49 = false;
																								}
																							}
																							else
																							{
																								flag49 = false;
																							}
																							if (!flag49)
																							{
																								num926 = (int)Player.FindClosest(this.position, this.width, this.height);
																							}
																							Vector2 value58 = Main.player[num926].Center - base.Center;
																							value58.X += (float)Main.rand.Next(-50, 51);
																							value58.Y += (float)Main.rand.Next(-50, 51);
																							value58.X *= (float)Main.rand.Next(80, 121) * 0.01f;
																							value58.Y *= (float)Main.rand.Next(80, 121) * 0.01f;
																							Vector2 vector100 = Vector2.Normalize(value58);
																							if (vector100.HasNaNs())
																							{
																								vector100 = Vector2.UnitY;
																							}
																							if (num917 == -1)
																							{
																								this.velocity = vector100 * num919;
																								this.netUpdate = true;
																							}
																							else
																							{
																								if (Main.netMode != 1 && Collision.CanHitLine(base.Center, 0, 0, Main.player[num926].Center, 0, 0))
																								{
																									Projectile.NewProjectile(base.Center.X, base.Center.Y, vector100.X * num919, vector100.Y * num919, num917, num918, 1f, Main.myPlayer, 0f, 0f);
																								}
																								this.ai[0] = 0f;
																							}
																						}
																						if (this.ai[0] >= num916)
																						{
																							this.rotation = this.rotation.AngleLerp(this.velocity.ToRotation() + 1.57079637f, 0.4f);
																							if (this.type == 539)
																							{
																								if (++this.frameCounter >= 2)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								if (Main.rand.Next(2) == 0)
																								{
																									int num928 = Dust.NewDust(this.position, this.width, this.height, 180, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num928].scale += (float)Main.rand.Next(50) * 0.01f;
																									Main.dust[num928].noGravity = true;
																									Main.dust[num928].velocity *= 0.1f;
																									Main.dust[num928].fadeIn = Main.rand.NextFloat() * 1.5f;
																								}
																								if (Main.rand.Next(3) == 0)
																								{
																									int num929 = Dust.NewDust(this.position, this.width, this.height, 176, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num929].scale += 0.3f + (float)Main.rand.Next(50) * 0.01f;
																									Main.dust[num929].noGravity = true;
																									Main.dust[num929].velocity *= 0.1f;
																									Main.dust[num929].fadeIn = Main.rand.NextFloat() * 1.5f;
																								}
																							}
																							if (this.type == 573)
																							{
																								if (Main.rand.Next(4) == 0)
																								{
																									int num930 = Dust.NewDust(base.Center, 8, 8, 242, 0f, 0f, 0, default(Color), 1f);
																									Main.dust[num930].position = base.Center;
																									Main.dust[num930].velocity *= 0.2f;
																									Main.dust[num930].noGravity = true;
																									Main.dust[num930].scale = 1.5f;
																								}
																								this.alpha = 0;
																								return;
																							}
																						}
																					}
																					else if (this.aiStyle == 103)
																					{
																						this.scale = this.ai[1];
																						this.ai[0] += 1f;
																						if (this.ai[0] >= 30f)
																						{
																							this.alpha += 25;
																							if (this.alpha >= 250)
																							{
																								this.Kill();
																								return;
																							}
																						}
																						else if (this.ai[0] >= 0f)
																						{
																							this.alpha -= 25;
																							if (this.alpha < 0)
																							{
																								this.alpha = 0;
																								if (this.localAI[1] == 0f && Main.netMode != 1 && this.localAI[0] != 0f)
																								{
																									this.localAI[1] = 1f;
																									NPC.NewNPC((int)base.Center.X, (int)base.Bottom.Y, (int)this.localAI[0], 0, 0f, 0f, 0f, 0f, 255);
																									return;
																								}
																							}
																						}
																					}
																					else
																					{
																						if (this.aiStyle == 104)
																						{
																							if (this.ai[0] == 1f)
																							{
																								this.scale *= 0.995f;
																								this.alpha += 3;
																								if (this.alpha >= 250)
																								{
																									this.Kill();
																								}
																							}
																							else
																							{
																								this.scale *= 1.01f;
																								this.alpha -= 7;
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																									this.ai[0] = 1f;
																								}
																							}
																							this.frameCounter++;
																							if (this.frameCounter > 6)
																							{
																								this.frameCounter = 0;
																								this.frame++;
																								if (this.frame > 3)
																								{
																									this.frame = 0;
																								}
																							}
																							this.velocity.Y = this.velocity.Y - 0.03f;
																							this.velocity.X = this.velocity.X * 0.97f;
																							return;
																						}
																						if (this.aiStyle == 105)
																						{
																							float num931 = 1f - (float)this.alpha / 255f;
																							num931 *= this.scale;
																							Lighting.AddLight(base.Center, 0.2f * num931, 0.275f * num931, 0.075f * num931);
																							this.localAI[0] += 1f;
																							if (this.localAI[0] >= 90f)
																							{
																								this.localAI[0] *= -1f;
																							}
																							if (this.localAI[0] >= 0f)
																							{
																								this.scale += 0.003f;
																							}
																							else
																							{
																								this.scale -= 0.003f;
																							}
																							this.rotation += 0.0025f * this.scale;
																							float num932 = 1f;
																							float num933 = 1f;
																							if (this.identity % 6 == 0)
																							{
																								num933 *= -1f;
																							}
																							if (this.identity % 6 == 1)
																							{
																								num932 *= -1f;
																							}
																							if (this.identity % 6 == 2)
																							{
																								num933 *= -1f;
																								num932 *= -1f;
																							}
																							if (this.identity % 6 == 3)
																							{
																								num933 = 0f;
																							}
																							if (this.identity % 6 == 4)
																							{
																								num932 = 0f;
																							}
																							this.localAI[1] += 1f;
																							if (this.localAI[1] > 60f)
																							{
																								this.localAI[1] = -180f;
																							}
																							if (this.localAI[1] >= -60f)
																							{
																								this.velocity.X = this.velocity.X + 0.002f * num933;
																								this.velocity.Y = this.velocity.Y + 0.002f * num932;
																							}
																							else
																							{
																								this.velocity.X = this.velocity.X - 0.002f * num933;
																								this.velocity.Y = this.velocity.Y - 0.002f * num932;
																							}
																							this.ai[0] += 1f;
																							if (this.ai[0] > 5400f)
																							{
																								this.damage = 0;
																								this.ai[1] = 1f;
																								if (this.alpha < 255)
																								{
																									this.alpha += 5;
																									if (this.alpha > 255)
																									{
																										this.alpha = 255;
																									}
																								}
																								else if (this.owner == Main.myPlayer)
																								{
																									this.Kill();
																								}
																							}
																							else
																							{
																								float num934 = (base.Center - Main.player[this.owner].Center).Length() / 100f;
																								if (num934 > 4f)
																								{
																									num934 *= 1.1f;
																								}
																								if (num934 > 5f)
																								{
																									num934 *= 1.2f;
																								}
																								if (num934 > 6f)
																								{
																									num934 *= 1.3f;
																								}
																								if (num934 > 7f)
																								{
																									num934 *= 1.4f;
																								}
																								if (num934 > 8f)
																								{
																									num934 *= 1.5f;
																								}
																								if (num934 > 9f)
																								{
																									num934 *= 1.6f;
																								}
																								if (num934 > 10f)
																								{
																									num934 *= 1.7f;
																								}
																								if (!Main.player[this.owner].sporeSac)
																								{
																									num934 += 100f;
																								}
																								this.ai[0] += num934;
																								if (this.alpha > 50)
																								{
																									this.alpha -= 10;
																									if (this.alpha < 50)
																									{
																										this.alpha = 50;
																									}
																								}
																							}
																							bool flag50 = false;
																							Vector2 center12 = new Vector2(0f, 0f);
																							float num935 = 280f;
																							for (int num936 = 0; num936 < 200; num936++)
																							{
																								if (Main.npc[num936].CanBeChasedBy(this, false))
																								{
																									float num937 = Main.npc[num936].position.X + (float)(Main.npc[num936].width / 2);
																									float num938 = Main.npc[num936].position.Y + (float)(Main.npc[num936].height / 2);
																									float num939 = Math.Abs(this.position.X + (float)(this.width / 2) - num937) + Math.Abs(this.position.Y + (float)(this.height / 2) - num938);
																									if (num939 < num935)
																									{
																										num935 = num939;
																										center12 = Main.npc[num936].Center;
																										flag50 = true;
																									}
																								}
																							}
																							if (flag50)
																							{
																								Vector2 vector101 = center12 - base.Center;
																								vector101.Normalize();
																								vector101 *= 0.75f;
																								this.velocity = (this.velocity * 10f + vector101) / 11f;
																								return;
																							}
																							if ((double)this.velocity.Length() > 0.2)
																							{
																								this.velocity *= 0.98f;
																								return;
																							}
																						}
																						else if (this.aiStyle == 106)
																						{
																							this.rotation += this.velocity.X * 0.02f;
																							if (this.velocity.X < 0f)
																							{
																								this.rotation -= Math.Abs(this.velocity.Y) * 0.02f;
																							}
																							else
																							{
																								this.rotation += Math.Abs(this.velocity.Y) * 0.02f;
																							}
																							this.velocity *= 0.98f;
																							this.ai[0] += 1f;
																							if (this.ai[0] >= 60f)
																							{
																								if (this.alpha < 255)
																								{
																									this.alpha += 5;
																									if (this.alpha > 255)
																									{
																										this.alpha = 255;
																										return;
																									}
																								}
																								else if (this.owner == Main.myPlayer)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else if (this.alpha > 80)
																							{
																								this.alpha -= 30;
																								if (this.alpha < 80)
																								{
																									this.alpha = 80;
																									return;
																								}
																							}
																						}
																						else if (this.aiStyle == 107)
																						{
																							float num940 = 10f;
																							float scaleFactor11 = 5f;
																							float num941 = 40f;
																							if (this.type == 575)
																							{
																								if (this.timeLeft > 30 && this.alpha > 0)
																								{
																									this.alpha -= 25;
																								}
																								if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																								{
																									this.alpha = 128;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (++this.frameCounter > 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 4)
																									{
																										this.frame = 0;
																									}
																								}
																								Lighting.AddLight(base.Center, 0.5f, 0.1f, 0.3f);
																							}
																							else if (this.type == 596)
																							{
																								num940 = 10f;
																								scaleFactor11 = 7.5f;
																								if (this.timeLeft > 30 && this.alpha > 0)
																								{
																									this.alpha -= 25;
																								}
																								if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																								{
																									this.alpha = 128;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (++this.frameCounter > 4)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= 4)
																									{
																										this.frame = 0;
																									}
																								}
																								float num942 = 0.5f;
																								if (this.timeLeft < 120)
																								{
																									num942 = 1.1f;
																								}
																								if (this.timeLeft < 60)
																								{
																									num942 = 1.6f;
																								}
																								this.ai[1] += 1f;
																								float arg_27D0E_0 = this.ai[1] / 180f;
																								for (float num943 = 0f; num943 < 3f; num943 += 1f)
																								{
																									if (Main.rand.Next(3) != 0)
																									{
																										return;
																									}
																									Dust dust12 = Main.dust[Dust.NewDust(base.Center, 0, 0, 27, 0f, -2f, 0, default(Color), 1f)];
																									dust12.position = base.Center + Vector2.UnitY.RotatedBy((double)(num943 * 6.28318548f / 3f + this.ai[1]), default(Vector2)) * 10f;
																									dust12.noGravity = true;
																									dust12.velocity = base.DirectionFrom(dust12.position);
																									dust12.scale = num942;
																									dust12.fadeIn = 0.5f;
																									dust12.alpha = 200;
																								}
																								if (this.timeLeft < 4)
																								{
																									int num944 = 40;
																									if (Main.expertMode)
																									{
																										num944 = 30;
																									}
																									this.position = base.Center;
																									this.width = (this.height = 60);
																									base.Center = this.position;
																									this.damage = num944;
																									for (int num945 = 0; num945 < 10; num945++)
																									{
																										Dust dust12 = Main.dust[Dust.NewDust(this.position, this.width, this.height, Utils.SelectRandom<int>(Main.rand, new int[]
																										{
																											27,
																											6
																										}), 0f, -2f, 0, default(Color), 1f)];
																										dust12.noGravity = true;
																										if (dust12.position != base.Center)
																										{
																											dust12.velocity = base.DirectionTo(dust12.position) * 3f;
																										}
																									}
																								}
																							}
																							int num946 = (int)this.ai[0];
																							if (num946 >= 0 && Main.player[num946].active && !Main.player[num946].dead)
																							{
																								if (base.Distance(Main.player[num946].Center) > num941)
																								{
																									Vector2 vector102 = base.DirectionTo(Main.player[num946].Center);
																									if (vector102.HasNaNs())
																									{
																										vector102 = Vector2.UnitY;
																									}
																									this.velocity = (this.velocity * (num940 - 1f) + vector102 * scaleFactor11) / num940;
																									return;
																								}
																							}
																							else
																							{
																								if (this.timeLeft > 30)
																								{
																									this.timeLeft = 30;
																								}
																								if (this.ai[0] != -1f)
																								{
																									this.ai[0] = -1f;
																									this.netUpdate = true;
																									return;
																								}
																							}
																						}
																						else if (this.aiStyle == 108)
																						{
																							if (this.type == 578 && this.localAI[0] == 0f)
																							{
																								this.localAI[0] = 1f;
																								int num947 = (int)Player.FindClosest(base.Center, 0, 0);
																								Vector2 vector103 = Main.player[num947].Center - base.Center;
																								if (vector103 == Vector2.Zero)
																								{
																									vector103 = Vector2.UnitY;
																								}
																								this.ai[1] = vector103.ToRotation();
																								this.netUpdate = true;
																							}
																							this.ai[0] += 1f;
																							if (this.ai[0] <= 50f)
																							{
																								if (this.type == 579)
																								{
																									if (Main.rand.Next(4) == 0)
																									{
																										Vector2 vector104 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust13 = Main.dust[Dust.NewDust(base.Center - vector104 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																										dust13.noGravity = true;
																										dust13.position = base.Center - vector104 * (float)Main.rand.Next(10, 21);
																										dust13.velocity = vector104.RotatedBy(1.5707963705062866, default(Vector2)) * 4f;
																										dust13.scale = 0.5f + Main.rand.NextFloat();
																										dust13.fadeIn = 0.5f;
																									}
																									if (Main.rand.Next(4) == 0)
																									{
																										Vector2 vector105 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust14 = Main.dust[Dust.NewDust(base.Center - vector105 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																										dust14.noGravity = true;
																										dust14.position = base.Center - vector105 * 30f;
																										dust14.velocity = vector105.RotatedBy(-1.5707963705062866, default(Vector2)) * 2f;
																										dust14.scale = 0.5f + Main.rand.NextFloat();
																										dust14.fadeIn = 0.5f;
																									}
																								}
																								if (this.type == 578 && Main.rand.Next(2) == 0)
																								{
																									Vector2 vector106 = this.ai[1].ToRotationVector2();
																									Vector2 vector107 = vector106.RotatedBy(1.5707963705062866, default(Vector2)) * (float)(Main.rand.Next(2) == 0).ToDirectionInt() * (float)Main.rand.Next(10, 21);
																									Vector2 value59 = vector106 * (float)Main.rand.Next(-80, 81);
																									Vector2 vector108 = value59 - vector107;
																									vector108 /= 10f;
																									int num948 = 229;
																									Dust dust15 = Main.dust[Dust.NewDust(base.Center, 0, 0, num948, 0f, 0f, 0, default(Color), 1f)];
																									dust15.noGravity = true;
																									dust15.position = base.Center + vector107;
																									dust15.velocity = vector108;
																									dust15.scale = 0.5f + Main.rand.NextFloat();
																									dust15.fadeIn = 0.5f;
																									value59 = vector106 * (float)Main.rand.Next(40, 121);
																									vector108 = value59 - vector107 / 2f;
																									vector108 /= 10f;
																									dust15 = Main.dust[Dust.NewDust(base.Center, 0, 0, num948, 0f, 0f, 0, default(Color), 1f)];
																									dust15.noGravity = true;
																									dust15.position = base.Center + vector107 / 2f;
																									dust15.velocity = vector108;
																									dust15.scale = 1f + Main.rand.NextFloat();
																									return;
																								}
																							}
																							else if (this.ai[0] <= 90f)
																							{
																								this.scale = (this.ai[0] - 50f) / 40f;
																								this.alpha = 255 - (int)(255f * this.scale);
																								this.rotation -= 0.157079637f;
																								if (this.type == 579)
																								{
																									if (Main.rand.Next(2) == 0)
																									{
																										Vector2 vector109 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust16 = Main.dust[Dust.NewDust(base.Center - vector109 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																										dust16.noGravity = true;
																										dust16.position = base.Center - vector109 * (float)Main.rand.Next(10, 21);
																										dust16.velocity = vector109.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																										dust16.scale = 0.5f + Main.rand.NextFloat();
																										dust16.fadeIn = 0.5f;
																										dust16.customData = base.Center;
																									}
																									if (Main.rand.Next(2) == 0)
																									{
																										Vector2 vector110 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																										Dust dust17 = Main.dust[Dust.NewDust(base.Center - vector110 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																										dust17.noGravity = true;
																										dust17.position = base.Center - vector110 * 30f;
																										dust17.velocity = vector110.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																										dust17.scale = 0.5f + Main.rand.NextFloat();
																										dust17.fadeIn = 0.5f;
																										dust17.customData = base.Center;
																									}
																								}
																								if (this.type == 578)
																								{
																									Vector2 vector111 = this.ai[1].ToRotationVector2();
																									Vector2 value60 = vector111.RotatedBy(1.5707963705062866, default(Vector2)) * (float)(Main.rand.Next(2) == 0).ToDirectionInt() * (float)Main.rand.Next(10, 21);
																									vector111 *= (float)Main.rand.Next(-80, 81);
																									Vector2 vector112 = vector111 - value60;
																									vector112 /= 10f;
																									int num949 = Utils.SelectRandom<int>(Main.rand, new int[]
																									{
																										229,
																										229
																									});
																									Dust dust18 = Main.dust[Dust.NewDust(base.Center, 0, 0, num949, 0f, 0f, 0, default(Color), 1f)];
																									dust18.noGravity = true;
																									dust18.position = base.Center + value60;
																									dust18.velocity = vector112;
																									dust18.scale = 0.5f + Main.rand.NextFloat();
																									dust18.fadeIn = 0.5f;
																									if (this.ai[0] == 90f && Main.netMode != 1)
																									{
																										Vector2 vector113 = this.ai[1].ToRotationVector2() * 8f;
																										float ai2 = (float)Main.rand.Next(80);
																										Projectile.NewProjectile(base.Center.X - vector113.X, base.Center.Y - vector113.Y, vector113.X, vector113.Y, 580, 15, 1f, Main.myPlayer, this.ai[1], ai2);
																										return;
																									}
																								}
																								else if (this.type == 579 && this.ai[0] == 90f && Main.netMode != 1)
																								{
																									for (int num950 = 0; num950 < 2; num950++)
																									{
																										int num951 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 427, this.whoAmI, 0f, 0f, 0f, 0f, 255);
																										Main.npc[num951].velocity = -Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (float)Main.rand.Next(4, 9) - Vector2.UnitY * 2f;
																										Main.npc[num951].netUpdate = true;
																									}
																									return;
																								}
																							}
																							else
																							{
																								if (this.ai[0] > 120f)
																								{
																									this.scale = 1f - (this.ai[0] - 120f) / 60f;
																									this.alpha = 255 - (int)(255f * this.scale);
																									this.rotation -= 0.104719758f;
																									if (this.alpha >= 255)
																									{
																										this.Kill();
																									}
																									for (int num952 = 0; num952 < 2; num952++)
																									{
																										int num953 = Main.rand.Next(3);
																										if (num953 == 0)
																										{
																											Vector2 vector114 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale;
																											Dust dust19 = Main.dust[Dust.NewDust(base.Center - vector114 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																											dust19.noGravity = true;
																											dust19.position = base.Center - vector114 * (float)Main.rand.Next(10, 21);
																											dust19.velocity = vector114.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																											dust19.scale = 0.5f + Main.rand.NextFloat();
																											dust19.fadeIn = 0.5f;
																											dust19.customData = base.Center;
																										}
																										else if (num953 == 1)
																										{
																											Vector2 vector115 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * this.scale;
																											Dust dust20 = Main.dust[Dust.NewDust(base.Center - vector115 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																											dust20.noGravity = true;
																											dust20.position = base.Center - vector115 * 30f;
																											dust20.velocity = vector115.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																											dust20.scale = 0.5f + Main.rand.NextFloat();
																											dust20.fadeIn = 0.5f;
																											dust20.customData = base.Center;
																										}
																									}
																									return;
																								}
																								this.scale = 1f;
																								this.alpha = 0;
																								this.rotation -= 0.05235988f;
																								if (Main.rand.Next(2) == 0)
																								{
																									Vector2 vector116 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																									Dust dust21 = Main.dust[Dust.NewDust(base.Center - vector116 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																									dust21.noGravity = true;
																									dust21.position = base.Center - vector116 * (float)Main.rand.Next(10, 21);
																									dust21.velocity = vector116.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																									dust21.scale = 0.5f + Main.rand.NextFloat();
																									dust21.fadeIn = 0.5f;
																									dust21.customData = base.Center;
																									return;
																								}
																								Vector2 vector117 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																								Dust dust22 = Main.dust[Dust.NewDust(base.Center - vector117 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																								dust22.noGravity = true;
																								dust22.position = base.Center - vector117 * 30f;
																								dust22.velocity = vector117.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																								dust22.scale = 0.5f + Main.rand.NextFloat();
																								dust22.fadeIn = 0.5f;
																								dust22.customData = base.Center;
																								return;
																							}
																						}
																						else
																						{
																							if (this.aiStyle == 109)
																							{
																								if (this.localAI[1] == 0f)
																								{
																									this.localAI[1] = this.velocity.Length();
																								}
																								if (this.ai[0] == 0f)
																								{
																									this.localAI[0] += 1f;
																									if (this.localAI[0] > 30f)
																									{
																										this.ai[0] = 1f;
																										this.localAI[0] = 0f;
																										return;
																									}
																								}
																								else if (this.ai[0] == 1f)
																								{
																									Vector2 value61 = Vector2.Zero;
																									if (this.type != 582 || !Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].type != 124)
																									{
																										this.Kill();
																										return;
																									}
																									value61 = Main.npc[(int)this.ai[1]].Center;
																									this.tileCollide = false;
																									float num954 = this.localAI[1];
																									Vector2 vector118 = value61 - base.Center;
																									if (vector118.Length() < num954)
																									{
																										this.Kill();
																										return;
																									}
																									vector118.Normalize();
																									vector118 *= num954;
																									this.velocity = Vector2.Lerp(this.velocity, vector118, 0.04f);
																								}
																								this.rotation += 0.314159274f;
																								return;
																							}
																							if (this.aiStyle == 110)
																							{
																								if (this.localAI[1] == 0f)
																								{
																									this.localAI[1] = this.velocity.Length();
																								}
																								Vector2 value62 = Vector2.Zero;
																								if (!Main.npc[(int)this.ai[0]].active || !Main.npc[(int)this.ai[0]].townNPC)
																								{
																									this.Kill();
																									return;
																								}
																								value62 = Main.npc[(int)this.ai[0]].Center;
																								float num955 = this.localAI[1];
																								Vector2 vector119 = value62 - base.Center;
																								if (vector119.Length() < num955 || base.Hitbox.Intersects(Main.npc[(int)this.ai[0]].Hitbox))
																								{
																									this.Kill();
																									int num956 = Main.npc[(int)this.ai[0]].lifeMax - Main.npc[(int)this.ai[0]].life;
																									if (num956 > 20)
																									{
																										num956 = 20;
																									}
																									if (num956 > 0)
																									{
																										Main.npc[(int)this.ai[0]].life += num956;
																										Main.npc[(int)this.ai[0]].HealEffect(num956, true);
																									}
																									return;
																								}
																								vector119.Normalize();
																								vector119 *= num955;
																								if (vector119.Y < this.velocity.Y)
																								{
																									vector119.Y = this.velocity.Y;
																								}
																								vector119.Y += 1f;
																								this.velocity = Vector2.Lerp(this.velocity, vector119, 0.04f);
																								this.rotation += this.velocity.X * 0.05f;
																								return;
																							}
																							else if (this.aiStyle == 111)
																							{
																								if (!Main.npc[(int)this.ai[1]].active || Main.npc[(int)this.ai[1]].type != 20 || Main.npc[(int)this.ai[1]].ai[0] != 14f)
																								{
																									this.Kill();
																									return;
																								}
																								this.ai[0] += 1f;
																								this.rotation += 0.0104719754f;
																								this.scale = this.ai[0] / 100f;
																								if (this.scale > 1f)
																								{
																									this.scale = 1f;
																								}
																								this.alpha = (int)(255f * (1f - this.scale));
																								float num957 = 300f;
																								if (this.ai[0] >= 100f)
																								{
																									num957 = MathHelper.Lerp(300f, 600f, (this.ai[0] - 100f) / 200f);
																								}
																								if (num957 > 600f)
																								{
																									num957 = 600f;
																								}
																								if (this.ai[0] >= 500f)
																								{
																									this.alpha = (int)MathHelper.Lerp(0f, 255f, (this.ai[0] - 500f) / 100f);
																									num957 = MathHelper.Lerp(600f, 1200f, (this.ai[0] - 500f) / 100f);
																									this.rotation += 0.0104719754f;
																								}
																								if (Main.rand.Next(4) == 0)
																								{
																									float scaleFactor12 = num957;
																									Vector2 value63 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																									float num958 = (float)Main.rand.Next(3, 9);
																									value63.Normalize();
																									int num959 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1f);
																									Main.dust[num959].noGravity = true;
																									Main.dust[num959].position = base.Center + value63 * scaleFactor12;
																									if (Main.rand.Next(8) == 0)
																									{
																										Main.dust[num959].velocity = value63 * -num958 * 3f;
																										Main.dust[num959].scale += 0.5f;
																									}
																									else
																									{
																										Main.dust[num959].velocity = value63 * -num958;
																									}
																								}
																								if (Main.rand.Next(2) == 0)
																								{
																									Vector2 value64 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
																									float num960 = (float)Main.rand.Next(3, 9);
																									value64.Normalize();
																									int num961 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1.5f);
																									Main.dust[num961].noGravity = true;
																									Main.dust[num961].position = base.Center + value64 * 30f;
																									if (Main.rand.Next(8) == 0)
																									{
																										Main.dust[num961].velocity = value64 * -num960 * 3f;
																										Main.dust[num961].scale += 0.5f;
																									}
																									else
																									{
																										Main.dust[num961].velocity = value64 * -num960;
																									}
																								}
																								if (this.ai[0] >= 30f && Main.netMode != 2)
																								{
																									Player player6 = Main.player[Main.myPlayer];
																									if (player6.active && !player6.dead && base.Distance(player6.Center) <= num957 && player6.FindBuffIndex(165) == -1)
																									{
																										player6.AddBuff(165, 120, true);
																									}
																								}
																								if (this.ai[0] >= 30f && this.ai[0] % 10f == 0f && Main.netMode != 1)
																								{
																									for (int num962 = 0; num962 < 200; num962++)
																									{
																										NPC nPC10 = Main.npc[num962];
																										if (nPC10.type != 488 && nPC10.active && base.Distance(nPC10.Center) <= num957)
																										{
																											if (nPC10.townNPC && (nPC10.FindBuffIndex(165) == -1 || nPC10.buffTime[nPC10.FindBuffIndex(165)] <= 20))
																											{
																												nPC10.AddBuff(165, 120, false);
																											}
																											else if (!nPC10.friendly && nPC10.lifeMax > 5 && !nPC10.dontTakeDamage && (nPC10.FindBuffIndex(186) == -1 || nPC10.buffTime[nPC10.FindBuffIndex(186)] <= 20) && (nPC10.dryadBane || Collision.CanHit(base.Center, 1, 1, nPC10.position, nPC10.width, nPC10.height)))
																											{
																												nPC10.AddBuff(186, 120, false);
																											}
																										}
																									}
																								}
																								if (this.ai[0] >= 570f)
																								{
																									this.Kill();
																									return;
																								}
																							}
																							else if (this.aiStyle == 112)
																							{
																								if (this.type == 590)
																								{
																									if (++this.frameCounter >= 4)
																									{
																										this.frameCounter = 0;
																										if (++this.frame >= 3)
																										{
																											this.frame = 0;
																										}
																									}
																									if (this.alpha > 0)
																									{
																										this.alpha -= 15;
																									}
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (this.alpha == 0)
																									{
																										float num963 = (float)Main.rand.Next(28, 42) * 0.005f;
																										num963 += (float)(270 - (int)Main.mouseTextColor) / 500f;
																										float num964 = 0.1f;
																										float num965 = 0.3f + num963 / 2f;
																										float num966 = 0.6f + num963;
																										float num967 = 0.35f;
																										num964 *= num967;
																										num965 *= num967;
																										num966 *= num967;
																										Lighting.AddLight(base.Center, num964, num965, num966);
																									}
																									this.velocity = new Vector2(0f, (float)Math.Sin((double)(6.28318548f * this.ai[0] / 180f)) * 0.15f);
																									this.ai[0] += 1f;
																									if (this.ai[0] >= 180f)
																									{
																										this.ai[0] = 0f;
																									}
																								}
																								if (this.type == 644)
																								{
																									Color newColor2 = Main.hslToRgb(this.ai[0], 1f, 0.5f);
																									int num968 = (int)this.ai[1];
																									if (num968 < 0 || num968 >= 1000 || (!Main.projectile[num968].active && Main.projectile[num968].type != 643))
																									{
																										this.ai[1] = -1f;
																									}
																									else
																									{
																										DelegateMethods.v3_1 = newColor2.ToVector3() * 0.5f;
																										Utils.PlotTileLine(base.Center, Main.projectile[num968].Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLight));
																									}
																									if (this.localAI[0] == 0f)
																									{
																										this.localAI[0] = Main.rand.NextFloat() * 0.8f + 0.8f;
																										this.direction = ((Main.rand.Next(2) > 0) ? 1 : -1);
																									}
																									this.rotation = this.localAI[1] / 40f * 6.28318548f * (float)this.direction;
																									if (this.alpha > 0)
																									{
																										this.alpha -= 8;
																									}
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (this.alpha == 0)
																									{
																										Lighting.AddLight(base.Center, newColor2.ToVector3() * 0.5f);
																									}
																									for (int num969 = 0; num969 < 2; num969++)
																									{
																										if (Main.rand.Next(10) == 0)
																										{
																											Vector2 value65 = Vector2.UnitY.RotatedBy((double)((float)num969 * 3.14159274f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																											Dust dust23 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor2, 1.5f)];
																											dust23.noGravity = true;
																											dust23.noLight = true;
																											dust23.scale = this.Opacity * this.localAI[0];
																											dust23.position = base.Center;
																											dust23.velocity = value65 * 2.5f;
																										}
																									}
																									for (int num970 = 0; num970 < 2; num970++)
																									{
																										if (Main.rand.Next(10) == 0)
																										{
																											Vector2 value66 = Vector2.UnitY.RotatedBy((double)((float)num970 * 3.14159274f), default(Vector2));
																											Dust dust24 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor2, 1.5f)];
																											dust24.noGravity = true;
																											dust24.noLight = true;
																											dust24.scale = this.Opacity * this.localAI[0];
																											dust24.position = base.Center;
																											dust24.velocity = value66 * 2.5f;
																										}
																									}
																									if (Main.rand.Next(10) == 0)
																									{
																										float scaleFactor13 = 1f + Main.rand.NextFloat() * 2f;
																										float fadeIn = 1f + Main.rand.NextFloat();
																										float num971 = 1f + Main.rand.NextFloat();
																										Vector2 vector120 = Utils.RandomVector2(Main.rand, -1f, 1f);
																										if (vector120 != Vector2.Zero)
																										{
																											vector120.Normalize();
																										}
																										vector120 *= 20f + Main.rand.NextFloat() * 100f;
																										Vector2 vector121 = base.Center + vector120;
																										Point point3 = vector121.ToTileCoordinates();
																										bool flag51 = true;
																										if (!WorldGen.InWorld(point3.X, point3.Y, 0))
																										{
																											flag51 = false;
																										}
																										if (flag51 && WorldGen.SolidTile(point3.X, point3.Y))
																										{
																											flag51 = false;
																										}
																										if (flag51)
																										{
																											Dust dust25 = Main.dust[Dust.NewDust(vector121, 0, 0, 267, 0f, 0f, 127, newColor2, 1f)];
																											dust25.noGravity = true;
																											dust25.position = vector121;
																											dust25.velocity = -Vector2.UnitY * scaleFactor13 * (Main.rand.NextFloat() * 0.9f + 1.6f);
																											dust25.fadeIn = fadeIn;
																											dust25.scale = num971;
																											dust25.noLight = true;
																											Dust dust26 = Dust.CloneDust(dust25);
																											dust26.scale *= 0.65f;
																											dust26.fadeIn *= 0.65f;
																											dust26.color = new Color(255, 255, 255, 255);
																										}
																									}
																									this.scale = this.Opacity / 2f * this.localAI[0];
																									this.velocity = Vector2.Zero;
																									this.localAI[1] += 1f;
																									if (this.localAI[1] >= 60f)
																									{
																										this.Kill();
																										return;
																									}
																								}
																							}
																							else if (this.aiStyle == 113)
																							{
																								int num972 = 25;
																								if (this.type == 614)
																								{
																									num972 = 63;
																								}
																								if (this.alpha > 0)
																								{
																									this.alpha -= num972;
																								}
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (this.ai[0] == 0f)
																								{
																									bool flag52 = this.type == 614;
																									if (flag52)
																									{
																										int num973 = (int)this.ai[1];
																										if (!Main.npc[num973].CanBeChasedBy(this, true))
																										{
																											this.Kill();
																											return;
																										}
																										this.velocity.ToRotation();
																										Vector2 vector122 = Main.npc[num973].Center - base.Center;
																										if (vector122 != Vector2.Zero)
																										{
																											vector122.Normalize();
																											vector122 *= 14f;
																										}
																										float num974 = 5f;
																										this.velocity = (this.velocity * (num974 - 1f) + vector122) / num974;
																									}
																									else
																									{
																										this.ai[1] += 1f;
																										if (this.ai[1] >= 45f)
																										{
																											float num975 = 0.98f;
																											float num976 = 0.35f;
																											if (this.type == 636)
																											{
																												num975 = 0.995f;
																												num976 = 0.15f;
																											}
																											this.ai[1] = 45f;
																											this.velocity.X = this.velocity.X * num975;
																											this.velocity.Y = this.velocity.Y + num976;
																										}
																										this.rotation = this.velocity.ToRotation() + 1.57079637f;
																									}
																								}
																								if (this.ai[0] == 1f)
																								{
																									this.ignoreWater = true;
																									this.tileCollide = false;
																									int num977 = 15;
																									if (this.type == 636)
																									{
																										num977 = 5 * this.MaxUpdates;
																									}
																									bool flag53 = false;
																									bool flag54 = false;
																									this.localAI[0] += 1f;
																									if (this.localAI[0] % 30f == 0f)
																									{
																										flag54 = true;
																									}
																									int num978 = (int)this.ai[1];
																									if (this.localAI[0] >= (float)(60 * num977))
																									{
																										flag53 = true;
																									}
																									else if (num978 < 0 || num978 >= 200)
																									{
																										flag53 = true;
																									}
																									else if (Main.npc[num978].active && !Main.npc[num978].dontTakeDamage)
																									{
																										base.Center = Main.npc[num978].Center - this.velocity * 2f;
																										this.gfxOffY = Main.npc[num978].gfxOffY;
																										if (flag54)
																										{
																											Main.npc[num978].HitEffect(0, 1.0);
																										}
																									}
																									else
																									{
																										flag53 = true;
																									}
																									if (flag53)
																									{
																										this.Kill();
																									}
																								}
																								if (this.type == 614)
																								{
																									Lighting.AddLight(base.Center, 0.2f, 0.6f, 0.7f);
																								}
																								if (this.type == 636)
																								{
																									Lighting.AddLight(base.Center, 0.8f, 0.7f, 0.4f);
																									return;
																								}
																							}
																							else if (this.aiStyle == 114)
																							{
																								if (Main.netMode == 2 && this.localAI[0] == 0f)
																								{
																									PortalHelper.SyncPortalSections(base.Center, 1);
																									this.localAI[0] = 1f;
																								}
																								this.timeLeft = 3;
																								bool flag55 = false;
																								if (this.owner != 255 && (!Main.player[this.owner].active || Main.player[this.owner].dead || base.Distance(Main.player[this.owner].Center) > 12800f))
																								{
																									flag55 = true;
																								}
																								if (!flag55 && !WorldGen.InWorld((int)base.Center.X / 16, (int)base.Center.Y / 16, Lighting.offScreenTiles))
																								{
																									flag55 = true;
																								}
																								if (!flag55 && !PortalHelper.SupportedTilesAreFine(base.Center, this.ai[0]))
																								{
																									flag55 = true;
																								}
																								if (flag55)
																								{
																									this.Kill();
																									return;
																								}
																								Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
																								this.alpha -= 25;
																								if (this.alpha < 0)
																								{
																									this.alpha = 0;
																								}
																								if (this.alpha == 0)
																								{
																									Lighting.AddLight(base.Center + this.velocity * 3f, portalColor.ToVector3() * 0.5f);
																								}
																								if (++this.frameCounter >= 6)
																								{
																									this.frameCounter = 0;
																									if (++this.frame >= Main.projFrames[this.type])
																									{
																										this.frame = 0;
																									}
																								}
																								this.rotation = this.ai[0] - 1.57079637f;
																								return;
																							}
																							else if (this.aiStyle == 115)
																							{
																								Lighting.AddLight(base.Center, new Vector3(0.075f, 0.3f, 0.15f));
																								this.velocity *= 0.985f;
																								this.rotation += this.velocity.X * 0.2f;
																								if (this.velocity.X > 0f)
																								{
																									this.rotation += 0.08f;
																								}
																								else
																								{
																									this.rotation -= 0.08f;
																								}
																								this.ai[1] += 1f;
																								if (this.ai[1] > 30f)
																								{
																									this.alpha += 10;
																									if (this.alpha >= 255)
																									{
																										this.alpha = 255;
																										this.Kill();
																										return;
																									}
																								}
																							}
																							else
																							{
																								if (this.aiStyle == 116)
																								{
																									if (this.localAI[0] == 0f)
																									{
																										this.rotation = this.ai[1];
																										this.localAI[0] = 1f;
																									}
																									Player player7 = Main.player[this.owner];
																									if (player7.setSolar)
																									{
																										this.timeLeft = 2;
																									}
																									float num979 = (float)player7.miscCounter / 300f * 12.566371f + this.ai[1];
																									num979 = MathHelper.WrapAngle(num979);
																									this.rotation = this.rotation.AngleLerp(num979, 0.05f);
																									this.alpha -= 15;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									this.velocity = this.rotation.ToRotationVector2() * 100f - player7.velocity;
																									base.Center = player7.Center - this.velocity;
																									return;
																								}
																								if (this.aiStyle == 117)
																								{
																									this.ai[1] += 0.01f;
																									this.scale = this.ai[1];
																									this.ai[0] += 1f;
																									if (this.ai[0] >= (float)(3 * Main.projFrames[this.type]))
																									{
																										this.Kill();
																										return;
																									}
																									if (++this.frameCounter >= 3)
																									{
																										this.frameCounter = 0;
																										if (++this.frame >= Main.projFrames[this.type])
																										{
																											this.hide = true;
																										}
																									}
																									this.alpha -= 63;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									bool flag56 = this.type == 612;
																									bool flag57 = this.type == 624;
																									if (flag56)
																									{
																										Lighting.AddLight(base.Center, 0.9f, 0.8f, 0.6f);
																									}
																									if (this.ai[0] == 1f)
																									{
																										this.position = base.Center;
																										this.width = (this.height = (int)(52f * this.scale));
																										base.Center = this.position;
																										this.Damage();
																										if (flag56)
																										{
																											Main.PlaySound(SoundID.Item14, this.position);
																											for (int num980 = 0; num980 < 4; num980++)
																											{
																												int num981 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num981].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																											}
																											for (int num982 = 0; num982 < 10; num982++)
																											{
																												int num983 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 2.7f);
																												Main.dust[num983].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num983].noGravity = true;
																												Main.dust[num983].velocity *= 3f;
																												num983 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num983].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num983].velocity *= 2f;
																												Main.dust[num983].noGravity = true;
																												Main.dust[num983].fadeIn = 2.5f;
																											}
																											for (int num984 = 0; num984 < 5; num984++)
																											{
																												int num985 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
																												Main.dust[num985].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num985].noGravity = true;
																												Main.dust[num985].velocity *= 3f;
																											}
																											for (int num986 = 0; num986 < 10; num986++)
																											{
																												int num987 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
																												Main.dust[num987].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num987].noGravity = true;
																												Main.dust[num987].velocity *= 3f;
																											}
																										}
																										if (flag57)
																										{
																											Main.PlaySound(SoundID.Item14, this.position);
																											for (int num988 = 0; num988 < 20; num988++)
																											{
																												int num989 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1.5f);
																												Main.dust[num989].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
																												Main.dust[num989].velocity *= 2f;
																												Main.dust[num989].noGravity = true;
																												Main.dust[num989].fadeIn = 2.5f;
																												Main.dust[num989].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																											for (int num990 = 0; num990 < 15; num990++)
																											{
																												int num991 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 0, default(Color), 2.7f);
																												Main.dust[num991].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
																												Main.dust[num991].noGravity = true;
																												Main.dust[num991].velocity *= 3f;
																												Main.dust[num991].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																											float num992 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num993 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num994 = (float)Main.rand.NextDouble() * 6.28318548f;
																											float num995 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num996 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num997 = 7f + (float)Main.rand.NextDouble() * 7f;
																											float num998 = num995;
																											if (num996 > num998)
																											{
																												num998 = num996;
																											}
																											if (num997 > num998)
																											{
																												num998 = num997;
																											}
																											for (int num999 = 0; num999 < 200; num999++)
																											{
																												int num1000 = 135;
																												float scaleFactor14 = num998;
																												if (num999 > 50)
																												{
																													scaleFactor14 = num996;
																												}
																												if (num999 > 100)
																												{
																													scaleFactor14 = num995;
																												}
																												if (num999 > 150)
																												{
																													scaleFactor14 = num997;
																												}
																												int num1001 = Dust.NewDust(this.position, 6, 6, num1000, 0f, 0f, 100, default(Color), 1f);
																												Vector2 vector123 = Main.dust[num1001].velocity;
																												Main.dust[num1001].position = base.Center;
																												vector123.Normalize();
																												vector123 *= scaleFactor14;
																												if (num999 > 150)
																												{
																													vector123.Y *= 0.5f;
																													vector123 = vector123.RotatedBy((double)num994, default(Vector2));
																												}
																												else if (num999 > 100)
																												{
																													vector123.X *= 0.5f;
																													vector123 = vector123.RotatedBy((double)num992, default(Vector2));
																												}
																												else if (num999 > 50)
																												{
																													vector123.Y *= 0.5f;
																													vector123 = vector123.RotatedBy((double)num993, default(Vector2));
																												}
																												Main.dust[num1001].velocity *= 0.2f;
																												Main.dust[num1001].velocity += vector123;
																												Main.dust[num1001].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												if (num999 <= 200)
																												{
																													Main.dust[num1001].scale = 2f;
																													Main.dust[num1001].noGravity = true;
																													Main.dust[num1001].fadeIn = Main.rand.NextFloat() * 2f;
																													if (Main.rand.Next(4) == 0)
																													{
																														Main.dust[num1001].fadeIn = 2.5f;
																													}
																													Main.dust[num1001].noLight = true;
																													if (num999 < 100)
																													{
																														Main.dust[num1001].position += Main.dust[num1001].velocity * 20f;
																														Main.dust[num1001].velocity *= -1f;
																													}
																												}
																											}
																											return;
																										}
																									}
																								}
																								else if (this.aiStyle == 118)
																								{
																									this.ai[0] += 1f;
																									int num1002 = 0;
																									if (this.velocity.Length() <= 4f)
																									{
																										num1002 = 1;
																									}
																									this.alpha -= 15;
																									if (this.alpha < 0)
																									{
																										this.alpha = 0;
																									}
																									if (num1002 == 0)
																									{
																										this.rotation -= 0.104719758f;
																										if (Main.rand.Next(3) == 0)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												Vector2 vector124 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust27 = Main.dust[Dust.NewDust(base.Center - vector124 * 30f, 0, 0, Utils.SelectRandom<int>(Main.rand, new int[]
																												{
																													86,
																													90
																												}), 0f, 0f, 0, default(Color), 1f)];
																												dust27.noGravity = true;
																												dust27.position = base.Center - vector124 * (float)Main.rand.Next(10, 21);
																												dust27.velocity = vector124.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust27.scale = 0.5f + Main.rand.NextFloat();
																												dust27.fadeIn = 0.5f;
																												dust27.customData = this;
																											}
																											else
																											{
																												Vector2 vector125 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust28 = Main.dust[Dust.NewDust(base.Center - vector125 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																												dust28.noGravity = true;
																												dust28.position = base.Center - vector125 * 30f;
																												dust28.velocity = vector125.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																												dust28.scale = 0.5f + Main.rand.NextFloat();
																												dust28.fadeIn = 0.5f;
																												dust28.customData = this;
																											}
																										}
																										if (this.ai[0] >= 30f)
																										{
																											this.velocity *= 0.98f;
																											this.scale += 0.00744680827f;
																											if (this.scale > 1.3f)
																											{
																												this.scale = 1.3f;
																											}
																											this.rotation -= 0.0174532924f;
																										}
																										if (this.velocity.Length() < 4.1f)
																										{
																											this.velocity.Normalize();
																											this.velocity *= 4f;
																											this.ai[0] = 0f;
																										}
																									}
																									else if (num1002 == 1)
																									{
																										this.rotation -= 0.104719758f;
																										for (int num1003 = 0; num1003 < 1; num1003++)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												Vector2 vector126 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust29 = Main.dust[Dust.NewDust(base.Center - vector126 * 30f, 0, 0, 86, 0f, 0f, 0, default(Color), 1f)];
																												dust29.noGravity = true;
																												dust29.position = base.Center - vector126 * (float)Main.rand.Next(10, 21);
																												dust29.velocity = vector126.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust29.scale = 0.9f + Main.rand.NextFloat();
																												dust29.fadeIn = 0.5f;
																												dust29.customData = this;
																												vector126 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												dust29 = Main.dust[Dust.NewDust(base.Center - vector126 * 30f, 0, 0, 90, 0f, 0f, 0, default(Color), 1f)];
																												dust29.noGravity = true;
																												dust29.position = base.Center - vector126 * (float)Main.rand.Next(10, 21);
																												dust29.velocity = vector126.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																												dust29.scale = 0.9f + Main.rand.NextFloat();
																												dust29.fadeIn = 0.5f;
																												dust29.customData = this;
																												dust29.color = Color.Crimson;
																											}
																											else
																											{
																												Vector2 vector127 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																												Dust dust30 = Main.dust[Dust.NewDust(base.Center - vector127 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																												dust30.noGravity = true;
																												dust30.position = base.Center - vector127 * (float)Main.rand.Next(20, 31);
																												dust30.velocity = vector127.RotatedBy(-1.5707963705062866, default(Vector2)) * 5f;
																												dust30.scale = 0.9f + Main.rand.NextFloat();
																												dust30.fadeIn = 0.5f;
																												dust30.customData = this;
																											}
																										}
																										if (this.ai[0] % 30f == 0f && this.ai[0] < 241f && Main.myPlayer == this.owner)
																										{
																											Vector2 vector128 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * 12f;
																											Projectile.NewProjectile(base.Center.X, base.Center.Y, vector128.X, vector128.Y, 618, this.damage / 2, 0f, this.owner, 0f, (float)this.whoAmI);
																										}
																										Vector2 vector129 = base.Center;
																										float num1004 = 800f;
																										bool flag58 = false;
																										int num1005 = 0;
																										if (this.ai[1] == 0f)
																										{
																											for (int num1006 = 0; num1006 < 200; num1006++)
																											{
																												if (Main.npc[num1006].CanBeChasedBy(this, false))
																												{
																													Vector2 center13 = Main.npc[num1006].Center;
																													if (base.Distance(center13) < num1004 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num1006].position, Main.npc[num1006].width, Main.npc[num1006].height))
																													{
																														num1004 = base.Distance(center13);
																														vector129 = center13;
																														flag58 = true;
																														num1005 = num1006;
																													}
																												}
																											}
																											if (flag58)
																											{
																												if (this.ai[1] != (float)(num1005 + 1))
																												{
																													this.netUpdate = true;
																												}
																												this.ai[1] = (float)(num1005 + 1);
																											}
																											flag58 = false;
																										}
																										if (this.ai[1] != 0f)
																										{
																											int num1007 = (int)(this.ai[1] - 1f);
																											if (Main.npc[num1007].active && Main.npc[num1007].CanBeChasedBy(this, true) && base.Distance(Main.npc[num1007].Center) < 1000f)
																											{
																												flag58 = true;
																												vector129 = Main.npc[num1007].Center;
																											}
																										}
																										if (!this.friendly)
																										{
																											flag58 = false;
																										}
																										if (flag58)
																										{
																											float num1008 = 4f;
																											int num1009 = 8;
																											Vector2 vector130 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
																											float num1010 = vector129.X - vector130.X;
																											float num1011 = vector129.Y - vector130.Y;
																											float num1012 = (float)Math.Sqrt((double)(num1010 * num1010 + num1011 * num1011));
																											num1012 = num1008 / num1012;
																											num1010 *= num1012;
																											num1011 *= num1012;
																											this.velocity.X = (this.velocity.X * (float)(num1009 - 1) + num1010) / (float)num1009;
																											this.velocity.Y = (this.velocity.Y * (float)(num1009 - 1) + num1011) / (float)num1009;
																										}
																									}
																									if (this.alpha < 150)
																									{
																										Lighting.AddLight(base.Center, 0.7f, 0.2f, 0.6f);
																									}
																									if (this.ai[0] >= 600f)
																									{
																										this.Kill();
																										return;
																									}
																								}
																								else if (this.aiStyle == 119)
																								{
																									int num1013 = 0;
																									float num1014 = 0f;
																									float x3 = 0f;
																									float y3 = 0f;
																									bool flag59 = false;
																									bool flag60 = false;
																									int num640 = this.type;
																									if (num640 == 618)
																									{
																										num1013 = 617;
																										num1014 = 420f;
																										x3 = 0.15f;
																										y3 = 0.15f;
																									}
																									if (flag60)
																									{
																										int num1015 = (int)this.ai[1];
																										if (!Main.projectile[num1015].active || Main.projectile[num1015].type != num1013)
																										{
																											this.Kill();
																											return;
																										}
																										this.timeLeft = 2;
																									}
																									this.ai[0] += 1f;
																									if (this.ai[0] < num1014)
																									{
																										bool flag61 = true;
																										int num1016 = (int)this.ai[1];
																										if (Main.projectile[num1016].active && Main.projectile[num1016].type == num1013)
																										{
																											if (!flag59 && Main.projectile[num1016].oldPos[1] != Vector2.Zero)
																											{
																												this.position += Main.projectile[num1016].position - Main.projectile[num1016].oldPos[1];
																											}
																											if (base.Center.HasNaNs())
																											{
																												this.Kill();
																												return;
																											}
																										}
																										else
																										{
																											this.ai[0] = num1014;
																											flag61 = false;
																											this.Kill();
																										}
																										if (flag61 && !flag59)
																										{
																											this.velocity += new Vector2((float)Math.Sign(Main.projectile[num1016].Center.X - base.Center.X), (float)Math.Sign(Main.projectile[num1016].Center.Y - base.Center.Y)) * new Vector2(x3, y3);
																											if (this.velocity.Length() > 6f)
																											{
																												this.velocity *= 6f / this.velocity.Length();
																											}
																										}
																										if (this.type == 618)
																										{
																											if (Main.rand.Next(2) == 0)
																											{
																												int num1017 = Dust.NewDust(base.Center, 8, 8, 86, 0f, 0f, 0, default(Color), 1f);
																												Main.dust[num1017].position = base.Center;
																												Main.dust[num1017].velocity = this.velocity;
																												Main.dust[num1017].noGravity = true;
																												Main.dust[num1017].scale = 1.5f;
																												if (flag61)
																												{
																													Main.dust[num1017].customData = Main.projectile[(int)this.ai[1]];
																												}
																											}
																											this.alpha = 255;
																											return;
																										}
																										this.Kill();
																										return;
																									}
																								}
																								else if (this.aiStyle == 120)
																								{
																									Player player8 = Main.player[this.owner];
																									if (!player8.active)
																									{
																										this.active = false;
																										return;
																									}
																									bool flag62 = this.type == 623;
																									Vector2 vector131 = player8.Center;
																									float num1018 = 100f;
																									float num1019 = 300f;
																									float num1020 = 100f;
																									float num1021 = 100f;
																									if (flag62)
																									{
																										if (player8.dead)
																										{
																											player8.stardustGuardian = false;
																										}
																										if (player8.stardustGuardian)
																										{
																											this.timeLeft = 2;
																										}
																										num1018 = 150f;
																										num1019 = 250f;
																										num1020 = 200f;
																										vector131.X -= (float)((5 + player8.width / 2) * player8.direction);
																										vector131.Y -= 25f;
																										Lighting.AddLight(base.Center, 0.9f, 0.9f, 0.7f);
																										if (this.ai[0] != 3f && this.alpha == 255)
																										{
																											this.alpha = 0;
																											for (int num1022 = 0; num1022 < 30; num1022++)
																											{
																												int num1023 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1023].noGravity = true;
																												Main.dust[num1023].velocity *= 3f;
																												Main.dust[num1023].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1023 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1023].velocity *= 2f;
																												Main.dust[num1023].noGravity = true;
																												Main.dust[num1023].fadeIn = 2.5f;
																												Main.dust[num1023].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										if (this.localAI[0] > 0f)
																										{
																											this.localAI[0] -= 1f;
																										}
																									}
																									if (this.ai[0] != 0f)
																									{
																										Main.player[this.owner].tankPet = this.whoAmI;
																										Main.player[this.owner].tankPetReset = false;
																									}
																									if (this.ai[0] == 0f)
																									{
																										if (player8.HasMinionRestTarget)
																										{
																											this.ai[0] = 3f;
																											this.netUpdate = true;
																										}
																										base.Center = Vector2.Lerp(base.Center, vector131, 0.2f);
																										this.velocity *= 0.8f;
																										this.direction = (this.spriteDirection = player8.direction);
																										if (flag62 && ++this.frameCounter >= 9)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type] - 4)
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else if (this.ai[0] == 1f)
																									{
																										if (player8.HasMinionRestTarget)
																										{
																											vector131 = player8.MinionRestTargetPoint;
																										}
																										else
																										{
																											this.ai[0] = 0f;
																											this.netUpdate = true;
																										}
																										int num1024 = -1;
																										bool flag63 = true;
																										if (flag62 && Math.Abs(base.Center.X - vector131.X) > num1018 + 20f)
																										{
																											flag63 = false;
																										}
																										if (flag63)
																										{
																											for (int num1025 = 0; num1025 < 200; num1025++)
																											{
																												NPC nPC11 = Main.npc[num1025];
																												if (nPC11.CanBeChasedBy(this, false))
																												{
																													float num1026 = base.Distance(nPC11.Center);
																													if (num1026 < num1019)
																													{
																														num1024 = num1025;
																													}
																												}
																											}
																										}
																										if (num1024 != -1)
																										{
																											NPC nPC12 = Main.npc[num1024];
																											this.direction = (this.spriteDirection = (nPC12.Center.X > base.Center.X).ToDirectionInt());
																											float num1027 = Math.Abs(vector131.X - base.Center.X);
																											float num1028 = Math.Abs(nPC12.Center.X - base.Center.X);
																											float num1029 = Math.Abs(vector131.Y - base.Center.Y);
																											float num1030 = Math.Abs(nPC12.Center.Y - base.Bottom.Y);
																											float num1031 = (float)(nPC12.Center.Y > base.Bottom.Y).ToDirectionInt();
																											if ((num1027 < num1018 || (vector131.X - base.Center.X) * (float)this.direction < 0f) && num1028 > 20f && num1028 < num1018 - num1027 + 100f)
																											{
																												this.velocity.X = this.velocity.X + 0.1f * (float)this.direction;
																											}
																											else
																											{
																												this.velocity.X = this.velocity.X * 0.7f;
																											}
																											if ((num1029 < num1021 || (vector131.Y - base.Bottom.Y) * num1031 < 0f) && num1030 > 10f && num1030 < num1021 - num1029 + 10f)
																											{
																												this.velocity.Y = this.velocity.Y + 0.1f * num1031;
																											}
																											else
																											{
																												this.velocity.Y = this.velocity.Y * 0.7f;
																											}
																											if (this.localAI[0] == 0f && this.owner == Main.myPlayer && num1028 < num1020)
																											{
																												this.ai[1] = 0f;
																												this.ai[0] = 2f;
																												this.netUpdate = true;
																												this.localAI[0] = 90f;
																											}
																										}
																										else
																										{
																											if (Math.Abs(vector131.X - base.Center.X) > num1018 + 40f)
																											{
																												this.ai[0] = 3f;
																												this.netUpdate = true;
																											}
																											else if (Math.Abs(vector131.X - base.Center.X) > 20f)
																											{
																												this.direction = (this.spriteDirection = (vector131.X > base.Center.X).ToDirectionInt());
																												this.velocity.X = this.velocity.X + 0.06f * (float)this.direction;
																											}
																											else
																											{
																												this.velocity.X = this.velocity.X * 0.8f;
																												this.direction = (this.spriteDirection = (player8.Center.X < base.Center.X).ToDirectionInt());
																											}
																											if (Math.Abs(vector131.Y - base.Center.Y) > num1021)
																											{
																												this.ai[0] = 3f;
																												this.netUpdate = true;
																											}
																											else if (Math.Abs(vector131.Y - base.Center.Y) > 10f)
																											{
																												this.velocity.Y = this.velocity.Y + 0.06f * (float)Math.Sign(vector131.Y - base.Center.Y);
																											}
																											else
																											{
																												this.velocity.Y = this.velocity.Y * 0.8f;
																											}
																										}
																										if (flag62 && ++this.frameCounter >= 9)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type] - 4)
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else if (this.ai[0] == 2f)
																									{
																										this.velocity.X = this.velocity.X * 0.9f;
																										this.ai[1] += 1f;
																										float num1032 = 0f;
																										if (flag62)
																										{
																											num1032 = 20f;
																											if (this.ai[1] == 10f && this.owner == Main.myPlayer)
																											{
																												int num1033 = (int)(20f * Main.player[this.owner].minionDamage);
																												Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 624, num1033, 6f, this.owner, 0f, 5f);
																											}
																										}
																										if (this.ai[1] >= num1032)
																										{
																											this.ai[1] = 0f;
																											this.ai[0] = 1f;
																											this.netUpdate = true;
																										}
																										if (flag62)
																										{
																											if (this.frame < Main.projFrames[this.type] - 4)
																											{
																												this.frame = Main.projFrames[this.type] - 1;
																												this.frameCounter = 0;
																											}
																											if (++this.frameCounter >= 5)
																											{
																												this.frameCounter = 0;
																												if (--this.frame < Main.projFrames[this.type] - 5)
																												{
																													this.frame = Main.projFrames[this.type] - 1;
																												}
																											}
																										}
																									}
																									if (this.ai[0] == 3f)
																									{
																										if (player8.HasMinionRestTarget)
																										{
																											vector131 = player8.MinionRestTargetPoint;
																										}
																										else
																										{
																											this.ai[0] = 0f;
																											this.netUpdate = true;
																										}
																										if (this.alpha == 0)
																										{
																											this.alpha = 255;
																											for (int num1034 = 0; num1034 < 30; num1034++)
																											{
																												int num1035 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1035].noGravity = true;
																												Main.dust[num1035].velocity *= 3f;
																												Main.dust[num1035].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1035 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1035].velocity *= 2f;
																												Main.dust[num1035].noGravity = true;
																												Main.dust[num1035].fadeIn = 2.5f;
																												Main.dust[num1035].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										else
																										{
																											for (int num1036 = 0; num1036 < 2; num1036++)
																											{
																												int num1037 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 200, default(Color), 1.7f);
																												Main.dust[num1037].noGravity = true;
																												Main.dust[num1037].velocity *= 3f;
																												Main.dust[num1037].noLight = true;
																												Main.dust[num1037].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																												num1037 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1037].velocity *= 2f;
																												Main.dust[num1037].noGravity = true;
																												Main.dust[num1037].fadeIn = 2.5f;
																												Main.dust[num1037].noLight = true;
																												Main.dust[num1037].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cPet, Main.player[this.owner]);
																											}
																										}
																										this.velocity *= 0.7f;
																										base.Center = Vector2.Lerp(base.Center, vector131, 0.2f);
																										if (base.Distance(vector131) < 10f)
																										{
																											this.ai[0] = 1f;
																											this.netUpdate = true;
																											return;
																										}
																									}
																								}
																								else if (this.aiStyle == 121)
																								{
																									Player player9 = Main.player[this.owner];
																									if ((int)Main.time % 120 == 0)
																									{
																										this.netUpdate = true;
																									}
																									if (!player9.active)
																									{
																										this.active = false;
																										return;
																									}
																									bool flag64 = this.type == 625;
																									bool flag65 = this.type == 625 || this.type == 626 || this.type == 627 || this.type == 628;
																									int num1038 = 10;
																									if (flag65)
																									{
																										if (player9.dead)
																										{
																											player9.stardustDragon = false;
																										}
																										if (player9.stardustDragon)
																										{
																											this.timeLeft = 2;
																										}
																										num1038 = 30;
																										if (Main.rand.Next(30) == 0)
																										{
																											int num1039 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 0, default(Color), 2f);
																											Main.dust[num1039].noGravity = true;
																											Main.dust[num1039].fadeIn = 2f;
																											Point point4 = Main.dust[num1039].position.ToTileCoordinates();
																											if (WorldGen.InWorld(point4.X, point4.Y, 5) && WorldGen.SolidTile(point4.X, point4.Y))
																											{
																												Main.dust[num1039].noLight = true;
																											}
																										}
																									}
																									if (flag64)
																									{
																										Vector2 center14 = player9.Center;
																										float num1040 = 700f;
																										float num1041 = 1000f;
																										int num1042 = -1;
																										if (base.Distance(center14) > 2000f)
																										{
																											base.Center = center14;
																											this.netUpdate = true;
																										}
																										bool flag66 = true;
																										if (flag66)
																										{
																											NPC ownerMinionAttackTargetNPC5 = this.OwnerMinionAttackTargetNPC;
																											if (ownerMinionAttackTargetNPC5 != null && ownerMinionAttackTargetNPC5.CanBeChasedBy(this, false))
																											{
																												float num1043 = base.Distance(ownerMinionAttackTargetNPC5.Center);
																												if (num1043 < num1040 * 2f)
																												{
																													num1042 = ownerMinionAttackTargetNPC5.whoAmI;
																													if (ownerMinionAttackTargetNPC5.boss)
																													{
																														int arg_2D352_0 = ownerMinionAttackTargetNPC5.whoAmI;
																													}
																													else
																													{
																														int arg_2D35E_0 = ownerMinionAttackTargetNPC5.whoAmI;
																													}
																												}
																											}
																											if (num1042 < 0)
																											{
																												for (int num1044 = 0; num1044 < 200; num1044++)
																												{
																													NPC nPC13 = Main.npc[num1044];
																													if (nPC13.CanBeChasedBy(this, false) && player9.Distance(nPC13.Center) < num1041)
																													{
																														float num1045 = base.Distance(nPC13.Center);
																														if (num1045 < num1040)
																														{
																															num1042 = num1044;
																															bool arg_2D3CE_0 = nPC13.boss;
																														}
																													}
																												}
																											}
																										}
																										if (num1042 != -1)
																										{
																											NPC nPC14 = Main.npc[num1042];
																											Vector2 vector132 = nPC14.Center - base.Center;
																											(vector132.X > 0f).ToDirectionInt();
																											(vector132.Y > 0f).ToDirectionInt();
																											float scaleFactor15 = 0.4f;
																											if (vector132.Length() < 600f)
																											{
																												scaleFactor15 = 0.6f;
																											}
																											if (vector132.Length() < 300f)
																											{
																												scaleFactor15 = 0.8f;
																											}
																											if (vector132.Length() > nPC14.Size.Length() * 0.75f)
																											{
																												this.velocity += Vector2.Normalize(vector132) * scaleFactor15 * 1.5f;
																												if (Vector2.Dot(this.velocity, vector132) < 0.25f)
																												{
																													this.velocity *= 0.8f;
																												}
																											}
																											float num1046 = 30f;
																											if (this.velocity.Length() > num1046)
																											{
																												this.velocity = Vector2.Normalize(this.velocity) * num1046;
																											}
																										}
																										else
																										{
																											float num1047 = 0.2f;
																											Vector2 vector133 = center14 - base.Center;
																											if (vector133.Length() < 200f)
																											{
																												num1047 = 0.12f;
																											}
																											if (vector133.Length() < 140f)
																											{
																												num1047 = 0.06f;
																											}
																											if (vector133.Length() > 100f)
																											{
																												if (Math.Abs(center14.X - base.Center.X) > 20f)
																												{
																													this.velocity.X = this.velocity.X + num1047 * (float)Math.Sign(center14.X - base.Center.X);
																												}
																												if (Math.Abs(center14.Y - base.Center.Y) > 10f)
																												{
																													this.velocity.Y = this.velocity.Y + num1047 * (float)Math.Sign(center14.Y - base.Center.Y);
																												}
																											}
																											else if (this.velocity.Length() > 2f)
																											{
																												this.velocity *= 0.96f;
																											}
																											if (Math.Abs(this.velocity.Y) < 1f)
																											{
																												this.velocity.Y = this.velocity.Y - 0.1f;
																											}
																											float num1048 = 15f;
																											if (this.velocity.Length() > num1048)
																											{
																												this.velocity = Vector2.Normalize(this.velocity) * num1048;
																											}
																										}
																										this.rotation = this.velocity.ToRotation() + 1.57079637f;
																										int direction = this.direction;
																										this.direction = (this.spriteDirection = ((this.velocity.X > 0f) ? 1 : -1));
																										if (direction != this.direction)
																										{
																											this.netUpdate = true;
																										}
																										float num1049 = MathHelper.Clamp(this.localAI[0], 0f, 50f);
																										this.position = base.Center;
																										this.scale = 1f + num1049 * 0.01f;
																										this.width = (this.height = (int)((float)num1038 * this.scale));
																										base.Center = this.position;
																										if (this.alpha > 0)
																										{
																											for (int num1050 = 0; num1050 < 2; num1050++)
																											{
																												int num1051 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
																												Main.dust[num1051].noGravity = true;
																												Main.dust[num1051].noLight = true;
																											}
																											this.alpha -= 42;
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																												return;
																											}
																										}
																									}
																									else
																									{
																										bool flag67 = false;
																										Vector2 value67 = Vector2.Zero;
																										Vector2 arg_2D865_0 = Vector2.Zero;
																										float num1052 = 0f;
																										float scaleFactor16 = 0f;
																										float scaleFactor17 = 1f;
																										if (this.ai[1] == 1f)
																										{
																											this.ai[1] = 0f;
																											this.netUpdate = true;
																										}
																										int byUUID = Projectile.GetByUUID(this.owner, (int)this.ai[0]);
																										if (flag65 && byUUID >= 0 && Main.projectile[byUUID].active && (Main.projectile[byUUID].type == 625 || Main.projectile[byUUID].type == 626 || Main.projectile[byUUID].type == 627))
																										{
																											flag67 = true;
																											value67 = Main.projectile[byUUID].Center;
																											Vector2 arg_2D957_0 = Main.projectile[byUUID].velocity;
																											num1052 = Main.projectile[byUUID].rotation;
																											float num1053 = MathHelper.Clamp(Main.projectile[byUUID].scale, 0f, 50f);
																											scaleFactor17 = num1053;
																											scaleFactor16 = 16f;
																											int arg_2D9AD_0 = Main.projectile[byUUID].alpha;
																											Main.projectile[byUUID].localAI[0] = this.localAI[0] + 1f;
																											if (Main.projectile[byUUID].type != 625)
																											{
																												Main.projectile[byUUID].localAI[1] = (float)this.whoAmI;
																											}
																											if (this.owner == Main.myPlayer && Main.projectile[byUUID].type == 625 && this.type == 628)
																											{
																												Main.projectile[byUUID].Kill();
																												this.Kill();
																												return;
																											}
																										}
																										if (!flag67)
																										{
																											return;
																										}
																										if (this.alpha > 0)
																										{
																											for (int num1054 = 0; num1054 < 2; num1054++)
																											{
																												int num1055 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
																												Main.dust[num1055].noGravity = true;
																												Main.dust[num1055].noLight = true;
																											}
																										}
																										this.alpha -= 42;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										this.velocity = Vector2.Zero;
																										Vector2 vector134 = value67 - base.Center;
																										if (num1052 != this.rotation)
																										{
																											float num1056 = MathHelper.WrapAngle(num1052 - this.rotation);
																											vector134 = vector134.RotatedBy((double)(num1056 * 0.1f), default(Vector2));
																										}
																										this.rotation = vector134.ToRotation() + 1.57079637f;
																										this.position = base.Center;
																										this.scale = scaleFactor17;
																										this.width = (this.height = (int)((float)num1038 * this.scale));
																										base.Center = this.position;
																										if (vector134 != Vector2.Zero)
																										{
																											base.Center = value67 - Vector2.Normalize(vector134) * scaleFactor16 * scaleFactor17;
																										}
																										this.spriteDirection = ((vector134.X > 0f) ? 1 : -1);
																										return;
																									}
																								}
																								else if (this.aiStyle == 122)
																								{
																									int num1057 = (int)this.ai[0];
																									bool flag68 = false;
																									if (num1057 == -1 || !Main.npc[num1057].active)
																									{
																										flag68 = true;
																									}
																									if (flag68)
																									{
																										if (this.type == 629)
																										{
																											this.Kill();
																											return;
																										}
																										if (this.type == 631 && this.ai[0] != -1f)
																										{
																											this.ai[0] = -1f;
																											this.netUpdate = true;
																										}
																									}
																									if (!flag68 && base.Hitbox.Intersects(Main.npc[num1057].Hitbox))
																									{
																										this.Kill();
																										if (this.type == 631)
																										{
																											this.localAI[1] = 1f;
																											this.Damage();
																										}
																										return;
																									}
																									if (this.type == 629)
																									{
																										Vector2 value68 = Main.npc[num1057].Center - base.Center;
																										this.velocity = Vector2.Normalize(value68) * 5f;
																										Dust.QuickDust(base.Center, Color.Red);
																									}
																									if (this.type == 631)
																									{
																										if (this.ai[1] > 0f)
																										{
																											this.ai[1] -= 1f;
																											this.velocity = Vector2.Zero;
																											return;
																										}
																										if (flag68)
																										{
																											if (this.velocity == Vector2.Zero)
																											{
																												this.Kill();
																											}
																											this.tileCollide = true;
																											this.alpha += 10;
																											if (this.alpha > 255)
																											{
																												this.Kill();
																											}
																										}
																										else
																										{
																											Vector2 value69 = Main.npc[num1057].Center - base.Center;
																											this.velocity = Vector2.Normalize(value69) * 12f;
																											this.alpha -= 15;
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																										}
																										this.rotation = this.velocity.ToRotation() - 1.57079637f;
																										return;
																									}
																								}
																								else if (this.aiStyle == 123)
																								{
																									bool flag69 = this.type == 641;
																									bool flag70 = this.type == 643;
																									float num1058 = 1000f;
																									this.velocity = Vector2.Zero;
																									if (flag69)
																									{
																										this.alpha -= 5;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										if (this.direction == 0)
																										{
																											this.direction = Main.player[this.owner].direction;
																										}
																										this.rotation -= (float)this.direction * 6.28318548f / 120f;
																										this.scale = this.Opacity;
																										Lighting.AddLight(base.Center, new Vector3(0.3f, 0.9f, 0.7f) * this.Opacity);
																										if (Main.rand.Next(2) == 0)
																										{
																											Vector2 vector135 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																											Dust dust31 = Main.dust[Dust.NewDust(base.Center - vector135 * 30f, 0, 0, 229, 0f, 0f, 0, default(Color), 1f)];
																											dust31.noGravity = true;
																											dust31.position = base.Center - vector135 * (float)Main.rand.Next(10, 21);
																											dust31.velocity = vector135.RotatedBy(1.5707963705062866, default(Vector2)) * 6f;
																											dust31.scale = 0.5f + Main.rand.NextFloat();
																											dust31.fadeIn = 0.5f;
																											dust31.customData = base.Center;
																										}
																										if (Main.rand.Next(2) == 0)
																										{
																											Vector2 vector136 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
																											Dust dust32 = Main.dust[Dust.NewDust(base.Center - vector136 * 30f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
																											dust32.noGravity = true;
																											dust32.position = base.Center - vector136 * 30f;
																											dust32.velocity = vector136.RotatedBy(-1.5707963705062866, default(Vector2)) * 3f;
																											dust32.scale = 0.5f + Main.rand.NextFloat();
																											dust32.fadeIn = 0.5f;
																											dust32.customData = base.Center;
																										}
																										if (this.ai[0] < 0f)
																										{
																											Vector2 center15 = base.Center;
																											int num1059 = Dust.NewDust(center15 - Vector2.One * 8f, 16, 16, 229, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
																											Main.dust[num1059].velocity *= 2f;
																											Main.dust[num1059].noGravity = true;
																											Main.dust[num1059].scale = Utils.SelectRandom<float>(Main.rand, new float[]
																											{
																												0.8f,
																												1.65f
																											});
																											Main.dust[num1059].customData = this;
																										}
																									}
																									if (flag70)
																									{
																										this.alpha -= 5;
																										if (this.alpha < 0)
																										{
																											this.alpha = 0;
																										}
																										if (this.direction == 0)
																										{
																											this.direction = Main.player[this.owner].direction;
																										}
																										if (++this.frameCounter >= 3)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																										if (this.alpha == 0 && Main.rand.Next(15) == 0)
																										{
																											Dust dust33 = Main.dust[Dust.NewDust(base.Top, 0, 0, 261, 0f, 0f, 100, default(Color), 1f)];
																											dust33.velocity.X = 0f;
																											dust33.noGravity = true;
																											dust33.fadeIn = 1f;
																											dust33.position = base.Center + Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (4f * Main.rand.NextFloat() + 26f);
																											dust33.scale = 0.5f;
																										}
																										this.localAI[0] += 1f;
																										if (this.localAI[0] >= 60f)
																										{
																											this.localAI[0] = 0f;
																										}
																									}
																									if (this.ai[0] < 0f)
																									{
																										this.ai[0] += 1f;
																										if (flag69)
																										{
																											this.ai[1] -= (float)this.direction * 0.3926991f / 50f;
																										}
																									}
																									if (this.ai[0] == 0f)
																									{
																										int num1060 = -1;
																										float num1061 = num1058;
																										NPC ownerMinionAttackTargetNPC6 = this.OwnerMinionAttackTargetNPC;
																										if (ownerMinionAttackTargetNPC6 != null && ownerMinionAttackTargetNPC6.CanBeChasedBy(this, false))
																										{
																											float num1062 = base.Distance(ownerMinionAttackTargetNPC6.Center);
																											if (num1062 < num1061 && Collision.CanHitLine(base.Center, 0, 0, ownerMinionAttackTargetNPC6.Center, 0, 0))
																											{
																												num1061 = num1062;
																												num1060 = ownerMinionAttackTargetNPC6.whoAmI;
																											}
																										}
																										if (num1060 < 0)
																										{
																											for (int num1063 = 0; num1063 < 200; num1063++)
																											{
																												NPC nPC15 = Main.npc[num1063];
																												if (nPC15.CanBeChasedBy(this, false))
																												{
																													float num1064 = base.Distance(nPC15.Center);
																													if (num1064 < num1061 && Collision.CanHitLine(base.Center, 0, 0, nPC15.Center, 0, 0))
																													{
																														num1061 = num1064;
																														num1060 = num1063;
																													}
																												}
																											}
																										}
																										if (num1060 != -1)
																										{
																											this.ai[0] = 1f;
																											this.ai[1] = (float)num1060;
																											this.netUpdate = true;
																											return;
																										}
																									}
																									if (this.ai[0] > 0f)
																									{
																										int num1065 = (int)this.ai[1];
																										if (!Main.npc[num1065].CanBeChasedBy(this, false))
																										{
																											this.ai[0] = 0f;
																											this.ai[1] = 0f;
																											this.netUpdate = true;
																											return;
																										}
																										this.ai[0] += 1f;
																										float num1066 = 30f;
																										if (flag70)
																										{
																											num1066 = 5f;
																										}
																										if (this.ai[0] >= num1066)
																										{
																											Vector2 vector137 = base.DirectionTo(Main.npc[num1065].Center);
																											if (vector137.HasNaNs())
																											{
																												vector137 = Vector2.UnitY;
																											}
																											float num1067 = vector137.ToRotation();
																											int num1068 = (vector137.X > 0f) ? 1 : -1;
																											if (flag69)
																											{
																												this.direction = num1068;
																												this.ai[0] = -60f;
																												this.ai[1] = num1067 + (float)num1068 * 3.14159274f / 16f;
																												this.netUpdate = true;
																												if (this.owner == Main.myPlayer)
																												{
																													Projectile.NewProjectile(base.Center.X, base.Center.Y, vector137.X, vector137.Y, 642, this.damage, this.knockBack, this.owner, 0f, (float)this.whoAmI);
																												}
																											}
																											if (flag70)
																											{
																												this.direction = num1068;
																												this.ai[0] = -20f;
																												this.netUpdate = true;
																												if (this.owner == Main.myPlayer)
																												{
																													Vector2 vector138 = Main.npc[num1065].position + Main.npc[num1065].Size * Utils.RandomVector2(Main.rand, 0f, 1f) - base.Center;
																													for (int num1069 = 0; num1069 < 3; num1069++)
																													{
																														Vector2 vector139 = base.Center + vector138;
																														if (num1069 > 0)
																														{
																															vector139 = base.Center + vector138.RotatedByRandom(0.78539818525314331) * (Main.rand.NextFloat() * 0.5f + 0.75f);
																														}
																														float x4 = Main.rgbToHsl(new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB)).X;
																														Projectile.NewProjectile(vector139.X, vector139.Y, 0f, 0f, 644, this.damage, this.knockBack, this.owner, x4, (float)this.whoAmI);
																													}
																													return;
																												}
																											}
																										}
																									}
																								}
																								else if (this.aiStyle == 124)
																								{
																									Player player10 = Main.player[this.owner];
																									if (player10.dead)
																									{
																										this.Kill();
																										return;
																									}
																									if (Main.myPlayer == this.owner && player10.suspiciouslookingTentacle)
																									{
																										this.timeLeft = 2;
																									}
																									this.direction = (this.spriteDirection = player10.direction);
																									Vector3 v3_ = new Vector3(0.5f, 0.9f, 1f) * 1.5f;
																									DelegateMethods.v3_1 = v3_;
																									Utils.PlotTileLine(base.Center, base.Center + this.velocity * 6f, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(base.Left, base.Right, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(player10.Center, player10.Center + player10.velocity * 6f, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Utils.PlotTileLine(player10.Left, player10.Right, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
																									Vector2 value70 = new Vector2((float)(player10.direction * 30), -20f);
																									Vector2 vector140 = player10.MountedCenter + value70;
																									float num1070 = Vector2.Distance(base.Center, vector140);
																									if (num1070 > 1000f)
																									{
																										base.Center = player10.Center + value70;
																									}
																									Vector2 vector141 = vector140 - base.Center;
																									float num1071 = 4f;
																									if (num1070 < num1071)
																									{
																										this.velocity *= 0.25f;
																									}
																									if (vector141 != Vector2.Zero)
																									{
																										if (vector141.Length() < num1071)
																										{
																											this.velocity = vector141;
																										}
																										else
																										{
																											this.velocity = vector141 * 0.1f;
																										}
																									}
																									if (this.velocity.Length() > 6f)
																									{
																										float num1072 = this.velocity.ToRotation() + 1.57079637f;
																										if (Math.Abs(this.rotation - num1072) >= 3.14159274f)
																										{
																											if (num1072 < this.rotation)
																											{
																												this.rotation -= 6.28318548f;
																											}
																											else
																											{
																												this.rotation += 6.28318548f;
																											}
																										}
																										float num1073 = 12f;
																										this.rotation = (this.rotation * (num1073 - 1f) + num1072) / num1073;
																										if (++this.frameCounter >= 4)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									else
																									{
																										if (this.rotation > 3.14159274f)
																										{
																											this.rotation -= 6.28318548f;
																										}
																										if (this.rotation > -0.005f && this.rotation < 0.005f)
																										{
																											this.rotation = 0f;
																										}
																										else
																										{
																											this.rotation *= 0.96f;
																										}
																										if (++this.frameCounter >= 6)
																										{
																											this.frameCounter = 0;
																											if (++this.frame >= Main.projFrames[this.type])
																											{
																												this.frame = 0;
																											}
																										}
																									}
																									if (this.ai[0] > 0f && (this.ai[0] += 1f) >= 60f)
																									{
																										this.ai[0] = 0f;
																										this.ai[1] = 0f;
																									}
																									if (Main.rand.Next(15) == 0)
																									{
																										float num1074 = -1f;
																										int num1075 = 17;
																										if ((base.Center - player10.Center).Length() < (float)Main.screenWidth)
																										{
																											int num1076 = (int)base.Center.X / 16;
																											int num1077 = (int)base.Center.Y / 16;
																											num1076 = (int)MathHelper.Clamp((float)num1076, (float)(num1075 + 1), (float)(Main.maxTilesX - num1075 - 1));
																											num1077 = (int)MathHelper.Clamp((float)num1077, (float)(num1075 + 1), (float)(Main.maxTilesY - num1075 - 1));
																											for (int num1078 = num1076 - num1075; num1078 <= num1076 + num1075; num1078++)
																											{
																												for (int num1079 = num1077 - num1075; num1079 <= num1077 + num1075; num1079++)
																												{
																													int num1080 = Main.rand.Next(8);
																													if (num1080 < 4)
																													{
																														Vector2 vector142 = new Vector2((float)(num1076 - num1078), (float)(num1077 - num1079));
																														if (vector142.Length() < (float)num1075 && Main.tile[num1078, num1079] != null && Main.tile[num1078, num1079].active())
																														{
																															bool flag71 = false;
																															if (Main.tile[num1078, num1079].type == 185 && Main.tile[num1078, num1079].frameY == 18)
																															{
																																if (Main.tile[num1078, num1079].frameX >= 576 && Main.tile[num1078, num1079].frameX <= 882)
																																{
																																	flag71 = true;
																																}
																															}
																															else if (Main.tile[num1078, num1079].type == 186 && Main.tile[num1078, num1079].frameX >= 864 && Main.tile[num1078, num1079].frameX <= 1170)
																															{
																																flag71 = true;
																															}
																															if (flag71 || Main.tileSpelunker[(int)Main.tile[num1078, num1079].type] || (Main.tileAlch[(int)Main.tile[num1078, num1079].type] && Main.tile[num1078, num1079].type != 82))
																															{
																																float num1081 = base.Distance(new Vector2((float)(num1078 * 16 + 8), (float)(num1079 * 16 + 8)));
																																if (num1081 < num1074 || num1074 == -1f)
																																{
																																	num1074 = num1081;
																																	this.ai[0] = 1f;
																																	this.ai[1] = base.AngleTo(new Vector2((float)(num1078 * 16 + 8), (float)(num1079 * 16 + 8)));
																																}
																																if (num1080 < 2)
																																{
																																	int num1082 = Dust.NewDust(new Vector2((float)(num1078 * 16), (float)(num1079 * 16)), 16, 16, 204, 0f, 0f, 150, default(Color), 0.3f);
																																	Main.dust[num1082].fadeIn = 0.75f;
																																	Main.dust[num1082].velocity *= 0.1f;
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																									float f3 = this.localAI[0] % 6.28318548f - 3.14159274f;
																									float num1083 = (float)Math.IEEERemainder((double)this.localAI[1], 1.0);
																									if (num1083 < 0f)
																									{
																										num1083 += 1f;
																									}
																									float num1084 = (float)Math.Floor((double)this.localAI[1]);
																									float max = 0.999f;
																									int num1085 = 0;
																									float amount2 = 0.1f;
																									bool flag72 = player10.velocity.Length() > 3f;
																									int num1086 = -1;
																									int num1087 = -1;
																									float num1088 = 300f;
																									float num1089 = 500f;
																									for (int num1090 = 0; num1090 < 200; num1090++)
																									{
																										NPC nPC16 = Main.npc[num1090];
																										if (nPC16.active && nPC16.chaseable && !nPC16.dontTakeDamage && !nPC16.immortal)
																										{
																											float num1091 = base.Distance(nPC16.Center);
																											if (nPC16.friendly || nPC16.lifeMax <= 5)
																											{
																												if (num1091 < num1088 && !flag72)
																												{
																													num1088 = num1091;
																													num1087 = num1090;
																												}
																											}
																											else if (num1091 < num1089)
																											{
																												num1089 = num1091;
																												num1086 = num1090;
																											}
																										}
																									}
																									float num1092;
																									if (flag72)
																									{
																										num1092 = base.AngleTo(base.Center + player10.velocity);
																										num1085 = 1;
																										num1083 = MathHelper.Clamp(num1083 + 0.05f, 0f, max);
																										num1084 += (float)Math.Sign(-10f - num1084);
																									}
																									else if (num1086 != -1)
																									{
																										num1092 = base.AngleTo(Main.npc[num1086].Center);
																										num1085 = 2;
																										num1083 = MathHelper.Clamp(num1083 + 0.05f, 0f, max);
																										num1084 += (float)Math.Sign(-12f - num1084);
																									}
																									else if (num1087 != -1)
																									{
																										num1092 = base.AngleTo(Main.npc[num1087].Center);
																										num1085 = 3;
																										num1083 = MathHelper.Clamp(num1083 + 0.05f, 0f, max);
																										num1084 += (float)Math.Sign(6f - num1084);
																									}
																									else if (this.ai[0] > 0f)
																									{
																										num1092 = this.ai[1];
																										num1083 = MathHelper.Clamp(num1083 + (float)Math.Sign(0.75f - num1083) * 0.05f, 0f, max);
																										num1085 = 4;
																										num1084 += (float)Math.Sign(10f - num1084);
																										if (Main.rand.Next(10) == 0)
																										{
																											int num1093 = Dust.NewDust(base.Center + f3.ToRotationVector2() * 6f * num1083 - Vector2.One * 4f, 8, 8, 204, 0f, 0f, 150, default(Color), 0.3f);
																											Main.dust[num1093].fadeIn = 0.75f;
																											Main.dust[num1093].velocity *= 0.1f;
																										}
																									}
																									else
																									{
																										num1092 = ((player10.direction == 1) ? 0f : 3.14160275f);
																										num1083 = MathHelper.Clamp(num1083 + (float)Math.Sign(0.75f - num1083) * 0.05f, 0f, max);
																										num1084 += (float)Math.Sign(0f - num1084);
																										amount2 = 0.12f;
																									}
																									Vector2 value71 = num1092.ToRotationVector2();
																									num1092 = Vector2.Lerp(f3.ToRotationVector2(), value71, amount2).ToRotation();
																									this.localAI[0] = num1092 + (float)num1085 * 6.28318548f + 3.14159274f;
																									this.localAI[1] = num1084 + num1083;
																									return;
																								}
																								else
																								{
																									if (this.aiStyle == 125)
																									{
																										Player player11 = Main.player[this.owner];
																										if (Main.myPlayer == this.owner)
																										{
																											if (this.localAI[1] > 0f)
																											{
																												this.localAI[1] -= 1f;
																											}
																											if (player11.noItems || player11.CCed || player11.dead)
																											{
																												this.Kill();
																											}
																											else if (Main.mouseRight && Main.mouseRightRelease)
																											{
																												this.Kill();
																												player11.mouseInterface = true;
																												Main.blockMouse = true;
																											}
																											else if (!player11.channel)
																											{
																												if (this.localAI[0] == 0f)
																												{
																													this.localAI[0] = 1f;
																												}
																												this.Kill();
																											}
																											else if (this.localAI[1] == 0f)
																											{
																												Vector2 vector143 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY);
																												if (player11.gravDir == -1f)
																												{
																													vector143.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
																												}
																												if (vector143 != base.Center)
																												{
																													this.netUpdate = true;
																													base.Center = vector143;
																													this.localAI[1] = 1f;
																												}
																												if (this.ai[0] == 0f && this.ai[1] == 0f)
																												{
																													this.ai[0] = (float)((int)base.Center.X / 16);
																													this.ai[1] = (float)((int)base.Center.Y / 16);
																													this.netUpdate = true;
																													this.velocity = Vector2.Zero;
																												}
																											}
																											this.velocity = Vector2.Zero;
																											Point point5 = new Vector2(this.ai[0], this.ai[1]).ToPoint();
																											Point point6 = base.Center.ToTileCoordinates();
																											Math.Abs(point5.X - point6.X);
																											Math.Abs(point5.Y - point6.Y);
																											int num1094 = Math.Sign(point6.X - point5.X);
																											int num1095 = Math.Sign(point6.Y - point5.Y);
																											Point point7 = default(Point);
																											bool flag73 = false;
																											bool flag74 = player11.direction == 1;
																											int num1096;
																											int num1097;
																											int num1098;
																											if (flag74)
																											{
																												point7.X = point5.X;
																												num1096 = point5.Y;
																												num1097 = point6.Y;
																												num1098 = num1095;
																											}
																											else
																											{
																												point7.Y = point5.Y;
																												num1096 = point5.X;
																												num1097 = point6.X;
																												num1098 = num1094;
																											}
																											int num1099 = num1096;
																											while (num1099 != num1097 && !flag73)
																											{
																												if (flag74)
																												{
																													point7.Y = num1099;
																												}
																												else
																												{
																													point7.X = num1099;
																												}
																												if (WorldGen.InWorld(point7.X, point7.Y, 1))
																												{
																													Tile tile2 = Main.tile[point7.X, point7.Y];
																												}
																												num1099 += num1098;
																											}
																											if (flag74)
																											{
																												point7.Y = point6.Y;
																												num1096 = point5.X;
																												num1097 = point6.X;
																												num1098 = num1094;
																											}
																											else
																											{
																												point7.X = point6.X;
																												num1096 = point5.Y;
																												num1097 = point6.Y;
																												num1098 = num1095;
																											}
																											int num1100 = num1096;
																											while (num1100 != num1097 && !flag73)
																											{
																												if (!flag74)
																												{
																													point7.Y = num1100;
																												}
																												else
																												{
																													point7.X = num1100;
																												}
																												if (WorldGen.InWorld(point7.X, point7.Y, 1))
																												{
																													Tile tile2 = Main.tile[point7.X, point7.Y];
																												}
																												num1100 += num1098;
																											}
																										}
																										int num1101 = Math.Sign(player11.velocity.X);
																										if (num1101 != 0)
																										{
																											player11.ChangeDir(num1101);
																										}
																										player11.heldProj = this.whoAmI;
																										player11.itemTime = 2;
																										player11.itemAnimation = 2;
																										player11.itemRotation = 0f;
																										return;
																									}
																									if (this.aiStyle == 126)
																									{
																										int num1102 = Math.Sign(this.velocity.Y);
																										int num1103 = (num1102 == -1) ? 0 : 1;
																										if (this.ai[0] == 0f)
																										{
																											if (!Collision.SolidCollision(this.position + new Vector2(0f, (float)((num1102 == -1) ? (this.height - 48) : 0)), this.width, 48) && !Collision.WetCollision(this.position + new Vector2(0f, (float)((num1102 == -1) ? (this.height - 20) : 0)), this.width, 20))
																											{
																												this.velocity = new Vector2(0f, (float)Math.Sign(this.velocity.Y) * 0.001f);
																												this.ai[0] = 1f;
																												this.ai[1] = 0f;
																												this.timeLeft = 60;
																											}
																											this.ai[1] += 1f;
																											if (this.ai[1] >= 60f)
																											{
																												this.Kill();
																											}
																											for (int num1104 = 0; num1104 < 3; num1104++)
																											{
																												int num1105 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
																												Main.dust[num1105].scale = 0.1f + (float)Main.rand.Next(5) * 0.1f;
																												Main.dust[num1105].fadeIn = 1.5f + (float)Main.rand.Next(5) * 0.1f;
																												Main.dust[num1105].noGravity = true;
																												Main.dust[num1105].position = base.Center + new Vector2(0f, (float)(-(float)this.height / 2)).RotatedBy((double)this.rotation, default(Vector2)) * 1.1f;
																											}
																										}
																										if (this.ai[0] == 1f)
																										{
																											this.velocity = new Vector2(0f, (float)Math.Sign(this.velocity.Y) * 0.001f);
																											if (num1102 != 0)
																											{
																												int num1106 = 16;
																												int num1107 = 320;
																												if (this.type == 670)
																												{
																													num1107 -= (int)Math.Abs(this.localAI[1]) * 64;
																												}
																												while (num1106 < num1107 && !Collision.SolidCollision(this.position + new Vector2(0f, (float)((num1102 == -1) ? (this.height - num1106 - 16) : 0)), this.width, num1106 + 16))
																												{
																													num1106 += 16;
																												}
																												if (num1102 == -1)
																												{
																													this.position.Y = this.position.Y + (float)this.height;
																													this.height = num1106;
																													this.position.Y = this.position.Y - (float)num1106;
																												}
																												else
																												{
																													this.height = num1106;
																												}
																											}
																											this.ai[1] += 1f;
																											if (this.type == 670 && this.owner == Main.myPlayer && this.ai[1] == 12f && this.localAI[1] < 3f && this.localAI[1] > -3f)
																											{
																												if (this.localAI[1] == 0f)
																												{
																													int num1108 = Projectile.NewProjectile(base.Bottom + new Vector2(-50f, -10f), -Vector2.UnitY, this.type, this.damage, this.knockBack, this.owner, 0f, 0f);
																													Main.projectile[num1108].localAI[1] = this.localAI[1] - 1f;
																													num1108 = Projectile.NewProjectile(base.Bottom + new Vector2(50f, -10f), -Vector2.UnitY, this.type, this.damage, this.knockBack, this.owner, 0f, 0f);
																													Main.projectile[num1108].localAI[1] = this.localAI[1] + 1f;
																												}
																												else
																												{
																													int num1109 = Math.Sign(this.localAI[1]);
																													int num1110 = Projectile.NewProjectile(base.Bottom + new Vector2((float)(50 * num1109), -10f), -Vector2.UnitY, this.type, this.damage, this.knockBack, this.owner, 0f, 0f);
																													Main.projectile[num1110].localAI[1] = this.localAI[1] + (float)num1109;
																												}
																											}
																											if (this.ai[1] >= 60f)
																											{
																												this.Kill();
																											}
																											if (this.localAI[0] == 0f)
																											{
																												this.localAI[0] = 1f;
																												int num1111 = 0;
																												while ((float)num1111 < 60f)
																												{
																													int num1112 = Utils.SelectRandom<int>(Main.rand, new int[]
																													{
																														6,
																														259,
																														158
																													});
																													int num1113 = Dust.NewDust(this.position, this.width, this.height, num1112, 0f, -2.5f * (float)(-(float)num1102), 0, default(Color), 1f);
																													Main.dust[num1113].alpha = 200;
																													Main.dust[num1113].velocity *= new Vector2(0.3f, 2f);
																													Dust expr_2FFDD_cp_0 = Main.dust[num1113];
																													expr_2FFDD_cp_0.velocity.Y = expr_2FFDD_cp_0.velocity.Y + (float)(2 * num1102);
																													Main.dust[num1113].scale += Main.rand.NextFloat();
																													Main.dust[num1113].position = new Vector2(base.Center.X, base.Center.Y + (float)this.height * 0.5f * (float)(-(float)num1102));
																													Main.dust[num1113].customData = num1103;
																													if (num1102 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_3008A_cp_0 = Main.dust[num1113];
																														expr_3008A_cp_0.velocity.Y = expr_3008A_cp_0.velocity.Y - 0.2f;
																													}
																													num1111++;
																												}
																												Main.PlaySound(SoundID.Item34, this.position);
																											}
																											if (num1102 == 1)
																											{
																												int num1114 = 0;
																												while ((float)num1114 < 9f)
																												{
																													int num1115 = Utils.SelectRandom<int>(Main.rand, new int[]
																													{
																														6,
																														259,
																														158
																													});
																													int num1116 = Dust.NewDust(this.position, this.width, this.height, num1115, 0f, -2.5f * (float)(-(float)num1102), 0, default(Color), 1f);
																													Main.dust[num1116].alpha = 200;
																													Main.dust[num1116].velocity *= new Vector2(0.3f, 2f);
																													Dust expr_301A2_cp_0 = Main.dust[num1116];
																													expr_301A2_cp_0.velocity.Y = expr_301A2_cp_0.velocity.Y + (float)(2 * num1102);
																													Main.dust[num1116].scale += Main.rand.NextFloat();
																													Main.dust[num1116].position = new Vector2(base.Center.X, base.Center.Y + (float)this.height * 0.5f * (float)(-(float)num1102));
																													Main.dust[num1116].customData = num1103;
																													if (num1102 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_3024F_cp_0 = Main.dust[num1116];
																														expr_3024F_cp_0.velocity.Y = expr_3024F_cp_0.velocity.Y - 0.2f;
																													}
																													num1114++;
																												}
																											}
																											int num1117 = (int)(this.ai[1] / 60f * (float)this.height) * 3;
																											if (num1117 > this.height)
																											{
																												num1117 = this.height;
																											}
																											Vector2 position = this.position + ((num1102 == -1) ? new Vector2(0f, (float)(this.height - num1117)) : Vector2.Zero);
																											Vector2 vector144 = this.position + ((num1102 == -1) ? new Vector2(0f, (float)this.height) : Vector2.Zero);
																											int num1118 = 0;
																											while ((float)num1118 < 6f)
																											{
																												if (Main.rand.Next(3) < 2)
																												{
																													int num1119 = Dust.NewDust(position, this.width, num1117, 6, 0f, 0f, 90, default(Color), 2.5f);
																													Main.dust[num1119].noGravity = true;
																													Main.dust[num1119].fadeIn = 1f;
																													if (Main.dust[num1119].velocity.Y > 0f)
																													{
																														Dust expr_303AD_cp_0 = Main.dust[num1119];
																														expr_303AD_cp_0.velocity.Y = expr_303AD_cp_0.velocity.Y * -1f;
																													}
																													if (Main.rand.Next(6) < 3)
																													{
																														Main.dust[num1119].position.Y = MathHelper.Lerp(Main.dust[num1119].position.Y, vector144.Y, 0.5f);
																														Main.dust[num1119].velocity *= 5f;
																														Dust expr_30438_cp_0 = Main.dust[num1119];
																														expr_30438_cp_0.velocity.Y = expr_30438_cp_0.velocity.Y - 3f;
																														Main.dust[num1119].position.X = base.Center.X;
																														Main.dust[num1119].noGravity = false;
																														Main.dust[num1119].noLight = true;
																														Main.dust[num1119].fadeIn = 0.4f;
																														Main.dust[num1119].scale *= 0.3f;
																													}
																													else
																													{
																														Main.dust[num1119].velocity = base.DirectionFrom(Main.dust[num1119].position) * Main.dust[num1119].velocity.Length() * 0.25f;
																													}
																													Dust expr_3050F_cp_0 = Main.dust[num1119];
																													expr_3050F_cp_0.velocity.Y = expr_3050F_cp_0.velocity.Y * (float)(-(float)num1102);
																													Main.dust[num1119].customData = num1103;
																												}
																												num1118++;
																											}
																											int num1120 = 0;
																											while ((float)num1120 < 6f)
																											{
																												if (Main.rand.NextFloat() >= 0.5f)
																												{
																													int num1121 = Utils.SelectRandom<int>(Main.rand, new int[]
																													{
																														6,
																														259,
																														158
																													});
																													int num1122 = Dust.NewDust(position, this.width, num1117, num1121, 0f, -2.5f * (float)(-(float)num1102), 0, default(Color), 1f);
																													Main.dust[num1122].alpha = 200;
																													Main.dust[num1122].velocity *= new Vector2(0.6f, 1.5f);
																													Main.dust[num1122].scale += Main.rand.NextFloat();
																													if (num1102 == -1 && Main.rand.Next(4) != 0)
																													{
																														Dust expr_30669_cp_0 = Main.dust[num1122];
																														expr_30669_cp_0.velocity.Y = expr_30669_cp_0.velocity.Y - 0.2f;
																													}
																													Main.dust[num1122].customData = num1103;
																												}
																												num1120++;
																											}
																											return;
																										}
																									}
																									else if (this.aiStyle == 127)
																									{
																										float num1123 = 900f;
																										if (this.type == 657)
																										{
																											num1123 = 300f;
																										}
																										if (this.soundDelay == 0)
																										{
																											this.soundDelay = -1;
																											Main.PlaySound(SoundID.Item82, base.Center);
																										}
																										this.ai[0] += 1f;
																										if (this.ai[0] >= num1123)
																										{
																											this.Kill();
																										}
																										if (this.type == 656 && this.localAI[0] >= 30f)
																										{
																											this.damage = 0;
																											if (this.ai[0] < num1123 - 120f)
																											{
																												float num1124 = this.ai[0] % 60f;
																												this.ai[0] = num1123 - 120f + num1124;
																												this.netUpdate = true;
																											}
																										}
																										float num1125 = 15f;
																										float num1126 = 15f;
																										Point point8 = base.Center.ToTileCoordinates();
																										int num1127;
																										int num1128;
																										Collision.ExpandVertically(point8.X, point8.Y, out num1127, out num1128, (int)num1125, (int)num1126);
																										num1127++;
																										num1128--;
																										Vector2 value72 = new Vector2((float)point8.X, (float)num1127) * 16f + new Vector2(8f);
																										Vector2 value73 = new Vector2((float)point8.X, (float)num1128) * 16f + new Vector2(8f);
																										Vector2 vector145 = Vector2.Lerp(value72, value73, 0.5f);
																										Vector2 value74 = new Vector2(0f, value73.Y - value72.Y);
																										value74.X = value74.Y * 0.2f;
																										this.width = (int)(value74.X * 0.65f);
																										this.height = (int)value74.Y;
																										base.Center = vector145;
																										if (this.type == 656 && this.owner == Main.myPlayer)
																										{
																											bool flag75 = false;
																											Vector2 center16 = Main.player[this.owner].Center;
																											Vector2 top = Main.player[this.owner].Top;
																											for (float num1129 = 0f; num1129 < 1f; num1129 += 0.05f)
																											{
																												Vector2 position2 = Vector2.Lerp(value72, value73, num1129);
																												if (Collision.CanHitLine(position2, 0, 0, center16, 0, 0) || Collision.CanHitLine(position2, 0, 0, top, 0, 0))
																												{
																													flag75 = true;
																													break;
																												}
																											}
																											if (!flag75 && this.ai[0] < num1123 - 120f)
																											{
																												float num1130 = this.ai[0] % 60f;
																												this.ai[0] = num1123 - 120f + num1130;
																												this.netUpdate = true;
																											}
																										}
																										if (this.ai[0] < num1123 - 120f)
																										{
																											for (int num1131 = 0; num1131 < 1; num1131++)
																											{
																												float value75 = -0.5f;
																												float value76 = 0.9f;
																												float amount3 = Main.rand.NextFloat();
																												Vector2 value77 = new Vector2(MathHelper.Lerp(0.1f, 1f, Main.rand.NextFloat()), MathHelper.Lerp(value75, value76, amount3));
																												value77.X *= MathHelper.Lerp(2.2f, 0.6f, amount3);
																												value77.X *= -1f;
																												Vector2 value78 = new Vector2(6f, 10f);
																												Vector2 position3 = vector145 + value74 * value77 * 0.5f + value78;
																												Dust dust34 = Main.dust[Dust.NewDust(position3, 0, 0, 269, 0f, 0f, 0, default(Color), 1f)];
																												dust34.position = position3;
																												dust34.customData = vector145 + value78;
																												dust34.fadeIn = 1f;
																												dust34.scale = 0.3f;
																												if (value77.X > -1.2f)
																												{
																													dust34.velocity.X = 1f + Main.rand.NextFloat();
																												}
																												dust34.velocity.Y = Main.rand.NextFloat() * -0.5f - 1f;
																											}
																											return;
																										}
																									}
																									else if (this.aiStyle == 128)
																									{
																										Color newColor3 = new Color(255, 255, 255);
																										if (this.soundDelay == 0)
																										{
																											this.soundDelay = -1;
																											Main.PlaySound(SoundID.Item60, base.Center);
																										}
																										if (this.localAI[1] < 30f)
																										{
																											for (int num1132 = 0; num1132 < 1; num1132++)
																											{
																												float value79 = -0.5f;
																												float value80 = 0.9f;
																												float amount4 = Main.rand.NextFloat();
																												Vector2 value81 = new Vector2(MathHelper.Lerp(0.1f, 1f, Main.rand.NextFloat()), MathHelper.Lerp(value79, value80, amount4));
																												value81.X *= MathHelper.Lerp(2.2f, 0.6f, amount4);
																												value81.X *= -1f;
																												Vector2 value82 = new Vector2(2f, 10f);
																												Vector2 position4 = base.Center + new Vector2(60f, 200f) * value81 * 0.5f + value82;
																												Dust dust35 = Main.dust[Dust.NewDust(position4, 0, 0, 269, 0f, 0f, 0, default(Color), 1f)];
																												dust35.position = position4;
																												dust35.customData = base.Center + value82;
																												dust35.fadeIn = 1f;
																												dust35.scale = 0.3f;
																												if (value81.X > -1.2f)
																												{
																													dust35.velocity.X = 1f + Main.rand.NextFloat();
																												}
																												dust35.velocity.Y = Main.rand.NextFloat() * -0.5f - 1f;
																											}
																										}
																										if (this.localAI[0] == 0f)
																										{
																											this.localAI[0] = 0.8f;
																											this.direction = 1;
																											Point point9 = base.Center.ToTileCoordinates();
																											base.Center = new Vector2((float)(point9.X * 16 + 8), (float)(point9.Y * 16 + 8));
																										}
																										this.rotation = this.localAI[1] / 40f * 6.28318548f * (float)this.direction;
																										if (this.localAI[1] < 33f)
																										{
																											if (this.alpha > 0)
																											{
																												this.alpha -= 8;
																											}
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																										}
																										if (this.localAI[1] > 103f)
																										{
																											if (this.alpha < 255)
																											{
																												this.alpha += 16;
																											}
																											if (this.alpha > 255)
																											{
																												this.alpha = 255;
																											}
																										}
																										if (this.alpha == 0)
																										{
																											Lighting.AddLight(base.Center, newColor3.ToVector3() * 0.5f);
																										}
																										for (int num1133 = 0; num1133 < 2; num1133++)
																										{
																											if (Main.rand.Next(10) == 0)
																											{
																												Vector2 value83 = Vector2.UnitY.RotatedBy((double)((float)num1133 * 3.14159274f), default(Vector2)).RotatedBy((double)this.rotation, default(Vector2));
																												Dust dust36 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor3, 1.5f)];
																												dust36.noGravity = true;
																												dust36.noLight = true;
																												dust36.scale = this.Opacity * this.localAI[0];
																												dust36.position = base.Center;
																												dust36.velocity = value83 * 2.5f;
																											}
																										}
																										for (int num1134 = 0; num1134 < 2; num1134++)
																										{
																											if (Main.rand.Next(10) == 0)
																											{
																												Vector2 value84 = Vector2.UnitY.RotatedBy((double)((float)num1134 * 3.14159274f), default(Vector2));
																												Dust dust37 = Main.dust[Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 225, newColor3, 1.5f)];
																												dust37.noGravity = true;
																												dust37.noLight = true;
																												dust37.scale = this.Opacity * this.localAI[0];
																												dust37.position = base.Center;
																												dust37.velocity = value84 * 2.5f;
																											}
																										}
																										if (this.localAI[1] < 33f || this.localAI[1] > 87f)
																										{
																											this.scale = this.Opacity / 2f * this.localAI[0];
																										}
																										this.velocity = Vector2.Zero;
																										this.localAI[1] += 1f;
																										if (this.localAI[1] == 60f && this.owner == Main.myPlayer)
																										{
																											int num1135 = 30;
																											if (Main.expertMode)
																											{
																												num1135 = 22;
																											}
																											Projectile.NewProjectile(base.Center, Vector2.Zero, 657, num1135, 3f, this.owner, 0f, 0f);
																										}
																										if (this.localAI[1] >= 120f)
																										{
																											this.Kill();
																											return;
																										}
																									}
																									else if (this.aiStyle == 129)
																									{
																										float num1136 = 10f;
																										float scaleFactor18 = 5f;
																										float num1137 = 40f;
																										if (this.type == 659)
																										{
																											num1136 = 3f;
																											scaleFactor18 = 7.5f;
																											num1137 = 1f;
																											if (this.localAI[0] > 0f)
																											{
																												this.localAI[0] -= 1f;
																											}
																											if (this.localAI[0] == 0f && this.ai[0] < 0f && this.owner == Main.myPlayer)
																											{
																												this.localAI[0] = 5f;
																												for (int num1138 = 0; num1138 < 200; num1138++)
																												{
																													NPC nPC17 = Main.npc[num1138];
																													if (nPC17.CanBeChasedBy(this, false))
																													{
																														bool flag76 = this.ai[0] < 0f || Main.npc[(int)this.ai[0]].Distance(base.Center) > nPC17.Distance(base.Center);
																														flag76 &= (nPC17.Distance(base.Center) < 400f);
																														if (flag76 && (Collision.CanHitLine(base.Center, 0, 0, nPC17.Center, 0, 0) || Collision.CanHitLine(base.Center, 0, 0, nPC17.Top, 0, 0)))
																														{
																															this.ai[0] = (float)num1138;
																														}
																													}
																												}
																												if (this.ai[0] >= 0f)
																												{
																													this.timeLeft = 300;
																													this.netUpdate = true;
																												}
																											}
																											if (this.timeLeft > 30 && this.alpha > 0)
																											{
																												this.alpha -= 12;
																											}
																											if (this.timeLeft > 30 && this.alpha < 128 && Collision.SolidCollision(this.position, this.width, this.height))
																											{
																												this.alpha = 128;
																											}
																											if (this.alpha < 0)
																											{
																												this.alpha = 0;
																											}
																											if (++this.frameCounter > 4)
																											{
																												this.frameCounter = 0;
																												if (++this.frame >= 4)
																												{
																													this.frame = 0;
																												}
																											}
																											float num1139 = 0.5f;
																											if (this.timeLeft < 120)
																											{
																												num1139 = 1.1f;
																											}
																											if (this.timeLeft < 60)
																											{
																												num1139 = 1.6f;
																											}
																											this.ai[1] += 1f;
																											float arg_31459_0 = this.ai[1] / 180f;
																											for (float num1140 = 0f; num1140 < 3f; num1140 += 1f)
																											{
																												if (Main.rand.Next(3) == 0)
																												{
																													Dust dust38 = Main.dust[Dust.NewDust(base.Center, 0, 0, 27, 0f, -2f, 0, default(Color), 1f)];
																													dust38.position = base.Center + Vector2.UnitY.RotatedBy((double)(num1140 * 6.28318548f / 3f + this.ai[1]), default(Vector2)) * 10f;
																													dust38.noGravity = true;
																													dust38.velocity = base.DirectionFrom(dust38.position);
																													dust38.scale = num1139;
																													dust38.fadeIn = 0.5f;
																													dust38.alpha = 200;
																												}
																											}
																										}
																										if (this.timeLeft > 2 && Collision.SolidCollision(this.position, this.width, this.height))
																										{
																											this.timeLeft = 2;
																										}
																										int num1141 = (int)this.ai[0];
																										if (num1141 >= 0 && Main.npc[num1141].active)
																										{
																											if (base.Distance(Main.npc[num1141].Center) > num1137)
																											{
																												Vector2 vector146 = base.DirectionTo(Main.npc[num1141].Center);
																												if (vector146.HasNaNs())
																												{
																													vector146 = Vector2.UnitY;
																												}
																												this.velocity = (this.velocity * (num1136 - 1f) + vector146 * scaleFactor18) / num1136;
																												return;
																											}
																										}
																										else
																										{
																											if (this.ai[0] == -1f && this.timeLeft > 5)
																											{
																												this.timeLeft = 5;
																											}
																											if (this.ai[0] == -2f && this.timeLeft > 180)
																											{
																												this.timeLeft = 180;
																											}
																											if (this.ai[0] >= 0f)
																											{
																												this.ai[0] = -1f;
																												this.netUpdate = true;
																												return;
																											}
																										}
																									}
																									else
																									{
																										if (this.aiStyle == 130)
																										{
																											this.AI_130_FlameBurstTower();
																											return;
																										}
																										if (this.aiStyle == 131)
																										{
																											this.AI_131_FlameBurstShot();
																											return;
																										}
																										if (this.aiStyle == 132)
																										{
																											if (this.localAI[1] == 0f)
																											{
																												if (this.localAI[0] == 0f)
																												{
																													Main.PlayTrackedSound(SoundID.DD2_DefeatScene, base.Center);
																												}
																												if (this.localAI[0] == 105f)
																												{
																													for (int num1142 = 0; num1142 < 20; num1142++)
																													{
																														float num1143 = (float)num1142 / 20f;
																														Vector2 vector147 = new Vector2(Main.rand.NextFloat() * 10f, 0f).RotatedBy((double)(num1143 * -3.14159274f + Main.rand.NextFloat() * 0.1f - 0.05f), default(Vector2));
																														Gore gore = Gore.NewGoreDirect(base.Center + vector147 * 3f, vector147, Utils.SelectRandom<int>(Main.rand, new int[]
																														{
																															1027,
																															1028,
																															1029,
																															1030
																														}), 1f);
																														if (gore.velocity.Y > 0f)
																														{
																															gore.velocity *= -0.5f;
																														}
																														if (gore.velocity.Y < -5f)
																														{
																															Gore expr_3184C_cp_0 = gore;
																															expr_3184C_cp_0.velocity.Y = expr_3184C_cp_0.velocity.Y * 0.8f;
																														}
																														Gore expr_31866_cp_0 = gore;
																														expr_31866_cp_0.velocity.Y = expr_31866_cp_0.velocity.Y * 1.1f;
																														Gore expr_31880_cp_0 = gore;
																														expr_31880_cp_0.velocity.X = expr_31880_cp_0.velocity.X * 0.88f;
																													}
																												}
																												if (!Main.dedServ)
																												{
																													if (!Filters.Scene["CrystalDestructionVortex"].IsActive())
																													{
																														Filters.Scene.Activate("CrystalDestructionVortex", default(Vector2), new object[0]);
																													}
																													if (!Filters.Scene["CrystalDestructionColor"].IsActive())
																													{
																														Filters.Scene.Activate("CrystalDestructionColor", default(Vector2), new object[0]);
																													}
																													float num1144 = Math.Min(1f, this.localAI[0] / 120f);
																													Filters.Scene["CrystalDestructionColor"].GetShader().UseIntensity(num1144);
																													Filters.Scene["CrystalDestructionVortex"].GetShader().UseIntensity(num1144 * 2f).UseProgress(0f).UseTargetPosition(base.Center);
																												}
																												if (this.localAI[0] == 120f)
																												{
																													this.localAI[0] = 0f;
																													this.localAI[1] += 1f;
																												}
																											}
																											else if (this.localAI[1] == 1f)
																											{
																												if (!Main.dedServ)
																												{
																													float arg_31A02_0 = this.localAI[0] / 300f;
																													float num1145 = Math.Min(1f, this.localAI[0] / 150f);
																													this.velocity.Y = num1145 * -0.25f;
																													if (!Filters.Scene["CrystalDestructionVortex"].IsActive())
																													{
																														Filters.Scene.Activate("CrystalDestructionVortex", default(Vector2), new object[0]);
																													}
																													if (!Filters.Scene["CrystalDestructionColor"].IsActive())
																													{
																														Filters.Scene.Activate("CrystalDestructionColor", default(Vector2), new object[0]);
																													}
																													num1145 = 1f;
																													Filters.Scene["CrystalDestructionColor"].GetShader().UseIntensity(num1145);
																													Filters.Scene["CrystalDestructionVortex"].GetShader().UseIntensity(num1145 * 2f).UseProgress(0f).UseTargetPosition(base.Center);
																												}
																												if (this.localAI[0] == 300f)
																												{
																													this.localAI[0] = 0f;
																													this.localAI[1] += 1f;
																												}
																											}
																											else if (this.localAI[1] == 2f)
																											{
																												float num1146 = this.localAI[0] / 300f;
																												if (Main.netMode != 2)
																												{
																													Filters.Scene["CrystalDestructionVortex"].GetShader().UseIntensity(2f).UseProgress(num1146 * 30f);
																												}
																												this.velocity.Y = this.velocity.Y - 1f;
																												if (this.localAI[0] == 60f)
																												{
																													this.localAI[0] = 0f;
																													this.localAI[1] += 1f;
																												}
																											}
																											else if (this.localAI[1] == 3f)
																											{
																												if (Main.dedServ)
																												{
																													Filters.Scene.Deactivate("CrystalDestructionVortex", new object[0]);
																													Filters.Scene.Deactivate("CrystalDestructionColor", new object[0]);
																												}
																												this.Kill();
																											}
																											if (this.localAI[1] >= 1f)
																											{
																												for (int num1147 = 0; num1147 < 1 + (int)(-(int)this.velocity.Y); num1147++)
																												{
																													if (Main.rand.Next(2) == 0)
																													{
																														float num1148 = Main.rand.NextFloat() * -this.velocity.Y;
																														Vector2 vector148 = new Vector2(Main.rand.NextFloat() * 0.1f - 0.05f, 0f);
																														vector148.X += (float)Math.Sin((double)((this.position.Y + num1148) * 0.01f) + 6.2831854820251465 * ((double)Main.rand.Next(3) / 3.0)) * 0.5f;
																														vector148.X = MathHelper.Lerp(Main.rand.NextFloat() - 0.5f, vector148.X, MathHelper.Clamp(-this.velocity.Y, 0f, 1f));
																														vector148.Y = 0.5f - Math.Abs(vector148.X);
																														vector148 *= new Vector2(100f, 50f);
																														vector148.Y += num1148;
																														Vector2 position5 = base.Center + vector148;
																														Dust dust39 = Dust.NewDustPerfect(position5, 27, new Vector2?(Vector2.Zero), 0, Color.White * 0.1f, 1.1f);
																														dust39.velocity.Y = Main.rand.NextFloat() * 2f;
																														dust39.fadeIn = 0.1f;
																													}
																												}
																											}
																											this.localAI[0] += 1f;
																											return;
																										}
																										if (this.aiStyle == 133)
																										{
																											if (this.type == 673)
																											{
																												if (this.ai[0] == 70f)
																												{
																													Main.PlayTrackedSound(SoundID.DD2_SkeletonSummoned, base.Center);
																												}
																												this.ai[0] += 1f;
																												float opacity = 0f;
																												if (this.ai[0] < 20f)
																												{
																													opacity = Utils.InverseLerp(0f, 20f, this.ai[0], true);
																												}
																												else if (this.ai[0] < 60f)
																												{
																													opacity = 1f;
																												}
																												else if (this.ai[0] < 80f)
																												{
																													opacity = Utils.InverseLerp(80f, 60f, this.ai[0], true);
																												}
																												else
																												{
																													this.Kill();
																												}
																												this.Opacity = opacity;
																												int arg_31F2F_0 = this.owner;
																												int arg_31F2E_0 = Main.myPlayer;
																											}
																											if (this.type == 674)
																											{
																												if (this.ai[0] == 0f)
																												{
																													Main.PlayTrackedSound(SoundID.DD2_DarkMageHealImpact, base.Center);
																												}
																												this.ai[0] += 1f;
																												if (this.ai[0] >= 40f)
																												{
																													for (int num1149 = 0; num1149 < 200; num1149++)
																													{
																														NPC nPC18 = Main.npc[num1149];
																														if (nPC18.active && nPC18.damage >= 1 && nPC18.lifeMax >= 30 && base.Distance(nPC18.Center) <= 1000f && nPC18.type != 564 && nPC18.type != 565)
																														{
																															int num1150 = 500;
																															int num1151 = nPC18.lifeMax - nPC18.life;
																															if (num1150 > num1151)
																															{
																																num1150 = num1151;
																															}
																															if (num1150 > 0)
																															{
																																nPC18.life += num1150;
																																nPC18.HealEffect(num1150, true);
																																nPC18.netUpdate = true;
																															}
																														}
																													}
																													this.Kill();
																													return;
																												}
																											}
																										}
																										else
																										{
																											if (this.aiStyle == 134)
																											{
																												this.AI_134_Ballista();
																												return;
																											}
																											if (this.aiStyle == 135)
																											{
																												this.AI_135_OgreStomp();
																												return;
																											}
																											if (this.aiStyle == 136)
																											{
																												this.AI_136_BetsyBreath();
																												return;
																											}
																											if (this.aiStyle == 137)
																											{
																												this.AI_137_LightningAura();
																												return;
																											}
																											if (this.aiStyle == 138)
																											{
																												this.AI_138_ExplosiveTrap();
																												return;
																											}
																											if (this.aiStyle == 139)
																											{
																												this.AI_139_ExplosiveTrapExplosion();
																												return;
																											}
																											if (this.aiStyle == 140)
																											{
																												this.AI_140_MonkStaffT1();
																												return;
																											}
																											if (this.aiStyle == 141)
																											{
																												this.AI_141_MonkStaffT1Explosion();
																												return;
																											}
																											if (this.aiStyle == 142)
																											{
																												this.AI_142_MonkStaffT2And3();
																												return;
																											}
																											if (this.aiStyle == 143)
																											{
																												this.AI_143_MonkStaffT2Ghast();
																												return;
																											}
																											if (this.aiStyle == 144)
																											{
																												this.AI_144_DD2Pet();
																												return;
																											}
																											if (this.aiStyle == 145)
																											{
																												this.AI_145_BookStaffStorm();
																												return;
																											}
																											if (this.aiStyle == 145)
																											{
																												this.AI_146_DD2Victory();
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		private void AI_061_FishingBobber()
		{
			this.timeLeft = 60;
			if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].fishingPole == 0 || Main.player[this.owner].CCed || Main.player[this.owner].noItems)
			{
				this.Kill();
			}
			else if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].shoot != this.type)
			{
				this.Kill();
			}
			else if (Main.player[this.owner].pulley)
			{
				this.Kill();
			}
			else if (Main.player[this.owner].dead)
			{
				this.Kill();
			}
			if (this.ai[1] > 0f && this.localAI[1] >= 0f)
			{
				this.localAI[1] = -1f;
				if (!this.lavaWet && !this.honeyWet)
				{
					for (int i = 0; i < 100; i++)
					{
						int num = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
						Dust expr_17D_cp_0 = Main.dust[num];
						expr_17D_cp_0.velocity.Y = expr_17D_cp_0.velocity.Y - 4f;
						Dust expr_19A_cp_0 = Main.dust[num];
						expr_19A_cp_0.velocity.X = expr_19A_cp_0.velocity.X * 2.5f;
						Main.dust[num].scale = 0.8f;
						Main.dust[num].alpha = 100;
						Main.dust[num].noGravity = true;
					}
					Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
				}
			}
			if (this.ai[0] >= 1f)
			{
				if (this.ai[0] == 2f)
				{
					this.ai[0] += 1f;
					Main.PlaySound(SoundID.Item17, this.position);
					if (!this.lavaWet && !this.honeyWet)
					{
						for (int j = 0; j < 100; j++)
						{
							int num2 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y - 10f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
							Dust expr_2E0_cp_0 = Main.dust[num2];
							expr_2E0_cp_0.velocity.Y = expr_2E0_cp_0.velocity.Y - 4f;
							Dust expr_2FD_cp_0 = Main.dust[num2];
							expr_2FD_cp_0.velocity.X = expr_2FD_cp_0.velocity.X * 2.5f;
							Main.dust[num2].scale = 0.8f;
							Main.dust[num2].alpha = 100;
							Main.dust[num2].noGravity = true;
						}
						Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 0, 1f, 0f);
					}
				}
				if (this.localAI[0] < 100f)
				{
					this.localAI[0] += 1f;
				}
				this.tileCollide = false;
				float num3 = 15.9f;
				int num4 = 10;
				Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num5 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector.X;
				float num6 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector.Y;
				float num7 = (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
				if (num7 > 3000f)
				{
					this.Kill();
				}
				num7 = num3 / num7;
				num5 *= num7;
				num6 *= num7;
				this.velocity.X = (this.velocity.X * (float)(num4 - 1) + num5) / (float)num4;
				this.velocity.Y = (this.velocity.Y * (float)(num4 - 1) + num6) / (float)num4;
				if (Main.myPlayer == this.owner)
				{
					Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
					Rectangle value = new Rectangle((int)Main.player[this.owner].position.X, (int)Main.player[this.owner].position.Y, Main.player[this.owner].width, Main.player[this.owner].height);
					if (rectangle.Intersects(value))
					{
						if (this.ai[1] > 0f && this.ai[1] < 3884f)
						{
							int num8 = (int)this.ai[1];
							Item item = new Item();
							item.SetDefaults(num8, false);
							if (num8 == 3196)
							{
								int num9 = Main.player[this.owner].FishingLevel();
								int minValue = (num9 / 20 + 3) / 2;
								int num10 = (num9 / 10 + 6) / 2;
								if (Main.rand.Next(50) < num9)
								{
									num10++;
								}
								if (Main.rand.Next(100) < num9)
								{
									num10++;
								}
								if (Main.rand.Next(150) < num9)
								{
									num10++;
								}
								if (Main.rand.Next(200) < num9)
								{
									num10++;
								}
								int stack = Main.rand.Next(minValue, num10 + 1);
								item.stack = stack;
							}
							if (num8 == 3197)
							{
								int num11 = Main.player[this.owner].FishingLevel();
								int minValue2 = (num11 / 4 + 15) / 2;
								int num12 = (num11 / 2 + 30) / 2;
								if (Main.rand.Next(50) < num11)
								{
									num12 += 4;
								}
								if (Main.rand.Next(100) < num11)
								{
									num12 += 4;
								}
								if (Main.rand.Next(150) < num11)
								{
									num12 += 4;
								}
								if (Main.rand.Next(200) < num11)
								{
									num12 += 4;
								}
								int stack2 = Main.rand.Next(minValue2, num12 + 1);
								item.stack = stack2;
							}
							item.newAndShiny = true;
							Item item2 = Main.player[this.owner].GetItem(this.owner, item, false, false);
							if (item2.stack > 0)
							{
								int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num8, 1, false, 0, true, false);
								if (Main.netMode == 1)
								{
									NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0, 0, 0);
								}
							}
							else
							{
								item.position.X = base.Center.X - (float)(item.width / 2);
								item.position.Y = base.Center.Y - (float)(item.height / 2);
								item.active = true;
								ItemText.NewText(item, 0, false, false);
							}
						}
						this.Kill();
					}
				}
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				return;
			}
			bool flag = false;
			Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
			float num13 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
			float num14 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
			this.rotation = (float)Math.Atan2((double)num14, (double)num13) + 1.57f;
			float num15 = (float)Math.Sqrt((double)(num13 * num13 + num14 * num14));
			if (num15 > 900f)
			{
				this.ai[0] = 1f;
			}
			if (this.wet)
			{
				this.rotation = 0f;
				this.velocity.X = this.velocity.X * 0.9f;
				int num16 = (int)(base.Center.X + (float)((this.width / 2 + 8) * this.direction)) / 16;
				int num17 = (int)(base.Center.Y / 16f);
				float arg_97E_0 = this.position.Y / 16f;
				int num18 = (int)((this.position.Y + (float)this.height) / 16f);
				if (Main.tile[num16, num17] == null)
				{
					Main.tile[num16, num17] = new Tile();
				}
				if (Main.tile[num16, num18] == null)
				{
					Main.tile[num16, num18] = new Tile();
				}
				if (this.velocity.Y > 0f)
				{
					this.velocity.Y = this.velocity.Y * 0.5f;
				}
				num16 = (int)(base.Center.X / 16f);
				num17 = (int)(base.Center.Y / 16f);
				float num19 = this.position.Y + (float)this.height;
				if (Main.tile[num16, num17 - 1] == null)
				{
					Main.tile[num16, num17 - 1] = new Tile();
				}
				if (Main.tile[num16, num17] == null)
				{
					Main.tile[num16, num17] = new Tile();
				}
				if (Main.tile[num16, num17 + 1] == null)
				{
					Main.tile[num16, num17 + 1] = new Tile();
				}
				if (Main.tile[num16, num17 - 1].liquid > 0)
				{
					num19 = (float)(num17 * 16);
					num19 -= (float)(Main.tile[num16, num17 - 1].liquid / 16);
				}
				else if (Main.tile[num16, num17].liquid > 0)
				{
					num19 = (float)((num17 + 1) * 16);
					num19 -= (float)(Main.tile[num16, num17].liquid / 16);
				}
				else if (Main.tile[num16, num17 + 1].liquid > 0)
				{
					num19 = (float)((num17 + 2) * 16);
					num19 -= (float)(Main.tile[num16, num17 + 1].liquid / 16);
				}
				if (base.Center.Y > num19)
				{
					this.velocity.Y = this.velocity.Y - 0.1f;
					if (this.velocity.Y < -8f)
					{
						this.velocity.Y = -8f;
					}
					if (base.Center.Y + this.velocity.Y < num19)
					{
						this.velocity.Y = num19 - base.Center.Y;
					}
				}
				else
				{
					this.velocity.Y = num19 - base.Center.Y;
				}
				if ((double)this.velocity.Y >= -0.01 && (double)this.velocity.Y <= 0.01)
				{
					flag = true;
				}
			}
			else
			{
				if (this.velocity.Y == 0f)
				{
					this.velocity.X = this.velocity.X * 0.95f;
				}
				this.velocity.X = this.velocity.X * 0.98f;
				this.velocity.Y = this.velocity.Y + 0.2f;
				if (this.velocity.Y > 15.9f)
				{
					this.velocity.Y = 15.9f;
				}
			}
			if (this.ai[1] != 0f)
			{
				flag = true;
			}
			if (flag)
			{
				if (this.ai[1] == 0f && Main.myPlayer == this.owner)
				{
					int num20 = Main.player[this.owner].FishingLevel();
					if (num20 == -9000)
					{
						this.localAI[1] += 5f;
						this.localAI[1] += (float)Main.rand.Next(1, 3);
						if (this.localAI[1] > 660f)
						{
							this.localAI[1] = 0f;
							this.FishingCheck();
							return;
						}
					}
					else
					{
						if (Main.rand.Next(300) < num20)
						{
							this.localAI[1] += (float)Main.rand.Next(1, 3);
						}
						this.localAI[1] += (float)(num20 / 30);
						this.localAI[1] += (float)Main.rand.Next(1, 3);
						if (Main.rand.Next(60) == 0)
						{
							this.localAI[1] += 60f;
						}
						if (this.localAI[1] > 660f)
						{
							this.localAI[1] = 0f;
							this.FishingCheck();
							return;
						}
					}
				}
				else if (this.ai[1] < 0f)
				{
					if (this.velocity.Y == 0f || (this.honeyWet && (double)this.velocity.Y >= -0.01 && (double)this.velocity.Y <= 0.01))
					{
						this.velocity.Y = (float)Main.rand.Next(100, 500) * 0.015f;
						this.velocity.X = (float)Main.rand.Next(-100, 101) * 0.015f;
						this.wet = false;
						this.lavaWet = false;
						this.honeyWet = false;
					}
					this.ai[1] += (float)Main.rand.Next(1, 5);
					if (this.ai[1] >= 0f)
					{
						this.ai[1] = 0f;
						this.localAI[1] = 0f;
						this.netUpdate = true;
					}
				}
			}
		}

		private void AI_146_DD2Victory()
		{
		}

		private void BetsySharpnel(int npcIndex)
		{
			if (this.ai[1] == -1f || this.owner != Main.myPlayer)
			{
				return;
			}
			Vector2 spinningpoint = new Vector2(0f, 6f);
			Vector2 center = base.Center;
			float num = 0.7853982f;
			int num2 = 5;
			float num3 = -(num * 2f) / (float)(num2 - 1);
			for (int i = 0; i < num2; i++)
			{
				int num4 = Projectile.NewProjectile(center, spinningpoint.RotatedBy((double)(num + num3 * (float)i), default(Vector2)), 710, this.damage, this.knockBack, this.owner, 0f, -1f);
				Projectile projectile = Main.projectile[num4];
				for (int j = 0; j < this.localNPCImmunity.Length; j++)
				{
					projectile.localNPCImmunity[j] = this.localNPCImmunity[j];
				}
			}
		}

		private void AI_001()
		{
			if (this.type == 469 && this.wet && !this.honeyWet)
			{
				this.Kill();
			}
			if (this.type == 601)
			{
				Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				Vector3 vector = portalColor.ToVector3();
				vector *= 0.5f;
				Lighting.AddLight(base.Center + this.velocity * 3f, vector);
				if (this.alpha > 0 && this.alpha <= 15)
				{
					Color color = portalColor;
					color.A = 255;
					for (int i = 0; i < 4; i++)
					{
						Dust dust = Main.dust[Dust.NewDust(base.Center, 0, 0, 264, 0f, 0f, 0, default(Color), 1f)];
						dust.position = base.Center;
						dust.velocity = this.velocity * 2f + Utils.RandomVector2(Main.rand, -1f, 1f);
						dust.color = color;
						dust.scale = 1.2f;
						dust.noLight = true;
						dust.noGravity = true;
						dust.customData = Main.player[this.owner];
					}
				}
				this.alpha -= 15;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (++this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.alpha == 0)
				{
					Color color2 = portalColor;
					color2.A = 255;
					Dust dust2 = Main.dust[Dust.NewDust(base.Center, 0, 0, 263, 0f, 0f, 0, default(Color), 1f)];
					dust2.position = base.Center;
					dust2.velocity = this.velocity / 4f;
					dust2.color = color2;
					dust2.noGravity = true;
					dust2.scale = 0.6f;
				}
			}
			if (this.type == 472)
			{
				int num = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].noGravity = true;
				Main.dust[num].velocity *= 0.25f;
				Main.dust[num].velocity += this.velocity * 0.75f;
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
					for (int j = 0; j < 20; j++)
					{
						num = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num].noGravity = true;
						Main.dust[num].velocity *= 0.25f;
						Main.dust[num].velocity += this.velocity;
						Dust expr_3C4_cp_0 = Main.dust[num];
						expr_3C4_cp_0.velocity.X = expr_3C4_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_3F8_cp_0 = Main.dust[num];
						expr_3F8_cp_0.velocity.Y = expr_3F8_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					}
				}
			}
			if (this.type == 323)
			{
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 436)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item12, this.position);
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 1.1f, 0.5f);
			}
			if (this.type == 467)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item34, this.position);
				}
				else if (this.ai[1] == 1f && Main.netMode != 1)
				{
					int num2 = -1;
					float num3 = 2000f;
					for (int k = 0; k < 255; k++)
					{
						if (Main.player[k].active && !Main.player[k].dead)
						{
							Vector2 center = Main.player[k].Center;
							float num4 = Vector2.Distance(center, base.Center);
							if ((num4 < num3 || num2 == -1) && Collision.CanHit(base.Center, 1, 1, center, 1, 1))
							{
								num3 = num4;
								num2 = k;
							}
						}
					}
					if (num3 < 20f)
					{
						this.Kill();
						return;
					}
					if (num2 != -1)
					{
						this.ai[1] = 21f;
						this.ai[0] = (float)num2;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > 20f && this.ai[1] < 200f)
				{
					this.ai[1] += 1f;
					int num5 = (int)this.ai[0];
					if (!Main.player[num5].active || Main.player[num5].dead)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						float num6 = this.velocity.ToRotation();
						Vector2 vector2 = Main.player[num5].Center - base.Center;
						if (vector2.Length() < 20f)
						{
							this.Kill();
							return;
						}
						float targetAngle = vector2.ToRotation();
						if (vector2 == Vector2.Zero)
						{
							targetAngle = num6;
						}
						float num7 = num6.AngleLerp(targetAngle, 0.008f);
						this.velocity = new Vector2(this.velocity.Length(), 0f).RotatedBy((double)num7, default(Vector2));
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < 20f)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == 20f)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, 1.1f, 0.9f, 0.4f);
				this.localAI[0] += 1f;
				if (this.localAI[0] == 12f)
				{
					this.localAI[0] = 0f;
					for (int l = 0; l < 12; l++)
					{
						Vector2 vector3 = Vector2.UnitX * (float)(-(float)this.width) / 2f;
						vector3 += -Vector2.UnitY.RotatedBy((double)((float)l * 3.14159274f / 6f), default(Vector2)) * new Vector2(8f, 16f);
						vector3 = vector3.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
						int num8 = Dust.NewDust(base.Center, 0, 0, 6, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num8].scale = 1.1f;
						Main.dust[num8].noGravity = true;
						Main.dust[num8].position = base.Center + vector3;
						Main.dust[num8].velocity = this.velocity * 0.1f;
						Main.dust[num8].velocity = Vector2.Normalize(base.Center - this.velocity * 3f - Main.dust[num8].position) * 1.25f;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int m = 0; m < 1; m++)
					{
						Vector2 value = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num9 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num9].velocity *= 0.1f;
						Main.dust[num9].position = base.Center + value * (float)this.width / 2f;
						Main.dust[num9].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(32) == 0)
				{
					for (int n = 0; n < 1; n++)
					{
						Vector2 value2 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num10 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num10].velocity *= 0.3f;
						Main.dust[num10].position = base.Center + value2 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num10].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(2) == 0)
				{
					for (int num11 = 0; num11 < 2; num11++)
					{
						Vector2 value3 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num12 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num12].velocity *= 0.3f;
						Main.dust[num12].noGravity = true;
						Main.dust[num12].position = base.Center + value3 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num12].fadeIn = 1.4f;
						}
					}
				}
			}
			if (this.type == 468)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item34, this.position);
				}
				else if (this.ai[1] == 1f && Main.netMode != 1)
				{
					int num13 = -1;
					float num14 = 2000f;
					for (int num15 = 0; num15 < 255; num15++)
					{
						if (Main.player[num15].active && !Main.player[num15].dead)
						{
							Vector2 center2 = Main.player[num15].Center;
							float num16 = Vector2.Distance(center2, base.Center);
							if ((num16 < num14 || num13 == -1) && Collision.CanHit(base.Center, 1, 1, center2, 1, 1))
							{
								num14 = num16;
								num13 = num15;
							}
						}
					}
					if (num14 < 20f)
					{
						this.Kill();
						return;
					}
					if (num13 != -1)
					{
						this.ai[1] = 21f;
						this.ai[0] = (float)num13;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > 20f && this.ai[1] < 200f)
				{
					this.ai[1] += 1f;
					int num17 = (int)this.ai[0];
					if (!Main.player[num17].active || Main.player[num17].dead)
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						float num18 = this.velocity.ToRotation();
						Vector2 vector4 = Main.player[num17].Center - base.Center;
						if (vector4.Length() < 20f)
						{
							this.Kill();
							return;
						}
						float targetAngle2 = vector4.ToRotation();
						if (vector4 == Vector2.Zero)
						{
							targetAngle2 = num18;
						}
						float num19 = num18.AngleLerp(targetAngle2, 0.01f);
						this.velocity = new Vector2(this.velocity.Length(), 0f).RotatedBy((double)num19, default(Vector2));
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < 20f)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == 20f)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, 0.2f, 0.1f, 0.6f);
				this.localAI[0] += 1f;
				if (this.localAI[0] == 12f)
				{
					this.localAI[0] = 0f;
					for (int num20 = 0; num20 < 12; num20++)
					{
						Vector2 vector5 = Vector2.UnitX * (float)(-(float)this.width) / 2f;
						vector5 += -Vector2.UnitY.RotatedBy((double)((float)num20 * 3.14159274f / 6f), default(Vector2)) * new Vector2(8f, 16f);
						vector5 = vector5.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
						int num21 = Dust.NewDust(base.Center, 0, 0, 27, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num21].scale = 1.1f;
						Main.dust[num21].noGravity = true;
						Main.dust[num21].position = base.Center + vector5;
						Main.dust[num21].velocity = this.velocity * 0.1f;
						Main.dust[num21].velocity = Vector2.Normalize(base.Center - this.velocity * 3f - Main.dust[num21].position) * 1.25f;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int num22 = 0; num22 < 1; num22++)
					{
						Vector2 value4 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num23 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num23].velocity *= 0.1f;
						Main.dust[num23].position = base.Center + value4 * (float)this.width / 2f;
						Main.dust[num23].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(32) == 0)
				{
					for (int num24 = 0; num24 < 1; num24++)
					{
						Vector2 value5 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num25 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num25].velocity *= 0.3f;
						Main.dust[num25].position = base.Center + value5 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num25].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(2) == 0)
				{
					for (int num26 = 0; num26 < 2; num26++)
					{
						Vector2 value6 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num27 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num27].velocity *= 0.3f;
						Main.dust[num27].noGravity = true;
						Main.dust[num27].position = base.Center + value6 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num27].fadeIn = 1.4f;
						}
					}
				}
			}
			if (this.type == 634 || this.type == 635)
			{
				float num28 = 5f;
				float num29 = 250f;
				float scaleFactor = 6f;
				Vector2 value7 = new Vector2(8f, 10f);
				float num30 = 1.2f;
				Vector3 rgb = new Vector3(0.7f, 0.1f, 0.5f);
				int num31 = 4 * this.MaxUpdates;
				int num32 = Utils.SelectRandom<int>(Main.rand, new int[]
				{
					242,
					73,
					72,
					71,
					255
				});
				int num33 = 255;
				if (this.type == 635)
				{
					value7 = new Vector2(10f, 20f);
					num30 = 1f;
					num29 = 500f;
					num33 = 88;
					num31 = 3 * this.MaxUpdates;
					rgb = new Vector3(0.4f, 0.6f, 0.9f);
					num32 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						242,
						59,
						88
					});
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					this.localAI[0] = (float)(-(float)Main.rand.Next(48));
					Main.PlaySound(SoundID.Item34, this.position);
				}
				else if (this.ai[1] == 1f && this.owner == Main.myPlayer)
				{
					int num34 = -1;
					float num35 = num29;
					for (int num36 = 0; num36 < 200; num36++)
					{
						if (Main.npc[num36].active && Main.npc[num36].CanBeChasedBy(this, false))
						{
							Vector2 center3 = Main.npc[num36].Center;
							float num37 = Vector2.Distance(center3, base.Center);
							if (num37 < num35 && num34 == -1 && Collision.CanHitLine(base.Center, 1, 1, center3, 1, 1))
							{
								num35 = num37;
								num34 = num36;
							}
						}
					}
					if (num35 < 20f)
					{
						this.Kill();
						return;
					}
					if (num34 != -1)
					{
						this.ai[1] = num28 + 1f;
						this.ai[0] = (float)num34;
						this.netUpdate = true;
					}
				}
				else if (this.ai[1] > num28)
				{
					this.ai[1] += 1f;
					int num38 = (int)this.ai[0];
					if (!Main.npc[num38].active || !Main.npc[num38].CanBeChasedBy(this, false))
					{
						this.ai[1] = 1f;
						this.ai[0] = 0f;
						this.netUpdate = true;
					}
					else
					{
						this.velocity.ToRotation();
						Vector2 vector6 = Main.npc[num38].Center - base.Center;
						if (vector6.Length() < 20f)
						{
							this.Kill();
							return;
						}
						if (vector6 != Vector2.Zero)
						{
							vector6.Normalize();
							vector6 *= scaleFactor;
						}
						float num39 = 30f;
						this.velocity = (this.velocity * (num39 - 1f) + vector6) / num39;
					}
				}
				if (this.ai[1] >= 1f && this.ai[1] < num28)
				{
					this.ai[1] += 1f;
					if (this.ai[1] == num28)
					{
						this.ai[1] = 1f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= num31)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight(base.Center, rgb);
				this.rotation = this.velocity.ToRotation();
				this.localAI[0] += 1f;
				if (this.localAI[0] == 48f)
				{
					this.localAI[0] = 0f;
				}
				else if (this.alpha == 0)
				{
					for (int num40 = 0; num40 < 2; num40++)
					{
						Vector2 value8 = Vector2.UnitX * -30f;
						value8 = -Vector2.UnitY.RotatedBy((double)(this.localAI[0] * 0.1308997f + (float)num40 * 3.14159274f), default(Vector2)) * value7 - this.rotation.ToRotationVector2() * 10f;
						int num41 = Dust.NewDust(base.Center, 0, 0, num33, 0f, 0f, 160, default(Color), 1f);
						Main.dust[num41].scale = num30;
						Main.dust[num41].noGravity = true;
						Main.dust[num41].position = base.Center + value8 + this.velocity * 2f;
						Main.dust[num41].velocity = Vector2.Normalize(base.Center + this.velocity * 2f * 8f - Main.dust[num41].position) * 2f + this.velocity * 2f;
					}
				}
				if (Main.rand.Next(12) == 0)
				{
					for (int num42 = 0; num42 < 1; num42++)
					{
						Vector2 value9 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num43 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num43].velocity *= 0.1f;
						Main.dust[num43].position = base.Center + value9 * (float)this.width / 2f + this.velocity * 2f;
						Main.dust[num43].fadeIn = 0.9f;
					}
				}
				if (Main.rand.Next(64) == 0)
				{
					for (int num44 = 0; num44 < 1; num44++)
					{
						Vector2 value10 = -Vector2.UnitX.RotatedByRandom(0.39269909262657166).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num45 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 155, default(Color), 0.8f);
						Main.dust[num45].velocity *= 0.3f;
						Main.dust[num45].position = base.Center + value10 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num45].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					for (int num46 = 0; num46 < 2; num46++)
					{
						Vector2 value11 = -Vector2.UnitX.RotatedByRandom(0.78539818525314331).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num47 = Dust.NewDust(this.position, this.width, this.height, num32, 0f, 0f, 0, default(Color), 1.2f);
						Main.dust[num47].velocity *= 0.3f;
						Main.dust[num47].noGravity = true;
						Main.dust[num47].position = base.Center + value11 * (float)this.width / 2f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num47].fadeIn = 1.4f;
						}
					}
				}
				if (Main.rand.Next(12) == 0 && this.type == 634)
				{
					Vector2 value12 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
					int num48 = Dust.NewDust(this.position, this.width, this.height, num33, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num48].velocity *= 0.3f;
					Main.dust[num48].position = base.Center + value12 * (float)this.width / 2f;
					Main.dust[num48].fadeIn = 0.9f;
					Main.dust[num48].noGravity = true;
				}
				if (Main.rand.Next(3) == 0 && this.type == 635)
				{
					Vector2 value13 = -Vector2.UnitX.RotatedByRandom(0.19634954631328583).RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
					int num49 = Dust.NewDust(this.position, this.width, this.height, num33, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num49].velocity *= 0.3f;
					Main.dust[num49].position = base.Center + value13 * (float)this.width / 2f;
					Main.dust[num49].fadeIn = 1.2f;
					Main.dust[num49].scale = 1.5f;
					Main.dust[num49].noGravity = true;
				}
			}
			if (this.type == 459)
			{
				this.alpha -= 30;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 3)
					{
						this.frame = 0;
					}
				}
				this.position = base.Center;
				this.scale = this.ai[1];
				this.width = (this.height = (int)(22f * this.scale));
				base.Center = this.position;
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.85f, 0.9f);
				int num50;
				if ((double)this.scale < 0.85)
				{
					num50 = ((Main.rand.Next(3) == 0) ? 1 : 0);
				}
				else
				{
					num50 = 1;
					this.penetrate = -1;
					this.maxPenetrate = -1;
				}
				for (int num51 = 0; num51 < num50; num51++)
				{
					int num52 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
					Main.dust[num52].position -= Vector2.One * 3f;
					Main.dust[num52].scale = 0.5f;
					Main.dust[num52].noGravity = true;
					Main.dust[num52].velocity = this.velocity / 3f;
					Main.dust[num52].alpha = 255 - (int)(255f * this.scale);
				}
			}
			if (this.type == 709)
			{
				this.alpha -= 30;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 3)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.85f, 0.9f);
				if (this.ai[1] == 0f)
				{
					Main.PlayTrackedSound(SoundID.DD2_SkyDragonsFuryShot, base.Center);
				}
				this.ai[1] += 1f;
				if (this.ai[1] >= 30f)
				{
					this.Kill();
					return;
				}
			}
			if (this.type == 442)
			{
				this.frame = 0;
				if (this.alpha != 0)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] >= 4f)
					{
						this.alpha -= 90;
						if (this.alpha < 0)
						{
							this.alpha = 0;
							this.localAI[0] = 2f;
						}
					}
				}
				if (Vector2.Distance(base.Center, new Vector2(this.ai[0], this.ai[1]) * 16f + Vector2.One * 8f) <= 16f)
				{
					this.Kill();
					return;
				}
				if (this.alpha == 0)
				{
					this.localAI[1] += 1f;
					if (this.localAI[1] >= 120f)
					{
						this.Kill();
						return;
					}
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 0.45f, 0.8f);
					this.localAI[0] += 1f;
					if (this.localAI[0] == 3f)
					{
						this.localAI[0] = 0f;
						for (int num53 = 0; num53 < 8; num53++)
						{
							Vector2 vector7 = Vector2.UnitX * -8f;
							vector7 += -Vector2.UnitY.RotatedBy((double)((float)num53 * 3.14159274f / 4f), default(Vector2)) * new Vector2(2f, 4f);
							vector7 = vector7.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
							int num54 = Dust.NewDust(base.Center, 0, 0, 135, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num54].scale = 1.5f;
							Main.dust[num54].noGravity = true;
							Main.dust[num54].position = base.Center + vector7;
							Main.dust[num54].velocity = this.velocity * 0.66f;
						}
					}
				}
			}
			if (this.type == 440 || this.type == 449 || this.type == 606)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.type == 440)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.25f, 0.4f, 0.7f);
				}
				if (this.type == 449)
				{
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.7f, 0.65f, 0.3f);
				}
				if (this.type == 606)
				{
					Lighting.AddLight(base.Center, 0.7f, 0.3f, 0.3f);
				}
				float num55 = 100f;
				float num56 = 3f;
				if (this.type == 606)
				{
					num55 = 150f;
					num56 = 5f;
				}
				if (this.ai[1] == 0f)
				{
					this.localAI[0] += num56;
					if (this.localAI[0] == num56 * 1f && this.type == 606)
					{
						for (int num57 = 0; num57 < 4; num57++)
						{
							int num58 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 182, 0f, 0f, 100, default(Color), 1.4f);
							Main.dust[num58].velocity *= 0.2f;
							Main.dust[num58].velocity += this.velocity / 10f;
							Main.dust[num58].noGravity = true;
						}
					}
					if (this.localAI[0] > num55)
					{
						this.localAI[0] = num55;
					}
				}
				else
				{
					this.localAI[0] -= num56;
					if (this.localAI[0] <= 0f)
					{
						this.Kill();
						return;
					}
				}
			}
			if (this.type == 438)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.1f, 0.2f);
			}
			if (this.type == 593)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.4f, 0.1f, 0.3f);
				if (++this.frameCounter >= 12)
				{
					if (++this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
					this.frameCounter = 0;
				}
				if (Main.rand.Next(2) == 0)
				{
					Vector2 vector8 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
					Dust dust3 = Main.dust[Dust.NewDust(base.Center - vector8 * 8f, 0, 0, 240, 0f, 0f, 0, default(Color), 1f)];
					dust3.noGravity = true;
					dust3.position = base.Center - vector8 * 8f * this.scale;
					dust3.velocity = vector8.RotatedBy(-1.5707963705062866, default(Vector2)) * 2f;
					dust3.velocity = Vector2.Zero;
					dust3.scale = 0.5f + Main.rand.NextFloat();
					dust3.fadeIn = 0.5f;
				}
			}
			if (this.type == 592)
			{
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.15f, 0.15f, 0.4f);
			}
			if (this.type == 462)
			{
				int num59 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
				Main.dust[num59].noLight = true;
				Main.dust[num59].noGravity = true;
				Main.dust[num59].velocity = this.velocity;
				Main.dust[num59].position -= Vector2.One * 4f;
				Main.dust[num59].scale = 0.8f;
				if (++this.frameCounter >= 9)
				{
					this.frameCounter = 0;
					if (++this.frame >= 5)
					{
						this.frame = 0;
					}
				}
			}
			if (this.type == 437)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item12, this.position);
				}
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					for (int num60 = 0; num60 < 4; num60++)
					{
						int num61 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
						Main.dust[num61].position = Vector2.Lerp(Main.dust[num61].position, base.Center, 0.25f);
						Main.dust[num61].scale = 0.5f;
						Main.dust[num61].noGravity = true;
						Main.dust[num61].velocity /= 2f;
						Main.dust[num61].velocity += this.velocity * 0.66f;
					}
				}
				if (this.ai[0] < 16f)
				{
					for (int num62 = 0; num62 < 2; num62++)
					{
						int num63 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0f, 0, default(Color), 1f);
						Main.dust[num63].position = this.position + new Vector2((float)(((this.direction == 1) ? 1 : 0) * this.width), (float)(2 + (this.height - 4) * num62));
						Main.dust[num63].scale = 0.3f;
						Main.dust[num63].noGravity = true;
						Main.dust[num63].velocity = Vector2.Zero;
					}
				}
			}
			if (this.type == 435)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item12, this.position);
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.3f, 0.8f, 1.1f);
			}
			if (this.type == 682)
			{
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.DD2_LightningBugZap, this.position);
					for (int num64 = 0; num64 < 8; num64++)
					{
						Dust dust4 = Dust.NewDustDirect(this.position, this.width, this.height, 272, 0f, 0f, 0, default(Color), 1f);
						dust4.velocity *= 1f;
						dust4.velocity += this.velocity * 0.65f;
						dust4.scale = 0.6f;
						dust4.fadeIn = 0.8f;
						dust4.noGravity = true;
						dust4.noLight = true;
						dust4.position += dust4.velocity * 3f;
					}
				}
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.frameCounter++;
				if (this.frameCounter >= 3)
				{
					this.frame++;
					this.frameCounter = 0;
					if (this.frame >= 4)
					{
						this.frame = 0;
					}
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.5f, 0.2f, 1.1f);
			}
			if (this.type == 684)
			{
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
				this.localAI[0] += 1f;
				for (int num65 = 0; num65 < 1; num65++)
				{
					Vector2 vector9 = Utils.RandomVector2(Main.rand, -0.5f, 0.5f) * new Vector2(20f, 80f);
					vector9 = vector9.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
					Dust dust5 = Dust.NewDustDirect(base.Center, 0, 0, 60, 0f, 0f, 0, default(Color), 1f);
					dust5.alpha = 127;
					dust5.fadeIn = 1.5f;
					dust5.scale = 1.3f;
					dust5.velocity *= 0.3f;
					dust5.position = base.Center + vector9;
					dust5.noGravity = true;
					dust5.noLight = true;
					dust5.color = new Color(255, 255, 255, 0);
				}
				Lighting.AddLight(base.Center, 1.1f, 0.3f, 0.4f);
			}
			if (this.type == 408)
			{
				this.alpha -= 40;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.spriteDirection = this.direction;
			}
			if (this.type == 282)
			{
				int num66 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
				Main.dust[num66].scale = (float)Main.rand.Next(1, 10) * 0.1f;
				Main.dust[num66].noGravity = true;
				Main.dust[num66].fadeIn = 1.5f;
				Main.dust[num66].velocity *= 0.25f;
				Main.dust[num66].velocity += this.velocity * 0.25f;
			}
			if (this.type == 275 || this.type == 276)
			{
				this.frameCounter++;
				if (this.frameCounter > 1)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame > 1)
					{
						this.frame = 0;
					}
				}
			}
			if (this.type == 225)
			{
				int num67 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num67].noGravity = true;
				Main.dust[num67].scale = 1.3f;
				Main.dust[num67].velocity *= 0.5f;
			}
			if (this.type == 174)
			{
				if (this.alpha == 0)
				{
					int num68 = Dust.NewDust(this.oldPosition - this.velocity * 3f, this.width, this.height, 76, 0f, 0f, 50, default(Color), 1f);
					Main.dust[num68].noGravity = true;
					Main.dust[num68].noLight = true;
					Main.dust[num68].velocity *= 0.5f;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
				}
			}
			else if (this.type == 605)
			{
				if (this.alpha == 0 && Main.rand.Next(3) == 0)
				{
					int num69 = Dust.NewDust(this.position - this.velocity * 3f, this.width, this.height, 4, 0f, 0f, 50, new Color(78, 136, 255, 150), 1.2f);
					Main.dust[num69].velocity *= 0.3f;
					Main.dust[num69].velocity += this.velocity * 0.3f;
					Main.dust[num69].noGravity = true;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
				}
			}
			else if (this.type == 176)
			{
				if (this.alpha == 0)
				{
					int num70 = Dust.NewDust(this.oldPosition, this.width, this.height, 22, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num70].noGravity = true;
					Main.dust[num70].noLight = true;
					Main.dust[num70].velocity *= 0.15f;
					Main.dust[num70].fadeIn = 0.8f;
				}
				this.alpha -= 50;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
				}
			}
			if (this.type == 350)
			{
				this.alpha -= 100;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
				if (this.alpha == 0)
				{
					int num71 = 2;
					if (Main.rand.Next(2) == 0)
					{
						int num72 = Dust.NewDust(new Vector2(base.Center.X - (float)num71, base.Center.Y - (float)num71 - 2f) - this.velocity * 0.5f, num71 * 2, num71 * 2, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num72].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num72].velocity *= 0.2f;
						Main.dust[num72].noGravity = true;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num73 = Dust.NewDust(new Vector2(base.Center.X - (float)num71, base.Center.Y - (float)num71 - 2f) - this.velocity * 0.5f, num71 * 2, num71 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num73].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num73].velocity *= 0.05f;
					}
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item42, this.position);
				}
			}
			if (this.type == 325)
			{
				this.alpha -= 100;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
				if (this.alpha == 0)
				{
					int num74 = 2;
					if (Main.rand.Next(2) == 0)
					{
						int num75 = Dust.NewDust(new Vector2(base.Center.X - (float)num74, base.Center.Y - (float)num74 - 2f) - this.velocity * 0.5f, num74 * 2, num74 * 2, 6, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num75].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
						Main.dust[num75].velocity *= 0.2f;
						Main.dust[num75].noGravity = true;
					}
					if (Main.rand.Next(4) == 0)
					{
						int num76 = Dust.NewDust(new Vector2(base.Center.X - (float)num74, base.Center.Y - (float)num74 - 2f) - this.velocity * 0.5f, num74 * 2, num74 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
						Main.dust[num76].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
						Main.dust[num76].velocity *= 0.05f;
					}
				}
				if (this.ai[1] == 0f)
				{
					this.ai[1] = 1f;
					Main.PlaySound(SoundID.Item42, this.position);
				}
			}
			if (this.type == 469)
			{
				this.localAI[1] += 1f;
				if (this.localAI[1] > 2f)
				{
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
			}
			else if (this.type == 83 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item33, this.position);
			}
			else if (this.type == 408 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 19, 1f, 0f);
			}
			else if (this.type == 259 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item33, this.position);
			}
			else if (this.type == 110 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item11, this.position);
			}
			else if (this.type == 302 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item11, this.position);
			}
			else if (this.type == 438 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 593 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item11, this.position);
			}
			else if (this.type == 592 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 462 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				if (Main.rand.Next(2) == 0)
				{
					Main.PlaySound(SoundID.Item124, this.position);
				}
				else
				{
					Main.PlaySound(SoundID.Item125, this.position);
				}
				Vector2 value14 = Vector2.Normalize(this.velocity);
				int num77 = Main.rand.Next(5, 10);
				for (int num78 = 0; num78 < num77; num78++)
				{
					int num79 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
					Dust expr_3DD4_cp_0 = Main.dust[num79];
					expr_3DD4_cp_0.velocity.Y = expr_3DD4_cp_0.velocity.Y - 1f;
					Main.dust[num79].velocity += value14 * 2f;
					Main.dust[num79].position -= Vector2.One * 4f;
					Main.dust[num79].noGravity = true;
				}
			}
			else if (this.type == 84 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 389 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 257 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 100 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item33, this.position);
			}
			else if (this.type == 98 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item17, this.position);
			}
			else if (this.type == 184 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item17, this.position);
			}
			else if (this.type == 195 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item17, this.position);
			}
			else if (this.type == 275 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item17, this.position);
			}
			else if (this.type == 276 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item17, this.position);
			}
			else if ((this.type == 81 || this.type == 82) && this.ai[1] == 0f)
			{
				Main.PlaySound(SoundID.Item5, this.position);
				this.ai[1] = 1f;
			}
			else if (this.type == 180 && this.ai[1] == 0f)
			{
				Main.PlaySound(SoundID.Item11, this.position);
				this.ai[1] = 1f;
			}
			else if (this.type == 248 && this.ai[1] == 0f)
			{
				Main.PlaySound(SoundID.Item17, this.position);
				this.ai[1] = 1f;
			}
			else if (this.type == 576 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item12, this.position);
			}
			else if (this.type == 577 && this.ai[1] == 0f)
			{
				this.ai[1] = 1f;
				Main.PlaySound(SoundID.Item36, this.position);
			}
			else if (this.type == 710)
			{
				this.alpha -= 25;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (Main.rand.Next(4) == 0)
				{
					int num80;
					if (Main.rand.Next(2) == 0)
					{
						num80 = Dust.NewDust(this.position, this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.6f);
						Main.dust[num80].noGravity = true;
					}
					num80 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.2f);
					Main.dust[num80].noGravity = true;
					Main.dust[num80].velocity *= 2f;
					Main.dust[num80].velocity += this.velocity;
					if (this.ai[1] == -1f)
					{
						Main.dust[num80].fadeIn = 1.5f;
					}
					else
					{
						Main.dust[num80].fadeIn = 1.22f;
					}
					if (this.wet)
					{
						this.Kill();
					}
				}
			}
			else if (this.type == 639)
			{
				if (this.localAI[0] == 0f && this.localAI[1] == 0f)
				{
					this.localAI[0] = base.Center.X;
					this.localAI[1] = base.Center.Y;
					this.ai[0] = this.velocity.X;
					this.ai[1] = this.velocity.Y;
				}
				this.alpha -= 25;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			else if (this.type == 640)
			{
				this.alpha -= 25;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.velocity == Vector2.Zero)
				{
					this.ai[0] = 0f;
					bool flag = true;
					for (int num81 = 1; num81 < this.oldPos.Length; num81++)
					{
						if (this.oldPos[num81] != this.oldPos[0])
						{
							flag = false;
						}
					}
					if (flag)
					{
						this.Kill();
						return;
					}
					if (Main.rand.Next(this.extraUpdates) == 0 && (this.velocity != Vector2.Zero || Main.rand.Next((this.localAI[1] == 2f) ? 2 : 6) == 0))
					{
						for (int num82 = 0; num82 < 2; num82++)
						{
							float num83 = this.rotation + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
							float num84 = (float)Main.rand.NextDouble() * 0.8f + 1f;
							Vector2 vector10 = new Vector2((float)Math.Cos((double)num83) * num84, (float)Math.Sin((double)num83) * num84);
							int num85 = Dust.NewDust(base.Center, 0, 0, 229, vector10.X, vector10.Y, 0, default(Color), 1f);
							Main.dust[num85].noGravity = true;
							Main.dust[num85].scale = 1.2f;
						}
						if (Main.rand.Next(10) == 0)
						{
							Vector2 value15 = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width;
							int num86 = Dust.NewDust(base.Center + value15 - Vector2.One * 4f, 8, 8, 31, 0f, 0f, 100, default(Color), 1.5f);
							Main.dust[num86].velocity *= 0.5f;
							Main.dust[num86].velocity.Y = -Math.Abs(Main.dust[num86].velocity.Y);
						}
					}
				}
				else if (this.numUpdates == 1)
				{
					float num87 = this.rotation + 1.57079637f + ((Main.rand.Next(2) == 1) ? -1f : 1f) * 1.57079637f;
					float num88 = (float)Main.rand.NextDouble() * 0.25f + 0.25f;
					Vector2 vector11 = new Vector2((float)Math.Cos((double)num87) * num88, (float)Math.Sin((double)num87) * num88);
					int num89 = Dust.NewDust(this.position, 0, 0, 229, vector11.X, vector11.Y, 0, default(Color), 1f);
					Main.dust[num89].noGravity = true;
					Main.dust[num89].scale = 1.2f;
				}
			}
			if (this.type == 41)
			{
				int num90 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.6f);
				Main.dust[num90].noGravity = true;
				num90 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
				Main.dust[num90].noGravity = true;
			}
			else if (this.type == 55)
			{
				int num91 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 0.9f);
				Main.dust[num91].noGravity = true;
			}
			else if (this.type == 374)
			{
				if (this.localAI[0] == 0f)
				{
					Main.PlaySound(SoundID.Item17, this.position);
					this.localAI[0] = 1f;
				}
				if (Main.rand.Next(2) == 0)
				{
					int num92 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 0.9f);
					Main.dust[num92].noGravity = true;
					Main.dust[num92].velocity *= 0.5f;
				}
			}
			else if (this.type == 376)
			{
				if (this.localAI[0] == 0f)
				{
					Main.PlaySound(SoundID.Item20, this.position);
				}
				this.localAI[0] += 1f;
				if (this.localAI[0] > 3f)
				{
					int num93 = 1;
					if (this.localAI[0] > 5f)
					{
						num93 = 2;
					}
					for (int num94 = 0; num94 < num93; num94++)
					{
						int num95 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num95].noGravity = true;
						Dust expr_4A38_cp_0 = Main.dust[num95];
						expr_4A38_cp_0.velocity.X = expr_4A38_cp_0.velocity.X * 0.3f;
						Dust expr_4A56_cp_0 = Main.dust[num95];
						expr_4A56_cp_0.velocity.Y = expr_4A56_cp_0.velocity.Y * 0.3f;
						Main.dust[num95].noLight = true;
					}
					if (this.wet && !this.lavaWet)
					{
						this.Kill();
						return;
					}
				}
			}
			else if (this.type == 91 && Main.rand.Next(2) == 0)
			{
				int num96;
				if (Main.rand.Next(2) == 0)
				{
					num96 = 15;
				}
				else
				{
					num96 = 58;
				}
				int num97 = Dust.NewDust(this.position, this.width, this.height, num96, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, default(Color), 0.9f);
				Main.dust[num97].velocity *= 0.25f;
			}
			if (this.type == 163 || this.type == 310)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			int num98 = this.type;
			if (num98 <= 100)
			{
				if (num98 <= 36)
				{
					if (num98 != 14 && num98 != 20 && num98 != 36)
					{
						goto IL_4D31;
					}
				}
				else
				{
					switch (num98)
					{
					case 83:
					case 84:
						break;
					default:
						if (num98 != 89 && num98 != 100)
						{
							goto IL_4D31;
						}
						break;
					}
				}
			}
			else if (num98 <= 161)
			{
				if (num98 != 104 && num98 != 110)
				{
					switch (num98)
					{
					case 158:
					case 159:
					case 160:
					case 161:
						break;
					default:
						goto IL_4D31;
					}
				}
			}
			else if (num98 <= 287)
			{
				if (num98 != 180)
				{
					switch (num98)
					{
					case 279:
					case 283:
					case 284:
					case 285:
					case 286:
					case 287:
						break;
					case 280:
					case 281:
					case 282:
						goto IL_4D31;
					default:
						goto IL_4D31;
					}
				}
			}
			else if (num98 != 389)
			{
				switch (num98)
				{
				case 576:
				case 577:
					this.localAI[1] += 1f;
					if (this.localAI[1] <= 2f)
					{
						goto IL_4D31;
					}
					if (this.alpha > 0)
					{
						this.alpha -= 15;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
						goto IL_4D31;
					}
					goto IL_4D31;
				default:
					goto IL_4D31;
				}
			}
			if (this.alpha > 0)
			{
				this.alpha -= 15;
			}
			if (this.alpha < 0)
			{
				this.alpha = 0;
			}
			IL_4D31:
			if (this.type == 484)
			{
				int num99 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num99].noGravity = true;
				Main.dust[num99].velocity *= 0.1f;
				Main.dust[num99].scale = 0.75f;
				Main.dust[num99].position = (Main.dust[num99].position + base.Center) / 2f;
				Main.dust[num99].position += this.velocity * (float)Main.rand.Next(0, 101) * 0.01f;
			}
			if (this.type == 242 || this.type == 302 || this.type == 438 || this.type == 462 || this.type == 592)
			{
				float num100 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
				if (this.alpha > 0)
				{
					this.alpha -= (int)((byte)((double)num100 * 0.9));
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 660)
			{
				DelegateMethods.v3_1 = new Vector3(0.6f, 1f, 1f) * 0.2f;
				Utils.PlotTileLine(base.Center, base.Center + this.velocity * 10f, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				if (this.alpha > 0)
				{
					Main.PlaySound(SoundID.Item9, base.Center);
					this.alpha = 0;
					this.scale = 1.1f;
					this.frame = Main.rand.Next(14);
					float num101 = 16f;
					int num102 = 0;
					while ((float)num102 < num101)
					{
						Vector2 vector12 = Vector2.UnitX * 0f;
						vector12 += -Vector2.UnitY.RotatedBy((double)((float)num102 * (6.28318548f / num101)), default(Vector2)) * new Vector2(1f, 4f);
						vector12 = vector12.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num103 = Dust.NewDust(base.Center, 0, 0, 180, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num103].scale = 1.5f;
						Main.dust[num103].noGravity = true;
						Main.dust[num103].position = base.Center + vector12;
						Main.dust[num103].velocity = this.velocity * 0f + vector12.SafeNormalize(Vector2.UnitY) * 1f;
						num102++;
					}
				}
			}
			if (this.type == 712)
			{
				DelegateMethods.v3_1 = new Vector3(0.4f, 0.4f, 0.4f) * 0.7f;
				Utils.PlotTileLine(base.Center, base.Center + this.velocity * 10f, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				if (this.alpha == 255)
				{
					this.frame = Main.rand.Next(2) * 4;
				}
				if (++this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame == 4)
					{
						this.frame = 0;
					}
					if (this.frame >= 8)
					{
						this.frame = 4;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha = 0;
					this.scale = 1.1f;
					this.frame = Main.rand.Next(14);
					float num104 = 4f;
					int num105 = 0;
					while ((float)num105 < num104)
					{
						Vector2 vector13 = Vector2.UnitX * 0f;
						vector13 += -Vector2.UnitY.RotatedBy((double)((float)num105 * (6.28318548f / num104)), default(Vector2)) * new Vector2(1f, 4f);
						vector13 = vector13.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
						int num106 = Dust.NewDust(base.Center, 0, 0, 15, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num106].scale = 1.7f;
						Main.dust[num106].noGravity = true;
						Main.dust[num106].position = base.Center + vector13 + this.velocity.SafeNormalize(Vector2.Zero) * 50f;
						Main.dust[num106].velocity = Main.dust[num106].velocity * 2f + vector13.SafeNormalize(Vector2.UnitY) * 0.3f + this.velocity.SafeNormalize(Vector2.Zero) * 3f;
						Main.dust[num106].velocity *= 0.7f;
						Main.dust[num106].position += Main.dust[num106].velocity * 5f;
						num105++;
					}
				}
			}
			if (this.type == 661)
			{
				if (this.alpha <= 0)
				{
					for (int num107 = 0; num107 < 3; num107++)
					{
						int num108 = Dust.NewDust(this.position, this.width, this.height, 240, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num108].noGravity = true;
						Main.dust[num108].velocity *= 0.3f;
						Main.dust[num108].noLight = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 55;
					this.scale = 1.3f;
					if (this.alpha < 0)
					{
						this.alpha = 0;
						float num109 = 16f;
						int num110 = 0;
						while ((float)num110 < num109)
						{
							Vector2 vector14 = Vector2.UnitX * 0f;
							vector14 += -Vector2.UnitY.RotatedBy((double)((float)num110 * (6.28318548f / num109)), default(Vector2)) * new Vector2(1f, 4f);
							vector14 = vector14.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
							int num111 = Dust.NewDust(base.Center, 0, 0, 62, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num111].scale = 1.5f;
							Main.dust[num111].noLight = true;
							Main.dust[num111].noGravity = true;
							Main.dust[num111].position = base.Center + vector14;
							Main.dust[num111].velocity = Main.dust[num111].velocity * 4f + this.velocity * 0.3f;
							num110++;
						}
					}
				}
			}
			if (this.type == 706)
			{
				if (this.wet)
				{
					this.Kill();
					return;
				}
				if (this.localAI[1] == 0f)
				{
					this.localAI[0] = Main.PlayTrackedSound(SoundID.DD2_PhantomPhoenixShot, base.Center).ToFloat();
					this.localAI[1] += 1f;
					for (int num112 = 0; num112 < 15; num112++)
					{
						if (Main.rand.Next(4) != 0)
						{
							Dust dust6 = Dust.NewDustDirect(base.Center - base.Size / 4f, this.width / 2, this.height / 2, Utils.SelectRandom<int>(Main.rand, new int[]
							{
								6,
								31,
								31
							}), 0f, 0f, 0, default(Color), 1f);
							dust6.noGravity = true;
							dust6.velocity *= 2.3f;
							dust6.fadeIn = 1.5f;
							dust6.noLight = true;
						}
					}
				}
				ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[0]));
				if (activeSound != null)
				{
					activeSound.Position = base.Center;
				}
				else
				{
					this.localAI[0] = SlotId.Invalid.ToFloat();
				}
				if (this.alpha <= 0)
				{
					for (int num113 = 0; num113 < 2; num113++)
					{
						if (Main.rand.Next(4) != 0)
						{
							Dust dust7 = Dust.NewDustDirect(base.Center - base.Size / 4f, this.width / 2, this.height / 2, Utils.SelectRandom<int>(Main.rand, new int[]
							{
								6,
								31,
								31
							}), 0f, 0f, 0, default(Color), 1f);
							dust7.noGravity = true;
							dust7.velocity *= 2.3f;
							dust7.fadeIn = 1.5f;
							dust7.noLight = true;
						}
					}
					Vector2 vector15 = new Vector2(0f, (float)Math.Cos((double)((float)this.frameCounter * 6.28318548f / 40f - 1.57079637f))) * 16f;
					vector15 = vector15.RotatedBy((double)this.rotation, default(Vector2));
					Vector2 value16 = this.velocity.SafeNormalize(Vector2.Zero);
					for (int num114 = 0; num114 < 1; num114++)
					{
						Dust dust8 = Dust.NewDustDirect(base.Center - base.Size / 4f, this.width / 2, this.height / 2, 6, 0f, 0f, 0, default(Color), 1f);
						dust8.noGravity = true;
						dust8.position = base.Center + vector15;
						dust8.velocity *= 0f;
						dust8.fadeIn = 1.4f;
						dust8.scale = 1.15f;
						dust8.noLight = true;
						dust8.position += this.velocity * 1.2f;
						dust8.velocity += value16 * 2f;
						dust8 = Dust.NewDustDirect(base.Center - base.Size / 4f, this.width / 2, this.height / 2, 6, 0f, 0f, 0, default(Color), 1f);
						dust8.noGravity = true;
						dust8.position = base.Center + vector15;
						dust8.velocity *= 0f;
						dust8.fadeIn = 1.4f;
						dust8.scale = 1.15f;
						dust8.noLight = true;
						dust8.position += this.velocity * 0.5f;
						dust8.position += this.velocity * 1.2f;
						dust8.velocity += value16 * 2f;
					}
				}
				if (++this.frameCounter >= 40)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / 5;
				if (this.alpha > 0)
				{
					this.alpha -= 55;
					if (this.alpha < 0)
					{
						this.alpha = 0;
						float num115 = 16f;
						int num116 = 0;
						while ((float)num116 < num115)
						{
							Vector2 vector16 = Vector2.UnitX * 0f;
							vector16 += -Vector2.UnitY.RotatedBy((double)((float)num116 * (6.28318548f / num115)), default(Vector2)) * new Vector2(1f, 4f);
							vector16 = vector16.RotatedBy((double)this.velocity.ToRotation(), default(Vector2));
							int num117 = Dust.NewDust(base.Center, 0, 0, 6, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num117].scale = 1.5f;
							Main.dust[num117].noLight = true;
							Main.dust[num117].noGravity = true;
							Main.dust[num117].position = base.Center + vector16;
							Main.dust[num117].velocity = Main.dust[num117].velocity * 4f + this.velocity * 0.3f;
							num116++;
						}
					}
				}
				DelegateMethods.v3_1 = new Vector3(1f, 0.6f, 0.2f);
				Utils.PlotTileLine(base.Center, base.Center + this.velocity * 4f, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
			}
			if (this.type == 638)
			{
				float num118 = this.velocity.Length();
				if (this.alpha > 0)
				{
					this.alpha -= (int)((byte)((double)num118 * 0.3));
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				Rectangle hitbox = base.Hitbox;
				hitbox.Offset((int)this.velocity.X, (int)this.velocity.Y);
				bool flag2 = false;
				for (int num119 = 0; num119 < 200; num119++)
				{
					NPC nPC = Main.npc[num119];
					if (nPC.active && !nPC.dontTakeDamage && nPC.immune[this.owner] == 0 && this.localNPCImmunity[num119] == 0 && nPC.Hitbox.Intersects(hitbox) && !nPC.friendly)
					{
						flag2 = true;
						break;
					}
				}
				if (flag2)
				{
					int num120 = Main.rand.Next(15, 31);
					for (int num121 = 0; num121 < num120; num121++)
					{
						int num122 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 0.8f);
						Main.dust[num122].velocity *= 1.6f;
						Dust expr_5DE9_cp_0 = Main.dust[num122];
						expr_5DE9_cp_0.velocity.Y = expr_5DE9_cp_0.velocity.Y - 1f;
						Main.dust[num122].velocity += this.velocity;
						Main.dust[num122].noGravity = true;
					}
				}
			}
			if (this.type == 257 || this.type == 593)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 88)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 532)
			{
				this.ai[0] += 1f;
			}
			bool flag3 = true;
			num98 = this.type;
			if (num98 <= 325)
			{
				if (num98 <= 161)
				{
					if (num98 <= 55)
					{
						if (num98 <= 14)
						{
							if (num98 != 5 && num98 != 14)
							{
								goto IL_634B;
							}
						}
						else if (num98 != 20)
						{
							switch (num98)
							{
							case 36:
							case 38:
								break;
							case 37:
								goto IL_634B;
							default:
								if (num98 != 55)
								{
									goto IL_634B;
								}
								break;
							}
						}
					}
					else if (num98 <= 100)
					{
						switch (num98)
						{
						case 83:
						case 84:
						case 88:
						case 89:
							break;
						case 85:
						case 86:
						case 87:
							goto IL_634B;
						default:
							switch (num98)
							{
							case 98:
							case 100:
								break;
							case 99:
								goto IL_634B;
							default:
								goto IL_634B;
							}
							break;
						}
					}
					else if (num98 != 104 && num98 != 110)
					{
						switch (num98)
						{
						case 158:
						case 159:
						case 160:
						case 161:
							break;
						default:
							goto IL_634B;
						}
					}
				}
				else if (num98 <= 259)
				{
					if (num98 <= 184)
					{
						if (num98 != 180 && num98 != 184)
						{
							goto IL_634B;
						}
					}
					else if (num98 != 242 && num98 != 248)
					{
						switch (num98)
						{
						case 257:
						case 259:
							break;
						case 258:
							goto IL_634B;
						default:
							goto IL_634B;
						}
					}
				}
				else if (num98 <= 287)
				{
					if (num98 != 265 && num98 != 270)
					{
						switch (num98)
						{
						case 279:
						case 283:
						case 284:
						case 285:
						case 286:
						case 287:
							break;
						case 280:
						case 281:
						case 282:
							goto IL_634B;
						default:
							goto IL_634B;
						}
					}
				}
				else if (num98 != 299 && num98 != 302)
				{
					switch (num98)
					{
					case 323:
					case 325:
						break;
					case 324:
						goto IL_634B;
					default:
						goto IL_634B;
					}
				}
			}
			else if (num98 <= 485)
			{
				if (num98 <= 442)
				{
					if (num98 <= 355)
					{
						switch (num98)
						{
						case 348:
						case 349:
						case 350:
							break;
						default:
							if (num98 != 355)
							{
								goto IL_634B;
							}
							break;
						}
					}
					else
					{
						switch (num98)
						{
						case 374:
						case 376:
							break;
						case 375:
							goto IL_634B;
						default:
							if (num98 != 389)
							{
								switch (num98)
								{
								case 435:
								case 436:
								case 438:
								case 440:
								case 442:
									break;
								case 437:
								case 439:
								case 441:
									goto IL_634B;
								default:
									goto IL_634B;
								}
							}
							break;
						}
					}
				}
				else if (num98 <= 459)
				{
					if (num98 != 449 && num98 != 459)
					{
						goto IL_634B;
					}
				}
				else if (num98 != 462)
				{
					switch (num98)
					{
					case 467:
					case 468:
					case 469:
					case 472:
						break;
					case 470:
					case 471:
						goto IL_634B;
					default:
						switch (num98)
						{
						case 483:
						case 484:
						case 485:
							break;
						default:
							goto IL_634B;
						}
						break;
					}
				}
			}
			else if (num98 <= 601)
			{
				if (num98 <= 577)
				{
					if (num98 != 498)
					{
						switch (num98)
						{
						case 576:
						case 577:
							break;
						default:
							goto IL_634B;
						}
					}
				}
				else if (num98 != 585)
				{
					switch (num98)
					{
					case 592:
					case 593:
						break;
					default:
						if (num98 != 601)
						{
							goto IL_634B;
						}
						break;
					}
				}
			}
			else if (num98 <= 639)
			{
				if (num98 != 606 && num98 != 616)
				{
					switch (num98)
					{
					case 634:
					case 635:
					case 638:
					case 639:
						break;
					case 636:
					case 637:
						goto IL_634B;
					default:
						goto IL_634B;
					}
				}
			}
			else
			{
				switch (num98)
				{
				case 660:
				case 661:
					break;
				default:
					switch (num98)
					{
					case 682:
					case 684:
						break;
					case 683:
						goto IL_634B;
					default:
						switch (num98)
						{
						case 706:
						case 709:
						case 710:
						case 712:
							break;
						case 707:
						case 708:
						case 711:
							goto IL_634B;
						default:
							goto IL_634B;
						}
						break;
					}
					break;
				}
			}
			flag3 = false;
			IL_634B:
			if (flag3)
			{
				this.ai[0] += 1f;
			}
			if (this.type == 270)
			{
				int num123 = (int)Player.FindClosest(base.Center, 1, 1);
				this.ai[1] += 1f;
				if (this.ai[1] < 110f && this.ai[1] > 30f)
				{
					float scaleFactor2 = this.velocity.Length();
					Vector2 vector17 = Main.player[num123].Center - base.Center;
					vector17.Normalize();
					vector17 *= scaleFactor2;
					this.velocity = (this.velocity * 24f + vector17) / 25f;
					this.velocity.Normalize();
					this.velocity *= scaleFactor2;
				}
				if (this.ai[0] < 0f)
				{
					if (this.velocity.Length() < 18f)
					{
						this.velocity *= 1.02f;
					}
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] = 1f;
						Main.PlaySound(SoundID.Item8, this.position);
						for (int num124 = 0; num124 < 10; num124++)
						{
							int num125 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 5, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
							Main.dust[num125].noGravity = true;
							Main.dust[num125].velocity = base.Center - Main.dust[num125].position;
							Main.dust[num125].velocity.Normalize();
							Main.dust[num125].velocity *= -5f;
							Main.dust[num125].velocity += this.velocity / 2f;
						}
					}
					this.friendly = false;
					this.hostile = true;
				}
			}
			if (this.type == 585)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item8, this.position);
					for (int num126 = 0; num126 < 3; num126++)
					{
						int num127 = Dust.NewDust(this.position, this.width, this.height, 27, this.velocity.X, this.velocity.Y, 0, default(Color), 2f);
						Main.dust[num127].noGravity = true;
						Main.dust[num127].velocity = base.Center - Main.dust[num127].position;
						Main.dust[num127].velocity.Normalize();
						Main.dust[num127].velocity *= -5f;
						Main.dust[num127].velocity += this.velocity / 2f;
						Main.dust[num127].noLight = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.frameCounter++;
				if (this.frameCounter >= 12)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / 2;
				if (this.frame > 3)
				{
					this.frame = 6 - this.frame;
				}
				Vector3 vector18 = NPCID.Sets.MagicAuraColor[54].ToVector3();
				Lighting.AddLight(base.Center, vector18.X, vector18.Y, vector18.Z);
				if (Main.rand.Next(3) == 0)
				{
					int num128 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
					Main.dust[num128].position -= this.velocity * 2f;
					Main.dust[num128].noLight = true;
					Main.dust[num128].noGravity = true;
					Dust expr_6866_cp_0 = Main.dust[num128];
					expr_6866_cp_0.velocity.X = expr_6866_cp_0.velocity.X * 0.3f;
					Dust expr_6884_cp_0 = Main.dust[num128];
					expr_6884_cp_0.velocity.Y = expr_6884_cp_0.velocity.Y * 0.3f;
				}
			}
			if (this.type == 594)
			{
				int num129 = (int)(43f - this.ai[1]) / 13;
				if (num129 < 1)
				{
					num129 = 1;
				}
				int num130 = (this.ai[1] < 20f) ? 6 : 31;
				for (int num131 = 0; num131 < num129; num131++)
				{
					int num132 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, num130, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, default(Color), 2f);
					Main.dust[num132].position -= this.velocity * 2f;
					Main.dust[num132].noLight = true;
					Main.dust[num132].noGravity = true;
					Dust expr_69A6_cp_0 = Main.dust[num132];
					expr_69A6_cp_0.velocity.X = expr_69A6_cp_0.velocity.X * 0.3f;
					Dust expr_69C4_cp_0 = Main.dust[num132];
					expr_69C4_cp_0.velocity.Y = expr_69C4_cp_0.velocity.Y * 0.3f;
					if (num130 == 6)
					{
						Main.dust[num132].fadeIn = Main.rand.NextFloat() * 2f;
					}
				}
				this.ai[1] += 1f;
				if (this.ai[1] > (float)(43 * this.MaxUpdates))
				{
					this.Kill();
					return;
				}
			}
			if (this.type == 622)
			{
				int num133 = 229;
				if (Main.rand.Next(3) != 0)
				{
					int num134 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, num133, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, default(Color), 1.2f);
					Main.dust[num134].position -= this.velocity * 2f;
					Main.dust[num134].noLight = true;
					Main.dust[num134].noGravity = true;
					Dust expr_6B2C_cp_0 = Main.dust[num134];
					expr_6B2C_cp_0.velocity.X = expr_6B2C_cp_0.velocity.X * 0.3f;
					Dust expr_6B4A_cp_0 = Main.dust[num134];
					expr_6B4A_cp_0.velocity.Y = expr_6B4A_cp_0.velocity.Y * 0.3f;
				}
				this.ai[1] += 1f;
				if (this.ai[1] > (float)(23 * this.MaxUpdates))
				{
					this.Kill();
					return;
				}
			}
			if (this.type == 587)
			{
				Color newColor = Main.hslToRgb(this.ai[1], 1f, 0.5f);
				newColor.A = 200;
				this.localAI[0] += 1f;
				if (this.localAI[0] >= 2f)
				{
					if (this.localAI[0] == 2f)
					{
						Main.PlaySound(SoundID.Item5, this.position);
						for (int num135 = 0; num135 < 4; num135++)
						{
							int num136 = Dust.NewDust(this.position, this.width, this.height, 76, this.velocity.X, this.velocity.Y, 0, newColor, 1.1f);
							Main.dust[num136].noGravity = true;
							Main.dust[num136].velocity = base.Center - Main.dust[num136].position;
							Main.dust[num136].velocity.Normalize();
							Main.dust[num136].velocity *= -3f;
							Main.dust[num136].velocity += this.velocity / 2f;
						}
					}
					else
					{
						this.frame++;
						if (this.frame > 2)
						{
							this.frame = 0;
						}
						for (int num137 = 0; num137 < 1; num137++)
						{
							int num138 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, newColor, 0.9f);
							Main.dust[num138].position = base.Center;
							Main.dust[num138].noGravity = true;
							Main.dust[num138].velocity = this.velocity * 0.5f;
						}
					}
				}
			}
			if (this.type == 349)
			{
				this.frame = (int)this.ai[0];
				this.velocity.Y = this.velocity.Y + 0.2f;
				if (this.localAI[0] == 0f || this.localAI[0] == 2f)
				{
					this.scale += 0.01f;
					this.alpha -= 50;
					if (this.alpha <= 0)
					{
						this.localAI[0] = 1f;
						this.alpha = 0;
					}
				}
				else if (this.localAI[0] == 1f)
				{
					this.scale -= 0.01f;
					this.alpha += 50;
					if (this.alpha >= 255)
					{
						this.localAI[0] = 2f;
						this.alpha = 255;
					}
				}
			}
			if (this.type == 348)
			{
				if (this.localAI[1] == 0f)
				{
					this.localAI[1] = 1f;
					Main.PlaySound(SoundID.Item8, this.position);
				}
				if (this.ai[0] == 0f || this.ai[0] == 2f)
				{
					this.scale += 0.01f;
					this.alpha -= 50;
					if (this.alpha <= 0)
					{
						this.ai[0] = 1f;
						this.alpha = 0;
					}
				}
				else if (this.ai[0] == 1f)
				{
					this.scale -= 0.01f;
					this.alpha += 50;
					if (this.alpha >= 255)
					{
						this.ai[0] = 2f;
						this.alpha = 255;
					}
				}
			}
			if (this.type == 572)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item17, this.position);
				}
				for (int num139 = 0; num139 < 2; num139++)
				{
					int num140 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					Main.dust[num140].velocity *= 0.5f;
					Main.dust[num140].velocity += this.velocity;
					Main.dust[num140].velocity *= 0.5f;
					Main.dust[num140].noGravity = true;
					Main.dust[num140].scale = 1.2f;
					Main.dust[num140].position = (base.Center + this.position) / 2f;
				}
			}
			if (this.type == 577)
			{
				Lighting.AddLight(base.Center, 0.1f, 0.3f, 0.4f);
			}
			else if (this.type == 576)
			{
				Lighting.AddLight(base.Center, 0.4f, 0.2f, 0.4f);
				for (int num141 = 0; num141 < 5; num141++)
				{
					Dust dust9 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
					dust9.velocity = Vector2.Zero;
					dust9.position -= this.velocity / 5f * (float)num141;
					dust9.noGravity = true;
					dust9.scale = 0.8f;
					dust9.noLight = true;
				}
			}
			else if (this.type == 581)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item17, base.Center);
				}
				for (int num142 = 0; num142 < 2; num142++)
				{
					int num143 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						229,
						161,
						161
					});
					Dust dust10 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num143, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
					dust10.velocity = dust10.velocity / 4f + this.velocity / 2f;
					dust10.noGravity = true;
					dust10.scale = 1.2f;
					dust10.position = base.Center;
					dust10.noLight = true;
				}
			}
			else if (this.type == 671)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					for (int num144 = 0; num144 < 8; num144++)
					{
						int num145 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							27,
							62
						});
						Dust dust11 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num145, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
						dust11.velocity = (Main.rand.NextFloatDirection() * 3.14159274f).ToRotationVector2() * 2f + this.velocity.SafeNormalize(Vector2.Zero) * 3f;
						dust11.noGravity = true;
						dust11.scale = 1.5f;
						dust11.fadeIn = 1.2f;
						dust11.position = base.Center;
						dust11.noLight = true;
					}
				}
				this.alpha -= 20;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				for (int num146 = 0; num146 < 2; num146++)
				{
					int num147 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						27,
						27,
						62
					});
					Dust dust12 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num147, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
					dust12.velocity = dust12.velocity / 4f + this.velocity / 2f;
					dust12.noGravity = true;
					dust12.scale = 1.2f;
					dust12.position = base.Center;
					dust12.noLight = true;
				}
			}
			else if (this.type == 675)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlayTrackedSound(SoundID.DD2_DarkMageAttack, base.Center);
				}
				this.alpha -= 20;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			else if (this.type == 676)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item17, base.Center);
				}
				this.alpha -= 20;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				for (int num148 = 0; num148 < 2; num148++)
				{
					if (Main.rand.Next(5) != 0)
					{
						int num149 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							4,
							256
						});
						Dust dust13 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num149, this.velocity.X, this.velocity.Y, 100, default(Color), 1f)];
						dust13.velocity = dust13.velocity / 4f + this.velocity / 2f;
						dust13.scale = 0.8f + Main.rand.NextFloat() * 0.4f;
						dust13.position = base.Center;
						dust13.position += new Vector2((float)(this.width * 2), 0f).RotatedBy((double)(6.28318548f * Main.rand.NextFloat()), default(Vector2)) * Main.rand.NextFloat();
						dust13.noLight = true;
						if (dust13.type == 4)
						{
							dust13.color = new Color(80, 170, 40, 120);
						}
					}
				}
			}
			else if (this.type == 686)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlayTrackedSound(SoundID.DD2_BetsyFireballShot, base.Center);
				}
				if (this.ai[0] >= 2f)
				{
					this.alpha -= 25;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					Dust dust14 = Dust.NewDustDirect(this.position, this.width, this.height, 55, 0f, 0f, 200, default(Color), 1f);
					dust14.scale *= 0.7f;
					dust14.velocity += this.velocity * 1f;
				}
				if (Main.rand.Next(3) == 0 && this.oldPos[9] != Vector2.Zero)
				{
					Dust dust15 = Dust.NewDustDirect(this.oldPos[9], this.width, this.height, 55, 0f, 0f, 50, default(Color), 1f);
					dust15.scale *= 0.85f;
					dust15.velocity += this.velocity * 0.85f;
					dust15.color = Color.Purple;
				}
			}
			else if (this.type == 711)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					for (int num150 = 0; num150 < 10; num150++)
					{
						Dust dust16 = Dust.NewDustDirect(this.position, this.width, this.height, 55, 0f, 0f, 200, default(Color), 1f);
						dust16.scale *= 0.65f;
						dust16.velocity *= 1.5f;
						dust16.velocity += this.velocity * 0.3f;
						dust16.fadeIn = 0.7f;
					}
				}
				if (this.ai[0] >= 2f)
				{
					this.alpha -= 25;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
				if (Main.rand.Next(4) == 0)
				{
					Dust dust17 = Dust.NewDustDirect(this.position, this.width, this.height, 55, 0f, 0f, 200, default(Color), 1f);
					dust17.scale *= 0.7f;
					dust17.velocity += this.velocity * 1f;
				}
				if (Main.rand.Next(3) == 0 && this.oldPos[9] != Vector2.Zero)
				{
					Dust dust18 = Dust.NewDustDirect(this.oldPos[9], this.width, this.height, 55, 0f, 0f, 50, default(Color), 1f);
					dust18.scale *= 0.85f;
					dust18.velocity += this.velocity * 0.85f;
					dust18.color = Color.Purple;
				}
			}
			if (this.type == 299)
			{
				if (this.localAI[0] == 6f)
				{
					Main.PlaySound(SoundID.Item8, this.position);
					for (int num151 = 0; num151 < 40; num151++)
					{
						int num152 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num152].velocity *= 3f;
						Main.dust[num152].velocity += this.velocity * 0.75f;
						Main.dust[num152].scale *= 1.2f;
						Main.dust[num152].noGravity = true;
					}
				}
				this.localAI[0] += 1f;
				if (this.localAI[0] > 6f)
				{
					for (int num153 = 0; num153 < 3; num153++)
					{
						int num154 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num154].velocity *= 0.6f;
						Main.dust[num154].scale *= 1.4f;
						Main.dust[num154].noGravity = true;
					}
				}
			}
			else if (this.type == 270)
			{
				if (this.ai[0] < 0f)
				{
					this.alpha = 0;
				}
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				this.frame++;
				if (this.frame > 2)
				{
					this.frame = 0;
				}
				if (this.ai[0] < 0f)
				{
					for (int num155 = 0; num155 < 2; num155++)
					{
						int num156 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 1.5f);
						Main.dust[num156].position -= this.velocity;
						Main.dust[num156].noGravity = true;
						Dust expr_7ED9_cp_0 = Main.dust[num156];
						expr_7ED9_cp_0.velocity.X = expr_7ED9_cp_0.velocity.X * 0.3f;
						Dust expr_7EF7_cp_0 = Main.dust[num156];
						expr_7EF7_cp_0.velocity.Y = expr_7EF7_cp_0.velocity.Y * 0.3f;
					}
				}
				else
				{
					for (int num157 = 0; num157 < 2; num157++)
					{
						int num158 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num158].position -= this.velocity * 2f;
						Main.dust[num158].noGravity = true;
						Dust expr_7FDC_cp_0 = Main.dust[num158];
						expr_7FDC_cp_0.velocity.X = expr_7FDC_cp_0.velocity.X * 0.3f;
						Dust expr_7FFA_cp_0 = Main.dust[num158];
						expr_7FFA_cp_0.velocity.Y = expr_7FFA_cp_0.velocity.Y * 0.3f;
					}
				}
			}
			if (this.type == 259)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 10;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			if (this.type == 265)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.alpha == 0)
				{
					int num159 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num159].noGravity = true;
					Main.dust[num159].velocity *= 0.3f;
					Main.dust[num159].velocity -= this.velocity * 0.4f;
				}
			}
			if (this.type == 355)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.alpha == 0)
				{
					int num160 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num160].noGravity = true;
					Main.dust[num160].velocity *= 0.3f;
					Main.dust[num160].velocity -= this.velocity * 0.4f;
				}
			}
			if (this.type == 357)
			{
				if (this.alpha < 170)
				{
					for (int num161 = 0; num161 < 10; num161++)
					{
						float x = this.position.X - this.velocity.X / 10f * (float)num161;
						float y = this.position.Y - this.velocity.Y / 10f * (float)num161;
						int num162 = Dust.NewDust(new Vector2(x, y), 1, 1, 206, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num162].alpha = this.alpha;
						Main.dust[num162].position.X = x;
						Main.dust[num162].position.Y = y;
						Main.dust[num162].velocity *= 0f;
						Main.dust[num162].noGravity = true;
					}
				}
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
			}
			else if (this.type == 207)
			{
				if (this.alpha < 170)
				{
					for (int num163 = 0; num163 < 10; num163++)
					{
						float x2 = this.position.X - this.velocity.X / 10f * (float)num163;
						float y2 = this.position.Y - this.velocity.Y / 10f * (float)num163;
						int num164 = Dust.NewDust(new Vector2(x2, y2), 1, 1, 75, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num164].alpha = this.alpha;
						Main.dust[num164].position.X = x2;
						Main.dust[num164].position.Y = y2;
						Main.dust[num164].velocity *= 0f;
						Main.dust[num164].noGravity = true;
					}
				}
				float num165 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
				float num166 = this.localAI[0];
				if (num166 == 0f)
				{
					this.localAI[0] = num165;
					num166 = num165;
				}
				if (this.alpha > 0)
				{
					this.alpha -= 25;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				float num167 = this.position.X;
				float num168 = this.position.Y;
				float num169 = 300f;
				bool flag4 = false;
				int num170 = 0;
				if (this.ai[1] == 0f)
				{
					for (int num171 = 0; num171 < 200; num171++)
					{
						if (Main.npc[num171].CanBeChasedBy(this, false) && (this.ai[1] == 0f || this.ai[1] == (float)(num171 + 1)))
						{
							float num172 = Main.npc[num171].position.X + (float)(Main.npc[num171].width / 2);
							float num173 = Main.npc[num171].position.Y + (float)(Main.npc[num171].height / 2);
							float num174 = Math.Abs(this.position.X + (float)(this.width / 2) - num172) + Math.Abs(this.position.Y + (float)(this.height / 2) - num173);
							if (num174 < num169 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num171].position, Main.npc[num171].width, Main.npc[num171].height))
							{
								num169 = num174;
								num167 = num172;
								num168 = num173;
								flag4 = true;
								num170 = num171;
							}
						}
					}
					if (flag4)
					{
						this.ai[1] = (float)(num170 + 1);
					}
					flag4 = false;
				}
				if (this.ai[1] > 0f)
				{
					int num175 = (int)(this.ai[1] - 1f);
					if (Main.npc[num175].active && Main.npc[num175].CanBeChasedBy(this, true) && !Main.npc[num175].dontTakeDamage)
					{
						float num176 = Main.npc[num175].position.X + (float)(Main.npc[num175].width / 2);
						float num177 = Main.npc[num175].position.Y + (float)(Main.npc[num175].height / 2);
						float num178 = Math.Abs(this.position.X + (float)(this.width / 2) - num176) + Math.Abs(this.position.Y + (float)(this.height / 2) - num177);
						if (num178 < 1000f)
						{
							flag4 = true;
							num167 = Main.npc[num175].position.X + (float)(Main.npc[num175].width / 2);
							num168 = Main.npc[num175].position.Y + (float)(Main.npc[num175].height / 2);
						}
					}
					else
					{
						this.ai[1] = 0f;
					}
				}
				if (!this.friendly)
				{
					flag4 = false;
				}
				if (flag4)
				{
					float num179 = num166;
					Vector2 vector19 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num180 = num167 - vector19.X;
					float num181 = num168 - vector19.Y;
					float num182 = (float)Math.Sqrt((double)(num180 * num180 + num181 * num181));
					num182 = num179 / num182;
					num180 *= num182;
					num181 *= num182;
					int num183 = 8;
					this.velocity.X = (this.velocity.X * (float)(num183 - 1) + num180) / (float)num183;
					this.velocity.Y = (this.velocity.Y * (float)(num183 - 1) + num181) / (float)num183;
				}
			}
			else if (this.type == 81 || this.type == 91)
			{
				if (this.ai[0] >= 20f)
				{
					this.ai[0] = 20f;
					this.velocity.Y = this.velocity.Y + 0.07f;
				}
			}
			else if (this.type == 174 || this.type == 605)
			{
				if (this.ai[0] >= 5f)
				{
					this.ai[0] = 5f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
			}
			else if (this.type == 337)
			{
				if (this.position.Y > Main.player[this.owner].position.Y - 300f)
				{
					this.tileCollide = true;
				}
				if ((double)this.position.Y < Main.worldSurface * 16.0)
				{
					this.tileCollide = true;
				}
				this.frame = (int)this.ai[1];
				if (Main.rand.Next(2) == 0)
				{
					int num184 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num184].velocity *= 0.5f;
					Main.dust[num184].noGravity = true;
				}
			}
			else if (this.type == 645)
			{
				if (this.ai[1] != -1f && this.position.Y > this.ai[1])
				{
					this.tileCollide = true;
				}
				if (this.position.HasNaNs())
				{
					this.Kill();
					return;
				}
				bool flag5 = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
				Dust dust19 = Main.dust[Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
				dust19.position = base.Center;
				dust19.velocity = Vector2.Zero;
				dust19.noGravity = true;
				if (flag5)
				{
					dust19.noLight = true;
				}
				if (this.ai[1] == -1f)
				{
					this.ai[0] += 1f;
					this.velocity = Vector2.Zero;
					this.tileCollide = false;
					this.penetrate = -1;
					this.position = base.Center;
					this.width = (this.height = 140);
					base.Center = this.position;
					this.alpha -= 10;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					if (++this.frameCounter >= this.MaxUpdates * 3)
					{
						this.frameCounter = 0;
						this.frame++;
					}
					if (this.ai[0] >= (float)(Main.projFrames[this.type] * this.MaxUpdates * 3))
					{
						this.Kill();
					}
					return;
				}
				this.alpha = 255;
				if (this.numUpdates == 0)
				{
					int num185 = -1;
					float num186 = 60f;
					for (int num187 = 0; num187 < 200; num187++)
					{
						NPC nPC2 = Main.npc[num187];
						if (nPC2.CanBeChasedBy(this, false))
						{
							float num188 = base.Distance(nPC2.Center);
							if (num188 < num186 && Collision.CanHitLine(base.Center, 0, 0, nPC2.Center, 0, 0))
							{
								num186 = num188;
								num185 = num187;
							}
						}
					}
					if (num185 != -1)
					{
						this.ai[0] = 0f;
						this.ai[1] = -1f;
						this.netUpdate = true;
						return;
					}
				}
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				if (this.position.Y > Main.player[this.owner].position.Y - 300f)
				{
					this.tileCollide = true;
				}
				if ((double)this.position.Y < Main.worldSurface * 16.0)
				{
					this.tileCollide = true;
				}
				this.scale = this.ai[1];
				this.rotation += this.velocity.X * 2f;
				Vector2 position = base.Center + Vector2.Normalize(this.velocity) * 10f;
				Dust dust20 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
				dust20.position = position;
				dust20.velocity = this.velocity.RotatedBy(1.5707963705062866, default(Vector2)) * 0.33f + this.velocity / 4f;
				dust20.position += this.velocity.RotatedBy(1.5707963705062866, default(Vector2));
				dust20.fadeIn = 0.5f;
				dust20.noGravity = true;
				dust20 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f)];
				dust20.position = position;
				dust20.velocity = this.velocity.RotatedBy(-1.5707963705062866, default(Vector2)) * 0.33f + this.velocity / 4f;
				dust20.position += this.velocity.RotatedBy(-1.5707963705062866, default(Vector2));
				dust20.fadeIn = 0.5f;
				dust20.noGravity = true;
				for (int num189 = 0; num189 < 1; num189++)
				{
					int num190 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num190].velocity *= 0.5f;
					Main.dust[num190].scale *= 1.3f;
					Main.dust[num190].fadeIn = 1f;
					Main.dust[num190].noGravity = true;
				}
			}
			else if (this.type == 344)
			{
				if (WorldGen.SolidTile((int)this.position.X / 16, (int)(this.position.Y + this.velocity.Y) / 16 + 1) || WorldGen.SolidTile((int)(this.position.X + (float)this.width) / 16, (int)(this.position.Y + this.velocity.Y) / 16 + 1))
				{
					this.Kill();
					return;
				}
				this.localAI[1] += 1f;
				if (this.localAI[1] > 5f)
				{
					this.alpha -= 50;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
				this.frame = (int)this.ai[1];
				if (this.localAI[1] > 20f)
				{
					this.localAI[1] = 20f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
				this.rotation += Main.windSpeed * 0.2f;
				this.velocity.X = this.velocity.X + Main.windSpeed * 0.1f;
			}
			else if (this.type == 336 || this.type == 345)
			{
				if (this.type == 345 && this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlaySound(SoundID.Item1, this.position);
				}
				if (this.ai[0] >= 50f)
				{
					this.ai[0] = 50f;
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type == 246)
			{
				this.alpha -= 20;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 60f)
				{
					this.ai[0] = 60f;
					this.velocity.Y = this.velocity.Y + 0.15f;
				}
			}
			else if (this.type == 311)
			{
				if (this.alpha > 0)
				{
					this.alpha -= 50;
				}
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 30f)
				{
					this.ai[0] = 30f;
					if (this.ai[1] == 0f)
					{
						this.ai[1] = 1f;
					}
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type == 312)
			{
				if (this.ai[0] >= 5f)
				{
					this.alpha = 0;
				}
				if (this.ai[0] >= 20f)
				{
					this.ai[0] = 30f;
					this.velocity.Y = this.velocity.Y + 0.5f;
				}
			}
			else if (this.type != 239 && this.type != 264)
			{
				if (this.type == 176)
				{
					if (this.ai[0] >= 15f)
					{
						this.ai[0] = 15f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 275 || this.type == 276)
				{
					if (this.alpha > 0)
					{
						this.alpha -= 30;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					if (this.ai[0] >= 35f)
					{
						this.ai[0] = 35f;
						this.velocity.Y = this.velocity.Y + 0.025f;
					}
					if (Main.expertMode)
					{
						float scaleFactor3 = 18f;
						int num191 = (int)Player.FindClosest(base.Center, 1, 1);
						Vector2 vector20 = Main.player[num191].Center - base.Center;
						vector20.Normalize();
						vector20 *= scaleFactor3;
						int num192 = 70;
						this.velocity = (this.velocity * (float)(num192 - 1) + vector20) / (float)num192;
						if (this.velocity.Length() < 14f)
						{
							this.velocity.Normalize();
							this.velocity *= 14f;
						}
						this.tileCollide = false;
						if (this.timeLeft > 180)
						{
							this.timeLeft = 180;
						}
					}
				}
				else if (this.type == 172)
				{
					if (this.ai[0] >= 17f)
					{
						this.ai[0] = 17f;
						this.velocity.Y = this.velocity.Y + 0.085f;
					}
				}
				else if (this.type == 117)
				{
					if (this.ai[0] >= 35f)
					{
						this.ai[0] = 35f;
						this.velocity.Y = this.velocity.Y + 0.06f;
					}
				}
				else if (this.type == 120)
				{
					int num193 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num193].noGravity = true;
					Main.dust[num193].velocity *= 0.3f;
					if (this.ai[0] >= 30f)
					{
						this.ai[0] = 30f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 195)
				{
					if (this.ai[0] >= 20f)
					{
						this.ai[0] = 20f;
						this.velocity.Y = this.velocity.Y + 0.075f;
						this.tileCollide = true;
					}
					else
					{
						this.tileCollide = false;
					}
				}
				else if (this.type == 267 || this.type == 477 || this.type == 478 || this.type == 479)
				{
					this.localAI[0] += 1f;
					if (this.localAI[0] > 3f)
					{
						this.alpha = 0;
					}
					if (this.ai[0] >= 20f)
					{
						this.ai[0] = 20f;
						if (this.type != 477)
						{
							this.velocity.Y = this.velocity.Y + 0.075f;
						}
					}
					if (this.type == 479 && Main.myPlayer == this.owner)
					{
						if (this.ai[1] >= 0f)
						{
							this.penetrate = -1;
						}
						else if (this.penetrate < 0)
						{
							this.penetrate = 1;
						}
						if (this.ai[1] >= 0f)
						{
							this.ai[1] += 1f;
						}
						if (this.ai[1] > (float)Main.rand.Next(5, 30))
						{
							this.ai[1] = -1000f;
							float scaleFactor4 = this.velocity.Length();
							Vector2 velocity = this.velocity;
							velocity.Normalize();
							int num194 = Main.rand.Next(2, 4);
							if (Main.rand.Next(4) == 0)
							{
								num194++;
							}
							for (int num195 = 0; num195 < num194; num195++)
							{
								Vector2 vector21 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
								vector21.Normalize();
								vector21 += velocity * 2f;
								vector21.Normalize();
								vector21 *= scaleFactor4;
								Projectile.NewProjectile(base.Center.X, base.Center.Y, vector21.X, vector21.Y, this.type, this.damage, this.knockBack, this.owner, 0f, -1000f);
							}
						}
					}
					if (this.type == 478 && Main.myPlayer == this.owner)
					{
						this.ai[1] += 1f;
						if (this.ai[1] > (float)Main.rand.Next(5, 20))
						{
							if (this.timeLeft > 40)
							{
								this.timeLeft -= 20;
							}
							this.ai[1] = 0f;
							Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0f, 0f);
						}
					}
				}
				else if (this.type == 408)
				{
					if (this.ai[0] >= 45f)
					{
						this.ai[0] = 45f;
						this.velocity.Y = this.velocity.Y + 0.05f;
					}
				}
				else if (this.type == 616)
				{
					if (this.alpha < 170)
					{
						float num196 = 3f;
						int num197 = 0;
						while ((float)num197 < num196)
						{
							int num198 = Dust.NewDust(this.position, 1, 1, 229, 0f, 0f, 0, default(Color), 1f);
							Main.dust[num198].position = base.Center - this.velocity / num196 * (float)num197;
							Main.dust[num198].velocity *= 0f;
							Main.dust[num198].noGravity = true;
							Main.dust[num198].alpha = 200;
							Main.dust[num198].scale = 0.5f;
							num197++;
						}
					}
					float num199 = (float)Math.Sqrt((double)(this.velocity.X * this.velocity.X + this.velocity.Y * this.velocity.Y));
					float num200 = this.localAI[0];
					if (num200 == 0f)
					{
						this.localAI[0] = num199;
						num200 = num199;
					}
					if (this.alpha > 0)
					{
						this.alpha -= 25;
					}
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					float num201 = this.position.X;
					float num202 = this.position.Y;
					float num203 = 800f;
					bool flag6 = false;
					int num204 = 0;
					this.ai[0] += 1f;
					if (this.ai[0] > 20f)
					{
						this.ai[0] -= 1f;
						if (this.ai[1] == 0f)
						{
							for (int num205 = 0; num205 < 200; num205++)
							{
								if (Main.npc[num205].CanBeChasedBy(this, false) && (this.ai[1] == 0f || this.ai[1] == (float)(num205 + 1)))
								{
									float num206 = Main.npc[num205].position.X + (float)(Main.npc[num205].width / 2);
									float num207 = Main.npc[num205].position.Y + (float)(Main.npc[num205].height / 2);
									float num208 = Math.Abs(this.position.X + (float)(this.width / 2) - num206) + Math.Abs(this.position.Y + (float)(this.height / 2) - num207);
									if (num208 < num203 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[num205].position, Main.npc[num205].width, Main.npc[num205].height))
									{
										num203 = num208;
										num201 = num206;
										num202 = num207;
										flag6 = true;
										num204 = num205;
									}
								}
							}
							if (flag6)
							{
								this.ai[1] = (float)(num204 + 1);
							}
							flag6 = false;
						}
						if (this.ai[1] != 0f)
						{
							int num209 = (int)(this.ai[1] - 1f);
							if (Main.npc[num209].active && Main.npc[num209].CanBeChasedBy(this, true))
							{
								float num210 = Main.npc[num209].position.X + (float)(Main.npc[num209].width / 2);
								float num211 = Main.npc[num209].position.Y + (float)(Main.npc[num209].height / 2);
								float num212 = Math.Abs(this.position.X + (float)(this.width / 2) - num210) + Math.Abs(this.position.Y + (float)(this.height / 2) - num211);
								if (num212 < 1000f)
								{
									flag6 = true;
									num201 = Main.npc[num209].position.X + (float)(Main.npc[num209].width / 2);
									num202 = Main.npc[num209].position.Y + (float)(Main.npc[num209].height / 2);
								}
							}
						}
						if (!this.friendly)
						{
							flag6 = false;
						}
						if (flag6)
						{
							float num213 = num200;
							Vector2 vector22 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num214 = num201 - vector22.X;
							float num215 = num202 - vector22.Y;
							float num216 = (float)Math.Sqrt((double)(num214 * num214 + num215 * num215));
							num216 = num213 / num216;
							num214 *= num216;
							num215 *= num216;
							int num217 = 8;
							this.velocity.X = (this.velocity.X * (float)(num217 - 1) + num214) / (float)num217;
							this.velocity.Y = (this.velocity.Y * (float)(num217 - 1) + num215) / (float)num217;
						}
					}
				}
				else if (this.type == 507 || this.type == 508 || this.type == 662 || this.type == 680 || this.type == 685)
				{
					if (this.ai[0] > 45f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y + 0.3f;
					}
				}
				else if (this.type == 495)
				{
					int num218 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.2f);
					Main.dust[num218].noGravity = true;
					Main.dust[num218].velocity *= 0.3f;
					if (this.ai[0] >= 30f)
					{
						this.ai[0] = 30f;
						this.velocity.Y = this.velocity.Y + 0.04f;
					}
				}
				else if (this.type == 498)
				{
					if (this.localAI[0] == 0f)
					{
						this.localAI[0] += 1f;
						Main.PlaySound(SoundID.Item17, this.position);
					}
					this.ai[0] += 1f;
					if (this.ai[0] >= 50f)
					{
						this.velocity.X = this.velocity.X * 0.98f;
						this.velocity.Y = this.velocity.Y + 0.15f;
						this.rotation += (float)this.direction * 0.5f;
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 437)
				{
					if (this.ai[0] >= 12f)
					{
						if (this.ai[0] >= 20f)
						{
							this.Kill();
						}
						this.alpha += 30;
					}
				}
				else if (this.type != 442 && this.type != 634 && this.type != 635 && this.type != 675)
				{
					if (this.type == 686 || this.type == 711)
					{
						if (this.ai[0] >= 10f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						if (this.ai[0] >= 20f)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
						if (this.ai[0] > 20f)
						{
							this.ai[0] = 20f;
						}
						this.velocity.X = this.velocity.X * 0.99f;
						if (this.velocity.Y > 32f)
						{
							this.velocity.Y = 32f;
						}
					}
					else if (this.type == 639)
					{
						if (this.timeLeft <= this.MaxUpdates * 45 - 14)
						{
							this.velocity.Y = this.velocity.Y + 0.1f;
						}
					}
					else if (this.type == 710)
					{
						if (this.ai[0] >= 0f)
						{
							this.ai[0] += 1f;
							if (this.ai[0] >= 20f)
							{
								this.velocity.Y = this.velocity.Y + 0.2f;
								if (this.velocity.Y > 0f)
								{
									this.velocity.X = this.velocity.X * 0.98f;
								}
								if (this.velocity.Y > 12f)
								{
									this.velocity.Y = 12f;
								}
							}
						}
					}
					else if (this.ai[0] >= 15f)
					{
						this.ai[0] = 15f;
						this.velocity.Y = this.velocity.Y + 0.1f;
					}
				}
			}
			if (this.type == 248)
			{
				if (this.velocity.X < 0f)
				{
					this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.05f;
				}
				else
				{
					this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.05f;
				}
			}
			else if (this.type == 270 || this.type == 585 || this.type == 601 || this.type == 706)
			{
				this.spriteDirection = this.direction;
				if (this.direction < 0)
				{
					this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
				}
			}
			else if (this.type == 311)
			{
				if (this.ai[1] != 0f)
				{
					this.rotation += this.velocity.X * 0.1f + (float)Main.rand.Next(-10, 11) * 0.025f;
				}
				else
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
			}
			else if (this.type == 312)
			{
				this.rotation += this.velocity.X * 0.02f;
			}
			else if (this.type == 675)
			{
				this.rotation += this.velocity.X * 0.03f;
			}
			else if (this.type != 676)
			{
				if (this.type == 408)
				{
					this.rotation = this.velocity.ToRotation();
					if (this.direction == -1)
					{
						this.rotation += 3.14159274f;
					}
				}
				else if (this.type == 435 || this.type == 459 || this.type == 682 || this.type == 709)
				{
					this.rotation = this.velocity.ToRotation();
					if (this.direction == -1)
					{
						this.rotation += 3.14159274f;
					}
				}
				else if (this.type == 660)
				{
					this.rotation = this.velocity.ToRotation() + 0.7853982f;
				}
				else if (this.type == 662 || this.type == 685)
				{
					this.rotation = this.velocity.ToRotation() - 3.14159274f - 0.7853982f;
				}
				else if (this.type == 680 || this.type == 684 || this.type == 686 || this.type == 711 || this.type == 712)
				{
					this.rotation = this.velocity.ToRotation() + 1.57079637f;
				}
				else if (this.type == 436)
				{
					this.rotation = this.velocity.ToRotation();
					this.rotation += 3.14159274f;
					if (this.direction == -1)
					{
						this.rotation += 3.14159274f;
					}
				}
				else if (this.type == 469)
				{
					if (this.velocity.X > 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
					else
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
					}
				}
				else if (this.type == 477)
				{
					if (this.localAI[1] < 5f)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						this.localAI[1] += 1f;
					}
					else
					{
						this.rotation = (this.rotation * 2f + (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f) / 3f;
					}
				}
				else if (this.type == 532)
				{
					this.rotation += 0.2f + Math.Abs(this.velocity.X) * 0.1f;
				}
				else if (this.type == 483)
				{
					this.rotation += this.velocity.X * 0.05f;
				}
				else if (this.type == 485)
				{
					Vector2 value17 = new Vector2(this.ai[0], this.ai[1]);
					this.velocity = (this.velocity * 39f + value17) / 40f;
					int num219 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num219].noGravity = true;
					Main.dust[num219].velocity *= 0.2f;
					Main.dust[num219].position = (Main.dust[num219].position + base.Center) / 2f;
					this.frameCounter++;
					if (this.frameCounter >= 2)
					{
						this.frameCounter = 0;
						this.frame++;
						if (this.frame >= 5)
						{
							this.frame = 0;
						}
					}
					if (this.velocity.X < 0f)
					{
						this.spriteDirection = -1;
						this.rotation = (float)Math.Atan2((double)(-(double)this.velocity.Y), (double)(-(double)this.velocity.X));
					}
					else
					{
						this.spriteDirection = 1;
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
				}
				else if (this.type == 640)
				{
					if (this.velocity != Vector2.Zero)
					{
						this.rotation = this.velocity.ToRotation() + 1.57079637f;
					}
				}
				else if (this.type != 344 && this.type != 498)
				{
					this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
				}
			}
			if (this.velocity.Y > 16f)
			{
				this.velocity.Y = 16f;
			}
		}

		private void AI_026()
		{
			if (!Main.player[this.owner].active)
			{
				this.active = false;
				return;
			}
			bool flag = false;
			bool flag2 = false;
			bool flag3 = false;
			bool flag4 = false;
			int num = 85;
			bool flag5 = this.type >= 191 && this.type <= 194;
			if (this.type == 324)
			{
				num = 120;
			}
			if (this.type == 112)
			{
				num = 100;
			}
			if (this.type == 127)
			{
				num = 50;
			}
			if (flag5)
			{
				if (this.lavaWet)
				{
					this.ai[0] = 1f;
					this.ai[1] = 0f;
				}
				num = 60 + 30 * this.minionPos;
			}
			else if (this.type == 266)
			{
				num = 60 + 30 * this.minionPos;
			}
			if (this.type == 111)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].bunny = false;
				}
				if (Main.player[this.owner].bunny)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 112)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].penguin = false;
				}
				if (Main.player[this.owner].penguin)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 334)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].puppy = false;
				}
				if (Main.player[this.owner].puppy)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 353)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].grinch = false;
				}
				if (Main.player[this.owner].grinch)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 127)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].turtle = false;
				}
				if (Main.player[this.owner].turtle)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 175)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].eater = false;
				}
				if (Main.player[this.owner].eater)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 197)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].skeletron = false;
				}
				if (Main.player[this.owner].skeletron)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 198)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].hornet = false;
				}
				if (Main.player[this.owner].hornet)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 199)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].tiki = false;
				}
				if (Main.player[this.owner].tiki)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 200)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].lizard = false;
				}
				if (Main.player[this.owner].lizard)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 208)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].parrot = false;
				}
				if (Main.player[this.owner].parrot)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 209)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].truffle = false;
				}
				if (Main.player[this.owner].truffle)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 210)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].sapling = false;
				}
				if (Main.player[this.owner].sapling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 324)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].cSapling = false;
				}
				if (Main.player[this.owner].cSapling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 313)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].spider = false;
				}
				if (Main.player[this.owner].spider)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 314)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].squashling = false;
				}
				if (Main.player[this.owner].squashling)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 211)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].wisp = false;
				}
				if (Main.player[this.owner].wisp)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 236)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].dino = false;
				}
				if (Main.player[this.owner].dino)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 499)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].babyFaceMonster = false;
				}
				if (Main.player[this.owner].babyFaceMonster)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 266)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].slime = false;
				}
				if (Main.player[this.owner].slime)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 268)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].eyeSpring = false;
				}
				if (Main.player[this.owner].eyeSpring)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 269)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].snowman = false;
				}
				if (Main.player[this.owner].snowman)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 319)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].blackCat = false;
				}
				if (Main.player[this.owner].blackCat)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 380)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].zephyrfish = false;
				}
				if (Main.player[this.owner].zephyrfish)
				{
					this.timeLeft = 2;
				}
			}
			if (flag5)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].pygmy = false;
				}
				if (Main.player[this.owner].pygmy)
				{
					this.timeLeft = Main.rand.Next(2, 10);
				}
			}
			if (this.type >= 390 && this.type <= 392)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].spiderMinion = false;
				}
				if (Main.player[this.owner].spiderMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 398)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].miniMinotaur = false;
				}
				if (Main.player[this.owner].miniMinotaur)
				{
					this.timeLeft = 2;
				}
			}
			if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
			{
				num = 10;
				int num2 = 40 * (this.minionPos + 1) * Main.player[this.owner].direction;
				if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2) - (float)num + (float)num2)
				{
					flag = true;
				}
				else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2) + (float)num + (float)num2)
				{
					flag2 = true;
				}
			}
			else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2) - (float)num)
			{
				flag = true;
			}
			else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2) + (float)num)
			{
				flag2 = true;
			}
			if (this.type == 175)
			{
				float num3 = 0.1f;
				this.tileCollide = false;
				int num4 = 300;
				Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num5 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector.X;
				float num6 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector.Y;
				if (this.type == 127)
				{
					num6 = Main.player[this.owner].position.Y - vector.Y;
				}
				float num7 = (float)Math.Sqrt((double)(num5 * num5 + num6 * num6));
				float num8 = 7f;
				if (num7 < (float)num4 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num7 < 150f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num3 = 0.01f;
					if (num5 < -2f)
					{
						num5 = -2f;
					}
					if (num5 > 2f)
					{
						num5 = 2f;
					}
					if (num6 < -2f)
					{
						num6 = -2f;
					}
					if (num6 > 2f)
					{
						num6 = 2f;
					}
				}
				else
				{
					if (num7 > 300f)
					{
						num3 = 0.2f;
					}
					num7 = num8 / num7;
					num5 *= num7;
					num6 *= num7;
				}
				if (Math.Abs(num5) > Math.Abs(num6) || num3 == 0.05f)
				{
					if (this.velocity.X < num5)
					{
						this.velocity.X = this.velocity.X + num3;
						if (num3 > 0.05f && this.velocity.X < 0f)
						{
							this.velocity.X = this.velocity.X + num3;
						}
					}
					if (this.velocity.X > num5)
					{
						this.velocity.X = this.velocity.X - num3;
						if (num3 > 0.05f && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X - num3;
						}
					}
				}
				if (Math.Abs(num5) <= Math.Abs(num6) || num3 == 0.05f)
				{
					if (this.velocity.Y < num6)
					{
						this.velocity.Y = this.velocity.Y + num3;
						if (num3 > 0.05f && this.velocity.Y < 0f)
						{
							this.velocity.Y = this.velocity.Y + num3;
						}
					}
					if (this.velocity.Y > num6)
					{
						this.velocity.Y = this.velocity.Y - num3;
						if (num3 > 0.05f && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y - num3;
						}
					}
				}
				this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
				this.frameCounter++;
				if (this.frameCounter > 6)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 1)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 197)
			{
				float num9 = 0.1f;
				this.tileCollide = false;
				int num10 = 300;
				Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num11 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
				float num12 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
				if (this.type == 127)
				{
					num12 = Main.player[this.owner].position.Y - vector2.Y;
				}
				float num13 = (float)Math.Sqrt((double)(num11 * num11 + num12 * num12));
				float num14 = 3f;
				if (num13 > 500f)
				{
					this.localAI[0] = 10000f;
				}
				if (this.localAI[0] >= 10000f)
				{
					num14 = 14f;
				}
				if (num13 < (float)num10 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num13 < 150f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num9 = 0.01f;
					if (num11 < -2f)
					{
						num11 = -2f;
					}
					if (num11 > 2f)
					{
						num11 = 2f;
					}
					if (num12 < -2f)
					{
						num12 = -2f;
					}
					if (num12 > 2f)
					{
						num12 = 2f;
					}
				}
				else
				{
					if (num13 > 300f)
					{
						num9 = 0.2f;
					}
					num13 = num14 / num13;
					num11 *= num13;
					num12 *= num13;
				}
				if (this.velocity.X < num11)
				{
					this.velocity.X = this.velocity.X + num9;
					if (num9 > 0.05f && this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num9;
					}
				}
				if (this.velocity.X > num11)
				{
					this.velocity.X = this.velocity.X - num9;
					if (num9 > 0.05f && this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num9;
					}
				}
				if (this.velocity.Y < num12)
				{
					this.velocity.Y = this.velocity.Y + num9;
					if (num9 > 0.05f && this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num9;
					}
				}
				if (this.velocity.Y > num12)
				{
					this.velocity.Y = this.velocity.Y - num9;
					if (num9 > 0.05f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num9;
					}
				}
				this.localAI[0] += (float)Main.rand.Next(10);
				if (this.localAI[0] > 10000f)
				{
					if (this.localAI[1] == 0f)
					{
						if (this.velocity.X < 0f)
						{
							this.localAI[1] = -1f;
						}
						else
						{
							this.localAI[1] = 1f;
						}
					}
					this.rotation += 0.25f * this.localAI[1];
					if (this.localAI[0] > 12000f)
					{
						this.localAI[0] = 0f;
					}
				}
				else
				{
					this.localAI[1] = 0f;
					float num15 = this.velocity.X * 0.1f;
					if (this.rotation > num15)
					{
						this.rotation -= (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
						if (this.rotation < num15)
						{
							this.rotation = num15;
						}
					}
					if (this.rotation < num15)
					{
						this.rotation += (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) * 0.01f;
						if (this.rotation > num15)
						{
							this.rotation = num15;
						}
					}
				}
				if ((double)this.rotation > 6.28)
				{
					this.rotation -= 6.28f;
				}
				if ((double)this.rotation < -6.28)
				{
					this.rotation += 6.28f;
					return;
				}
			}
			else if (this.type == 198 || this.type == 380)
			{
				float num16 = 0.4f;
				if (this.type == 380)
				{
					num16 = 0.3f;
				}
				this.tileCollide = false;
				int num17 = 100;
				Vector2 vector3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num18 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector3.X;
				float num19 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector3.Y;
				num19 += (float)Main.rand.Next(-10, 21);
				num18 += (float)Main.rand.Next(-10, 21);
				num18 += (float)(60 * -(float)Main.player[this.owner].direction);
				num19 -= 60f;
				if (this.type == 127)
				{
					num19 = Main.player[this.owner].position.Y - vector3.Y;
				}
				float num20 = (float)Math.Sqrt((double)(num18 * num18 + num19 * num19));
				float num21 = 14f;
				if (this.type == 380)
				{
					num21 = 6f;
				}
				if (num20 < (float)num17 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num20 < 50f)
				{
					if (Math.Abs(this.velocity.X) > 2f || Math.Abs(this.velocity.Y) > 2f)
					{
						this.velocity *= 0.99f;
					}
					num16 = 0.01f;
				}
				else
				{
					if (this.type == 380)
					{
						if (num20 < 100f)
						{
							num16 = 0.1f;
						}
						if (num20 > 300f)
						{
							num16 = 0.4f;
						}
					}
					else if (this.type == 198)
					{
						if (num20 < 100f)
						{
							num16 = 0.1f;
						}
						if (num20 > 300f)
						{
							num16 = 0.6f;
						}
					}
					num20 = num21 / num20;
					num18 *= num20;
					num19 *= num20;
				}
				if (this.velocity.X < num18)
				{
					this.velocity.X = this.velocity.X + num16;
					if (num16 > 0.05f && this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num16;
					}
				}
				if (this.velocity.X > num18)
				{
					this.velocity.X = this.velocity.X - num16;
					if (num16 > 0.05f && this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num16;
					}
				}
				if (this.velocity.Y < num19)
				{
					this.velocity.Y = this.velocity.Y + num16;
					if (num16 > 0.05f && this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num16 * 2f;
					}
				}
				if (this.velocity.Y > num19)
				{
					this.velocity.Y = this.velocity.Y - num16;
					if (num16 > 0.05f && this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num16 * 2f;
					}
				}
				if ((double)this.velocity.X > 0.25)
				{
					this.direction = -1;
				}
				else if ((double)this.velocity.X < -0.25)
				{
					this.direction = 1;
				}
				this.spriteDirection = this.direction;
				this.rotation = this.velocity.X * 0.05f;
				this.frameCounter++;
				int num22 = 2;
				if (this.type == 380)
				{
					num22 = 5;
				}
				if (this.frameCounter > num22)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 3)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 211)
			{
				float num23 = 0.2f;
				float num24 = 5f;
				this.tileCollide = false;
				Vector2 vector4 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num25 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector4.X;
				float num26 = Main.player[this.owner].position.Y + Main.player[this.owner].gfxOffY + (float)(Main.player[this.owner].height / 2) - vector4.Y;
				if (Main.player[this.owner].controlLeft)
				{
					num25 -= 120f;
				}
				else if (Main.player[this.owner].controlRight)
				{
					num25 += 120f;
				}
				if (Main.player[this.owner].controlDown)
				{
					num26 += 120f;
				}
				else
				{
					if (Main.player[this.owner].controlUp)
					{
						num26 -= 120f;
					}
					num26 -= 60f;
				}
				float num27 = (float)Math.Sqrt((double)(num25 * num25 + num26 * num26));
				if (num27 > 1000f)
				{
					this.position.X = this.position.X + num25;
					this.position.Y = this.position.Y + num26;
				}
				if (this.localAI[0] == 1f)
				{
					if (num27 < 10f && Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y) < num24 && Main.player[this.owner].velocity.Y == 0f)
					{
						this.localAI[0] = 0f;
					}
					num24 = 12f;
					if (num27 < num24)
					{
						this.velocity.X = num25;
						this.velocity.Y = num26;
					}
					else
					{
						num27 = num24 / num27;
						this.velocity.X = num25 * num27;
						this.velocity.Y = num26 * num27;
					}
					if ((double)this.velocity.X > 0.5)
					{
						this.direction = -1;
					}
					else if ((double)this.velocity.X < -0.5)
					{
						this.direction = 1;
					}
					this.spriteDirection = this.direction;
					this.rotation -= (0.2f + Math.Abs(this.velocity.X) * 0.025f) * (float)this.direction;
					this.frameCounter++;
					if (this.frameCounter > 3)
					{
						this.frame++;
						this.frameCounter = 0;
					}
					if (this.frame < 5)
					{
						this.frame = 5;
					}
					if (this.frame > 9)
					{
						this.frame = 5;
					}
					for (int i = 0; i < 2; i++)
					{
						int num28 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 4f), 14, 14, 156, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num28].velocity *= 0.2f;
						Main.dust[num28].noGravity = true;
						Main.dust[num28].scale = 1.25f;
						Main.dust[num28].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
					}
					return;
				}
				if (num27 > 200f)
				{
					this.localAI[0] = 1f;
				}
				if ((double)this.velocity.X > 0.5)
				{
					this.direction = -1;
				}
				else if ((double)this.velocity.X < -0.5)
				{
					this.direction = 1;
				}
				this.spriteDirection = this.direction;
				if (num27 < 10f)
				{
					this.velocity.X = num25;
					this.velocity.Y = num26;
					this.rotation = this.velocity.X * 0.05f;
					if (num27 < num24)
					{
						this.position += this.velocity;
						this.velocity *= 0f;
						num23 = 0f;
					}
					this.direction = -Main.player[this.owner].direction;
				}
				num27 = num24 / num27;
				num25 *= num27;
				num26 *= num27;
				if (this.velocity.X < num25)
				{
					this.velocity.X = this.velocity.X + num23;
					if (this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				if (this.velocity.X > num25)
				{
					this.velocity.X = this.velocity.X - num23;
					if (this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X * 0.99f;
					}
				}
				if (this.velocity.Y < num26)
				{
					this.velocity.Y = this.velocity.Y + num23;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
					}
				}
				if (this.velocity.Y > num26)
				{
					this.velocity.Y = this.velocity.Y - num23;
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y * 0.99f;
					}
				}
				if (this.velocity.X != 0f || this.velocity.Y != 0f)
				{
					this.rotation = this.velocity.X * 0.05f;
				}
				this.frameCounter++;
				if (this.frameCounter > 3)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 4)
				{
					this.frame = 0;
					return;
				}
			}
			else if (this.type == 199)
			{
				float num29 = 0.1f;
				this.tileCollide = false;
				int num30 = 200;
				Vector2 vector5 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
				float num31 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector5.X;
				float num32 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector5.Y;
				num32 -= 60f;
				num31 -= 2f;
				if (this.type == 127)
				{
					num32 = Main.player[this.owner].position.Y - vector5.Y;
				}
				float num33 = (float)Math.Sqrt((double)(num31 * num31 + num32 * num32));
				float num34 = 4f;
				float num35 = num33;
				if (num33 < (float)num30 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					if (this.velocity.Y < -6f)
					{
						this.velocity.Y = -6f;
					}
				}
				if (num33 < 4f)
				{
					this.velocity.X = num31;
					this.velocity.Y = num32;
					num29 = 0f;
				}
				else
				{
					if (num33 > 350f)
					{
						num29 = 0.2f;
						num34 = 10f;
					}
					num33 = num34 / num33;
					num31 *= num33;
					num32 *= num33;
				}
				if (this.velocity.X < num31)
				{
					this.velocity.X = this.velocity.X + num29;
					if (this.velocity.X < 0f)
					{
						this.velocity.X = this.velocity.X + num29;
					}
				}
				if (this.velocity.X > num31)
				{
					this.velocity.X = this.velocity.X - num29;
					if (this.velocity.X > 0f)
					{
						this.velocity.X = this.velocity.X - num29;
					}
				}
				if (this.velocity.Y < num32)
				{
					this.velocity.Y = this.velocity.Y + num29;
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = this.velocity.Y + num29;
					}
				}
				if (this.velocity.Y > num32)
				{
					this.velocity.Y = this.velocity.Y - num29;
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = this.velocity.Y - num29;
					}
				}
				this.direction = -Main.player[this.owner].direction;
				this.spriteDirection = 1;
				this.rotation = this.velocity.Y * 0.05f * (float)(-(float)this.direction);
				if (num35 >= 50f)
				{
					this.frameCounter++;
					if (this.frameCounter > 6)
					{
						this.frameCounter = 0;
						if (this.velocity.X < 0f)
						{
							if (this.frame < 2)
							{
								this.frame++;
							}
							if (this.frame > 2)
							{
								this.frame--;
								return;
							}
						}
						else
						{
							if (this.frame < 6)
							{
								this.frame++;
							}
							if (this.frame > 6)
							{
								this.frame--;
								return;
							}
						}
					}
				}
				else
				{
					this.frameCounter++;
					if (this.frameCounter > 6)
					{
						this.frame += this.direction;
						this.frameCounter = 0;
					}
					if (this.frame > 7)
					{
						this.frame = 0;
					}
					if (this.frame < 0)
					{
						this.frame = 7;
						return;
					}
				}
			}
			else
			{
				if (this.ai[1] == 0f)
				{
					int num36 = 500;
					if (this.type == 127)
					{
						num36 = 200;
					}
					if (this.type == 208)
					{
						num36 = 300;
					}
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num36 += 40 * this.minionPos;
						if (this.localAI[0] > 0f)
						{
							num36 += 500;
						}
						if (this.type == 266 && this.localAI[0] > 0f)
						{
							num36 += 100;
						}
						if (this.type >= 390 && this.type <= 392 && this.localAI[0] > 0f)
						{
							num36 += 400;
						}
					}
					if (Main.player[this.owner].rocketDelay2 > 0)
					{
						this.ai[0] = 1f;
					}
					Vector2 vector6 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num37 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector6.X;
					float num38 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector6.Y;
					float num39 = (float)Math.Sqrt((double)(num37 * num37 + num38 * num38));
					if (num39 > 2000f)
					{
						this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
						this.position.Y = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - (float)(this.height / 2);
					}
					else if (num39 > (float)num36 || (Math.Abs(num38) > 300f && ((!flag5 && this.type != 266 && (this.type < 390 || this.type > 392)) || this.localAI[0] <= 0f)))
					{
						if (this.type != 324)
						{
							if (num38 > 0f && this.velocity.Y < 0f)
							{
								this.velocity.Y = 0f;
							}
							if (num38 < 0f && this.velocity.Y > 0f)
							{
								this.velocity.Y = 0f;
							}
						}
						this.ai[0] = 1f;
					}
				}
				if (this.type == 209 && this.ai[0] != 0f)
				{
					if (Main.player[this.owner].velocity.Y == 0f && this.alpha >= 100)
					{
						this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
						this.position.Y = Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - (float)this.height;
						this.ai[0] = 0f;
						return;
					}
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
					this.alpha += 5;
					if (this.alpha > 255)
					{
						this.alpha = 255;
						return;
					}
				}
				else if (this.ai[0] != 0f)
				{
					float num40 = 0.2f;
					int num41 = 200;
					if (this.type == 127)
					{
						num41 = 100;
					}
					if (flag5)
					{
						num40 = 0.5f;
						num41 = 100;
					}
					this.tileCollide = false;
					Vector2 vector7 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num42 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector7.X;
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num42 -= (float)(40 * Main.player[this.owner].direction);
						float num43 = 700f;
						if (flag5)
						{
							num43 += 100f;
						}
						bool flag6 = false;
						int num44 = -1;
						for (int j = 0; j < 200; j++)
						{
							if (Main.npc[j].CanBeChasedBy(this, false))
							{
								float num45 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
								float num46 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
								float num47 = Math.Abs(Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - num45) + Math.Abs(Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - num46);
								if (num47 < num43)
								{
									if (Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height))
									{
										num44 = j;
									}
									flag6 = true;
									break;
								}
							}
						}
						if (!flag6)
						{
							num42 -= (float)(40 * this.minionPos * Main.player[this.owner].direction);
						}
						if (flag6 && num44 >= 0)
						{
							this.ai[0] = 0f;
						}
					}
					float num48 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector7.Y;
					if (this.type == 127)
					{
						num48 = Main.player[this.owner].position.Y - vector7.Y;
					}
					float num49 = (float)Math.Sqrt((double)(num42 * num42 + num48 * num48));
					float num50 = 10f;
					float num51 = num49;
					if (this.type == 111)
					{
						num50 = 11f;
					}
					if (this.type == 127)
					{
						num50 = 9f;
					}
					if (this.type == 324)
					{
						num50 = 20f;
					}
					if (flag5)
					{
						num40 = 0.4f;
						num50 = 12f;
						if (num50 < Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y))
						{
							num50 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
						}
					}
					if (this.type == 208 && Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y) > 4f)
					{
						num41 = -1;
					}
					if (num49 < (float)num41 && Main.player[this.owner].velocity.Y == 0f && this.position.Y + (float)this.height <= Main.player[this.owner].position.Y + (float)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height))
					{
						this.ai[0] = 0f;
						if (this.velocity.Y < -6f)
						{
							this.velocity.Y = -6f;
						}
					}
					if (num49 < 60f)
					{
						num42 = this.velocity.X;
						num48 = this.velocity.Y;
					}
					else
					{
						num49 = num50 / num49;
						num42 *= num49;
						num48 *= num49;
					}
					if (this.type == 324)
					{
						if (num51 > 1000f)
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 1.25)
							{
								this.velocity *= 1.025f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 1.25)
							{
								this.velocity *= 0.975f;
							}
						}
						else if (num51 > 600f)
						{
							if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) < num50 - 1f)
							{
								this.velocity *= 1.05f;
							}
							if (Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y) > num50 + 1f)
							{
								this.velocity *= 0.95f;
							}
						}
						else if (num51 > 400f)
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 0.5)
							{
								this.velocity *= 1.075f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 0.5)
							{
								this.velocity *= 0.925f;
							}
						}
						else
						{
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (double)num50 - 0.25)
							{
								this.velocity *= 1.1f;
							}
							if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (double)num50 + 0.25)
							{
								this.velocity *= 0.9f;
							}
						}
						this.velocity.X = (this.velocity.X * 34f + num42) / 35f;
						this.velocity.Y = (this.velocity.Y * 34f + num48) / 35f;
					}
					else
					{
						if (this.velocity.X < num42)
						{
							this.velocity.X = this.velocity.X + num40;
							if (this.velocity.X < 0f)
							{
								this.velocity.X = this.velocity.X + num40 * 1.5f;
							}
						}
						if (this.velocity.X > num42)
						{
							this.velocity.X = this.velocity.X - num40;
							if (this.velocity.X > 0f)
							{
								this.velocity.X = this.velocity.X - num40 * 1.5f;
							}
						}
						if (this.velocity.Y < num48)
						{
							this.velocity.Y = this.velocity.Y + num40;
							if (this.velocity.Y < 0f)
							{
								this.velocity.Y = this.velocity.Y + num40 * 1.5f;
							}
						}
						if (this.velocity.Y > num48)
						{
							this.velocity.Y = this.velocity.Y - num40;
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y - num40 * 1.5f;
							}
						}
					}
					if (this.type == 111)
					{
						this.frame = 7;
					}
					if (this.type == 112)
					{
						this.frame = 2;
					}
					if (flag5 && this.frame < 12)
					{
						this.frame = Main.rand.Next(12, 18);
						this.frameCounter = 0;
					}
					if (this.type != 313)
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = -1;
						}
						else if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = 1;
						}
					}
					if (this.type == 398)
					{
						if ((double)this.velocity.X > 0.5)
						{
							this.spriteDirection = 1;
						}
						else if ((double)this.velocity.X < -0.5)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type == 112)
					{
						if (this.spriteDirection == -1)
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						}
						else
						{
							this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
						}
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num52 = (int)(base.Center.X / 16f);
						int num53 = (int)(base.Center.Y / 16f);
						if (Main.tile[num52, num53] != null && Main.tile[num52, num53].wall > 0)
						{
							this.rotation = this.velocity.ToRotation() + 1.57079637f;
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 5)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 7)
							{
								this.frame = 4;
							}
							if (this.frame < 4)
							{
								this.frame = 7;
							}
						}
						else
						{
							this.frameCounter++;
							if (this.frameCounter > 2)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame < 8 || this.frame > 10)
							{
								this.frame = 8;
							}
							this.rotation = this.velocity.X * 0.1f;
						}
					}
					else if (this.type == 334)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 7 || this.frame > 10)
						{
							this.frame = 7;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 353)
					{
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 10 || this.frame > 13)
						{
							this.frame = 10;
						}
						this.rotation = this.velocity.X * 0.05f;
					}
					else if (this.type == 127)
					{
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame <= 5 || this.frame > 15)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 269)
					{
						if (this.frame == 6)
						{
							this.frameCounter = 0;
						}
						else if (this.frame < 4 || this.frame > 6)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else
						{
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
						}
						this.rotation = this.velocity.X * 0.05f;
					}
					else if (this.type == 266)
					{
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 2 || this.frame > 5)
						{
							this.frame = 2;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 324)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.9f, 0.6f, 0.2f);
						for (int k = 0; k < 2; k++)
						{
							int num54 = 4;
							int num55 = Dust.NewDust(new Vector2(base.Center.X - (float)num54, base.Center.Y - (float)num54) - this.velocity * 0f, num54 * 2, num54 * 2, 6, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num55].scale *= 1.8f + (float)Main.rand.Next(10) * 0.1f;
							Main.dust[num55].velocity *= 0.2f;
							if (k == 1)
							{
								Main.dust[num55].position -= this.velocity * 0.5f;
							}
							Main.dust[num55].noGravity = true;
							num55 = Dust.NewDust(new Vector2(base.Center.X - (float)num54, base.Center.Y - (float)num54) - this.velocity * 0f, num54 * 2, num54 * 2, 31, 0f, 0f, 100, default(Color), 0.5f);
							Main.dust[num55].fadeIn = 1f + (float)Main.rand.Next(5) * 0.1f;
							Main.dust[num55].velocity *= 0.05f;
							if (k == 1)
							{
								Main.dust[num55].position -= this.velocity * 0.5f;
							}
						}
					}
					else if (this.type == 268)
					{
						this.frameCounter++;
						if (this.frameCounter > 4)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 7)
						{
							this.frame = 6;
						}
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
					}
					else if (this.type == 200)
					{
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame <= 5 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.type == 208)
					{
						this.rotation = this.velocity.X * 0.075f;
						this.frameCounter++;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 4)
						{
							this.frame = 1;
						}
						if (this.frame < 1)
						{
							this.frame = 1;
						}
					}
					else if (this.type == 236)
					{
						this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
						if (this.velocity.Y < 0f)
						{
							this.frameCounter += 2;
						}
						else
						{
							this.frameCounter++;
						}
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 12)
						{
							this.frame = 9;
						}
						if (this.frame < 9)
						{
							this.frame = 9;
						}
					}
					else if (this.type == 499)
					{
						this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
						if (this.velocity.Y < 0f)
						{
							this.frameCounter += 2;
						}
						else
						{
							this.frameCounter++;
						}
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame >= 12)
						{
							this.frame = 8;
						}
						if (this.frame < 8)
						{
							this.frame = 8;
						}
					}
					else if (this.type == 314)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						this.frameCounter++;
						if (this.frameCounter >= 3)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 12)
						{
							this.frame = 7;
						}
						if (this.frame < 7)
						{
							this.frame = 7;
						}
					}
					else if (this.type == 319)
					{
						this.rotation = this.velocity.X * 0.05f;
						this.frameCounter++;
						if (this.frameCounter >= 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 10)
						{
							this.frame = 6;
						}
						if (this.frame < 6)
						{
							this.frame = 6;
						}
					}
					else if (this.type == 210)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
						this.frameCounter += 3;
						if (this.frameCounter > 6)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame > 11)
						{
							this.frame = 7;
						}
						if (this.frame < 7)
						{
							this.frame = 7;
						}
					}
					else if (this.type == 313)
					{
						this.position.Y = this.position.Y + (float)this.height;
						this.height = 54;
						this.position.Y = this.position.Y - (float)this.height;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.width = 54;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.rotation += this.velocity.X * 0.01f;
						this.frameCounter = 0;
						this.frame = 11;
					}
					else if (this.type == 398)
					{
						this.frameCounter++;
						if (this.frameCounter > 1)
						{
							this.frame++;
							this.frameCounter = 0;
						}
						if (this.frame < 6 || this.frame > 9)
						{
							this.frame = 6;
						}
						this.rotation = this.velocity.X * 0.1f;
					}
					else if (this.spriteDirection == -1)
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
					}
					else
					{
						this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f;
					}
					if (flag5)
					{
						return;
					}
					if (this.type == 499)
					{
						return;
					}
					if (this.type != 398 && this.type != 390 && this.type != 391 && this.type != 392 && this.type != 127 && this.type != 200 && this.type != 208 && this.type != 210 && this.type != 236 && this.type != 266 && this.type != 268 && this.type != 269 && this.type != 313 && this.type != 314 && this.type != 319 && this.type != 324 && this.type != 334 && this.type != 353)
					{
						int num56 = Dust.NewDust(new Vector2(this.position.X + (float)(this.width / 2) - 4f, this.position.Y + (float)(this.height / 2) - 4f) - this.velocity, 8, 8, 16, -this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 50, default(Color), 1.7f);
						Main.dust[num56].velocity.X = Main.dust[num56].velocity.X * 0.2f;
						Main.dust[num56].velocity.Y = Main.dust[num56].velocity.Y * 0.2f;
						Main.dust[num56].noGravity = true;
						return;
					}
				}
				else
				{
					if (flag5)
					{
						float num57 = (float)(40 * this.minionPos);
						int num58 = 30;
						int num59 = 60;
						this.localAI[0] -= 1f;
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							float num60 = this.position.X;
							float num61 = this.position.Y;
							float num62 = 100000f;
							float num63 = num62;
							int num64 = -1;
							NPC ownerMinionAttackTargetNPC = this.OwnerMinionAttackTargetNPC;
							if (ownerMinionAttackTargetNPC != null && ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
							{
								float num65 = ownerMinionAttackTargetNPC.position.X + (float)(ownerMinionAttackTargetNPC.width / 2);
								float num66 = ownerMinionAttackTargetNPC.position.Y + (float)(ownerMinionAttackTargetNPC.height / 2);
								float num67 = Math.Abs(this.position.X + (float)(this.width / 2) - num65) + Math.Abs(this.position.Y + (float)(this.height / 2) - num66);
								if (num67 < num62)
								{
									if (num64 == -1 && num67 <= num63)
									{
										num63 = num67;
										num60 = num65;
										num61 = num66;
									}
									if (Collision.CanHit(this.position, this.width, this.height, ownerMinionAttackTargetNPC.position, ownerMinionAttackTargetNPC.width, ownerMinionAttackTargetNPC.height))
									{
										num62 = num67;
										num60 = num65;
										num61 = num66;
										num64 = ownerMinionAttackTargetNPC.whoAmI;
									}
								}
							}
							if (num64 == -1)
							{
								for (int l = 0; l < 200; l++)
								{
									if (Main.npc[l].CanBeChasedBy(this, false))
									{
										float num68 = Main.npc[l].position.X + (float)(Main.npc[l].width / 2);
										float num69 = Main.npc[l].position.Y + (float)(Main.npc[l].height / 2);
										float num70 = Math.Abs(this.position.X + (float)(this.width / 2) - num68) + Math.Abs(this.position.Y + (float)(this.height / 2) - num69);
										if (num70 < num62)
										{
											if (num64 == -1 && num70 <= num63)
											{
												num63 = num70;
												num60 = num68;
												num61 = num69;
											}
											if (Collision.CanHit(this.position, this.width, this.height, Main.npc[l].position, Main.npc[l].width, Main.npc[l].height))
											{
												num62 = num70;
												num60 = num68;
												num61 = num69;
												num64 = l;
											}
										}
									}
								}
							}
							if (num64 == -1 && num63 < num62)
							{
								num62 = num63;
							}
							float num71 = 400f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								num71 = 200f;
							}
							if (num62 < num71 + num57 && num64 == -1)
							{
								float num72 = num60 - (this.position.X + (float)(this.width / 2));
								if (num72 < -5f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num72 > 5f)
								{
									flag2 = true;
									flag = false;
								}
							}
							else if (num64 >= 0 && num62 < 800f + num57)
							{
								this.localAI[0] = (float)num59;
								float num73 = num60 - (this.position.X + (float)(this.width / 2));
								if (num73 > 300f || num73 < -300f)
								{
									if (num73 < -50f)
									{
										flag = true;
										flag2 = false;
									}
									else if (num73 > 50f)
									{
										flag2 = true;
										flag = false;
									}
								}
								else if (this.owner == Main.myPlayer)
								{
									this.ai[1] = (float)num58;
									float num74 = 12f;
									Vector2 vector8 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)(this.height / 2) - 8f);
									float num75 = num60 - vector8.X + (float)Main.rand.Next(-20, 21);
									float num76 = Math.Abs(num75) * 0.1f;
									num76 = num76 * (float)Main.rand.Next(0, 100) * 0.001f;
									float num77 = num61 - vector8.Y + (float)Main.rand.Next(-20, 21) - num76;
									float num78 = (float)Math.Sqrt((double)(num75 * num75 + num77 * num77));
									num78 = num74 / num78;
									num75 *= num78;
									num77 *= num78;
									int num79 = this.damage;
									int num80 = 195;
									int num81 = Projectile.NewProjectile(vector8.X, vector8.Y, num75, num77, num80, num79, this.knockBack, Main.myPlayer, 0f, 0f);
									Main.projectile[num81].timeLeft = 300;
									if (num75 < 0f)
									{
										this.direction = -1;
									}
									if (num75 > 0f)
									{
										this.direction = 1;
									}
									this.netUpdate = true;
								}
							}
						}
					}
					bool flag7 = false;
					Vector2 vector9 = Vector2.Zero;
					bool flag8 = false;
					if (this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						float num82 = (float)(40 * this.minionPos);
						int num83 = 60;
						this.localAI[0] -= 1f;
						if (this.localAI[0] < 0f)
						{
							this.localAI[0] = 0f;
						}
						if (this.ai[1] > 0f)
						{
							this.ai[1] -= 1f;
						}
						else
						{
							float num84 = this.position.X;
							float num85 = this.position.Y;
							float num86 = 100000f;
							float num87 = num86;
							int num88 = -1;
							NPC ownerMinionAttackTargetNPC2 = this.OwnerMinionAttackTargetNPC;
							if (ownerMinionAttackTargetNPC2 != null && ownerMinionAttackTargetNPC2.CanBeChasedBy(this, false))
							{
								float x = ownerMinionAttackTargetNPC2.Center.X;
								float y = ownerMinionAttackTargetNPC2.Center.Y;
								float num89 = Math.Abs(this.position.X + (float)(this.width / 2) - x) + Math.Abs(this.position.Y + (float)(this.height / 2) - y);
								if (num89 < num86)
								{
									if (num88 == -1 && num89 <= num87)
									{
										num87 = num89;
										num84 = x;
										num85 = y;
									}
									if (Collision.CanHit(this.position, this.width, this.height, ownerMinionAttackTargetNPC2.position, ownerMinionAttackTargetNPC2.width, ownerMinionAttackTargetNPC2.height))
									{
										num86 = num89;
										num84 = x;
										num85 = y;
										num88 = ownerMinionAttackTargetNPC2.whoAmI;
									}
								}
							}
							if (num88 == -1)
							{
								for (int m = 0; m < 200; m++)
								{
									if (Main.npc[m].CanBeChasedBy(this, false))
									{
										float num90 = Main.npc[m].position.X + (float)(Main.npc[m].width / 2);
										float num91 = Main.npc[m].position.Y + (float)(Main.npc[m].height / 2);
										float num92 = Math.Abs(this.position.X + (float)(this.width / 2) - num90) + Math.Abs(this.position.Y + (float)(this.height / 2) - num91);
										if (num92 < num86)
										{
											if (num88 == -1 && num92 <= num87)
											{
												num87 = num92;
												num84 = num90;
												num85 = num91;
											}
											if (Collision.CanHit(this.position, this.width, this.height, Main.npc[m].position, Main.npc[m].width, Main.npc[m].height))
											{
												num86 = num92;
												num84 = num90;
												num85 = num91;
												num88 = m;
											}
										}
									}
								}
							}
							if (this.type >= 390 && this.type <= 392 && !Collision.SolidCollision(this.position, this.width, this.height))
							{
								this.tileCollide = true;
							}
							if (num88 == -1 && num87 < num86)
							{
								num86 = num87;
							}
							else if (num88 >= 0)
							{
								flag7 = true;
								vector9 = new Vector2(num84, num85) - base.Center;
								if (this.type >= 390 && this.type <= 392)
								{
									if (Main.npc[num88].position.Y > this.position.Y + (float)this.height)
									{
										int num93 = (int)(base.Center.X / 16f);
										int num94 = (int)((this.position.Y + (float)this.height + 1f) / 16f);
										if (Main.tile[num93, num94] != null && Main.tile[num93, num94].active() && TileID.Sets.Platforms[(int)Main.tile[num93, num94].type])
										{
											this.tileCollide = false;
										}
									}
									Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
									Rectangle value = new Rectangle((int)Main.npc[num88].position.X, (int)Main.npc[num88].position.Y, Main.npc[num88].width, Main.npc[num88].height);
									int num95 = 10;
									value.X -= num95;
									value.Y -= num95;
									value.Width += num95 * 2;
									value.Height += num95 * 2;
									if (rectangle.Intersects(value))
									{
										flag8 = true;
										Vector2 vector10 = Main.npc[num88].Center - base.Center;
										if (this.velocity.Y > 0f && vector10.Y < 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.5f;
										}
										if (this.velocity.Y < 0f && vector10.Y > 0f)
										{
											this.velocity.Y = this.velocity.Y * 0.5f;
										}
										if (this.velocity.X > 0f && vector10.X < 0f)
										{
											this.velocity.X = this.velocity.X * 0.5f;
										}
										if (this.velocity.X < 0f && vector10.X > 0f)
										{
											this.velocity.X = this.velocity.X * 0.5f;
										}
										if (vector10.Length() > 14f)
										{
											vector10.Normalize();
											vector10 *= 14f;
										}
										this.rotation = (this.rotation * 5f + vector10.ToRotation() + 1.57079637f) / 6f;
										this.velocity = (this.velocity * 9f + vector10) / 10f;
										for (int n = 0; n < 1000; n++)
										{
											if (this.whoAmI != n && this.owner == Main.projectile[n].owner && Main.projectile[n].type >= 390 && Main.projectile[n].type <= 392 && (Main.projectile[n].Center - base.Center).Length() < 15f)
											{
												float num96 = 0.5f;
												if (base.Center.Y > Main.projectile[n].Center.Y)
												{
													Projectile expr_4D74_cp_0 = Main.projectile[n];
													expr_4D74_cp_0.velocity.Y = expr_4D74_cp_0.velocity.Y - num96;
													this.velocity.Y = this.velocity.Y + num96;
												}
												else
												{
													Projectile expr_4DA5_cp_0 = Main.projectile[n];
													expr_4DA5_cp_0.velocity.Y = expr_4DA5_cp_0.velocity.Y + num96;
													this.velocity.Y = this.velocity.Y - num96;
												}
												if (base.Center.X > Main.projectile[n].Center.X)
												{
													this.velocity.X = this.velocity.X + num96;
													Projectile expr_4E07_cp_0 = Main.projectile[n];
													expr_4E07_cp_0.velocity.X = expr_4E07_cp_0.velocity.X - num96;
												}
												else
												{
													this.velocity.X = this.velocity.X - num96;
													Projectile expr_4E38_cp_0 = Main.projectile[n];
													expr_4E38_cp_0.velocity.Y = expr_4E38_cp_0.velocity.Y + num96;
												}
											}
										}
									}
								}
							}
							float num97 = 300f;
							if ((double)this.position.Y > Main.worldSurface * 16.0)
							{
								num97 = 150f;
							}
							if (this.type >= 390 && this.type <= 392)
							{
								num97 = 500f;
								if ((double)this.position.Y > Main.worldSurface * 16.0)
								{
									num97 = 250f;
								}
							}
							if (num86 < num97 + num82 && num88 == -1)
							{
								float num98 = num84 - (this.position.X + (float)(this.width / 2));
								if (num98 < -5f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num98 > 5f)
								{
									flag2 = true;
									flag = false;
								}
							}
							bool flag9 = false;
							if (this.type >= 390 && this.type <= 392 && this.localAI[1] > 0f)
							{
								flag9 = true;
								this.localAI[1] -= 1f;
							}
							if (num88 >= 0 && num86 < 800f + num82)
							{
								this.friendly = true;
								this.localAI[0] = (float)num83;
								float num99 = num84 - (this.position.X + (float)(this.width / 2));
								if (num99 < -10f)
								{
									flag = true;
									flag2 = false;
								}
								else if (num99 > 10f)
								{
									flag2 = true;
									flag = false;
								}
								if (num85 < base.Center.Y - 100f && num99 > -50f && num99 < 50f && this.velocity.Y == 0f)
								{
									float num100 = Math.Abs(num85 - base.Center.Y);
									if (num100 < 120f)
									{
										this.velocity.Y = -10f;
									}
									else if (num100 < 210f)
									{
										this.velocity.Y = -13f;
									}
									else if (num100 < 270f)
									{
										this.velocity.Y = -15f;
									}
									else if (num100 < 310f)
									{
										this.velocity.Y = -17f;
									}
									else if (num100 < 380f)
									{
										this.velocity.Y = -18f;
									}
								}
								if (flag9)
								{
									this.friendly = false;
									if (this.velocity.X < 0f)
									{
										flag = true;
									}
									else if (this.velocity.X > 0f)
									{
										flag2 = true;
									}
								}
							}
							else
							{
								this.friendly = false;
							}
						}
					}
					if (this.ai[1] != 0f)
					{
						flag = false;
						flag2 = false;
					}
					else if (flag5 && this.localAI[0] == 0f)
					{
						this.direction = Main.player[this.owner].direction;
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num101 = (int)(base.Center.X / 16f);
						int num102 = (int)(base.Center.Y / 16f);
						if (Main.tile[num101, num102] != null && Main.tile[num101, num102].wall > 0)
						{
							flag2 = (flag = false);
						}
					}
					if (this.type == 127)
					{
						if ((double)this.rotation > -0.1 && (double)this.rotation < 0.1)
						{
							this.rotation = 0f;
						}
						else if (this.rotation < 0f)
						{
							this.rotation += 0.1f;
						}
						else
						{
							this.rotation -= 0.1f;
						}
					}
					else if (this.type != 313 && !flag8)
					{
						this.rotation = 0f;
					}
					if (this.type < 390 || this.type > 392)
					{
						this.tileCollide = true;
					}
					float num103 = 0.08f;
					float num104 = 6.5f;
					if (this.type == 127)
					{
						num104 = 2f;
						num103 = 0.04f;
					}
					if (this.type == 112)
					{
						num104 = 6f;
						num103 = 0.06f;
					}
					if (this.type == 334)
					{
						num104 = 8f;
						num103 = 0.08f;
					}
					if (this.type == 268)
					{
						num104 = 8f;
						num103 = 0.4f;
					}
					if (this.type == 324)
					{
						num103 = 0.1f;
						num104 = 3f;
					}
					if (flag5 || this.type == 266 || (this.type >= 390 && this.type <= 392))
					{
						num104 = 6f;
						num103 = 0.2f;
						if (num104 < Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y))
						{
							num104 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
							num103 = 0.3f;
						}
					}
					if (this.type >= 390 && this.type <= 392)
					{
						num103 *= 2f;
					}
					if (flag)
					{
						if ((double)this.velocity.X > -3.5)
						{
							this.velocity.X = this.velocity.X - num103;
						}
						else
						{
							this.velocity.X = this.velocity.X - num103 * 0.25f;
						}
					}
					else if (flag2)
					{
						if ((double)this.velocity.X < 3.5)
						{
							this.velocity.X = this.velocity.X + num103;
						}
						else
						{
							this.velocity.X = this.velocity.X + num103 * 0.25f;
						}
					}
					else
					{
						this.velocity.X = this.velocity.X * 0.9f;
						if (this.velocity.X >= -num103 && this.velocity.X <= num103)
						{
							this.velocity.X = 0f;
						}
					}
					if (this.type == 208)
					{
						this.velocity.X = this.velocity.X * 0.95f;
						if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
						{
							this.velocity.X = 0f;
						}
						flag = false;
						flag2 = false;
					}
					if (flag || flag2)
					{
						int num105 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int j2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
						if (this.type == 236)
						{
							num105 += this.direction;
						}
						if (flag)
						{
							num105--;
						}
						if (flag2)
						{
							num105++;
						}
						num105 += (int)this.velocity.X;
						if (WorldGen.SolidTile(num105, j2))
						{
							flag4 = true;
						}
					}
					if (Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - 8f > this.position.Y + (float)this.height)
					{
						flag3 = true;
					}
					if (this.type == 268 && this.frameCounter < 10)
					{
						flag4 = false;
					}
					Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
					if (this.velocity.Y == 0f || this.type == 200)
					{
						if (!flag3 && (this.velocity.X < 0f || this.velocity.X > 0f))
						{
							int num106 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int j3 = (int)(this.position.Y + (float)(this.height / 2)) / 16 + 1;
							if (flag)
							{
								num106--;
							}
							if (flag2)
							{
								num106++;
							}
							WorldGen.SolidTile(num106, j3);
						}
						if (flag4)
						{
							int num107 = (int)(this.position.X + (float)(this.width / 2)) / 16;
							int num108 = (int)(this.position.Y + (float)this.height) / 16 + 1;
							if (WorldGen.SolidTile(num107, num108) || Main.tile[num107, num108].halfBrick() || Main.tile[num107, num108].slope() > 0 || this.type == 200)
							{
								if (this.type == 200)
								{
									this.velocity.Y = -3.1f;
								}
								else
								{
									try
									{
										num107 = (int)(this.position.X + (float)(this.width / 2)) / 16;
										num108 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
										if (flag)
										{
											num107--;
										}
										if (flag2)
										{
											num107++;
										}
										num107 += (int)this.velocity.X;
										if (!WorldGen.SolidTile(num107, num108 - 1) && !WorldGen.SolidTile(num107, num108 - 2))
										{
											this.velocity.Y = -5.1f;
										}
										else if (!WorldGen.SolidTile(num107, num108 - 2))
										{
											this.velocity.Y = -7.1f;
										}
										else if (WorldGen.SolidTile(num107, num108 - 5))
										{
											this.velocity.Y = -11.1f;
										}
										else if (WorldGen.SolidTile(num107, num108 - 4))
										{
											this.velocity.Y = -10.1f;
										}
										else
										{
											this.velocity.Y = -9.1f;
										}
									}
									catch
									{
										this.velocity.Y = -9.1f;
									}
								}
								if (this.type == 127)
								{
									this.ai[0] = 1f;
								}
							}
						}
						else if (this.type == 266 && (flag || flag2))
						{
							this.velocity.Y = this.velocity.Y - 6f;
						}
					}
					if (this.velocity.X > num104)
					{
						this.velocity.X = num104;
					}
					if (this.velocity.X < -num104)
					{
						this.velocity.X = -num104;
					}
					if (this.velocity.X < 0f)
					{
						this.direction = -1;
					}
					if (this.velocity.X > 0f)
					{
						this.direction = 1;
					}
					if (this.velocity.X > num103 && flag2)
					{
						this.direction = 1;
					}
					if (this.velocity.X < -num103 && flag)
					{
						this.direction = -1;
					}
					if (this.type != 313)
					{
						if (this.direction == -1)
						{
							this.spriteDirection = 1;
						}
						if (this.direction == 1)
						{
							this.spriteDirection = -1;
						}
					}
					if (this.type == 398)
					{
						this.spriteDirection = this.direction;
					}
					if (flag5)
					{
						if (this.ai[1] > 0f)
						{
							if (this.localAI[1] == 0f)
							{
								this.localAI[1] = 1f;
								this.frame = 1;
							}
							if (this.frame != 0)
							{
								this.frameCounter++;
								if (this.frameCounter > 4)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame == 4)
								{
									this.frame = 0;
								}
							}
						}
						else if (this.velocity.Y == 0f)
						{
							this.localAI[1] = 0f;
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame < 5)
								{
									this.frame = 5;
								}
								if (this.frame >= 11)
								{
									this.frame = 5;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
						float arg_5B67_0 = this.velocity.Y;
						return;
					}
					if (this.type == 268)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.frame > 5)
							{
								this.frameCounter = 0;
							}
							if (this.velocity.X == 0f)
							{
								int num109 = 3;
								this.frameCounter++;
								if (this.frameCounter < num109)
								{
									this.frame = 0;
								}
								else if (this.frameCounter < num109 * 2)
								{
									this.frame = 1;
								}
								else if (this.frameCounter < num109 * 3)
								{
									this.frame = 2;
								}
								else if (this.frameCounter < num109 * 4)
								{
									this.frame = 3;
								}
								else
								{
									this.frameCounter = num109 * 4;
								}
							}
							else
							{
								this.velocity.X = this.velocity.X * 0.8f;
								this.frameCounter++;
								int num110 = 3;
								if (this.frameCounter < num110)
								{
									this.frame = 0;
								}
								else if (this.frameCounter < num110 * 2)
								{
									this.frame = 1;
								}
								else if (this.frameCounter < num110 * 3)
								{
									this.frame = 2;
								}
								else if (this.frameCounter < num110 * 4)
								{
									this.frame = 3;
								}
								else if (flag || flag2)
								{
									this.velocity.X = this.velocity.X * 2f;
									this.frame = 4;
									this.velocity.Y = -6.1f;
									this.frameCounter = 0;
									for (int num111 = 0; num111 < 4; num111++)
									{
										int num112 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), this.width, 4, 5, 0f, 0f, 0, default(Color), 1f);
										Main.dust[num112].velocity += this.velocity;
										Main.dust[num112].velocity *= 0.4f;
									}
								}
								else
								{
									this.frameCounter = num110 * 4;
								}
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 5;
						}
						else
						{
							this.frame = 4;
							this.frameCounter = 3;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 269)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								int num113 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), this.width, 6, 76, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num113].noGravity = true;
								Main.dust[num113].velocity *= 0.3f;
								Main.dust[num113].noLight = true;
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 3)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 313)
					{
						int num114 = (int)(base.Center.X / 16f);
						int num115 = (int)(base.Center.Y / 16f);
						if (Main.tile[num114, num115] != null && Main.tile[num114, num115].wall > 0)
						{
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 34;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 34;
							this.position.X = this.position.X - (float)(this.width / 2);
							float num116 = 4f;
							Vector2 vector11 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
							float num117 = Main.player[this.owner].Center.X - vector11.X;
							float num118 = Main.player[this.owner].Center.Y - vector11.Y;
							float num119 = (float)Math.Sqrt((double)(num117 * num117 + num118 * num118));
							float num120 = num116 / num119;
							num117 *= num120;
							num118 *= num120;
							if (num119 < 120f)
							{
								this.velocity.X = this.velocity.X * 0.9f;
								this.velocity.Y = this.velocity.Y * 0.9f;
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
								{
									this.velocity *= 0f;
								}
							}
							else
							{
								this.velocity.X = (this.velocity.X * 9f + num117) / 10f;
								this.velocity.Y = (this.velocity.Y * 9f + num118) / 10f;
							}
							if (num119 >= 120f)
							{
								this.spriteDirection = this.direction;
								this.rotation = (float)Math.Atan2((double)(this.velocity.Y * (float)(-(float)this.direction)), (double)(this.velocity.X * (float)(-(float)this.direction)));
							}
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 10)
							{
								this.frame = 5;
							}
							if (this.frame < 5)
							{
								this.frame = 10;
								return;
							}
						}
						else
						{
							this.rotation = 0f;
							if (this.direction == -1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == 1)
							{
								this.spriteDirection = -1;
							}
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 30;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 30;
							this.position.X = this.position.X - (float)(this.width / 2);
							if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
							{
								if (this.velocity.X == 0f)
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
								else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
								{
									this.frameCounter += (int)Math.Abs(this.velocity.X);
									this.frameCounter++;
									if (this.frameCounter > 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame > 3)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else
							{
								this.frameCounter = 0;
								this.frame = 4;
							}
							this.velocity.Y = this.velocity.Y + 0.4f;
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
					}
					else if (this.type >= 390 && this.type <= 392)
					{
						int num121 = (int)(base.Center.X / 16f);
						int num122 = (int)(base.Center.Y / 16f);
						if (Main.tile[num121, num122] != null && Main.tile[num121, num122].wall > 0)
						{
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 34;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 34;
							this.position.X = this.position.X - (float)(this.width / 2);
							float scaleFactor = 9f;
							float num123 = (float)(40 * (this.minionPos + 1));
							Vector2 vector12 = Main.player[this.owner].Center - base.Center;
							if (flag7)
							{
								vector12 = vector9;
								num123 = 10f;
							}
							else if (!Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
							{
								this.ai[0] = 1f;
							}
							if (vector12.Length() < num123)
							{
								this.velocity *= 0.9f;
								if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 0.1)
								{
									this.velocity *= 0f;
								}
							}
							else if (vector12.Length() < 800f || !flag7)
							{
								this.velocity = (this.velocity * 9f + Vector2.Normalize(vector12) * scaleFactor) / 10f;
							}
							if (vector12.Length() >= num123)
							{
								this.spriteDirection = this.direction;
								this.rotation = this.velocity.ToRotation() + 1.57079637f;
							}
							else
							{
								this.rotation = vector12.ToRotation() + 1.57079637f;
							}
							this.frameCounter += (int)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y));
							if (this.frameCounter > 5)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 7)
							{
								this.frame = 4;
							}
							if (this.frame < 4)
							{
								this.frame = 7;
								return;
							}
						}
						else
						{
							if (!flag8)
							{
								this.rotation = 0f;
							}
							if (this.direction == -1)
							{
								this.spriteDirection = 1;
							}
							if (this.direction == 1)
							{
								this.spriteDirection = -1;
							}
							this.position.Y = this.position.Y + (float)this.height;
							this.height = 30;
							this.position.Y = this.position.Y - (float)this.height;
							this.position.X = this.position.X + (float)(this.width / 2);
							this.width = 30;
							this.position.X = this.position.X - (float)(this.width / 2);
							if (!flag7 && !Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
							{
								this.ai[0] = 1f;
							}
							if (!flag8 && this.frame >= 4 && this.frame <= 7)
							{
								Vector2 vector13 = Main.player[this.owner].Center - base.Center;
								if (flag7)
								{
									vector13 = vector9;
								}
								float num124 = -vector13.Y;
								if (vector13.Y <= 0f)
								{
									if (num124 < 120f)
									{
										this.velocity.Y = -10f;
									}
									else if (num124 < 210f)
									{
										this.velocity.Y = -13f;
									}
									else if (num124 < 270f)
									{
										this.velocity.Y = -15f;
									}
									else if (num124 < 310f)
									{
										this.velocity.Y = -17f;
									}
									else if (num124 < 380f)
									{
										this.velocity.Y = -18f;
									}
								}
							}
							if (flag8)
							{
								this.frameCounter++;
								if (this.frameCounter > 3)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 8)
								{
									this.frame = 4;
								}
								if (this.frame <= 3)
								{
									this.frame = 7;
								}
							}
							else if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
							{
								if (this.velocity.X == 0f)
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
								else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
								{
									this.frameCounter += (int)Math.Abs(this.velocity.X);
									this.frameCounter++;
									if (this.frameCounter > 5)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame > 2)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else
							{
								this.frameCounter = 0;
								this.frame = 3;
							}
							this.velocity.Y = this.velocity.Y + 0.4f;
							if (this.velocity.Y > 10f)
							{
								this.velocity.Y = 10f;
								return;
							}
						}
					}
					else if (this.type == 314)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 6)
								{
									this.frame = 1;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 7;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 319)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 8)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 236)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								if (this.frame < 2)
								{
									this.frame = 2;
								}
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 8)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 499)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								if (this.frame < 2)
								{
									this.frame = 2;
								}
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 8)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 266)
					{
						if (this.velocity.Y >= 0f && (double)this.velocity.Y <= 0.8)
						{
							if (this.velocity.X == 0f)
							{
								this.frameCounter++;
							}
							else
							{
								this.frameCounter += 3;
							}
						}
						else
						{
							this.frameCounter += 5;
						}
						if (this.frameCounter >= 20)
						{
							this.frameCounter -= 20;
							this.frame++;
						}
						if (this.frame > 1)
						{
							this.frame = 0;
						}
						if (this.wet && Main.player[this.owner].position.Y + (float)Main.player[this.owner].height < this.position.Y + (float)this.height && this.localAI[0] == 0f)
						{
							if (this.velocity.Y > -4f)
							{
								this.velocity.Y = this.velocity.Y - 0.2f;
							}
							if (this.velocity.Y > 0f)
							{
								this.velocity.Y = this.velocity.Y * 0.95f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y + 0.4f;
						}
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 334)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								if (this.frame > 0)
								{
									this.frameCounter += 2;
									if (this.frameCounter > 6)
									{
										this.frame++;
										this.frameCounter = 0;
									}
									if (this.frame >= 7)
									{
										this.frame = 0;
									}
								}
								else
								{
									this.frame = 0;
									this.frameCounter = 0;
								}
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs((double)this.velocity.X * 0.75);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7 || this.frame < 1)
								{
									this.frame = 1;
								}
							}
							else if (this.frame > 0)
							{
								this.frameCounter += 2;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 353)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 9)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 111)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 7)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 4;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 6;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 112)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 3)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y < 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						else if (this.velocity.Y > 0f)
						{
							this.frameCounter = 0;
							this.frame = 2;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 127)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frame = 0;
							this.frameCounter = 0;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 200)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.rotation = this.velocity.X * 0.1f;
							this.frameCounter++;
							if (this.velocity.Y < 0f)
							{
								this.frameCounter += 2;
							}
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 9)
							{
								this.frame = 6;
							}
							if (this.frame < 6)
							{
								this.frame = 6;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
							return;
						}
					}
					else if (this.type == 208)
					{
						if (this.velocity.Y == 0f && this.velocity.X == 0f)
						{
							if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) < this.position.X + (float)(this.width / 2))
							{
								this.direction = -1;
							}
							else if (Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) > this.position.X + (float)(this.width / 2))
							{
								this.direction = 1;
							}
							this.rotation = 0f;
							this.frame = 0;
						}
						else
						{
							this.rotation = this.velocity.X * 0.075f;
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 4)
							{
								this.frame = 1;
							}
							if (this.frame < 1)
							{
								this.frame = 1;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.1f;
						if (this.velocity.Y > 4f)
						{
							this.velocity.Y = 4f;
							return;
						}
					}
					else if (this.type == 209)
					{
						if (this.alpha > 0)
						{
							this.alpha -= 5;
							if (this.alpha < 0)
							{
								this.alpha = 0;
							}
						}
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 11)
								{
									this.frame = 2;
								}
								if (this.frame < 2)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frame = 1;
							this.frameCounter = 0;
							this.rotation = 0f;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 324)
					{
						if (this.velocity.Y == 0f)
						{
							if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 5)
								{
									this.frame = 2;
								}
								if (this.frame < 2)
								{
									this.frame = 2;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.frameCounter = 0;
							this.frame = 1;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 14f)
						{
							this.velocity.Y = 14f;
							return;
						}
					}
					else if (this.type == 210)
					{
						if (this.velocity.Y == 0f)
						{
							if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame > 6)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else
						{
							this.rotation = this.velocity.X * 0.05f;
							this.frameCounter++;
							if (this.frameCounter > 6)
							{
								this.frame++;
								this.frameCounter = 0;
							}
							if (this.frame > 11)
							{
								this.frame = 7;
							}
							if (this.frame < 7)
							{
								this.frame = 7;
							}
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
							return;
						}
					}
					else if (this.type == 398)
					{
						if (this.velocity.Y == 0f)
						{
							if (this.velocity.X == 0f)
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
							else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
							{
								this.frameCounter += (int)Math.Abs(this.velocity.X);
								this.frameCounter++;
								if (this.frameCounter > 6)
								{
									this.frame++;
									this.frameCounter = 0;
								}
								if (this.frame >= 5)
								{
									this.frame = 0;
								}
							}
							else
							{
								this.frame = 0;
								this.frameCounter = 0;
							}
						}
						else if (this.velocity.Y != 0f)
						{
							this.frameCounter = 0;
							this.frame = 5;
						}
						this.velocity.Y = this.velocity.Y + 0.4f;
						if (this.velocity.Y > 10f)
						{
							this.velocity.Y = 10f;
						}
					}
				}
			}
		}

		private void AI_062()
		{
			if (this.type == 373)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].hornetMinion = false;
				}
				if (Main.player[this.owner].hornetMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 375)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].impMinion = false;
				}
				if (Main.player[this.owner].impMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 407)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].sharknadoMinion = false;
				}
				if (Main.player[this.owner].sharknadoMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 423)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].UFOMinion = false;
				}
				if (Main.player[this.owner].UFOMinion)
				{
					this.timeLeft = 2;
				}
			}
			if (this.type == 613)
			{
				if (Main.player[this.owner].dead)
				{
					Main.player[this.owner].stardustMinion = false;
				}
				if (Main.player[this.owner].stardustMinion)
				{
					this.timeLeft = 2;
				}
				Lighting.AddLight(base.Center, 0.2f, 0.6f, 0.7f);
				if (this.localAI[1] > 0f)
				{
					this.localAI[1] -= 1f;
				}
			}
			if (this.type == 423)
			{
				if (this.ai[0] == 2f)
				{
					this.ai[1] -= 1f;
					this.tileCollide = false;
					if (this.ai[1] > 3f)
					{
						int num = Dust.NewDust(base.Center, 0, 0, 220 + Main.rand.Next(2), this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
						Main.dust[num].scale = 0.5f + (float)Main.rand.NextDouble() * 0.3f;
						Main.dust[num].velocity /= 2.5f;
						Main.dust[num].noGravity = true;
						Main.dust[num].noLight = true;
						Main.dust[num].frame.Y = 80;
					}
					if (this.ai[1] != 0f)
					{
						return;
					}
					this.ai[1] = 30f;
					this.ai[0] = 0f;
					this.velocity /= 5f;
					this.velocity.Y = 0f;
					this.extraUpdates = 0;
					this.numUpdates = 0;
					this.netUpdate = true;
					this.extraUpdates = 0;
					this.numUpdates = 0;
				}
				if (this.extraUpdates > 1)
				{
					this.extraUpdates = 0;
				}
				if (this.numUpdates > 1)
				{
					this.numUpdates = 0;
				}
			}
			if (this.type == 613)
			{
				if (this.ai[0] == 2f)
				{
					this.ai[1] -= 1f;
					this.tileCollide = false;
					if (this.ai[1] > 3f)
					{
						if (this.numUpdates < 20)
						{
							for (int i = 0; i < 3; i++)
							{
								Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust.noGravity = true;
								dust.position = base.Center;
								dust.velocity *= 3f;
								dust.velocity += this.velocity * 3f;
								dust.fadeIn = 1f;
							}
						}
						float num2 = 2f - (float)this.numUpdates / 30f;
						if (this.scale > 0f)
						{
							float num3 = 2f;
							int num4 = 0;
							while ((float)num4 < num3)
							{
								Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
								dust2.noGravity = true;
								dust2.position = base.Center + Vector2.UnitY.RotatedBy((double)((float)this.numUpdates * 0.104719758f + (float)this.whoAmI * 0.7853982f + 1.57079637f), default(Vector2)) * (float)(this.height / 2) - this.velocity * ((float)num4 / num3);
								dust2.velocity = this.velocity / 3f;
								dust2.fadeIn = num2 / 2f;
								dust2.scale = num2;
								num4++;
							}
						}
					}
					if (this.ai[1] != 0f)
					{
						return;
					}
					this.ai[1] = 30f;
					this.ai[0] = 0f;
					this.velocity /= 5f;
					this.velocity.Y = 0f;
					this.extraUpdates = 0;
					this.numUpdates = 0;
					this.netUpdate = true;
					float num5 = 15f;
					int num6 = 0;
					while ((float)num6 < num5)
					{
						Dust dust3 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust3.noGravity = true;
						dust3.position = base.Center - this.velocity * 5f;
						dust3.velocity *= 3f;
						dust3.velocity += this.velocity * 3f;
						dust3.fadeIn = 1f;
						if (Main.rand.Next(3) != 0)
						{
							dust3.fadeIn = 2f;
							dust3.scale = 2f;
							dust3.velocity /= 8f;
						}
						num6++;
					}
					int num7 = 0;
					while ((float)num7 < num5)
					{
						Dust dust4 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
						dust4.noGravity = true;
						dust4.position = base.Center;
						dust4.velocity *= 3f;
						dust4.velocity += this.velocity * 3f;
						dust4.fadeIn = 1f;
						if (Main.rand.Next(3) != 0)
						{
							dust4.fadeIn = 2f;
							dust4.scale = 2f;
							dust4.velocity /= 8f;
						}
						num7++;
					}
					this.extraUpdates = 0;
					this.numUpdates = 0;
				}
				if (this.extraUpdates > 1)
				{
					this.extraUpdates = 0;
				}
				if (this.numUpdates > 1)
				{
					this.numUpdates = 0;
				}
			}
			if (this.type == 423 && this.localAI[0] > 0f)
			{
				this.localAI[0] -= 1f;
			}
			if (this.type == 613 && this.localAI[0] > 0f)
			{
				this.localAI[0] -= 1f;
			}
			float num8 = 0.05f;
			float num9 = (float)this.width;
			if (this.type == 407)
			{
				num8 = 0.1f;
				num9 *= 2f;
			}
			for (int j = 0; j < 1000; j++)
			{
				if (j != this.whoAmI && Main.projectile[j].active && Main.projectile[j].owner == this.owner && Main.projectile[j].type == this.type && Math.Abs(this.position.X - Main.projectile[j].position.X) + Math.Abs(this.position.Y - Main.projectile[j].position.Y) < num9)
				{
					if (this.position.X < Main.projectile[j].position.X)
					{
						this.velocity.X = this.velocity.X - num8;
					}
					else
					{
						this.velocity.X = this.velocity.X + num8;
					}
					if (this.position.Y < Main.projectile[j].position.Y)
					{
						this.velocity.Y = this.velocity.Y - num8;
					}
					else
					{
						this.velocity.Y = this.velocity.Y + num8;
					}
				}
			}
			Vector2 vector = this.position;
			float num10 = 400f;
			if (this.type == 423)
			{
				num10 = 300f;
			}
			if (this.type == 613)
			{
				num10 = 300f;
			}
			bool flag = false;
			int num11 = -1;
			this.tileCollide = true;
			if (this.type == 407)
			{
				this.tileCollide = false;
				if (Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.alpha += 20;
					if (this.alpha > 150)
					{
						this.alpha = 150;
					}
				}
				else
				{
					this.alpha -= 50;
					if (this.alpha < 60)
					{
						this.alpha = 60;
					}
				}
			}
			if (this.type == 407 || this.type == 613 || this.type == 423)
			{
				Vector2 center = Main.player[this.owner].Center;
				Vector2 value = new Vector2(0.5f);
				if (this.type == 423)
				{
					value.Y = 0f;
				}
				NPC ownerMinionAttackTargetNPC = this.OwnerMinionAttackTargetNPC;
				if (ownerMinionAttackTargetNPC != null && ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
				{
					Vector2 vector2 = ownerMinionAttackTargetNPC.position + ownerMinionAttackTargetNPC.Size * value;
					float num12 = Vector2.Distance(vector2, center);
					if (((Vector2.Distance(center, vector) > num12 && num12 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, ownerMinionAttackTargetNPC.position, ownerMinionAttackTargetNPC.width, ownerMinionAttackTargetNPC.height))
					{
						num10 = num12;
						vector = vector2;
						flag = true;
						num11 = ownerMinionAttackTargetNPC.whoAmI;
					}
				}
				if (!flag)
				{
					for (int k = 0; k < 200; k++)
					{
						NPC nPC = Main.npc[k];
						if (nPC.CanBeChasedBy(this, false))
						{
							Vector2 vector3 = nPC.position + nPC.Size * value;
							float num13 = Vector2.Distance(vector3, center);
							if (((Vector2.Distance(center, vector) > num13 && num13 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, nPC.position, nPC.width, nPC.height))
							{
								num10 = num13;
								vector = vector3;
								flag = true;
								num11 = k;
							}
						}
					}
				}
			}
			else
			{
				NPC ownerMinionAttackTargetNPC2 = this.OwnerMinionAttackTargetNPC;
				if (ownerMinionAttackTargetNPC2 != null && ownerMinionAttackTargetNPC2.CanBeChasedBy(this, false))
				{
					float num14 = Vector2.Distance(ownerMinionAttackTargetNPC2.Center, base.Center);
					if (((Vector2.Distance(base.Center, vector) > num14 && num14 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, ownerMinionAttackTargetNPC2.position, ownerMinionAttackTargetNPC2.width, ownerMinionAttackTargetNPC2.height))
					{
						num10 = num14;
						vector = ownerMinionAttackTargetNPC2.Center;
						flag = true;
						num11 = ownerMinionAttackTargetNPC2.whoAmI;
					}
				}
				if (!flag)
				{
					for (int l = 0; l < 200; l++)
					{
						NPC nPC2 = Main.npc[l];
						if (nPC2.CanBeChasedBy(this, false))
						{
							float num15 = Vector2.Distance(nPC2.Center, base.Center);
							if (((Vector2.Distance(base.Center, vector) > num15 && num15 < num10) || !flag) && Collision.CanHitLine(this.position, this.width, this.height, nPC2.position, nPC2.width, nPC2.height))
							{
								num10 = num15;
								vector = nPC2.Center;
								flag = true;
								num11 = l;
							}
						}
					}
				}
			}
			int num16 = 500;
			if (flag)
			{
				num16 = 1000;
			}
			if (flag && this.type == 423)
			{
				num16 = 1200;
			}
			if (flag && this.type == 613)
			{
				num16 = 1350;
			}
			Player player = Main.player[this.owner];
			float num17 = Vector2.Distance(player.Center, base.Center);
			if (num17 > (float)num16)
			{
				this.ai[0] = 1f;
				this.netUpdate = true;
			}
			if (this.ai[0] == 1f)
			{
				this.tileCollide = false;
			}
			if (flag && this.ai[0] == 0f)
			{
				Vector2 vector4 = vector - base.Center;
				float num18 = vector4.Length();
				vector4.Normalize();
				if (this.type == 423)
				{
					vector4 = vector - Vector2.UnitY * 80f;
					int num19 = (int)vector4.Y / 16;
					if (num19 < 0)
					{
						num19 = 0;
					}
					Tile tile = Main.tile[(int)vector4.X / 16, num19];
					if (tile != null && tile.active() && Main.tileSolid[(int)tile.type] && !Main.tileSolidTop[(int)tile.type])
					{
						vector4 += Vector2.UnitY * 16f;
						tile = Main.tile[(int)vector4.X / 16, (int)vector4.Y / 16];
						if (tile != null && tile.active() && Main.tileSolid[(int)tile.type] && !Main.tileSolidTop[(int)tile.type])
						{
							vector4 += Vector2.UnitY * 16f;
						}
					}
					vector4 -= base.Center;
					num18 = vector4.Length();
					vector4.Normalize();
					if (num18 > 300f && num18 <= 800f && this.localAI[0] == 0f)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)((int)(num18 / 10f));
						this.extraUpdates = (int)this.ai[1];
						this.velocity = vector4 * 10f;
						this.localAI[0] = 60f;
						return;
					}
				}
				if (this.type == 613)
				{
					vector4 = vector;
					Vector2 vector5 = base.Center - vector4;
					if (vector5 == Vector2.Zero)
					{
						vector5 = -Vector2.UnitY;
					}
					vector5.Normalize();
					vector4 += vector5 * 60f;
					int num20 = (int)vector4.Y / 16;
					if (num20 < 0)
					{
						num20 = 0;
					}
					Tile tile2 = Main.tile[(int)vector4.X / 16, num20];
					if (tile2 != null && tile2.active() && Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type])
					{
						vector4 += Vector2.UnitY * 16f;
						tile2 = Main.tile[(int)vector4.X / 16, (int)vector4.Y / 16];
						if (tile2 != null && tile2.active() && Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type])
						{
							vector4 += Vector2.UnitY * 16f;
						}
					}
					vector4 -= base.Center;
					num18 = vector4.Length();
					vector4.Normalize();
					if (num18 > 400f && num18 <= 800f && this.localAI[0] == 0f)
					{
						this.ai[0] = 2f;
						this.ai[1] = (float)((int)(num18 / 10f));
						this.extraUpdates = (int)this.ai[1];
						this.velocity = vector4 * 10f;
						this.localAI[0] = 60f;
						return;
					}
				}
				if (this.type == 407)
				{
					if (num18 > 400f)
					{
						float scaleFactor = 2f;
						vector4 *= scaleFactor;
						this.velocity = (this.velocity * 20f + vector4) / 21f;
					}
					else
					{
						this.velocity *= 0.96f;
					}
				}
				if (num18 > 200f)
				{
					float scaleFactor2 = 6f;
					vector4 *= scaleFactor2;
					this.velocity.X = (this.velocity.X * 40f + vector4.X) / 41f;
					this.velocity.Y = (this.velocity.Y * 40f + vector4.Y) / 41f;
				}
				else if (this.type == 423 || this.type == 613)
				{
					if (num18 > 70f && num18 < 130f)
					{
						float scaleFactor3 = 7f;
						if (num18 < 100f)
						{
							scaleFactor3 = -3f;
						}
						vector4 *= scaleFactor3;
						this.velocity = (this.velocity * 20f + vector4) / 21f;
						if (Math.Abs(vector4.X) > Math.Abs(vector4.Y))
						{
							this.velocity.X = (this.velocity.X * 10f + vector4.X) / 11f;
						}
					}
					else
					{
						this.velocity *= 0.97f;
					}
				}
				else if (this.type == 375)
				{
					if (num18 < 150f)
					{
						float num21 = 4f;
						vector4 *= -num21;
						this.velocity.X = (this.velocity.X * 40f + vector4.X) / 41f;
						this.velocity.Y = (this.velocity.Y * 40f + vector4.Y) / 41f;
					}
					else
					{
						this.velocity *= 0.97f;
					}
				}
				else if (this.velocity.Y > -1f)
				{
					this.velocity.Y = this.velocity.Y - 0.1f;
				}
			}
			else
			{
				if (!Collision.CanHitLine(base.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
				{
					this.ai[0] = 1f;
				}
				float num22 = 6f;
				if (this.ai[0] == 1f)
				{
					num22 = 15f;
				}
				if (this.type == 407)
				{
					num22 = 9f;
				}
				Vector2 center2 = base.Center;
				Vector2 vector6 = player.Center - center2 + new Vector2(0f, -60f);
				if (this.type == 407)
				{
					vector6 += new Vector2(0f, 40f);
				}
				if (this.type == 375)
				{
					this.ai[1] = 3600f;
					this.netUpdate = true;
					vector6 = player.Center - center2;
					int num23 = 1;
					for (int m = 0; m < this.whoAmI; m++)
					{
						if (Main.projectile[m].active && Main.projectile[m].owner == this.owner && Main.projectile[m].type == this.type)
						{
							num23++;
						}
					}
					vector6.X -= (float)(10 * Main.player[this.owner].direction);
					vector6.X -= (float)(num23 * 40 * Main.player[this.owner].direction);
					vector6.Y -= 10f;
				}
				float num24 = vector6.Length();
				if (num24 > 200f && num22 < 9f)
				{
					num22 = 9f;
				}
				if (this.type == 375)
				{
					num22 = (float)((int)((double)num22 * 0.75));
				}
				if (num24 < 100f && this.ai[0] == 1f && !Collision.SolidCollision(this.position, this.width, this.height))
				{
					this.ai[0] = 0f;
					this.netUpdate = true;
				}
				if (num24 > 2000f)
				{
					this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
					this.position.Y = Main.player[this.owner].Center.Y - (float)(this.width / 2);
				}
				if (this.type == 375)
				{
					if (num24 > 10f)
					{
						vector6.Normalize();
						if (num24 < 50f)
						{
							num22 /= 2f;
						}
						vector6 *= num22;
						this.velocity = (this.velocity * 20f + vector6) / 21f;
					}
					else
					{
						this.direction = Main.player[this.owner].direction;
						this.velocity *= 0.9f;
					}
				}
				else if (this.type == 407)
				{
					if (Math.Abs(vector6.X) > 40f || Math.Abs(vector6.Y) > 10f)
					{
						vector6.Normalize();
						vector6 *= num22;
						vector6 *= new Vector2(1.25f, 0.65f);
						this.velocity = (this.velocity * 20f + vector6) / 21f;
					}
					else
					{
						if (this.velocity.X == 0f && this.velocity.Y == 0f)
						{
							this.velocity.X = -0.15f;
							this.velocity.Y = -0.05f;
						}
						this.velocity *= 1.01f;
					}
				}
				else if (num24 > 70f)
				{
					vector6.Normalize();
					vector6 *= num22;
					this.velocity = (this.velocity * 20f + vector6) / 21f;
				}
				else
				{
					if (this.velocity.X == 0f && this.velocity.Y == 0f)
					{
						this.velocity.X = -0.15f;
						this.velocity.Y = -0.05f;
					}
					this.velocity *= 1.01f;
				}
			}
			this.rotation = this.velocity.X * 0.05f;
			this.frameCounter++;
			if (this.type == 373)
			{
				if (this.frameCounter > 1)
				{
					this.frame++;
					this.frameCounter = 0;
				}
				if (this.frame > 2)
				{
					this.frame = 0;
				}
			}
			if (this.type == 375)
			{
				if (this.frameCounter >= 16)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / 4;
				if (this.ai[1] > 0f && this.ai[1] < 16f)
				{
					this.frame += 4;
				}
				if (Main.rand.Next(6) == 0)
				{
					int num25 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num25].velocity *= 0.3f;
					Main.dust[num25].noGravity = true;
					Main.dust[num25].noLight = true;
				}
			}
			if (this.type == 407)
			{
				int num26 = 2;
				if (this.frameCounter >= 6 * num26)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / num26;
				if (Main.rand.Next(5) == 0)
				{
					int num27 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 217, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num27].velocity *= 0.3f;
					Main.dust[num27].noGravity = true;
					Main.dust[num27].noLight = true;
				}
			}
			if (this.type == 423 || this.type == 613)
			{
				int num28 = 3;
				if (this.frameCounter >= 4 * num28)
				{
					this.frameCounter = 0;
				}
				this.frame = this.frameCounter / num28;
			}
			if (this.velocity.X > 0f)
			{
				this.spriteDirection = (this.direction = -1);
			}
			else if (this.velocity.X < 0f)
			{
				this.spriteDirection = (this.direction = 1);
			}
			if (this.type == 373)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += (float)Main.rand.Next(1, 4);
				}
				if (this.ai[1] > 90f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 375)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) == 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > (float)Main.rand.Next(180, 900))
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 407)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 60f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 423)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 30f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			else if (this.type == 613)
			{
				if (this.ai[1] > 0f)
				{
					this.ai[1] += 1f;
					if (Main.rand.Next(3) != 0)
					{
						this.ai[1] += 1f;
					}
				}
				if (this.ai[1] > 60f)
				{
					this.ai[1] = 0f;
					this.netUpdate = true;
				}
			}
			if (this.ai[0] == 0f)
			{
				float scaleFactor4 = 0f;
				int num29 = 0;
				if (this.type == 373)
				{
					scaleFactor4 = 10f;
					num29 = 374;
				}
				else if (this.type == 375)
				{
					scaleFactor4 = 11f;
					num29 = 376;
				}
				else if (this.type == 407)
				{
					scaleFactor4 = 14f;
					num29 = 408;
				}
				else if (this.type == 423)
				{
					scaleFactor4 = 4f;
					num29 = 433;
				}
				else if (this.type == 613)
				{
					scaleFactor4 = 14f;
					num29 = 614;
				}
				if (flag)
				{
					if (this.type == 375)
					{
						if ((vector - base.Center).X > 0f)
						{
							this.spriteDirection = (this.direction = -1);
						}
						else if ((vector - base.Center).X < 0f)
						{
							this.spriteDirection = (this.direction = 1);
						}
					}
					if (this.type == 407 && Collision.SolidCollision(this.position, this.width, this.height))
					{
						return;
					}
					if (this.type == 423)
					{
						if (Math.Abs((vector - base.Center).ToRotation() - 1.57079637f) > 0.7853982f)
						{
							this.velocity += Vector2.Normalize(vector - base.Center - Vector2.UnitY * 80f);
							return;
						}
						if ((vector - base.Center).Length() > 400f)
						{
							return;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							if (Main.myPlayer == this.owner)
							{
								Vector2 value2 = vector - base.Center;
								value2.Normalize();
								value2 *= scaleFactor4;
								Projectile.NewProjectile(base.Center.X, base.Center.Y, value2.X, value2.Y, num29, this.damage, 0f, Main.myPlayer, 0f, 0f);
								this.netUpdate = true;
								return;
							}
						}
					}
					else if (this.ai[1] == 0f && this.type == 613)
					{
						if ((vector - base.Center).Length() > 500f)
						{
							return;
						}
						if (this.ai[1] == 0f)
						{
							this.ai[1] += 1f;
							if (Main.myPlayer == this.owner)
							{
								Vector2 vector7 = vector - base.Center;
								vector7.Normalize();
								vector7 *= scaleFactor4;
								int num30 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector7.X, vector7.Y, num29, this.damage, 0f, Main.myPlayer, 0f, (float)num11);
								Main.projectile[num30].timeLeft = 300;
								Main.projectile[num30].netUpdate = true;
								this.velocity -= vector7 / 3f;
								this.netUpdate = true;
							}
							for (int n = 0; n < 5; n++)
							{
								int num31 = this.width / 4;
								Vector2 _ = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (float)Main.rand.Next(24, 41) / 8f;
								int num32 = Dust.NewDust(base.Center - Vector2.One * (float)num31, num31 * 2, num31 * 2, 88, 0f, 0f, 0, default(Color), 1f);
								Dust dust5 = Main.dust[num32];
								Vector2 value3 = Vector2.Normalize(dust5.position - base.Center);
								dust5.position = base.Center + value3 * (float)num31 * this.scale - new Vector2(4f);
								if (n < 30)
								{
									dust5.velocity = value3 * dust5.velocity.Length() * 2f;
								}
								else
								{
									dust5.velocity = 2f * value3 * (float)Main.rand.Next(45, 91) / 10f;
								}
								dust5.noGravity = true;
								dust5.scale = 0.7f + Main.rand.NextFloat();
							}
							return;
						}
					}
					else if (this.ai[1] == 0f)
					{
						this.ai[1] += 1f;
						if (Main.myPlayer == this.owner)
						{
							Vector2 value4 = vector - base.Center;
							value4.Normalize();
							value4 *= scaleFactor4;
							int num33 = Projectile.NewProjectile(base.Center.X, base.Center.Y, value4.X, value4.Y, num29, this.damage, 0f, Main.myPlayer, 0f, 0f);
							Main.projectile[num33].timeLeft = 300;
							Main.projectile[num33].netUpdate = true;
							this.netUpdate = true;
						}
					}
				}
			}
		}

		private void AI_075()
		{
			Player player = Main.player[this.owner];
			float num = 1.57079637f;
			Vector2 vector = player.RotatedRelativePoint(player.MountedCenter, true);
			if (this.type == 439)
			{
				this.ai[0] += 1f;
				int num2 = 0;
				if (this.ai[0] >= 40f)
				{
					num2++;
				}
				if (this.ai[0] >= 80f)
				{
					num2++;
				}
				if (this.ai[0] >= 120f)
				{
					num2++;
				}
				int num3 = 24;
				int num4 = 6;
				this.ai[1] += 1f;
				bool flag = false;
				if (this.ai[1] >= (float)(num3 - num4 * num2))
				{
					this.ai[1] = 0f;
					flag = true;
				}
				this.frameCounter += 1 + num2;
				if (this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame >= 6)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num3 - num4 * num2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item91, this.position);
					}
				}
				if (this.ai[1] == 1f && this.ai[0] != 1f)
				{
					Vector2 vector2 = Vector2.UnitX * 24f;
					vector2 = vector2.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
					Vector2 value = base.Center + vector2;
					for (int i = 0; i < 2; i++)
					{
						int num5 = Dust.NewDust(value - Vector2.One * 8f, 16, 16, 135, this.velocity.X / 2f, this.velocity.Y / 2f, 100, default(Color), 1f);
						Main.dust[num5].velocity *= 0.66f;
						Main.dust[num5].noGravity = true;
						Main.dust[num5].scale = 1.4f;
					}
				}
				if (flag && Main.myPlayer == this.owner)
				{
					bool flag2 = player.channel && player.CheckMana(player.inventory[player.selectedItem].mana, true, false) && !player.noItems && !player.CCed;
					if (flag2)
					{
						float scaleFactor = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value2 = vector;
						Vector2 value3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value2;
						if (player.gravDir == -1f)
						{
							value3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value2.Y;
						}
						Vector2 vector3 = Vector2.Normalize(value3);
						if (float.IsNaN(vector3.X) || float.IsNaN(vector3.Y))
						{
							vector3 = -Vector2.UnitY;
						}
						vector3 *= scaleFactor;
						if (vector3.X != this.velocity.X || vector3.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector3;
						int num6 = 440;
						float scaleFactor2 = 14f;
						int num7 = 7;
						for (int j = 0; j < 2; j++)
						{
							value2 = base.Center + new Vector2((float)Main.rand.Next(-num7, num7 + 1), (float)Main.rand.Next(-num7, num7 + 1));
							Vector2 spinningpoint = Vector2.Normalize(this.velocity) * scaleFactor2;
							spinningpoint = spinningpoint.RotatedBy(Main.rand.NextDouble() * 0.19634954631328583 - 0.098174773156642914, default(Vector2));
							if (float.IsNaN(spinningpoint.X) || float.IsNaN(spinningpoint.Y))
							{
								spinningpoint = -Vector2.UnitY;
							}
							Projectile.NewProjectile(value2.X, value2.Y, spinningpoint.X, spinningpoint.Y, num6, this.damage, this.knockBack, this.owner, 0f, 0f);
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 445)
			{
				this.localAI[0] += 1f;
				if (this.localAI[0] >= 60f)
				{
					this.localAI[0] = 0f;
				}
				if (Vector2.Distance(vector, base.Center) >= 5f)
				{
					float num8 = this.localAI[0] / 60f;
					if (num8 > 0.5f)
					{
						num8 = 1f - num8;
					}
					Vector3 value4 = new Vector3(0f, 1f, 0.7f);
					Vector3 value5 = new Vector3(0f, 0.7f, 1f);
					Vector3 value6 = Vector3.Lerp(value4, value5, 1f - num8 * 2f) * 0.5f;
					if (Vector2.Distance(vector, base.Center) >= 30f)
					{
						Vector2 vector4 = base.Center - vector;
						vector4.Normalize();
						vector4 *= Vector2.Distance(vector, base.Center) - 30f;
						DelegateMethods.v3_1 = value6 * 0.8f;
						Utils.PlotTileLine(base.Center - vector4, base.Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
					}
					Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, value6.X, value6.Y, value6.Z);
				}
				if (Main.myPlayer == this.owner)
				{
					if (this.localAI[1] > 0f)
					{
						this.localAI[1] -= 1f;
					}
					if (!player.channel || player.noItems || player.CCed)
					{
						this.Kill();
					}
					else if (this.localAI[1] == 0f)
					{
						Vector2 value7 = vector;
						Vector2 vector5 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value7;
						if (player.gravDir == -1f)
						{
							vector5.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value7.Y;
						}
						Tile tile = Main.tile[Player.tileTargetX, Player.tileTargetY];
						if (tile.active())
						{
							vector5 = new Vector2((float)Player.tileTargetX, (float)Player.tileTargetY) * 16f + Vector2.One * 8f - value7;
							this.localAI[1] = 2f;
						}
						vector5 = Vector2.Lerp(vector5, this.velocity, 0.7f);
						if (float.IsNaN(vector5.X) || float.IsNaN(vector5.Y))
						{
							vector5 = -Vector2.UnitY;
						}
						float num9 = 30f;
						if (vector5.Length() < num9)
						{
							vector5 = Vector2.Normalize(vector5) * num9;
						}
						int tileBoost = player.inventory[player.selectedItem].tileBoost;
						int num10 = -Player.tileRangeX - tileBoost + 1;
						int num11 = Player.tileRangeX + tileBoost - 1;
						int num12 = -Player.tileRangeY - tileBoost;
						int num13 = Player.tileRangeY + tileBoost - 1;
						int num14 = 12;
						bool flag3 = false;
						if (vector5.X < (float)(num10 * 16 - num14))
						{
							flag3 = true;
						}
						if (vector5.Y < (float)(num12 * 16 - num14))
						{
							flag3 = true;
						}
						if (vector5.X > (float)(num11 * 16 + num14))
						{
							flag3 = true;
						}
						if (vector5.Y > (float)(num13 * 16 + num14))
						{
							flag3 = true;
						}
						if (flag3)
						{
							Vector2 value8 = Vector2.Normalize(vector5);
							float num15 = -1f;
							if (value8.X < 0f && ((float)(num10 * 16 - num14) / value8.X < num15 || num15 == -1f))
							{
								num15 = (float)(num10 * 16 - num14) / value8.X;
							}
							if (value8.X > 0f && ((float)(num11 * 16 + num14) / value8.X < num15 || num15 == -1f))
							{
								num15 = (float)(num11 * 16 + num14) / value8.X;
							}
							if (value8.Y < 0f && ((float)(num12 * 16 - num14) / value8.Y < num15 || num15 == -1f))
							{
								num15 = (float)(num12 * 16 - num14) / value8.Y;
							}
							if (value8.Y > 0f && ((float)(num13 * 16 + num14) / value8.Y < num15 || num15 == -1f))
							{
								num15 = (float)(num13 * 16 + num14) / value8.Y;
							}
							vector5 = value8 * num15;
						}
						if (vector5.X != this.velocity.X || vector5.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector5;
					}
				}
			}
			if (this.type == 460)
			{
				this.ai[0] += 1f;
				int num16 = 0;
				if (this.ai[0] >= 60f)
				{
					num16++;
				}
				if (this.ai[0] >= 180f)
				{
					num16++;
				}
				bool flag4 = false;
				if (this.ai[0] == 60f || this.ai[0] == 180f || (this.ai[0] > 180f && this.ai[0] % 20f == 0f))
				{
					flag4 = true;
				}
				bool flag5 = this.ai[0] >= 180f;
				int num17 = 10;
				if (!flag5)
				{
					this.ai[1] += 1f;
				}
				bool flag6 = false;
				if (flag5 && this.ai[0] % 20f == 0f)
				{
					flag6 = true;
				}
				if (this.ai[1] >= (float)num17 && !flag5)
				{
					this.ai[1] = 0f;
					flag6 = true;
					if (!flag5)
					{
						float scaleFactor3 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value9 = vector;
						Vector2 value10 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value9;
						if (player.gravDir == -1f)
						{
							value10.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value9.Y;
						}
						Vector2 vector6 = Vector2.Normalize(value10);
						if (float.IsNaN(vector6.X) || float.IsNaN(vector6.Y))
						{
							vector6 = -Vector2.UnitY;
						}
						vector6 *= scaleFactor3;
						if (vector6.X != this.velocity.X || vector6.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector6;
					}
				}
				if (this.soundDelay <= 0 && !flag5)
				{
					this.soundDelay = num17 - num16;
					this.soundDelay *= 2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item15, this.position);
					}
				}
				if (this.ai[0] > 10f && !flag5)
				{
					Vector2 vector7 = Vector2.UnitX * 18f;
					vector7 = vector7.RotatedBy((double)(this.rotation - 1.57079637f), default(Vector2));
					Vector2 value11 = base.Center + vector7;
					for (int k = 0; k < num16 + 1; k++)
					{
						int num18 = 226;
						float num19 = 0.4f;
						if (k % 2 == 1)
						{
							num18 = 226;
							num19 = 0.65f;
						}
						Vector2 vector8 = value11 + ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2() * (12f - (float)(num16 * 2));
						int num20 = Dust.NewDust(vector8 - Vector2.One * 8f, 16, 16, num18, this.velocity.X / 2f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num20].velocity = Vector2.Normalize(value11 - vector8) * 1.5f * (10f - (float)num16 * 2f) / 10f;
						Main.dust[num20].noGravity = true;
						Main.dust[num20].scale = num19;
						Main.dust[num20].customData = player;
					}
				}
				if (flag6 && Main.myPlayer == this.owner)
				{
					bool flag7 = !flag4 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
					bool flag8 = player.channel && flag7 && !player.noItems && !player.CCed;
					if (flag8)
					{
						if (this.ai[0] == 180f)
						{
							Vector2 center = base.Center;
							Vector2 vector9 = Vector2.Normalize(this.velocity);
							if (float.IsNaN(vector9.X) || float.IsNaN(vector9.Y))
							{
								vector9 = -Vector2.UnitY;
							}
							int num21 = (int)((float)this.damage * 3f);
							int num22 = Projectile.NewProjectile(center.X, center.Y, vector9.X, vector9.Y, 461, num21, this.knockBack, this.owner, 0f, (float)this.whoAmI);
							this.ai[1] = (float)num22;
							this.netUpdate = true;
						}
						else if (flag5)
						{
							Projectile projectile = Main.projectile[(int)this.ai[1]];
							if (!projectile.active || projectile.type != 461)
							{
								this.Kill();
								return;
							}
						}
					}
					else
					{
						if (!flag5)
						{
							int num23 = 459;
							float scaleFactor4 = 10f;
							Vector2 center2 = base.Center;
							Vector2 vector10 = Vector2.Normalize(this.velocity) * scaleFactor4;
							if (float.IsNaN(vector10.X) || float.IsNaN(vector10.Y))
							{
								vector10 = -Vector2.UnitY;
							}
							float num24 = 0.7f + (float)num16 * 0.3f;
							int num25 = (num24 < 1f) ? this.damage : ((int)((float)this.damage * 2f));
							Projectile.NewProjectile(center2.X, center2.Y, vector10.X, vector10.Y, num23, num25, this.knockBack, this.owner, 0f, num24);
						}
						this.Kill();
					}
				}
			}
			if (this.type == 633)
			{
				float num26 = 30f;
				if (this.ai[0] > 90f)
				{
					num26 = 15f;
				}
				if (this.ai[0] > 120f)
				{
					num26 = 5f;
				}
				this.damage = (int)((float)player.inventory[player.selectedItem].damage * player.magicDamage);
				this.ai[0] += 1f;
				this.ai[1] += 1f;
				bool flag9 = false;
				if (this.ai[0] % num26 == 0f)
				{
					flag9 = true;
				}
				int num27 = 10;
				bool flag10 = false;
				if (this.ai[0] % num26 == 0f)
				{
					flag10 = true;
				}
				if (this.ai[1] >= 1f)
				{
					this.ai[1] = 0f;
					flag10 = true;
					if (Main.myPlayer == this.owner)
					{
						float scaleFactor5 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value12 = vector;
						Vector2 value13 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value12;
						if (player.gravDir == -1f)
						{
							value13.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value12.Y;
						}
						Vector2 vector11 = Vector2.Normalize(value13);
						if (float.IsNaN(vector11.X) || float.IsNaN(vector11.Y))
						{
							vector11 = -Vector2.UnitY;
						}
						vector11 = Vector2.Normalize(Vector2.Lerp(vector11, Vector2.Normalize(this.velocity), 0.92f));
						vector11 *= scaleFactor5;
						if (vector11.X != this.velocity.X || vector11.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector11;
					}
				}
				this.frameCounter++;
				int num28 = (this.ai[0] < 120f) ? 4 : 1;
				if (this.frameCounter >= num28)
				{
					this.frameCounter = 0;
					if (++this.frame >= 5)
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num27;
					this.soundDelay *= 2;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item15, this.position);
					}
				}
				if (flag10 && Main.myPlayer == this.owner)
				{
					bool flag11 = !flag9 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
					bool flag12 = player.channel && flag11 && !player.noItems && !player.CCed;
					if (flag12)
					{
						if (this.ai[0] == 1f)
						{
							Vector2 center3 = base.Center;
							Vector2 vector12 = Vector2.Normalize(this.velocity);
							if (float.IsNaN(vector12.X) || float.IsNaN(vector12.Y))
							{
								vector12 = -Vector2.UnitY;
							}
							int num29 = this.damage;
							for (int l = 0; l < 6; l++)
							{
								Projectile.NewProjectile(center3.X, center3.Y, vector12.X, vector12.Y, 632, num29, this.knockBack, this.owner, (float)l, (float)this.whoAmI);
							}
							this.netUpdate = true;
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 595)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				if (++this.frame >= Main.projFrames[this.type])
				{
					this.frame = 0;
				}
				this.soundDelay--;
				if (this.soundDelay <= 0)
				{
					Main.PlaySound(SoundID.Item1, base.Center);
					this.soundDelay = 12;
				}
				if (Main.myPlayer == this.owner)
				{
					if (player.channel && !player.noItems && !player.CCed)
					{
						float scaleFactor6 = 1f;
						if (player.inventory[player.selectedItem].shoot == this.type)
						{
							scaleFactor6 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						}
						Vector2 vector13 = Main.MouseWorld - vector;
						vector13.Normalize();
						if (vector13.HasNaNs())
						{
							vector13 = Vector2.UnitX * (float)player.direction;
						}
						vector13 *= scaleFactor6;
						if (vector13.X != this.velocity.X || vector13.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector13;
					}
					else
					{
						this.Kill();
					}
				}
				Vector2 vector14 = base.Center + this.velocity * 3f;
				Lighting.AddLight(vector14, 0.8f, 0.8f, 0.8f);
				if (Main.rand.Next(3) == 0)
				{
					int num30 = Dust.NewDust(vector14 - base.Size / 2f, this.width, this.height, 63, this.velocity.X, this.velocity.Y, 100, default(Color), 2f);
					Main.dust[num30].noGravity = true;
					Main.dust[num30].position -= this.velocity;
				}
			}
			if (this.type == 600)
			{
				if (this.ai[0] == 0f)
				{
					if (this.ai[1] != 0f)
					{
						Main.PlaySound(SoundID.Item114, this.position);
					}
					else
					{
						Main.PlaySound(SoundID.Item115, this.position);
					}
				}
				this.ai[0] += 1f;
				if (Main.myPlayer == this.owner && this.ai[0] == 1f)
				{
					float scaleFactor7 = player.inventory[player.selectedItem].shootSpeed * this.scale;
					Vector2 value14 = vector;
					Vector2 value15 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value14;
					if (player.gravDir == -1f)
					{
						value15.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value14.Y;
					}
					Vector2 vector15 = Vector2.Normalize(value15);
					if (float.IsNaN(vector15.X) || float.IsNaN(vector15.Y))
					{
						vector15 = -Vector2.UnitY;
					}
					vector15 *= scaleFactor7;
					if (vector15.X != this.velocity.X || vector15.Y != this.velocity.Y)
					{
						this.netUpdate = true;
					}
					this.velocity = vector15;
					int num31 = 601;
					float scaleFactor8 = 3f;
					value14 = base.Center;
					Vector2 vector16 = Vector2.Normalize(this.velocity) * scaleFactor8;
					if (float.IsNaN(vector16.X) || float.IsNaN(vector16.Y))
					{
						vector16 = -Vector2.UnitY;
					}
					Projectile.NewProjectile(value14.X, value14.Y, vector16.X, vector16.Y, num31, this.damage, this.knockBack, this.owner, this.ai[1], 0f);
				}
				if (this.ai[0] >= 30f)
				{
					this.Kill();
				}
			}
			if (this.type == 611)
			{
				if (this.localAI[1] > 0f)
				{
					this.localAI[1] -= 1f;
				}
				this.alpha -= 42;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = this.velocity.ToRotation();
				}
				float num32 = (float)((this.localAI[0].ToRotationVector2().X >= 0f) ? 1 : -1);
				if (this.ai[1] <= 0f)
				{
					num32 *= -1f;
				}
				Vector2 vector17 = (num32 * (this.ai[0] / 30f * 6.28318548f - 1.57079637f)).ToRotationVector2();
				vector17.Y *= (float)Math.Sin((double)this.ai[1]);
				if (this.ai[1] <= 0f)
				{
					vector17.Y *= -1f;
				}
				vector17 = vector17.RotatedBy((double)this.localAI[0], default(Vector2));
				this.ai[0] += 1f;
				if (this.ai[0] < 30f)
				{
					this.velocity += 48f * vector17;
				}
				else
				{
					this.Kill();
				}
			}
			if (this.type == 615)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				this.ai[0] += 1f;
				int num33 = 0;
				if (this.ai[0] >= 40f)
				{
					num33++;
				}
				if (this.ai[0] >= 80f)
				{
					num33++;
				}
				if (this.ai[0] >= 120f)
				{
					num33++;
				}
				int num34 = 5;
				int num35 = 0;
				this.ai[1] -= 1f;
				bool flag13 = false;
				int num36 = -1;
				if (this.ai[1] <= 0f)
				{
					this.ai[1] = (float)(num34 - num35 * num33);
					flag13 = true;
					int num37 = (int)this.ai[0] / (num34 - num35 * num33);
					if (num37 % 7 == 0)
					{
						num36 = 0;
					}
				}
				this.frameCounter += 1 + num33;
				if (this.frameCounter >= 4)
				{
					this.frameCounter = 0;
					this.frame++;
					if (this.frame >= Main.projFrames[this.type])
					{
						this.frame = 0;
					}
				}
				if (this.soundDelay <= 0)
				{
					this.soundDelay = num34 - num35 * num33;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item36, this.position);
					}
				}
				if (flag13 && Main.myPlayer == this.owner)
				{
					bool flag14 = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems && !player.CCed;
					int num38 = 14;
					float scaleFactor9 = 14f;
					int weaponDamage = player.GetWeaponDamage(player.inventory[player.selectedItem]);
					float weaponKnockback = player.inventory[player.selectedItem].knockBack;
					if (flag14)
					{
						player.PickAmmo(player.inventory[player.selectedItem], ref num38, ref scaleFactor9, ref flag14, ref weaponDamage, ref weaponKnockback, false);
						weaponKnockback = player.GetWeaponKnockback(player.inventory[player.selectedItem], weaponKnockback);
						float scaleFactor10 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 value16 = vector;
						Vector2 value17 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - value16;
						if (player.gravDir == -1f)
						{
							value17.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - value16.Y;
						}
						Vector2 vector18 = Vector2.Normalize(value17);
						if (float.IsNaN(vector18.X) || float.IsNaN(vector18.Y))
						{
							vector18 = -Vector2.UnitY;
						}
						vector18 *= scaleFactor10;
						vector18 = vector18.RotatedBy(Main.rand.NextDouble() * 0.13089969754219055 - 0.065449848771095276, default(Vector2));
						if (vector18.X != this.velocity.X || vector18.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = vector18;
						for (int m = 0; m < 1; m++)
						{
							Vector2 spinningpoint2 = Vector2.Normalize(this.velocity) * scaleFactor9;
							spinningpoint2 = spinningpoint2.RotatedBy(Main.rand.NextDouble() * 0.19634954631328583 - 0.098174773156642914, default(Vector2));
							if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
							{
								spinningpoint2 = -Vector2.UnitY;
							}
							Projectile.NewProjectile(value16.X, value16.Y, spinningpoint2.X, spinningpoint2.Y, num38, weaponDamage, weaponKnockback, this.owner, 0f, 0f);
						}
						if (num36 == 0)
						{
							num38 = 616;
							scaleFactor9 = 8f;
							for (int n = 0; n < 1; n++)
							{
								Vector2 spinningpoint3 = Vector2.Normalize(this.velocity) * scaleFactor9;
								spinningpoint3 = spinningpoint3.RotatedBy(Main.rand.NextDouble() * 0.39269909262657166 - 0.19634954631328583, default(Vector2));
								if (float.IsNaN(spinningpoint3.X) || float.IsNaN(spinningpoint3.Y))
								{
									spinningpoint3 = -Vector2.UnitY;
								}
								Projectile.NewProjectile(value16.X, value16.Y, spinningpoint3.X, spinningpoint3.Y, num38, weaponDamage + 20, weaponKnockback * 1.25f, this.owner, 0f, 0f);
							}
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 630)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				this.ai[0] += 1f;
				int num39 = 0;
				if (this.ai[0] >= 40f)
				{
					num39++;
				}
				if (this.ai[0] >= 80f)
				{
					num39++;
				}
				if (this.ai[0] >= 120f)
				{
					num39++;
				}
				int num40 = 24;
				int num41 = 2;
				this.ai[1] -= 1f;
				bool flag15 = false;
				if (this.ai[1] <= 0f)
				{
					this.ai[1] = (float)(num40 - num41 * num39);
					flag15 = true;
					int arg_1EF4_0 = (int)this.ai[0] / (num40 - num41 * num39);
				}
				bool flag16 = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems && !player.CCed;
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.soundDelay <= 0 && flag16)
				{
					this.soundDelay = num40 - num41 * num39;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item5, this.position);
					}
					this.localAI[0] = 12f;
				}
				player.phantasmTime = 2;
				if (flag15 && Main.myPlayer == this.owner)
				{
					int num42 = 14;
					float scaleFactor11 = 14f;
					int weaponDamage2 = player.GetWeaponDamage(player.inventory[player.selectedItem]);
					float weaponKnockback2 = player.inventory[player.selectedItem].knockBack;
					if (flag16)
					{
						player.PickAmmo(player.inventory[player.selectedItem], ref num42, ref scaleFactor11, ref flag16, ref weaponDamage2, ref weaponKnockback2, false);
						weaponKnockback2 = player.GetWeaponKnockback(player.inventory[player.selectedItem], weaponKnockback2);
						float scaleFactor12 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 vector19 = vector;
						Vector2 value18 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector19;
						if (player.gravDir == -1f)
						{
							value18.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector19.Y;
						}
						Vector2 value19 = Vector2.Normalize(value18);
						if (float.IsNaN(value19.X) || float.IsNaN(value19.Y))
						{
							value19 = -Vector2.UnitY;
						}
						value19 *= scaleFactor12;
						if (value19.X != this.velocity.X || value19.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = value19 * 0.55f;
						for (int num43 = 0; num43 < 4; num43++)
						{
							Vector2 vector20 = Vector2.Normalize(this.velocity) * scaleFactor11 * (0.6f + Main.rand.NextFloat() * 0.8f);
							if (float.IsNaN(vector20.X) || float.IsNaN(vector20.Y))
							{
								vector20 = -Vector2.UnitY;
							}
							Vector2 vector21 = vector19 + Utils.RandomVector2(Main.rand, -15f, 15f);
							int num44 = Projectile.NewProjectile(vector21.X, vector21.Y, vector20.X, vector20.Y, num42, weaponDamage2, weaponKnockback2, this.owner, 0f, 0f);
							Main.projectile[num44].noDropItem = true;
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			if (this.type == 705)
			{
				num = 0f;
				if (this.spriteDirection == -1)
				{
					num = 3.14159274f;
				}
				this.ai[0] += 1f;
				int itemAnimationMax = player.itemAnimationMax;
				this.ai[1] -= 1f;
				bool flag17 = false;
				if (this.ai[1] <= 0f)
				{
					this.ai[1] = (float)itemAnimationMax;
					flag17 = true;
				}
				bool flag18 = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems && !player.CCed;
				if (this.localAI[0] > 0f)
				{
					this.localAI[0] -= 1f;
				}
				if (this.soundDelay <= 0 && flag18)
				{
					this.soundDelay = itemAnimationMax;
					if (this.ai[0] != 1f)
					{
						Main.PlaySound(SoundID.Item5, this.position);
					}
					this.localAI[0] = 12f;
				}
				if (flag17 && Main.myPlayer == this.owner)
				{
					int num45 = 14;
					float scaleFactor13 = 12f;
					int num46 = player.GetWeaponDamage(player.inventory[player.selectedItem]);
					float weaponKnockback3 = player.inventory[player.selectedItem].knockBack;
					int num47 = 2;
					float num48 = 1.5f;
					if (flag18)
					{
						player.PickAmmo(player.inventory[player.selectedItem], ref num45, ref scaleFactor13, ref flag18, ref num46, ref weaponKnockback3, false);
						weaponKnockback3 = player.GetWeaponKnockback(player.inventory[player.selectedItem], weaponKnockback3);
						if (num45 == 1)
						{
							num45 = 2;
						}
						if (++player.phantomPhoneixCounter >= 4)
						{
							player.phantomPhoneixCounter = 0;
							num47 = 1;
							num46 *= 2;
							num48 = 0f;
							this.ai[1] *= 1.5f;
							num45 = 706;
							scaleFactor13 = 16f;
						}
						float scaleFactor14 = player.inventory[player.selectedItem].shootSpeed * this.scale;
						Vector2 vector22 = vector;
						Vector2 value20 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector22;
						if (player.gravDir == -1f)
						{
							value20.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector22.Y;
						}
						Vector2 value21 = Vector2.Normalize(value20);
						if (float.IsNaN(value21.X) || float.IsNaN(value21.Y))
						{
							value21 = -Vector2.UnitY;
						}
						value21 *= scaleFactor14;
						if (value21.X != this.velocity.X || value21.Y != this.velocity.Y)
						{
							this.netUpdate = true;
						}
						this.velocity = value21 * 0.55f;
						for (int num49 = 0; num49 < num47; num49++)
						{
							Vector2 value22 = Vector2.Normalize(this.velocity) * scaleFactor13;
							value22 += Main.rand.NextVector2Square(-num48, num48);
							if (float.IsNaN(value22.X) || float.IsNaN(value22.Y))
							{
								value22 = -Vector2.UnitY;
							}
							Vector2 vector23 = vector22;
							int num50 = Projectile.NewProjectile(vector23.X, vector23.Y, value22.X, value22.Y, num45, num46, weaponKnockback3, this.owner, 0f, 0f);
							Main.projectile[num50].noDropItem = true;
						}
					}
					else
					{
						this.Kill();
					}
				}
			}
			this.position = player.RotatedRelativePoint(player.MountedCenter, true) - base.Size / 2f;
			this.rotation = this.velocity.ToRotation() + num;
			this.spriteDirection = this.direction;
			this.timeLeft = 2;
			player.ChangeDir(this.direction);
			player.heldProj = this.whoAmI;
			player.itemTime = 2;
			player.itemAnimation = 2;
			player.itemRotation = (float)Math.Atan2((double)(this.velocity.Y * (float)this.direction), (double)(this.velocity.X * (float)this.direction));
			if (this.type == 460 || this.type == 611)
			{
				Vector2 vector24 = Main.OffsetsPlayerOnhand[player.bodyFrame.Y / 56] * 2f;
				if (player.direction != 1)
				{
					vector24.X = (float)player.bodyFrame.Width - vector24.X;
				}
				if (player.gravDir != 1f)
				{
					vector24.Y = (float)player.bodyFrame.Height - vector24.Y;
				}
				vector24 -= new Vector2((float)(player.bodyFrame.Width - player.width), (float)(player.bodyFrame.Height - 42)) / 2f;
				base.Center = player.RotatedRelativePoint(player.position + vector24, true) - this.velocity;
			}
			if (this.type == 615)
			{
				this.position.Y = this.position.Y + player.gravDir * 2f;
			}
			if (this.type == 611 && this.alpha == 0)
			{
				for (int num51 = 0; num51 < 2; num51++)
				{
					Dust dust = Main.dust[Dust.NewDust(this.position + this.velocity * 2f, this.width, this.height, 6, 0f, 0f, 100, Color.Transparent, 2f)];
					dust.noGravity = true;
					dust.velocity *= 2f;
					dust.velocity += this.localAI[0].ToRotationVector2();
					dust.fadeIn = 1.5f;
				}
				float num52 = 18f;
				int num53 = 0;
				while ((float)num53 < num52)
				{
					if (Main.rand.Next(4) == 0)
					{
						Vector2 position = this.position + this.velocity + this.velocity * ((float)num53 / num52);
						Dust dust2 = Main.dust[Dust.NewDust(position, this.width, this.height, 6, 0f, 0f, 100, Color.Transparent, 1f)];
						dust2.noGravity = true;
						dust2.fadeIn = 0.5f;
						dust2.velocity += this.localAI[0].ToRotationVector2();
						dust2.noLight = true;
					}
					num53++;
				}
			}
		}

		private void AI_099_1()
		{
			this.timeLeft = 6;
			bool flag = true;
			float num = 250f;
			float scaleFactor = 0.1f;
			float num2 = 15f;
			float num3 = 12f;
			num *= 0.5f;
			num2 *= 0.8f;
			num3 *= 1.5f;
			if (this.owner == Main.myPlayer)
			{
				bool flag2 = false;
				for (int i = 0; i < 1000; i++)
				{
					if (Main.projectile[i].active && Main.projectile[i].owner == this.owner && Main.projectile[i].aiStyle == 99 && (Main.projectile[i].type < 556 || Main.projectile[i].type > 561))
					{
						flag2 = true;
					}
				}
				if (!flag2)
				{
					this.ai[0] = -1f;
					this.netUpdate = true;
				}
			}
			if (Main.player[this.owner].yoyoString)
			{
				num += num * 0.25f + 10f;
			}
			this.rotation += 0.5f;
			if (Main.player[this.owner].dead)
			{
				this.Kill();
				return;
			}
			if (!flag)
			{
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemAnimation = 2;
				Main.player[this.owner].itemTime = 2;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
			}
			if (this.ai[0] == 0f || this.ai[0] == 1f)
			{
				if (this.ai[0] == 1f)
				{
					num *= 0.75f;
				}
				num3 *= 0.5f;
				bool flag3 = false;
				Vector2 vector = Main.player[this.owner].Center - base.Center;
				if ((double)vector.Length() > (double)num * 0.9)
				{
					flag3 = true;
				}
				if (vector.Length() > num)
				{
					float num4 = vector.Length() - num;
					Vector2 value;
					value.X = vector.Y;
					value.Y = vector.X;
					vector.Normalize();
					vector *= num;
					this.position = Main.player[this.owner].Center - vector;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					float num5 = this.velocity.Length();
					this.velocity.Normalize();
					if (num4 > num5 - 1f)
					{
						num4 = num5 - 1f;
					}
					this.velocity *= num5 - num4;
					num5 = this.velocity.Length();
					Vector2 vector2 = new Vector2(base.Center.X, base.Center.Y);
					Vector2 vector3 = new Vector2(Main.player[this.owner].Center.X, Main.player[this.owner].Center.Y);
					if (vector2.Y < vector3.Y)
					{
						value.Y = Math.Abs(value.Y);
					}
					else if (vector2.Y > vector3.Y)
					{
						value.Y = -Math.Abs(value.Y);
					}
					if (vector2.X < vector3.X)
					{
						value.X = Math.Abs(value.X);
					}
					else if (vector2.X > vector3.X)
					{
						value.X = -Math.Abs(value.X);
					}
					value.Normalize();
					value *= this.velocity.Length();
					new Vector2(value.X, value.Y);
					if (Math.Abs(this.velocity.X) > Math.Abs(this.velocity.Y))
					{
						Vector2 vector4 = this.velocity;
						vector4.Y += value.Y;
						vector4.Normalize();
						vector4 *= this.velocity.Length();
						if ((double)Math.Abs(value.X) < 0.1 || (double)Math.Abs(value.Y) < 0.1)
						{
							this.velocity = vector4;
						}
						else
						{
							this.velocity = (vector4 + this.velocity * 2f) / 3f;
						}
					}
					else
					{
						Vector2 vector5 = this.velocity;
						vector5.X += value.X;
						vector5.Normalize();
						vector5 *= this.velocity.Length();
						if ((double)Math.Abs(value.X) < 0.2 || (double)Math.Abs(value.Y) < 0.2)
						{
							this.velocity = vector5;
						}
						else
						{
							this.velocity = (vector5 + this.velocity * 2f) / 3f;
						}
					}
				}
				if (Main.myPlayer == this.owner)
				{
					if (Main.player[this.owner].channel)
					{
						Vector2 value2 = new Vector2((float)(Main.mouseX - Main.lastMouseX), (float)(Main.mouseY - Main.lastMouseY));
						if (this.velocity.X != 0f || this.velocity.Y != 0f)
						{
							if (flag)
							{
								value2 *= -1f;
							}
							if (flag3)
							{
								if (base.Center.X < Main.player[this.owner].Center.X && value2.X < 0f)
								{
									value2.X = 0f;
								}
								if (base.Center.X > Main.player[this.owner].Center.X && value2.X > 0f)
								{
									value2.X = 0f;
								}
								if (base.Center.Y < Main.player[this.owner].Center.Y && value2.Y < 0f)
								{
									value2.Y = 0f;
								}
								if (base.Center.Y > Main.player[this.owner].Center.Y && value2.Y > 0f)
								{
									value2.Y = 0f;
								}
							}
							this.velocity += value2 * scaleFactor;
							this.netUpdate = true;
						}
					}
					else
					{
						this.ai[0] = 10f;
						this.netUpdate = true;
					}
				}
				if (flag || this.type == 562 || this.type == 547 || this.type == 555 || this.type == 564 || this.type == 552 || this.type == 563 || this.type == 549 || this.type == 550 || this.type == 554 || this.type == 553 || this.type == 603)
				{
					float num6 = 800f;
					Vector2 vector6 = default(Vector2);
					bool flag4 = false;
					if (this.type == 549)
					{
						num6 = 200f;
					}
					if (this.type == 554)
					{
						num6 = 400f;
					}
					if (this.type == 553)
					{
						num6 = 250f;
					}
					if (this.type == 603)
					{
						num6 = 320f;
					}
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].CanBeChasedBy(this, false))
						{
							float num7 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
							float num8 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
							float num9 = Math.Abs(this.position.X + (float)(this.width / 2) - num7) + Math.Abs(this.position.Y + (float)(this.height / 2) - num8);
							if (num9 < num6 && (this.type != 563 || num9 >= 200f) && Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height) && (double)(Main.npc[j].Center - Main.player[this.owner].Center).Length() < (double)num * 0.9)
							{
								num6 = num9;
								vector6.X = num7;
								vector6.Y = num8;
								flag4 = true;
							}
						}
					}
					if (flag4)
					{
						vector6 -= base.Center;
						vector6.Normalize();
						if (this.type == 563)
						{
							vector6 *= 4f;
							this.velocity = (this.velocity * 14f + vector6) / 15f;
						}
						else if (this.type == 553)
						{
							vector6 *= 5f;
							this.velocity = (this.velocity * 12f + vector6) / 13f;
						}
						else if (this.type == 603)
						{
							vector6 *= 16f;
							this.velocity = (this.velocity * 9f + vector6) / 10f;
						}
						else if (this.type == 554)
						{
							vector6 *= 8f;
							this.velocity = (this.velocity * 6f + vector6) / 7f;
						}
						else
						{
							vector6 *= 6f;
							this.velocity = (this.velocity * 7f + vector6) / 8f;
						}
					}
				}
				if (this.velocity.Length() > num2)
				{
					this.velocity.Normalize();
					this.velocity *= num2;
				}
				if (this.velocity.Length() < num3)
				{
					this.velocity.Normalize();
					this.velocity *= num3;
					return;
				}
			}
			else
			{
				this.tileCollide = false;
				Vector2 vector7 = Main.player[this.owner].Center - base.Center;
				if (vector7.Length() < 40f || vector7.HasNaNs())
				{
					this.Kill();
					return;
				}
				float num10 = num2 * 1.5f;
				if (this.type == 546)
				{
					num10 *= 1.5f;
				}
				if (this.type == 554)
				{
					num10 *= 1.25f;
				}
				if (this.type == 555)
				{
					num10 *= 1.35f;
				}
				if (this.type == 562)
				{
					num10 *= 1.25f;
				}
				float num11 = 12f;
				vector7.Normalize();
				vector7 *= num10;
				this.velocity = (this.velocity * (num11 - 1f) + vector7) / num11;
			}
		}

		private void AI_099_2()
		{
			bool flag = false;
			for (int i = 0; i < this.whoAmI; i++)
			{
				if (Main.projectile[i].active && Main.projectile[i].owner == this.owner && Main.projectile[i].type == this.type)
				{
					flag = true;
				}
			}
			if (this.owner == Main.myPlayer)
			{
				this.localAI[0] += 1f;
				if (flag)
				{
					this.localAI[0] += (float)Main.rand.Next(10, 31) * 0.1f;
				}
				float num = this.localAI[0] / 60f;
				num /= (1f + Main.player[this.owner].meleeSpeed) / 2f;
				float num2 = ProjectileID.Sets.YoyosLifeTimeMultiplier[this.type];
				if (num2 != -1f && num > num2)
				{
					this.ai[0] = -1f;
				}
			}
			if (this.type == 603 && this.owner == Main.myPlayer)
			{
				this.localAI[1] += 1f;
				if (this.localAI[1] >= 6f)
				{
					float num3 = 400f;
					Vector2 vector = this.velocity;
					Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
					vector2.Normalize();
					vector2 *= (float)Main.rand.Next(10, 41) * 0.1f;
					if (Main.rand.Next(3) == 0)
					{
						vector2 *= 2f;
					}
					vector *= 0.25f;
					vector += vector2;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].CanBeChasedBy(this, false))
						{
							float num4 = Main.npc[j].position.X + (float)(Main.npc[j].width / 2);
							float num5 = Main.npc[j].position.Y + (float)(Main.npc[j].height / 2);
							float num6 = Math.Abs(this.position.X + (float)(this.width / 2) - num4) + Math.Abs(this.position.Y + (float)(this.height / 2) - num5);
							if (num6 < num3 && Collision.CanHit(this.position, this.width, this.height, Main.npc[j].position, Main.npc[j].width, Main.npc[j].height))
							{
								num3 = num6;
								vector.X = num4;
								vector.Y = num5;
								vector -= base.Center;
								vector.Normalize();
								vector *= 8f;
							}
						}
					}
					vector *= 0.8f;
					Projectile.NewProjectile(base.Center.X - vector.X, base.Center.Y - vector.Y, vector.X, vector.Y, 604, this.damage, this.knockBack, this.owner, 0f, 0f);
					this.localAI[1] = 0f;
				}
			}
			bool flag2 = false;
			if (this.type >= 556 && this.type <= 561)
			{
				flag2 = true;
			}
			if (Main.player[this.owner].dead)
			{
				this.Kill();
				return;
			}
			if (!flag2 && !flag)
			{
				Main.player[this.owner].heldProj = this.whoAmI;
				Main.player[this.owner].itemAnimation = 2;
				Main.player[this.owner].itemTime = 2;
				if (this.position.X + (float)(this.width / 2) > Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2))
				{
					Main.player[this.owner].ChangeDir(1);
					this.direction = 1;
				}
				else
				{
					Main.player[this.owner].ChangeDir(-1);
					this.direction = -1;
				}
			}
			if (this.velocity.HasNaNs())
			{
				this.Kill();
			}
			this.timeLeft = 6;
			float num7 = ProjectileID.Sets.YoyosMaximumRange[this.type];
			float num8 = ProjectileID.Sets.YoyosTopSpeed[this.type];
			if (this.type == 545)
			{
				if (Main.rand.Next(6) == 0)
				{
					int num9 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num9].noGravity = true;
				}
			}
			else if (this.type == 553 && Main.rand.Next(2) == 0)
			{
				int num10 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num10].noGravity = true;
				Main.dust[num10].scale = 1.6f;
			}
			if (Main.player[this.owner].yoyoString)
			{
				num7 = num7 * 1.25f + 30f;
			}
			num7 /= (1f + Main.player[this.owner].meleeSpeed * 3f) / 4f;
			num8 /= (1f + Main.player[this.owner].meleeSpeed * 3f) / 4f;
			float num11 = 14f - num8 / 2f;
			float num12 = 5f + num8 / 2f;
			if (flag)
			{
				num12 += 20f;
			}
			if (this.ai[0] >= 0f)
			{
				if (this.velocity.Length() > num8)
				{
					this.velocity *= 0.98f;
				}
				bool flag3 = false;
				bool flag4 = false;
				Vector2 vector3 = Main.player[this.owner].Center - base.Center;
				if (vector3.Length() > num7)
				{
					flag3 = true;
					if ((double)vector3.Length() > (double)num7 * 1.3)
					{
						flag4 = true;
					}
				}
				if (this.owner == Main.myPlayer)
				{
					if (!Main.player[this.owner].channel || Main.player[this.owner].stoned || Main.player[this.owner].frozen)
					{
						this.ai[0] = -1f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
					else
					{
						Vector2 vector4 = Main.ReverseGravitySupport(Main.MouseScreen, 0f) + Main.screenPosition;
						float x = vector4.X;
						float y = vector4.Y;
						Vector2 vector5 = new Vector2(x, y) - Main.player[this.owner].Center;
						if (vector5.Length() > num7)
						{
							vector5.Normalize();
							vector5 *= num7;
							vector5 = Main.player[this.owner].Center + vector5;
							x = vector5.X;
							y = vector5.Y;
						}
						if (this.ai[0] != x || this.ai[1] != y)
						{
							Vector2 value = new Vector2(x, y);
							Vector2 vector6 = value - Main.player[this.owner].Center;
							if (vector6.Length() > num7 - 1f)
							{
								vector6.Normalize();
								vector6 *= num7 - 1f;
								value = Main.player[this.owner].Center + vector6;
								x = value.X;
								y = value.Y;
							}
							this.ai[0] = x;
							this.ai[1] = y;
							this.netUpdate = true;
						}
					}
				}
				if (flag4 && this.owner == Main.myPlayer)
				{
					this.ai[0] = -1f;
					this.netUpdate = true;
				}
				if (this.ai[0] >= 0f)
				{
					if (flag3)
					{
						num11 /= 2f;
						num8 *= 2f;
						if (base.Center.X > Main.player[this.owner].Center.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (base.Center.Y > Main.player[this.owner].Center.Y && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.5f;
						}
						if (base.Center.X < Main.player[this.owner].Center.X && this.velocity.X > 0f)
						{
							this.velocity.X = this.velocity.X * 0.5f;
						}
						if (base.Center.Y < Main.player[this.owner].Center.Y && this.velocity.Y > 0f)
						{
							this.velocity.Y = this.velocity.Y * 0.5f;
						}
					}
					Vector2 value2 = new Vector2(this.ai[0], this.ai[1]);
					Vector2 vector7 = value2 - base.Center;
					this.velocity.Length();
					float num13 = vector7.Length();
					if (num13 > num12)
					{
						vector7.Normalize();
						float scaleFactor = (num13 > num8 * 2f) ? num8 : (num13 / 2f);
						vector7 *= scaleFactor;
						this.velocity = (this.velocity * (num11 - 1f) + vector7) / num11;
					}
					else if (flag)
					{
						if ((double)this.velocity.Length() < (double)num8 * 0.6)
						{
							vector7 = this.velocity;
							vector7.Normalize();
							vector7 *= num8 * 0.6f;
							this.velocity = (this.velocity * (num11 - 1f) + vector7) / num11;
						}
					}
					else
					{
						this.velocity *= 0.8f;
					}
					if (flag && !flag3 && (double)this.velocity.Length() < (double)num8 * 0.6)
					{
						this.velocity.Normalize();
						this.velocity *= num8 * 0.6f;
					}
				}
			}
			else
			{
				num11 = (float)((int)((double)num11 * 0.8));
				num8 *= 1.5f;
				this.tileCollide = false;
				Vector2 vector8 = Main.player[this.owner].position - base.Center;
				float num14 = vector8.Length();
				if (num14 < num8 + 10f || num14 == 0f)
				{
					this.Kill();
				}
				else
				{
					vector8.Normalize();
					vector8 *= num8;
					this.velocity = (this.velocity * (num11 - 1f) + vector8) / num11;
				}
			}
			this.rotation += 0.45f;
		}

		private void AI_130_FlameBurstTower()
		{
			float num = 900f;
			float angleRatioMax = 1f;
			Vector2 vector = base.Center;
			int num2 = 664;
			int num3 = 12;
			float num4 = 12f;
			int num5 = 1;
			int num6 = 6;
			int num7 = 4;
			int num8 = 80;
			switch (this.type)
			{
			case 663:
			{
				Lighting.AddLight(base.Center, new Vector3(0.4f, 0.2f, 0.1f));
				Lighting.AddLight(base.Bottom + new Vector2(0f, -10f), new Vector3(0.4f, 0.2f, 0.1f));
				vector = base.Bottom + new Vector2((float)(this.direction * 6), -40f);
				if ((this.localAI[0] += 1f) >= 300f)
				{
					this.localAI[0] = 0f;
				}
				Rectangle r = new Rectangle((int)this.position.X + this.width / 4, (int)this.position.Y + this.height - 16, this.width / 4 * 3, 6);
				if (this.direction == 1)
				{
					r.X -= this.width / 4;
				}
				for (int i = 0; i < 1; i++)
				{
					if (Main.rand.Next(2) == 0)
					{
						Dust dust = Dust.NewDustDirect(r.TopLeft() + new Vector2(-2f, -2f), r.Width + 4, r.Height + 4, 270, (float)(-(float)this.direction * 2), -2f, 200, new Color(255, 255, 255, 0), 1f);
						dust.fadeIn = 0.6f + Main.rand.NextFloat() * 0.6f;
						dust.scale = 0.4f;
						dust.noGravity = true;
						dust.noLight = true;
						dust.velocity = Vector2.Zero;
						dust.velocity.X = (float)(-(float)this.direction) * Main.rand.NextFloat() * dust.fadeIn;
					}
				}
				r = new Rectangle((int)base.Center.X, (int)base.Bottom.Y, this.width / 4, 10);
				if (this.direction == -1)
				{
					r.X -= r.Width;
				}
				r.X += this.direction * 4;
				r.Y -= this.height - 10;
				for (int j = 0; j < 1; j++)
				{
					if (Main.rand.Next(5) == 0)
					{
						Dust dust2 = Dust.NewDustDirect(r.TopLeft(), r.Width, r.Height, 6, 0f, 0f, 0, default(Color), 1f);
						dust2.fadeIn = 1f;
						dust2.scale = 1f;
						dust2.noGravity = true;
						dust2.noLight = true;
						dust2.velocity *= 2f;
					}
				}
				break;
			}
			case 665:
			{
				Lighting.AddLight(base.Center, new Vector3(0.4f, 0.2f, 0.1f) * 1.2f);
				Lighting.AddLight(base.Bottom + new Vector2(0f, -10f), new Vector3(0.4f, 0.2f, 0.1f) * 1.2f);
				num8 = 70;
				num4 += 3f;
				num6 = 8;
				num2 = 666;
				vector = base.Bottom + new Vector2((float)(this.direction * 6), -44f);
				if ((this.localAI[0] += 1f) >= 300f)
				{
					this.localAI[0] = 0f;
				}
				Rectangle r2 = new Rectangle((int)this.position.X + this.width / 4, (int)this.position.Y + this.height - 16, this.width / 4 * 2, 6);
				if (this.direction == 1)
				{
					r2.X -= this.width / 4;
				}
				for (int k = 0; k < 1; k++)
				{
					if (Main.rand.Next(2) == 0)
					{
						Dust dust3 = Dust.NewDustDirect(r2.TopLeft() + new Vector2(-2f, -2f), r2.Width + 4, r2.Height + 4, 270, (float)(-(float)this.direction * 2), -2f, 200, new Color(255, 255, 255, 0), 1f);
						dust3.fadeIn = 0.6f + Main.rand.NextFloat() * 0.6f;
						dust3.scale = 0.4f;
						dust3.noGravity = true;
						dust3.noLight = true;
						dust3.velocity = Vector2.Zero;
						dust3.velocity.X = (float)(-(float)this.direction) * Main.rand.NextFloat() * dust3.fadeIn;
					}
				}
				r2 = new Rectangle((int)base.Center.X, (int)base.Bottom.Y, this.width / 4, 10);
				if (this.direction == -1)
				{
					r2.X -= r2.Width;
				}
				r2.X += this.direction * 4;
				r2.Y -= this.height - 10;
				for (int l = 0; l < 2; l++)
				{
					if (Main.rand.Next(5) == 0)
					{
						Dust dust4 = Dust.NewDustDirect(r2.TopLeft(), r2.Width, r2.Height, 6, 0f, 0f, 0, default(Color), 1f);
						dust4.fadeIn = 1f;
						dust4.scale = 1f;
						dust4.noGravity = true;
						dust4.noLight = true;
						dust4.velocity *= 2f;
					}
				}
				break;
			}
			case 667:
			{
				Lighting.AddLight(base.Center, new Vector3(0.4f, 0.2f, 0.1f) * 1.5f);
				Lighting.AddLight(base.Bottom + new Vector2(0f, -10f), new Vector3(0.4f, 0.2f, 0.1f) * 1.5f);
				num8 = 60;
				num4 += 6f;
				num6 = 8;
				num2 = 668;
				vector = base.Bottom + new Vector2((float)(this.direction * 6), -46f);
				if ((this.localAI[0] += 1f) >= 300f)
				{
					this.localAI[0] = 0f;
				}
				Rectangle r3 = new Rectangle((int)this.position.X + this.width / 4, (int)this.position.Y + this.height - 16, this.width / 4 * 2, 6);
				if (this.direction == 1)
				{
					r3.X -= this.width / 4;
				}
				for (int m = 0; m < 1; m++)
				{
					if (Main.rand.Next(2) == 0)
					{
						Dust dust5 = Dust.NewDustDirect(r3.TopLeft() + new Vector2(-2f, -2f), r3.Width + 4, r3.Height + 4, 270, (float)(-(float)this.direction * 2), -2f, 200, new Color(255, 255, 255, 0), 1f);
						dust5.fadeIn = 0.6f + Main.rand.NextFloat() * 0.6f;
						dust5.scale = 0.4f;
						dust5.noGravity = true;
						dust5.noLight = true;
						dust5.velocity = Vector2.Zero;
						dust5.velocity.X = (float)(-(float)this.direction) * Main.rand.NextFloat() * dust5.fadeIn;
					}
				}
				r3 = new Rectangle((int)base.Center.X, (int)base.Bottom.Y, this.width / 4, 10);
				if (this.direction == -1)
				{
					r3.X -= r3.Width;
				}
				r3.X += this.direction * 4;
				r3.Y -= this.height - 10;
				for (int n = 0; n < 3; n++)
				{
					if (Main.rand.Next(5) == 0)
					{
						Dust dust6 = Dust.NewDustDirect(r3.TopLeft(), r3.Width, r3.Height, 6, 0f, 0f, 0, default(Color), 1f);
						dust6.fadeIn = 1.1f;
						dust6.scale = 1f;
						dust6.noGravity = true;
						dust6.noLight = true;
						dust6.velocity *= 2.4f;
					}
				}
				break;
			}
			}
			if (Main.player[this.owner].setApprenticeT2)
			{
				angleRatioMax = 0.1f;
				num *= 1.5f;
				num4 *= 1.4f;
			}
			if (this.ai[0] == 0f)
			{
				this.direction = (this.spriteDirection = Main.player[this.owner].direction);
				this.ai[0] = 1f;
				this.ai[1] = 0f;
				this.netUpdate = true;
			}
			if (this.ai[0] == 1f)
			{
				this.frame = 0;
				bool flag = false;
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
				}
				else
				{
					flag = true;
				}
				if (flag && this.owner == Main.myPlayer)
				{
					int num9 = this.AI_130_FlameBurstTower_FindTarget(num, angleRatioMax, vector, true);
					if (num9 != -1)
					{
						this.direction = Math.Sign(base.DirectionTo(Main.npc[num9].Center).X);
						this.ai[0] = 2f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
				}
			}
			else if (this.ai[0] == 2f)
			{
				this.frame = num5 + (int)(this.ai[1] / (float)num7);
				if (this.ai[1] == (float)num3)
				{
					Vector2 value = new Vector2((float)this.direction, 0f);
					int num10 = this.AI_130_FlameBurstTower_FindTarget(num, angleRatioMax, vector, false);
					if (num10 != -1)
					{
						value = (Main.npc[num10].Center - vector).SafeNormalize(Vector2.UnitX * (float)this.direction);
					}
					Vector2 velocity = value * num4;
					if (this.owner == Main.myPlayer)
					{
						Projectile.NewProjectile(vector, velocity, num2, this.damage, this.knockBack, this.owner, 0f, 0f);
					}
				}
				if ((this.ai[1] += 1f) >= (float)(num6 * num7))
				{
					this.ai[0] = 1f;
					this.ai[1] = (float)num8;
				}
			}
			this.spriteDirection = this.direction;
			this.tileCollide = true;
			this.velocity.Y = this.velocity.Y + 0.2f;
		}

		private int AI_130_FlameBurstTower_FindTarget(float shot_range, float angleRatioMax, Vector2 shootingSpot, bool canChangeDirection = true)
		{
			int num = -1;
			NPC ownerMinionAttackTargetNPC = this.OwnerMinionAttackTargetNPC;
			if (ownerMinionAttackTargetNPC != null && ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
			{
				for (int i = 0; i < 1; i++)
				{
					if (ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
					{
						float num2 = Vector2.Distance(shootingSpot, ownerMinionAttackTargetNPC.Center);
						if (num2 <= shot_range)
						{
							Vector2 vector = (ownerMinionAttackTargetNPC.Center - shootingSpot).SafeNormalize(Vector2.UnitY);
							if (Math.Abs(vector.X) >= Math.Abs(vector.Y) * angleRatioMax && (canChangeDirection || (float)this.direction * vector.X >= 0f) && (num == -1 || num2 < Vector2.Distance(shootingSpot, Main.npc[num].Center)) && Collision.CanHitLine(shootingSpot, 0, 0, ownerMinionAttackTargetNPC.Center, 0, 0))
							{
								num = ownerMinionAttackTargetNPC.whoAmI;
							}
						}
					}
				}
				if (num != -1)
				{
					return num;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				NPC nPC = Main.npc[j];
				if (nPC.CanBeChasedBy(this, false))
				{
					float num3 = Vector2.Distance(shootingSpot, nPC.Center);
					if (num3 <= shot_range)
					{
						Vector2 vector2 = (nPC.Center - shootingSpot).SafeNormalize(Vector2.UnitY);
						if (Math.Abs(vector2.X) >= Math.Abs(vector2.Y) * angleRatioMax && (canChangeDirection || (float)this.direction * vector2.X >= 0f) && (num == -1 || num3 < Vector2.Distance(shootingSpot, Main.npc[num].Center)) && Collision.CanHitLine(shootingSpot, 0, 0, nPC.Center, 0, 0))
						{
							num = j;
						}
					}
				}
			}
			return num;
		}

		private int AI_134_Ballista_FindTarget(float shot_range, float deadBottomAngle, Vector2 shootingSpot)
		{
			int num = -1;
			NPC ownerMinionAttackTargetNPC = this.OwnerMinionAttackTargetNPC;
			if (ownerMinionAttackTargetNPC != null && ownerMinionAttackTargetNPC.CanBeChasedBy(this, false))
			{
				for (int i = 0; i < 1; i++)
				{
					if (ownerMinionAttackTargetNPC.CanBeChasedBy(this, true))
					{
						float num2 = Vector2.Distance(shootingSpot, ownerMinionAttackTargetNPC.Center);
						if (num2 <= shot_range)
						{
							Vector2 vector = (ownerMinionAttackTargetNPC.Center - shootingSpot).SafeNormalize(Vector2.UnitY);
							if ((Math.Abs(vector.X) >= Math.Abs(vector.Y) * deadBottomAngle || vector.Y <= 0f) && (num == -1 || num2 < Vector2.Distance(shootingSpot, Main.npc[num].Center)) && Collision.CanHitLine(shootingSpot, 0, 0, ownerMinionAttackTargetNPC.Center, 0, 0))
							{
								num = ownerMinionAttackTargetNPC.whoAmI;
							}
						}
					}
				}
				if (num != -1)
				{
					return num;
				}
			}
			for (int j = 0; j < 200; j++)
			{
				NPC nPC = Main.npc[j];
				if (nPC.CanBeChasedBy(this, true))
				{
					float num3 = Vector2.Distance(shootingSpot, nPC.Center);
					if (num3 <= shot_range)
					{
						Vector2 vector2 = (nPC.Center - shootingSpot).SafeNormalize(Vector2.UnitY);
						if ((Math.Abs(vector2.X) >= Math.Abs(vector2.Y) * deadBottomAngle || vector2.Y <= 0f) && (num == -1 || num3 < Vector2.Distance(shootingSpot, Main.npc[num].Center)) && Collision.CanHitLine(shootingSpot, 0, 0, nPC.Center, 0, 0))
						{
							num = j;
						}
					}
				}
			}
			return num;
		}

		private void AI_131_FlameBurstShot()
		{
			if (this.type == 664 || this.type == 666 || this.type == 668)
			{
				if (this.localAI[0] == 0f)
				{
					this.localAI[0] = 1f;
					Main.PlayTrackedSound(SoundID.DD2_FlameburstTowerShot, base.Center);
				}
				if (this.alpha > 0)
				{
					this.alpha -= 25;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
				}
				int num = 1;
				if (this.type == 666)
				{
					num = 2;
				}
				if (this.type == 668)
				{
					num = 3;
				}
				for (int i = 0; i < num; i++)
				{
					if (Main.rand.Next(2) != 0)
					{
						Dust dust = Dust.NewDustDirect(this.position, this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, default(Color), 2f);
						dust.noGravity = true;
						dust.velocity *= 0.3f;
						if (Main.rand.Next(1) == 0)
						{
							Dust expr_131_cp_0 = dust;
							expr_131_cp_0.velocity.Y = expr_131_cp_0.velocity.Y + (float)Math.Sign(dust.velocity.Y) * 1.2f;
							dust.fadeIn += 0.5f;
						}
					}
				}
				this.rotation = this.velocity.ToRotation() + 1.57079637f;
			}
		}

		private void AI_134_Ballista()
		{
			float shot_range = 900f;
			float deadBottomAngle = 0.75f;
			Vector2 center = base.Center;
			int num = 680;
			float scaleFactor = 16f;
			int num2 = 1;
			int num3 = 5;
			int num4 = 5;
			int num5 = 180;
			if (Main.player[this.owner].setSquireT2)
			{
				scaleFactor = 21f;
			}
			if (Main.player[this.owner].setSquireT3)
			{
				num5 = 100;
			}
			if (Main.player[this.owner].ballistaPanic)
			{
				num5 = 60;
			}
			if (Main.player[this.owner].ballistaPanic && Main.player[this.owner].setSquireT3)
			{
				num5 = 30;
			}
			int num6 = num4;
			int num7 = this.type;
			if (num7 == 677)
			{
				center.Y -= 4f;
			}
			if (this.ai[0] == 0f)
			{
				this.direction = (this.spriteDirection = Main.player[this.owner].direction);
				this.ai[0] = 1f;
				this.ai[1] = 0f;
				this.netUpdate = true;
				if (this.direction == -1)
				{
					this.rotation = 3.14159274f;
				}
			}
			if (this.ai[0] == 1f)
			{
				this.frame = 0;
				bool flag = false;
				if (Main.player[this.owner].ballistaPanic && this.ai[1] > 60f)
				{
					this.ai[1] = 60f;
				}
				if (Main.player[this.owner].ballistaPanic && Main.player[this.owner].setSquireT3 && this.ai[1] > 30f)
				{
					this.ai[1] = 30f;
				}
				if (this.ai[1] > 0f)
				{
					this.ai[1] -= 1f;
				}
				else
				{
					flag = true;
				}
				int num8 = this.AI_134_Ballista_FindTarget(shot_range, deadBottomAngle, center);
				if (num8 != -1)
				{
					Vector2 v = (Main.npc[num8].Center - center).SafeNormalize(Vector2.UnitY);
					this.rotation = this.rotation.AngleLerp(v.ToRotation(), 0.08f);
					if (this.rotation > 1.57079637f || this.rotation < -1.57079637f)
					{
						this.direction = -1;
					}
					else
					{
						this.direction = 1;
					}
					if (flag && this.owner == Main.myPlayer)
					{
						this.direction = Math.Sign(v.X);
						this.ai[0] = 2f;
						this.ai[1] = 0f;
						this.netUpdate = true;
					}
				}
				else
				{
					float targetAngle = 0f;
					if (this.direction == -1)
					{
						targetAngle = 3.14159274f;
					}
					this.rotation = this.rotation.AngleLerp(targetAngle, 0.05f);
				}
			}
			else if (this.ai[0] == 2f)
			{
				this.frame = num2 + (int)(this.ai[1] / (float)num4);
				if (this.ai[1] == (float)num6)
				{
					Main.PlayTrackedSound(SoundID.DD2_BallistaTowerShot, base.Center);
					Vector2 vector = new Vector2((float)this.direction, 0f);
					int num9 = this.AI_134_Ballista_FindTarget(shot_range, deadBottomAngle, center);
					if (num9 != -1)
					{
						vector = (Main.npc[num9].Center - center).SafeNormalize(Vector2.UnitX * (float)this.direction);
					}
					this.rotation = vector.ToRotation();
					if (this.rotation > 1.57079637f || this.rotation < -1.57079637f)
					{
						this.direction = -1;
					}
					else
					{
						this.direction = 1;
					}
					Vector2 velocity = vector * scaleFactor;
					if (this.owner == Main.myPlayer)
					{
						Projectile.NewProjectile(center, velocity, num, this.damage, this.knockBack, this.owner, 0f, 0f);
					}
				}
				if ((this.ai[1] += 1f) >= (float)(num3 * num4))
				{
					this.ai[0] = 1f;
					this.ai[1] = (float)num5;
				}
			}
			this.spriteDirection = this.direction;
			this.tileCollide = true;
			this.velocity.Y = this.velocity.Y + 0.2f;
		}

		private void AI_135_OgreStomp()
		{
			this.ai[0] += 1f;
			if (this.ai[0] > 9f)
			{
				this.Kill();
				return;
			}
			this.velocity = Vector2.Zero;
			this.position = base.Center;
			base.Size = new Vector2(16f, 16f) * MathHelper.Lerp(5f, 40f, Utils.InverseLerp(0f, 9f, this.ai[0], false));
			base.Center = this.position;
			Point point = base.TopLeft.ToTileCoordinates();
			Point point2 = base.BottomRight.ToTileCoordinates();
			int num = point.X / 2 + point2.X / 2;
			int num2 = this.width / 2;
			if ((int)this.ai[0] % 3 == 0)
			{
				int num3 = (int)this.ai[0] / 3;
				for (int i = point.X; i <= point2.X; i++)
				{
					for (int j = point.Y; j <= point2.Y; j++)
					{
						if (Vector2.Distance(base.Center, new Vector2((float)(i * 16), (float)(j * 16))) <= (float)num2)
						{
							Tile tileSafely = Framing.GetTileSafely(i, j);
							if (tileSafely.active() && Main.tileSolid[(int)tileSafely.type] && !Main.tileSolidTop[(int)tileSafely.type] && !Main.tileFrameImportant[(int)tileSafely.type])
							{
								Tile tileSafely2 = Framing.GetTileSafely(i, j - 1);
								if (!tileSafely2.active() || !Main.tileSolid[(int)tileSafely2.type] || Main.tileSolidTop[(int)tileSafely2.type])
								{
									int num4 = WorldGen.KillTile_GetTileDustAmount(true, tileSafely);
									for (int k = 0; k < num4; k++)
									{
										Dust dust = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
										Dust expr_1D5_cp_0 = dust;
										expr_1D5_cp_0.velocity.Y = expr_1D5_cp_0.velocity.Y - (3f + (float)num3 * 1.5f);
										Dust expr_1F7_cp_0 = dust;
										expr_1F7_cp_0.velocity.Y = expr_1F7_cp_0.velocity.Y * Main.rand.NextFloat();
										dust.scale += (float)num3 * 0.03f;
									}
									if (num3 >= 2)
									{
										for (int l = 0; l < num4 - 1; l++)
										{
											Dust dust2 = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
											Dust expr_254_cp_0 = dust2;
											expr_254_cp_0.velocity.Y = expr_254_cp_0.velocity.Y - (1f + (float)num3);
											Dust expr_270_cp_0 = dust2;
											expr_270_cp_0.velocity.Y = expr_270_cp_0.velocity.Y * Main.rand.NextFloat();
										}
									}
									if (num4 > 0 && Main.rand.Next(3) != 0)
									{
										float num5 = (float)Math.Abs(num - i) / 20f;
										Gore gore = Gore.NewGoreDirect(this.position, Vector2.Zero, 61 + Main.rand.Next(3), 1f - (float)num3 * 0.15f + num5 * 0.5f);
										Gore expr_2FD_cp_0 = gore;
										expr_2FD_cp_0.velocity.Y = expr_2FD_cp_0.velocity.Y - (0.1f + (float)num3 * 0.5f + num5 * (float)num3 * 1f);
										Gore expr_32C_cp_0 = gore;
										expr_32C_cp_0.velocity.Y = expr_32C_cp_0.velocity.Y * Main.rand.NextFloat();
										gore.position = new Vector2((float)(i * 16 + 20), (float)(j * 16 + 20));
									}
								}
							}
						}
					}
				}
			}
		}

		private void AI_136_BetsyBreath()
		{
			if (this.ai[1] < 0f || this.ai[1] > 200f)
			{
				this.Kill();
				return;
			}
			NPC nPC = Main.npc[(int)this.ai[1]];
			float num = -8f;
			Vector2 center = nPC.Center + new Vector2((110f + num) * (float)nPC.spriteDirection, 30f).RotatedBy((double)nPC.rotation, default(Vector2));
			base.Center = center;
			this.rotation = nPC.DirectionTo(base.Center).ToRotation();
			DelegateMethods.v3_1 = new Vector3(1.2f, 1f, 0.3f);
			float num2 = this.ai[0] / 40f;
			if (num2 > 1f)
			{
				num2 = 1f;
			}
			float num3 = (this.ai[0] - 38f) / 40f;
			if (num3 < 0f)
			{
				num3 = 0f;
			}
			Utils.PlotTileLine(base.Center + this.rotation.ToRotationVector2() * 400f * num3, base.Center + this.rotation.ToRotationVector2() * 400f * num2, 16f, new Utils.PerLinePoint(DelegateMethods.CastLight));
			Utils.PlotTileLine(base.Center + this.rotation.ToRotationVector2().RotatedBy(0.19634954631328583, default(Vector2)) * 400f * num3, base.Center + this.rotation.ToRotationVector2().RotatedBy(0.19634954631328583, default(Vector2)) * 400f * num2, 16f, new Utils.PerLinePoint(DelegateMethods.CastLight));
			Utils.PlotTileLine(base.Center + this.rotation.ToRotationVector2().RotatedBy(-0.19634954631328583, default(Vector2)) * 400f * num3, base.Center + this.rotation.ToRotationVector2().RotatedBy(-0.19634954631328583, default(Vector2)) * 400f * num2, 16f, new Utils.PerLinePoint(DelegateMethods.CastLight));
			if (num3 == 0f && num2 > 0.1f)
			{
				for (int i = 0; i < 3; i++)
				{
					Dust dust = Dust.NewDustDirect(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					dust.fadeIn = 1.5f;
					dust.velocity = this.rotation.ToRotationVector2().RotatedBy((double)(Main.rand.NextFloatDirection() * 0.2617994f), default(Vector2)) * (0.5f + Main.rand.NextFloat() * 2.5f) * 15f;
					dust.velocity += nPC.velocity * 2f;
					dust.noLight = true;
					dust.noGravity = true;
					dust.alpha = 200;
				}
			}
			if (Main.rand.Next(5) == 0 && this.ai[0] >= 15f)
			{
				Vector2 vector = base.Center + this.rotation.ToRotationVector2() * 300f;
				vector -= Utils.RandomVector2(Main.rand, -20f, 20f);
				Gore gore = Gore.NewGoreDirect(vector, Vector2.Zero, 61 + Main.rand.Next(3), 0.5f);
				gore.velocity *= 0.3f;
				gore.velocity += this.rotation.ToRotationVector2() * 4f;
			}
			for (int j = 0; j < 1; j++)
			{
				Dust dust2 = Dust.NewDustDirect(this.position, this.width, this.height, 31, 0f, 0f, 0, default(Color), 1f);
				dust2.fadeIn = 1.5f;
				dust2.scale = 0.4f;
				dust2.velocity = this.rotation.ToRotationVector2().RotatedBy((double)(Main.rand.NextFloatDirection() * 0.2617994f), default(Vector2)) * (0.5f + Main.rand.NextFloat() * 2.5f) * 15f;
				dust2.velocity += nPC.velocity * 2f;
				dust2.velocity *= 0.3f;
				dust2.noLight = true;
				dust2.noGravity = true;
				float num4 = Main.rand.NextFloat();
				dust2.position = Vector2.Lerp(base.Center + this.rotation.ToRotationVector2() * 400f * num3, base.Center + this.rotation.ToRotationVector2() * 400f * num2, num4);
				dust2.position += this.rotation.ToRotationVector2().RotatedBy(1.5707963705062866, default(Vector2)) * (20f + 100f * (num4 - 0.5f));
			}
			this.frameCounter++;
			this.ai[0] += 1f;
			if (this.ai[0] >= 78f)
			{
				this.Kill();
			}
		}

		private void AI_137_LightningAura()
		{
			int num = 10;
			int num2 = 999;
			int num3 = 30;
			int num4 = 40;
			int num5 = 4;
			this.knockBack = 0f;
			if (Main.player[this.owner].setMonkT2)
			{
				num3 -= 5;
			}
			if (Main.player[this.owner].setMonkT3)
			{
				num = 14;
				num5 = 8;
			}
			this.ai[0] += 1f;
			if (this.ai[0] >= (float)num3)
			{
				this.ai[0] = 0f;
			}
			if (this.ai[0] == 0f)
			{
				bool flag = false;
				for (int i = 0; i < 200; i++)
				{
					NPC nPC = Main.npc[i];
					if (nPC.CanBeChasedBy(this, false) && nPC.Hitbox.Distance(base.Center) < (float)(this.width / 2) && this.Colliding(base.Hitbox, nPC.Hitbox))
					{
						flag = true;
						break;
					}
				}
				if (flag)
				{
					Main.PlayTrackedSound(SoundID.DD2_LightningAuraZap, base.Center);
				}
			}
			if (this.localAI[0] == 0f)
			{
				this.localAI[0] = 1f;
				this.velocity = Vector2.Zero;
				Point origin = base.Center.ToTileCoordinates();
				Point p;
				if (!WorldUtils.Find(origin, Searches.Chain(new Searches.Down(500), new GenCondition[]
				{
					new Conditions.IsSolid()
				}), out p))
				{
					this.position.Y = this.position.Y + 16f;
					return;
				}
				Point p2;
				if (!WorldUtils.Find(new Point(p.X, p.Y - 1), Searches.Chain(new Searches.Up(num), new GenCondition[]
				{
					new Conditions.IsSolid()
				}), out p2))
				{
					p2 = new Point(origin.X, origin.Y - num - 1);
				}
				Vector2 center = p.ToWorldCoordinates(8f, 0f);
				Vector2 vector = p2.ToWorldCoordinates(8f, 0f);
				base.Size = new Vector2(1f, center.Y - vector.Y);
				if (this.height > num * 16)
				{
					this.height = num * 16;
				}
				if (this.height < num5 * 16)
				{
					this.height = num5 * 16;
				}
				this.height *= 2;
				this.width = (int)((float)this.height * 1f);
				if (this.width > num2)
				{
					this.width = num2;
				}
				base.Center = center;
			}
			if (++this.frameCounter >= 8)
			{
				this.frameCounter = 0;
				if (++this.frame >= Main.projFrames[this.type])
				{
					this.frame = 0;
				}
			}
			DelegateMethods.v3_1 = new Vector3(0.2f, 0.7f, 1f);
			Utils.PlotTileLine(base.Center + Vector2.UnitX * -40f, base.Center + Vector2.UnitX * 40f, 80f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
			Vector2 value = new Vector2(base.Top.X, this.position.Y + (float)num4);
			for (int j = 0; j < 4; j++)
			{
				if (Main.rand.Next(6) == 0)
				{
					Vector2 value2 = Main.rand.NextVector2Unit(0f, 6.28318548f);
					if (Math.Abs(value2.X) >= 0.12f)
					{
						Vector2 vector2 = base.Center + value2 * new Vector2((float)((this.height - num4) / 2));
						if (!WorldGen.SolidTile((int)vector2.X / 16, (int)vector2.Y / 16) && this.AI_137_CanHit(vector2))
						{
							Dust dust = Dust.NewDustDirect(vector2, 0, 0, 226, 0f, 0f, 100, default(Color), 1f);
							dust.position = vector2;
							dust.velocity = (value - dust.position).SafeNormalize(Vector2.Zero);
							dust.scale = 0.7f;
							dust.fadeIn = 1f;
							dust.noGravity = true;
							dust.noLight = true;
						}
					}
				}
			}
			for (int k = 0; k < 0; k++)
			{
				if (Main.rand.Next(10) == 0)
				{
					Vector2 value3 = Main.rand.NextVector2Unit(0f, 6.28318548f);
					if (Math.Abs(value3.X) >= 0.12f)
					{
						Vector2 vector3 = base.Center + value3 * new Vector2((float)((this.height - num4) / 2)) * Main.rand.NextFloat();
						if (!WorldGen.SolidTile((int)vector3.X / 16, (int)vector3.Y / 16) && this.AI_137_CanHit(vector3))
						{
							Dust dust2 = Dust.NewDustDirect(vector3, 0, 0, 226, 0f, 0f, 100, default(Color), 1f);
							dust2.velocity *= 0.6f;
							dust2.velocity += Vector2.UnitY * -2f;
							dust2.noGravity = true;
							dust2.noLight = true;
						}
					}
				}
			}
			for (int l = 0; l < 4; l++)
			{
				if (Main.rand.Next(10) == 0)
				{
					Dust dust3 = Dust.NewDustDirect(value - new Vector2(8f, 0f), 16, this.height / 2 - 40, 226, 0f, 0f, 100, default(Color), 1f);
					dust3.velocity *= 0.6f;
					dust3.velocity += Vector2.UnitY * -2f;
					dust3.scale = 0.7f;
					dust3.noGravity = true;
					dust3.noLight = true;
				}
			}
			this.tileCollide = true;
			this.velocity.Y = this.velocity.Y + 0.2f;
		}

		private void AI_138_ExplosiveTrap()
		{
			this.spriteDirection = (this.direction = 1);
			int num = 110;
			int num2 = 694;
			int num3 = 48;
			if (Main.player[this.owner].setHuntressT2)
			{
				num = 74;
			}
			if (Main.player[this.owner].setHuntressT3)
			{
				num = 40;
			}
			switch (this.type)
			{
			case 692:
				num2 = 695;
				break;
			case 693:
				num2 = 696;
				break;
			}
			Lighting.AddLight(base.Center, 0.6f, 0.5f, 0.3f);
			if (++this.frameCounter >= 12)
			{
				this.frameCounter = 0;
				if (++this.frame >= Main.projFrames[this.type])
				{
					this.frame = 0;
				}
			}
			if (this.localAI[0] > 0f)
			{
				this.localAI[0] -= 1f;
			}
			if (this.localAI[0] <= 0f && this.owner == Main.myPlayer)
			{
				this.localAI[0] = 3f;
				bool flag = false;
				Rectangle rectangle = Utils.CenteredRectangle(base.Center + new Vector2(0f, (float)(-(float)num3)), new Vector2((float)(num3 * 2)));
				for (int i = 0; i < 200; i++)
				{
					NPC nPC = Main.npc[i];
					if (nPC.CanBeChasedBy(this, true) && rectangle.Intersects(nPC.Hitbox))
					{
						flag = true;
						break;
					}
				}
				if (flag)
				{
					Main.PlayTrackedSound(SoundID.DD2_ExplosiveTrapExplode);
					this.localAI[0] = (float)num;
					Projectile.NewProjectile(base.Center + new Vector2(0f, (float)(-(float)num3)), Vector2.Zero, num2, this.damage, this.knockBack, this.owner, 0f, 0f);
				}
			}
			this.tileCollide = true;
			this.velocity.Y = this.velocity.Y + 0.2f;
		}

		private void AI_139_ExplosiveTrapExplosion()
		{
			int num = Main.projFrames[this.type];
			int num2 = 3;
			this.alpha -= 25;
			if (this.alpha < 0)
			{
				this.alpha = 0;
			}
			if (this.localAI[0] == 0f)
			{
				this.localAI[0] = 1f;
			}
			if (++this.frameCounter >= num2)
			{
				this.frameCounter = 0;
				if (++this.frame >= num)
				{
					this.Kill();
					return;
				}
			}
			DelegateMethods.v3_1 = new Vector3(1.3f, 0.9f, 0.2f);
			Utils.PlotTileLine(base.Top, base.Bottom, 2f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
		}

		private void AI_140_MonkStaffT1()
		{
			float num = 50f;
			float num2 = 2f;
			float scaleFactor = 20f;
			Player player = Main.player[this.owner];
			float num3 = -0.7853982f;
			Vector2 value = player.RotatedRelativePoint(player.MountedCenter, true);
			Vector2 value2 = Vector2.Zero;
			if (player.dead)
			{
				this.Kill();
				return;
			}
			if (this.type == 697)
			{
				int num4 = this.damage * 2;
				int num5 = Math.Sign(this.velocity.X);
				this.velocity = new Vector2((float)num5, 0f);
				if (this.ai[0] == 0f)
				{
					this.rotation = new Vector2((float)num5, -player.gravDir).ToRotation() + num3 + 3.14159274f;
					if (this.velocity.X < 0f)
					{
						this.rotation -= 1.57079637f;
					}
				}
				this.alpha -= 128;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				float num6 = this.ai[0] / num;
				float num7 = 1f;
				this.ai[0] += num7;
				this.rotation += 6.28318548f * num2 / num * (float)num5;
				bool flag = this.ai[0] == (float)((int)(num / 2f));
				if (this.ai[0] >= num || (flag && !player.controlUseItem))
				{
					this.Kill();
					player.reuseDelay = 10;
				}
				else if (flag)
				{
					Vector2 mouseWorld = Main.MouseWorld;
					int num8 = (player.DirectionTo(mouseWorld).X > 0f) ? 1 : -1;
					if ((float)num8 != this.velocity.X)
					{
						player.ChangeDir(num8);
						this.velocity = new Vector2((float)num8, 0f);
						this.netUpdate = true;
						this.rotation -= 3.14159274f;
					}
				}
				float num9 = this.rotation - 0.7853982f * (float)num5;
				value2 = (num9 + ((num5 == -1) ? 3.14159274f : 0f)).ToRotationVector2() * (this.ai[0] / num) * scaleFactor;
				Vector2 vector = base.Center + (num9 + ((num5 == -1) ? 3.14159274f : 0f)).ToRotationVector2() * 30f;
				if (Main.rand.Next(2) == 0)
				{
					Dust dust = Dust.NewDustDirect(vector - new Vector2(5f), 10, 10, 31, player.velocity.X, player.velocity.Y, 150, default(Color), 1f);
					dust.velocity = base.DirectionTo(dust.position) * 0.1f + dust.velocity * 0.1f;
				}
				if (num6 >= 0.75f)
				{
					Dust dust2 = Dust.NewDustDirect(vector - new Vector2(5f), 10, 10, 55, player.velocity.X, player.velocity.Y, 50, default(Color), 1f);
					dust2.velocity = base.DirectionTo(dust2.position) * 0.1f + dust2.velocity * 0.1f;
					dust2.noGravity = true;
					dust2.color = new Color(20, 255, 100, 160);
				}
				if (this.ai[0] >= num - 8f && this.ai[0] < num - 2f)
				{
					for (int i = 0; i < 5; i++)
					{
						Dust dust3 = Dust.NewDustDirect(vector - new Vector2(5f), 10, 10, 55, player.velocity.X, player.velocity.Y, 50, default(Color), 1f);
						dust3.velocity *= 1.2f;
						dust3.noGravity = true;
						dust3.scale += 0.1f;
						dust3.color = new Color(20, 255, 100, 160);
					}
				}
				if (this.ai[0] == num - 3f && this.owner == Main.myPlayer)
				{
					Point point;
					if (this.localAI[1] == 1f || WorldUtils.Find(vector.ToTileCoordinates(), Searches.Chain(new Searches.Down(4), new GenCondition[]
					{
						new Conditions.IsSolid()
					}), out point))
					{
						Projectile.NewProjectile(vector + new Vector2((float)(num5 * 20), -60f), Vector2.Zero, 698, num4, 0f, this.owner, 0f, 0f);
						Main.PlayTrackedSound(SoundID.DD2_MonkStaffGroundImpact, base.Center);
					}
					else
					{
						Main.PlayTrackedSound(SoundID.DD2_MonkStaffGroundMiss, base.Center);
					}
				}
			}
			if (this.type == 707)
			{
				Lighting.AddLight(player.Center, 0.75f, 0.9f, 1.15f);
				int num10 = Math.Sign(this.velocity.X);
				this.velocity = new Vector2((float)num10, 0f);
				if (this.ai[0] == 0f)
				{
					this.rotation = new Vector2((float)num10, -player.gravDir).ToRotation() + num3 + 3.14159274f;
					if (this.velocity.X < 0f)
					{
						this.rotation -= 1.57079637f;
					}
				}
				this.alpha -= 128;
				if (this.alpha < 0)
				{
					this.alpha = 0;
				}
				float arg_5F4_0 = this.ai[0] / num;
				float num11 = 1f;
				this.ai[0] += num11;
				this.rotation += 6.28318548f * num2 / num * (float)num10;
				bool flag2 = this.ai[0] == (float)((int)(num / 2f));
				if (this.ai[0] >= num || (flag2 && !player.controlUseItem))
				{
					this.Kill();
					player.reuseDelay = 2;
				}
				else if (flag2)
				{
					Vector2 mouseWorld2 = Main.MouseWorld;
					int num12 = (player.DirectionTo(mouseWorld2).X > 0f) ? 1 : -1;
					if ((float)num12 != this.velocity.X)
					{
						player.ChangeDir(num12);
						this.velocity = new Vector2((float)num12, 0f);
						this.netUpdate = true;
						this.rotation -= 3.14159274f;
					}
				}
				if ((this.ai[0] == num11 || (this.ai[0] == (float)((int)(num / 2f)) && this.active)) && this.owner == Main.myPlayer)
				{
					Vector2 mouseWorld3 = Main.MouseWorld;
					Vector2 value3 = player.DirectionTo(mouseWorld3);
				}
				float num13 = this.rotation - 0.7853982f * (float)num10;
				value2 = (num13 + ((num10 == -1) ? 3.14159274f : 0f)).ToRotationVector2() * (this.ai[0] / num) * scaleFactor;
				Vector2 value4 = base.Center + (num13 + ((num10 == -1) ? 3.14159274f : 0f)).ToRotationVector2() * 30f;
				Vector2 vector2 = num13.ToRotationVector2();
				Vector2 value5 = vector2.RotatedBy((double)(1.57079637f * (float)this.spriteDirection), default(Vector2));
				if (Main.rand.Next(2) == 0)
				{
					Dust dust4 = Dust.NewDustDirect(value4 - new Vector2(5f), 10, 10, 31, player.velocity.X, player.velocity.Y, 150, default(Color), 1f);
					dust4.velocity = base.DirectionTo(dust4.position) * 0.1f + dust4.velocity * 0.1f;
				}
				for (int j = 0; j < 4; j++)
				{
					float scaleFactor2 = 1f;
					float scaleFactor3 = 1f;
					switch (j)
					{
					case 1:
						scaleFactor3 = -1f;
						break;
					case 2:
						scaleFactor3 = 1.25f;
						scaleFactor2 = 0.5f;
						break;
					case 3:
						scaleFactor3 = -1.25f;
						scaleFactor2 = 0.5f;
						break;
					}
					if (Main.rand.Next(6) != 0)
					{
						Dust dust5 = Dust.NewDustDirect(this.position, 0, 0, 226, 0f, 0f, 100, default(Color), 1f);
						dust5.position = base.Center + vector2 * (60f + Main.rand.NextFloat() * 20f) * scaleFactor3;
						dust5.velocity = value5 * (4f + 4f * Main.rand.NextFloat()) * scaleFactor3 * scaleFactor2;
						dust5.noGravity = true;
						dust5.noLight = true;
						dust5.scale = 0.5f;
						dust5.customData = this;
						if (Main.rand.Next(4) == 0)
						{
							dust5.noGravity = false;
						}
					}
				}
			}
			this.position = value - base.Size / 2f;
			this.position += value2;
			this.spriteDirection = this.direction;
			this.timeLeft = 2;
			player.ChangeDir(this.direction);
			player.heldProj = this.whoAmI;
			player.itemTime = 2;
			player.itemAnimation = 2;
			player.itemRotation = MathHelper.WrapAngle(this.rotation);
		}

		private void AI_141_MonkStaffT1Explosion()
		{
			Point point = base.TopLeft.ToTileCoordinates();
			Point point2 = base.BottomRight.ToTileCoordinates();
			int arg_21_0 = point.X / 2;
			int arg_2B_0 = point2.X / 2;
			int width = this.width;
			this.ai[0] += 1f;
			if (this.ai[0] > 20f)
			{
				this.Kill();
				return;
			}
			if (this.ai[0] == 1f)
			{
				bool flag = false;
				int num = 4;
				for (int i = point.X; i <= point2.X; i++)
				{
					for (int j = point.Y; j <= point2.Y; j++)
					{
						if (Vector2.Distance(base.Bottom, new Vector2((float)(i * 16), (float)(j * 16))) <= (float)width)
						{
							Tile tileSafely = Framing.GetTileSafely(i, j);
							if (tileSafely.active() && Main.tileSolid[(int)tileSafely.type] && !Main.tileSolidTop[(int)tileSafely.type] && !Main.tileFrameImportant[(int)tileSafely.type])
							{
								Tile tileSafely2 = Framing.GetTileSafely(i, j - 1);
								if (!tileSafely2.active() || !Main.tileSolid[(int)tileSafely2.type] || Main.tileSolidTop[(int)tileSafely2.type])
								{
									int num2 = WorldGen.KillTile_GetTileDustAmount(true, tileSafely) * 6;
									for (int k = 0; k < num2; k++)
									{
										Dust dust = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
										Dust expr_16B_cp_0 = dust;
										expr_16B_cp_0.velocity.Y = expr_16B_cp_0.velocity.Y - (3f + (float)num * 1.5f);
										Dust expr_18D_cp_0 = dust;
										expr_18D_cp_0.velocity.Y = expr_18D_cp_0.velocity.Y * Main.rand.NextFloat();
										dust.scale += (float)num * 0.03f;
									}
									if (num >= 2)
									{
										for (int l = 0; l < num2 - 1; l++)
										{
											Dust dust2 = Main.dust[WorldGen.KillTile_MakeTileDust(i, j, tileSafely)];
											Dust expr_1EA_cp_0 = dust2;
											expr_1EA_cp_0.velocity.Y = expr_1EA_cp_0.velocity.Y - (1f + (float)num);
											Dust expr_206_cp_0 = dust2;
											expr_206_cp_0.velocity.Y = expr_206_cp_0.velocity.Y * Main.rand.NextFloat();
										}
									}
									if (num2 > 0)
									{
										flag = true;
									}
								}
							}
						}
					}
				}
				Vector2 bottom = base.Bottom;
				Vector2 spinningpoint = new Vector2(7f, 0f);
				Vector2 value = new Vector2(1f, 0.7f);
				Color color = new Color(20, 255, 100, 200);
				for (float num3 = 0f; num3 < 25f; num3 += 1f)
				{
					Vector2 value2 = spinningpoint.RotatedBy((double)(num3 * 6.28318548f / 25f), default(Vector2)) * value;
					Dust dust3 = Dust.NewDustDirect(this.position, this.width, this.height, 55, 0f, 0f, 0, default(Color), 1f);
					dust3.alpha = 0;
					if (!flag)
					{
						dust3.alpha = 50;
					}
					dust3.color = color;
					dust3.position = bottom + value2;
					Dust expr_336_cp_0 = dust3;
					expr_336_cp_0.velocity.Y = expr_336_cp_0.velocity.Y - 3f;
					Dust expr_34E_cp_0 = dust3;
					expr_34E_cp_0.velocity.X = expr_34E_cp_0.velocity.X * 0.5f;
					dust3.fadeIn = 0.5f + Main.rand.NextFloat() * 0.5f;
					dust3.noLight = true;
				}
				if (!flag)
				{
					for (float num4 = 0f; num4 < 25f; num4 += 1f)
					{
						Vector2 value3 = spinningpoint.RotatedBy((double)(num4 * 6.28318548f / 25f), default(Vector2)) * value;
						Dust dust4 = Dust.NewDustDirect(this.position, this.width, this.height, 55, 0f, 0f, 0, default(Color), 1f);
						dust4.alpha = 100;
						dust4.color = color;
						dust4.position = bottom + value3;
						Dust expr_433_cp_0 = dust4;
						expr_433_cp_0.velocity.Y = expr_433_cp_0.velocity.Y - 5f;
						Dust expr_44B_cp_0 = dust4;
						expr_44B_cp_0.velocity.X = expr_44B_cp_0.velocity.X * 0.8f;
						dust4.fadeIn = 0.5f + Main.rand.NextFloat() * 0.5f;
						dust4.noLight = true;
					}
				}
			}
		}

		private void AI_142_MonkStaffT2And3()
		{
			Player player = Main.player[this.owner];
			Vector2 vector = player.RotatedRelativePoint(player.MountedCenter, true);
			this.direction = player.direction;
			player.heldProj = this.whoAmI;
			base.Center = vector;
			if (player.dead)
			{
				this.Kill();
				return;
			}
			if (!player.frozen)
			{
				if (this.type == 699)
				{
					this.spriteDirection = (this.direction = player.direction);
					this.alpha -= 127;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					if (this.localAI[0] > 0f)
					{
						this.localAI[0] -= 1f;
					}
					float num = (float)player.itemAnimation / (float)player.itemAnimationMax;
					float num2 = 1f - num;
					float num3 = this.velocity.ToRotation();
					float num4 = this.velocity.Length();
					float num5 = 22f;
					Vector2 value = new Vector2(1f, 0f).RotatedBy((double)(3.14159274f + num2 * 6.28318548f), default(Vector2));
					Vector2 spinningpoint = value * new Vector2(num4, this.ai[0]);
					this.position += spinningpoint.RotatedBy((double)num3, default(Vector2)) + new Vector2(num4 + num5, 0f).RotatedBy((double)num3, default(Vector2));
					Vector2 destination = vector + spinningpoint.RotatedBy((double)num3, default(Vector2)) + new Vector2(num4 + num5 + 40f, 0f).RotatedBy((double)num3, default(Vector2));
					this.rotation = player.AngleTo(destination) + 0.7853982f * (float)player.direction;
					if (this.spriteDirection == -1)
					{
						this.rotation += 3.14159274f;
					}
					player.DirectionTo(base.Center);
					Vector2 value2 = player.DirectionTo(destination);
					Vector2 vector2 = this.velocity.SafeNormalize(Vector2.UnitY);
					float num6 = 2f;
					int num7 = 0;
					while ((float)num7 < num6)
					{
						Dust dust = Dust.NewDustDirect(base.Center, 14, 14, 228, 0f, 0f, 110, default(Color), 1f);
						dust.velocity = player.DirectionTo(dust.position) * 2f;
						dust.position = base.Center + vector2.RotatedBy((double)(num2 * 6.28318548f * 2f + (float)num7 / num6 * 6.28318548f), default(Vector2)) * 10f;
						dust.scale = 1f + 0.6f * Main.rand.NextFloat();
						dust.velocity += vector2 * 3f;
						dust.noGravity = true;
						num7++;
					}
					for (int i = 0; i < 1; i++)
					{
						if (Main.rand.Next(3) == 0)
						{
							Dust dust2 = Dust.NewDustDirect(base.Center, 20, 20, 228, 0f, 0f, 110, default(Color), 1f);
							dust2.velocity = player.DirectionTo(dust2.position) * 2f;
							dust2.position = base.Center + value2 * -110f;
							dust2.scale = 0.45f + 0.4f * Main.rand.NextFloat();
							dust2.fadeIn = 0.7f + 0.4f * Main.rand.NextFloat();
							dust2.noGravity = true;
							dust2.noLight = true;
						}
					}
				}
				else if (this.type == 708)
				{
					Lighting.AddLight(player.Center, 0.75f, 0.9f, 1.15f);
					this.spriteDirection = (this.direction = player.direction);
					this.alpha -= 127;
					if (this.alpha < 0)
					{
						this.alpha = 0;
					}
					float num8 = (float)player.itemAnimation / (float)player.itemAnimationMax;
					float num9 = 1f - num8;
					float num10 = this.velocity.ToRotation();
					float num11 = this.velocity.Length();
					float num12 = 22f;
					Vector2 value3 = new Vector2(1f, 0f).RotatedBy((double)(3.14159274f + num9 * 6.28318548f), default(Vector2));
					Vector2 spinningpoint2 = value3 * new Vector2(num11, this.ai[0]);
					this.position += spinningpoint2.RotatedBy((double)num10, default(Vector2)) + new Vector2(num11 + num12, 0f).RotatedBy((double)num10, default(Vector2));
					Vector2 destination2 = vector + spinningpoint2.RotatedBy((double)num10, default(Vector2)) + new Vector2(num11 + num12 + 40f, 0f).RotatedBy((double)num10, default(Vector2));
					this.rotation = player.AngleTo(destination2) + 0.7853982f * (float)player.direction;
					if (this.spriteDirection == -1)
					{
						this.rotation += 3.14159274f;
					}
					player.DirectionTo(base.Center);
					player.DirectionTo(destination2);
					Vector2 vector3 = this.velocity.SafeNormalize(Vector2.UnitY);
					if ((player.itemAnimation == 2 || player.itemAnimation == 6 || player.itemAnimation == 10) && this.owner == Main.myPlayer)
					{
						Vector2 vector4 = vector3 + Main.rand.NextVector2Square(-0.2f, 0.2f);
						vector4 *= 12f;
						int itemAnimation = player.itemAnimation;
						if (itemAnimation != 2)
						{
							if (itemAnimation != 6)
							{
								if (itemAnimation == 10)
								{
									vector4 = vector3.RotatedBy(0.0, default(Vector2));
								}
							}
							else
							{
								vector4 = vector3.RotatedBy(-0.38397244612375897, default(Vector2));
							}
						}
						else
						{
							vector4 = vector3.RotatedBy(0.38397244612375897, default(Vector2));
						}
						vector4 *= 10f + (float)Main.rand.Next(4);
						Projectile.NewProjectile(base.Center, vector4, 709, this.damage, 0f, this.owner, 0f, 0f);
					}
					for (int j = 0; j < 3; j += 2)
					{
						float scaleFactor = 1f;
						float num13 = 1f;
						switch (j)
						{
						case 1:
							num13 = -1f;
							break;
						case 2:
							num13 = 1.25f;
							scaleFactor = 0.5f;
							break;
						case 3:
							num13 = -1.25f;
							scaleFactor = 0.5f;
							break;
						}
						if (Main.rand.Next(6) != 0)
						{
							num13 *= 1.2f;
							Dust dust3 = Dust.NewDustDirect(this.position, this.width, this.height, 226, 0f, 0f, 100, default(Color), 1f);
							dust3.velocity = vector3 * (4f + 4f * Main.rand.NextFloat()) * num13 * scaleFactor;
							dust3.noGravity = true;
							dust3.noLight = true;
							dust3.scale = 0.75f;
							dust3.fadeIn = 0.8f;
							dust3.customData = this;
							if (Main.rand.Next(3) == 0)
							{
								dust3.noGravity = false;
								dust3.fadeIn = 0f;
							}
						}
					}
				}
			}
			if (player.itemAnimation == 2)
			{
				this.Kill();
				player.reuseDelay = 2;
			}
		}

		private void AI_143_MonkStaffT2Ghast()
		{
			if (this.ai[0] == 0f)
			{
				this.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_GhastlyGlaiveImpactGhost, base.Center).ToFloat();
			}
			ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[1]));
			if (activeSound == null)
			{
				this.localAI[1] = SlotId.Invalid.ToFloat();
			}
			else
			{
				activeSound.Position = base.Center;
			}
			this.ai[0] += 1f;
			if (this.ai[0] > 50f)
			{
				this.alpha += 25;
				if (this.alpha > 255)
				{
					this.alpha = 255;
				}
			}
			else
			{
				this.alpha -= 25;
				if (this.alpha < 100)
				{
					this.alpha = 100;
				}
			}
			this.velocity *= 0.98f;
			if (++this.frameCounter >= 5)
			{
				this.frameCounter = 0;
				if (++this.frame >= 4)
				{
					this.frame = 0;
				}
			}
			if (this.ai[0] >= 60f)
			{
				this.Kill();
			}
			this.direction = (this.spriteDirection = ((this.velocity.X > 0f) ? 1 : -1));
			this.rotation = this.velocity.ToRotation();
			if (this.spriteDirection == -1)
			{
				this.rotation += 3.14159274f;
			}
			if (this.ai[0] >= 10f && this.ai[0] < 34f)
			{
				Vector2 vector = this.velocity.SafeNormalize(Vector2.UnitY);
				float num = this.ai[0] / 60f;
				float num2 = 2f;
				int num3 = 0;
				while ((float)num3 < num2)
				{
					Dust dust = Dust.NewDustDirect(base.Center, 14, 14, 228, 0f, 0f, 110, default(Color), 1f);
					dust.velocity = vector * 2f;
					dust.position = base.Center + vector.RotatedBy((double)(num * 6.28318548f * 2f + (float)num3 / num2 * 6.28318548f), default(Vector2)) * 7f;
					dust.scale = 1f + 0.6f * Main.rand.NextFloat();
					dust.velocity += vector * 3f;
					dust.noGravity = true;
					num3++;
				}
			}
		}

		private void AI_144_DD2Pet()
		{
			Player player = Main.player[this.owner];
			float num = 4f;
			int num2 = 6;
			int num3 = 4;
			int num4 = Main.projFrames[this.type];
			int num5 = 0;
			Vector2 value = new Vector2((float)(player.direction * 30), -20f);
			if (player.dead)
			{
				this.Kill();
				return;
			}
			bool flag = true;
			switch (this.type)
			{
			case 701:
				if (Main.myPlayer == this.owner && player.petFlagDD2Dragon)
				{
					this.timeLeft = 2;
				}
				break;
			case 702:
			{
				if (Main.myPlayer == this.owner && player.petFlagDD2Ghost)
				{
					this.timeLeft = 2;
				}
				value.Y += (float)Math.Cos((double)(this.localAI[0] * 0.05235988f)) * 2f;
				num3 = 4;
				num2 = 10;
				flag = false;
				num = 6f;
				Vector2 value2 = new Vector2((float)((this.spriteDirection == -1) ? -6 : -2), -20f).RotatedBy((double)this.rotation, default(Vector2));
				if (Main.rand.Next(24) == 0)
				{
					Dust dust = Dust.NewDustDirect(base.Center + value2, 4, 4, 135, 0f, 0f, 100, default(Color), 1f);
					if (Main.rand.Next(3) != 0)
					{
						dust.noGravity = true;
						Dust expr_15E_cp_0 = dust;
						expr_15E_cp_0.velocity.Y = expr_15E_cp_0.velocity.Y - 3f;
						dust.noLight = true;
					}
					else if (Main.rand.Next(2) != 0)
					{
						dust.noLight = true;
					}
					dust.velocity *= 0.5f;
					Dust expr_1AC_cp_0 = dust;
					expr_1AC_cp_0.velocity.Y = expr_1AC_cp_0.velocity.Y - 0.9f;
					dust.scale += 0.1f + Main.rand.NextFloat() * 0.6f;
				}
				Vector3 v3_ = new Vector3(0.3f, 0.5f, 1f);
				DelegateMethods.v3_1 = v3_;
				Utils.PlotTileLine(base.Center, base.Center + this.velocity * 6f, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				Utils.PlotTileLine(base.Left, base.Right, 20f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				Utils.PlotTileLine(player.Center, player.Center + player.velocity * 6f, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				Utils.PlotTileLine(player.Left, player.Right, 40f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
				break;
			}
			case 703:
				if (Main.myPlayer == this.owner && player.petFlagDD2Gato)
				{
					this.timeLeft = 2;
				}
				value.Y += (float)Math.Cos((double)(this.localAI[0] * 0.104719758f)) * 2f;
				num2 = 4;
				num3 = 2;
				num = 3f;
				num4 = 4;
				break;
			}
			if (flag && (player.suspiciouslookingTentacle || player.petFlagDD2Ghost))
			{
				value.X += (float)(-(float)player.direction * 64);
			}
			this.direction = (this.spriteDirection = player.direction);
			Vector2 vector = player.MountedCenter + value;
			float num6 = Vector2.Distance(base.Center, vector);
			if (num6 > 1000f)
			{
				base.Center = player.Center + value;
			}
			Vector2 vector2 = vector - base.Center;
			if (num6 < num)
			{
				this.velocity *= 0.25f;
			}
			if (vector2 != Vector2.Zero)
			{
				if (vector2.Length() < num * 0.5f)
				{
					this.velocity = vector2;
				}
				else
				{
					this.velocity = vector2 * 0.1f;
				}
			}
			if (this.velocity.Length() > 6f)
			{
				float num7 = this.velocity.X * 0.08f + this.velocity.Y * (float)this.spriteDirection * 0.02f;
				if (Math.Abs(this.rotation - num7) >= 3.14159274f)
				{
					if (num7 < this.rotation)
					{
						this.rotation -= 6.28318548f;
					}
					else
					{
						this.rotation += 6.28318548f;
					}
				}
				float num8 = 12f;
				this.rotation = (this.rotation * (num8 - 1f) + num7) / num8;
				if (++this.frameCounter >= num3)
				{
					this.frameCounter = 0;
					if (++this.frame >= num4)
					{
						this.frame = num5;
					}
				}
			}
			else
			{
				if (this.rotation > 3.14159274f)
				{
					this.rotation -= 6.28318548f;
				}
				if (this.rotation > -0.005f && this.rotation < 0.005f)
				{
					this.rotation = 0f;
				}
				else
				{
					this.rotation *= 0.96f;
				}
				if (++this.frameCounter >= num2)
				{
					this.frameCounter = 0;
					if (++this.frame >= num4)
					{
						this.frame = num5;
					}
				}
			}
			this.localAI[0] += 1f;
			if (this.localAI[0] > 120f)
			{
				this.localAI[0] = 0f;
			}
		}

		private void AI_145_BookStaffStorm()
		{
			float num = 300f;
			if (this.soundDelay == 0)
			{
				this.soundDelay = -1;
				this.localAI[1] = Main.PlayTrackedSound(SoundID.DD2_BookStaffTwisterLoop, base.Center).ToFloat();
			}
			ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[1]));
			if (activeSound != null)
			{
				activeSound.Position = base.Center;
				activeSound.Volume = 1f - Math.Max(this.ai[0] - (num - 15f), 0f) / 15f;
			}
			else
			{
				this.localAI[1] = SlotId.Invalid.ToFloat();
			}
			if (this.localAI[0] >= 16f && this.ai[0] < num - 15f)
			{
				this.ai[0] = num - 15f;
			}
			this.ai[0] += 1f;
			if (this.ai[0] >= num)
			{
				this.Kill();
			}
			Vector2 top = base.Top;
			Vector2 bottom = base.Bottom;
			Vector2 value = Vector2.Lerp(top, bottom, 0.5f);
			Vector2 value2 = new Vector2(0f, bottom.Y - top.Y);
			value2.X = value2.Y * 0.2f;
			int num2 = 16;
			int num3 = 160;
			for (int i = 0; i < 1; i++)
			{
				Vector2 position = new Vector2(base.Center.X - (float)(num2 / 2), this.position.Y + (float)this.height - (float)num3);
				if (Collision.SolidCollision(position, num2, num3) || Collision.WetCollision(position, num2, num3))
				{
					if (this.velocity.Y > 0f)
					{
						this.velocity.Y = 0f;
					}
					if (this.velocity.Y > -4f)
					{
						this.velocity.Y = this.velocity.Y - 2f;
					}
					else
					{
						this.velocity.Y = this.velocity.Y - 4f;
						this.localAI[0] += 2f;
					}
					if (this.velocity.Y < -16f)
					{
						this.velocity.Y = -16f;
					}
				}
				else
				{
					this.localAI[0] -= 1f;
					if (this.localAI[0] < 0f)
					{
						this.localAI[0] = 0f;
					}
					if (this.velocity.Y < 0f)
					{
						this.velocity.Y = 0f;
					}
					if (this.velocity.Y < 4f)
					{
						this.velocity.Y = this.velocity.Y + 2f;
					}
					else
					{
						this.velocity.Y = this.velocity.Y + 4f;
					}
					if (this.velocity.Y > 16f)
					{
						this.velocity.Y = 16f;
					}
				}
			}
			if (this.ai[0] < num - 30f)
			{
				for (int j = 0; j < 1; j++)
				{
					float value3 = -1f;
					float value4 = 0.9f;
					float amount = Main.rand.NextFloat();
					Vector2 value5 = new Vector2(MathHelper.Lerp(0.1f, 1f, Main.rand.NextFloat()), MathHelper.Lerp(value3, value4, amount));
					value5.X *= MathHelper.Lerp(2.2f, 0.6f, amount);
					value5.X *= -1f;
					Vector2 value6 = new Vector2(6f, 10f);
					Vector2 position2 = value + value2 * value5 * 0.5f + value6;
					Dust dust = Main.dust[Dust.NewDust(position2, 0, 0, 274, 0f, 0f, 0, default(Color), 1f)];
					dust.position = position2;
					dust.fadeIn = 1.3f;
					dust.scale = 0.87f;
					dust.alpha = 211;
					if (value5.X > -1.2f)
					{
						dust.velocity.X = 1f + Main.rand.NextFloat();
					}
					dust.noGravity = true;
					dust.velocity.Y = Main.rand.NextFloat() * -0.5f - 1.3f;
					Dust expr_49A_cp_0 = dust;
					expr_49A_cp_0.velocity.X = expr_49A_cp_0.velocity.X + this.velocity.X * 2.1f;
					dust.noLight = true;
				}
			}
			Vector2 position3 = base.Bottom + new Vector2(-25f, -25f);
			for (int k = 0; k < 4; k++)
			{
				Dust dust2 = Dust.NewDustDirect(position3, 50, 25, 31, this.velocity.X, -2f, 100, default(Color), 1f);
				dust2.fadeIn = 1.1f;
				dust2.noGravity = true;
			}
			for (int l = 0; l < 1; l++)
			{
				if (Main.rand.Next(5) == 0)
				{
					Gore gore = Gore.NewGoreDirect(base.TopLeft + Main.rand.NextVector2Square(0f, 1f) * base.Size, new Vector2(this.velocity.X * 1.5f, -Main.rand.NextFloat() * 16f), Utils.SelectRandom<int>(Main.rand, new int[]
					{
						1007,
						1008,
						1008
					}), 1f);
					gore.timeLeft = 60;
					gore.alpha = 50;
					Gore expr_5FA_cp_0 = gore;
					expr_5FA_cp_0.velocity.X = expr_5FA_cp_0.velocity.X + this.velocity.X;
				}
			}
			for (int m = 0; m < 1; m++)
			{
				if (Main.rand.Next(7) == 0)
				{
					Gore gore2 = Gore.NewGoreDirect(base.TopLeft + Main.rand.NextVector2Square(0f, 1f) * base.Size, new Vector2(this.velocity.X * 1.5f, -Main.rand.NextFloat() * 16f), Utils.SelectRandom<int>(Main.rand, new int[]
					{
						1007,
						1008,
						1008
					}), 1f);
					gore2.timeLeft = 0;
					gore2.alpha = 80;
				}
			}
			for (int n = 0; n < 1; n++)
			{
				if (Main.rand.Next(7) == 0)
				{
					Gore gore3 = Gore.NewGoreDirect(base.TopLeft + Main.rand.NextVector2Square(0f, 1f) * base.Size, new Vector2(this.velocity.X * 1.5f, -Main.rand.NextFloat() * 16f), Utils.SelectRandom<int>(Main.rand, new int[]
					{
						1007,
						1008,
						1008
					}), 1f);
					gore3.timeLeft = 0;
					gore3.alpha = 80;
				}
			}
		}

		public bool AI_137_CanHit(Vector2 targetPosition)
		{
			if (WorldGen.SolidTile((int)targetPosition.X / 16, (int)targetPosition.Y / 16))
			{
				return false;
			}
			Vector2 vector = base.Top + Vector2.UnitY * 20f;
			bool flag = Collision.CanHitLine(vector, 0, 0, targetPosition, 0, 0);
			if (!flag)
			{
				Vector2 v = targetPosition - vector;
				Vector2 spinningpoint = v.SafeNormalize(Vector2.UnitY);
				Vector2 value = Vector2.Lerp(vector, targetPosition, 0.5f);
				Vector2 vector2 = value + spinningpoint.RotatedBy(1.5707963705062866, default(Vector2)) * v.Length() * 0.2f;
				if (Collision.CanHitLine(vector, 0, 0, vector2, 0, 0) && Collision.CanHitLine(vector2, 0, 0, targetPosition, 0, 0))
				{
					flag = true;
				}
				if (!flag)
				{
					Vector2 vector3 = value + spinningpoint.RotatedBy(-1.5707963705062866, default(Vector2)) * v.Length() * 0.2f;
					if (Collision.CanHitLine(vector, 0, 0, vector3, 0, 0) && Collision.CanHitLine(vector3, 0, 0, targetPosition, 0, 0))
					{
						flag = true;
					}
				}
			}
			return flag;
		}

		public void Kill()
		{
			if (!this.active)
			{
				return;
			}
			Main.projectileIdentity[this.owner, this.identity] = -1;
			int num = this.timeLeft;
			this.timeLeft = 0;
			if (this.type == 686)
			{
				Main.PlayTrackedSound(SoundID.DD2_BetsyFireballImpact, base.Center);
			}
			else if (this.type == 711)
			{
				Main.PlayTrackedSound(SoundID.DD2_BetsysWrathImpact, base.Center);
			}
			else if (this.type == 704)
			{
				ActiveSound activeSound = Main.GetActiveSound(SlotId.FromFloat(this.localAI[1]));
				if (activeSound != null)
				{
					activeSound.Volume = 0f;
					activeSound.Stop();
				}
			}
			if (this.type == 710)
			{
				this.ai[1] = -1f;
				this.position = base.Center;
				this.width = (this.height = 40);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int i = 0; i < 2; i++)
				{
					int num2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num2].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int j = 0; j < 10; j++)
				{
					int num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num3].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num3].noGravity = true;
					Main.dust[num3].velocity *= 2f;
				}
				for (int k = 0; k < 5; k++)
				{
					int num4 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num4].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num4].noGravity = true;
					Main.dust[num4].velocity *= 2f;
				}
			}
			else if (this.type == 711)
			{
				Rectangle hitbox = base.Hitbox;
				for (int l = 0; l < this.oldPos.Length / 2; l += 2)
				{
					hitbox.X = (int)this.oldPos[l].X;
					hitbox.Y = (int)this.oldPos[l].Y;
					for (int m = 0; m < 2; m++)
					{
						int num5 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							55,
							158
						});
						int num6 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num5, (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num6].alpha = 200;
						Main.dust[num6].velocity *= 2.4f;
						Main.dust[num6].scale += Main.rand.NextFloat();
						Main.dust[num6].scale -= 0.5f;
						if (Main.dust[num6].type == 55)
						{
							Main.dust[num6].color = Color.Lerp(new Color(128, 0, 180, 128), Color.Gold, Main.rand.NextFloat());
						}
						Main.dust[num6].noLight = true;
					}
				}
				for (int n = 10; n < this.oldPos.Length; n += 2)
				{
					hitbox.X = (int)this.oldPos[n].X;
					hitbox.Y = (int)this.oldPos[n].Y;
					for (int num7 = 0; num7 < 2; num7++)
					{
						if (Main.rand.Next(3) != 0)
						{
							int num8 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								55
							});
							int num9 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num8, (float)this.direction, -2.5f, 0, default(Color), 1f);
							Main.dust[num9].alpha = 120;
							Main.dust[num9].velocity *= 2.4f;
							Main.dust[num9].scale += Main.rand.NextFloat() * 0.7f;
							Main.dust[num9].scale -= 0.5f;
							if (Main.dust[num9].type == 55)
							{
								Main.dust[num9].color = Color.Lerp(Color.Purple, Color.Black, Main.rand.NextFloat());
							}
							Main.dust[num9].noLight = true;
						}
					}
				}
				for (int num10 = 5; num10 < this.oldPos.Length; num10++)
				{
					hitbox.X = (int)this.oldPos[num10].X;
					hitbox.Y = (int)this.oldPos[num10].Y;
					for (int num11 = 0; num11 < 1; num11++)
					{
						if (Main.rand.Next(3) != 0)
						{
							int num12 = Utils.SelectRandom<int>(Main.rand, new int[]
							{
								55
							});
							int num13 = Dust.NewDust(hitbox.TopLeft(), this.width, this.height, num12, (float)this.direction, -2.5f, 0, default(Color), 1f);
							Main.dust[num13].alpha = 80;
							Main.dust[num13].velocity *= 0.3f;
							Main.dust[num13].velocity += this.velocity * 0.5f;
							Main.dust[num13].scale += Main.rand.NextFloat() * 0.7f;
							Main.dust[num13].scale -= 0.5f;
							if (Main.dust[num13].type == 55)
							{
								Main.dust[num13].color = Color.Lerp(Color.Purple, Color.Black, Main.rand.NextFloat());
							}
							Main.dust[num13].noLight = true;
						}
					}
				}
				for (int num14 = 0; num14 < 20; num14++)
				{
					if (Main.rand.Next(3) != 0)
					{
						int num15 = 228;
						Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, num15, 0f, 0f, 0, default(Color), 1f)];
						dust.noGravity = true;
						dust.scale = 1.25f + Main.rand.NextFloat();
						dust.fadeIn = 1.5f;
						dust.velocity *= 6f;
						dust.noLight = true;
					}
				}
				for (int num16 = 0; num16 < 20; num16++)
				{
					if (Main.rand.Next(3) != 0)
					{
						int num17 = 55;
						Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num17, 0f, 0f, 0, default(Color), 1f)];
						dust2.noGravity = true;
						dust2.scale = 1.25f + Main.rand.NextFloat();
						dust2.fadeIn = 1.5f;
						dust2.velocity *= 6f;
						dust2.noLight = true;
						dust2.color = new Color(0, 0, 220, 128);
					}
				}
				if (this.owner == Main.myPlayer)
				{
					this.position = base.Center;
					base.Size = new Vector2(140f);
					base.Center = this.position;
					this.penetrate = -1;
					this.usesLocalNPCImmunity = true;
					this.localNPCHitCooldown = -1;
					this.Damage();
				}
			}
			else if (this.type == 662 || this.type == 685)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 value = this.oldVelocity.SafeNormalize(Vector2.Zero);
				Vector2 vector = this.position + value * 16f;
				for (int num18 = 0; num18 < 16; num18++)
				{
					if (Main.rand.Next(2) == 0)
					{
						vector -= value * 8f;
					}
					else
					{
						Dust dust3 = Dust.NewDustDirect(vector, this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
						dust3.position = (dust3.position + base.Center) / 2f;
						dust3.velocity += this.oldVelocity * 0.4f;
						dust3.velocity *= 0.5f;
						dust3.noGravity = true;
						vector -= value * 8f;
					}
				}
			}
			if (this.type == 680)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 value2 = this.oldVelocity.SafeNormalize(Vector2.Zero);
				Vector2 vector2 = this.position + value2 * 16f;
				for (int num19 = 0; num19 < 16; num19++)
				{
					if (Main.rand.Next(2) == 0)
					{
						vector2 -= value2 * 8f;
					}
					else
					{
						Dust dust4 = Dust.NewDustDirect(vector2, this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
						dust4.position = (dust4.position + base.Center) / 2f;
						dust4.velocity += this.oldVelocity * 0.4f;
						dust4.velocity *= 0.5f;
						dust4.noGravity = true;
						vector2 -= value2 * 8f;
					}
				}
				Dust.NewDustDirect(this.position, this.width, this.height, 11, 0f, 0f, 0, Color.Red, 1.6f).noGravity = true;
			}
			if (this.type == 664 || this.type == 666 || this.type == 668 || this.type == 706)
			{
				int num20 = 4;
				int num21 = 20;
				int num22 = 10;
				int num23 = 20;
				int num24 = 20;
				int num25 = 4;
				float num26 = 1.5f;
				int num27 = 6;
				int num28 = 6;
				if (Main.player[this.owner].setApprenticeT3)
				{
					num20 += 4;
					num24 += 10;
					num21 += 20;
					num23 += 30;
					num22 /= 2;
					num25 += 4;
					num26 += 0.5f;
					num27 += 7;
					num28 = 270;
				}
				this.position = base.Center;
				this.width = (this.height = 16 * num27);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(SoundID.Item100, this.position);
				for (int num29 = 0; num29 < num20; num29++)
				{
					int num30 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num30].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num31 = 0; num31 < num21; num31++)
				{
					Dust dust5 = Dust.NewDustDirect(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 2.5f);
					dust5.position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 10f;
					dust5.velocity *= 16f;
					if (dust5.velocity.Y > -2f)
					{
						Dust expr_FA2_cp_0 = dust5;
						expr_FA2_cp_0.velocity.Y = expr_FA2_cp_0.velocity.Y * -0.4f;
					}
					dust5.noLight = true;
					dust5.noGravity = true;
				}
				for (int num32 = 0; num32 < num23; num32++)
				{
					Dust dust6 = Dust.NewDustDirect(new Vector2(this.position.X, this.position.Y), this.width, this.height, num28, 0f, 0f, 100, default(Color), 1.5f);
					dust6.position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					dust6.velocity *= 2f;
					dust6.noGravity = true;
					dust6.fadeIn = num26;
				}
				for (int num33 = 0; num33 < num22; num33++)
				{
					int num34 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num34].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num34].noGravity = true;
					Main.dust[num34].velocity *= 3f;
				}
				for (int num35 = 0; num35 < num24; num35++)
				{
					int num36 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num36].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num36].noGravity = true;
					Main.dust[num36].velocity *= 3f;
				}
				for (int num37 = 0; num37 < num25; num37++)
				{
					int num38 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num38].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num38].position -= Vector2.One * 16f;
					if (Main.rand.Next(2) == 0)
					{
						Gore expr_13A4_cp_0 = Main.gore[num38];
						expr_13A4_cp_0.position.Y = expr_13A4_cp_0.position.Y - 30f;
					}
					Main.gore[num38].velocity *= 0.3f;
					Gore expr_13DF_cp_0 = Main.gore[num38];
					expr_13DF_cp_0.velocity.X = expr_13DF_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_140D_cp_0 = Main.gore[num38];
					expr_140D_cp_0.velocity.Y = expr_140D_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			else if (this.type == 681)
			{
				this.position.X = this.position.X + (float)(this.width / 2);
				this.position.Y = this.position.Y + (float)(this.height / 2);
				Main.PlaySound(SoundID.DD2_GoblinBomb, this.position);
				this.width = 22;
				this.height = 22;
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num39 = 0; num39 < 10; num39++)
				{
					int num40 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num40].velocity *= 1.4f;
					num40 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num40].velocity *= 1.4f;
					Main.dust[num40].noGravity = true;
					Main.dust[num40].fadeIn = 2f;
				}
				for (int num41 = 0; num41 < 10; num41++)
				{
					int num42 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num42].noGravity = true;
					Main.dust[num42].velocity *= 5f;
					num42 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num42].velocity *= 3f;
				}
				int num43 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num43].velocity *= 0.4f;
				Gore expr_1755_cp_0 = Main.gore[num43];
				expr_1755_cp_0.velocity.X = expr_1755_cp_0.velocity.X + 1f;
				Gore expr_1773_cp_0 = Main.gore[num43];
				expr_1773_cp_0.velocity.Y = expr_1773_cp_0.velocity.Y + 1f;
				num43 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num43].velocity *= 0.4f;
				Gore expr_17F1_cp_0 = Main.gore[num43];
				expr_17F1_cp_0.velocity.X = expr_17F1_cp_0.velocity.X - 1f;
				Gore expr_180F_cp_0 = Main.gore[num43];
				expr_180F_cp_0.velocity.Y = expr_180F_cp_0.velocity.Y + 1f;
				num43 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num43].velocity *= 0.4f;
				Gore expr_188D_cp_0 = Main.gore[num43];
				expr_188D_cp_0.velocity.X = expr_188D_cp_0.velocity.X + 1f;
				Gore expr_18AB_cp_0 = Main.gore[num43];
				expr_18AB_cp_0.velocity.Y = expr_18AB_cp_0.velocity.Y - 1f;
				num43 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num43].velocity *= 0.4f;
				Gore expr_1929_cp_0 = Main.gore[num43];
				expr_1929_cp_0.velocity.X = expr_1929_cp_0.velocity.X - 1f;
				Gore expr_1947_cp_0 = Main.gore[num43];
				expr_1947_cp_0.velocity.Y = expr_1947_cp_0.velocity.Y - 1f;
				this.position.X = this.position.X + (float)(this.width / 2);
				this.position.Y = this.position.Y + (float)(this.height / 2);
				this.width = 80;
				this.height = 80;
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				this.Damage();
			}
			if (this.type == 669)
			{
				Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 value3 = new Vector2(20f, 20f);
				for (int num44 = 0; num44 < 10; num44++)
				{
					Dust dust7 = Dust.NewDustDirect(base.Center - value3 / 2f, (int)value3.X, (int)value3.Y, 4, 0f, 0f, 100, new Color(255, 255, 255, 110), 1.1f);
					dust7.velocity *= 1.4f;
				}
				for (int num45 = 0; num45 < 40; num45++)
				{
					Dust dust8 = Dust.NewDustDirect(base.Center - value3 / 2f, (int)value3.X, (int)value3.Y, 4, 0f, 0f, 50, new Color(245, 200, 30, 155), 1.2f);
					dust8.noGravity = true;
					dust8.velocity *= 4f;
					dust8 = Dust.NewDustDirect(base.Center - value3 / 2f, (int)value3.X, (int)value3.Y, 4, 0f, 0f, 50, new Color(245, 200, 30, 155), 0.8f);
					dust8.velocity *= 2f;
				}
			}
			if (this.type == 634 || this.type == 635)
			{
				int num46 = Utils.SelectRandom<int>(Main.rand, new int[]
				{
					242,
					73,
					72,
					71,
					255
				});
				int num47 = 255;
				int num48 = 255;
				int height = 50;
				float num49 = 1.7f;
				float num50 = 0.8f;
				float num51 = 2f;
				Vector2 value4 = (this.rotation - 1.57079637f).ToRotationVector2();
				Vector2 value5 = value4 * this.velocity.Length() * (float)this.MaxUpdates;
				if (this.type == 635)
				{
					num47 = 88;
					num48 = 88;
					num46 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						242,
						59,
						88
					});
					num49 = 3.7f;
					num50 = 1.5f;
					num51 = 2.2f;
					value5 *= 0.5f;
				}
				Main.PlaySound(SoundID.Item14, this.position);
				this.position = base.Center;
				this.width = (this.height = height);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				for (int num52 = 0; num52 < 40; num52++)
				{
					num46 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						242,
						73,
						72,
						71,
						255
					});
					if (this.type == 635)
					{
						num46 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							242,
							59,
							88
						});
					}
					int num53 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num46, 0f, 0f, 200, default(Color), num49);
					Main.dust[num53].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num53].noGravity = true;
					Main.dust[num53].velocity *= 3f;
					Main.dust[num53].velocity += value5 * Main.rand.NextFloat();
					num53 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num47, 0f, 0f, 100, default(Color), num50);
					Main.dust[num53].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num53].velocity *= 2f;
					Main.dust[num53].noGravity = true;
					Main.dust[num53].fadeIn = 1f;
					Main.dust[num53].color = Color.Crimson * 0.5f;
					Main.dust[num53].velocity += value5 * Main.rand.NextFloat();
				}
				for (int num54 = 0; num54 < 20; num54++)
				{
					int num55 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num48, 0f, 0f, 0, default(Color), num51);
					Main.dust[num55].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 3f;
					Main.dust[num55].noGravity = true;
					Main.dust[num55].velocity *= 0.5f;
					Main.dust[num55].velocity += value5 * (0.6f + 0.6f * Main.rand.NextFloat());
				}
			}
			else if (this.type == 651)
			{
				if (this.localAI[0] == 1f && this.owner == Main.myPlayer)
				{
					Player master = Main.player[this.owner];
					Point ps = new Vector2(this.ai[0], this.ai[1]).ToPoint();
					Point pe = base.Center.ToTileCoordinates();
					if (Main.netMode == 1)
					{
						NetMessage.SendData(109, -1, -1, "", ps.X, (float)ps.Y, (float)pe.X, (float)pe.Y, (int)WiresUI.Settings.ToolMode, 0, 0);
					}
					else
					{
						Wiring.MassWireOperation(ps, pe, master);
					}
				}
			}
			else if (this.type == 641)
			{
				if (this.owner == Main.myPlayer)
				{
					for (int num56 = 0; num56 < 1000; num56++)
					{
						if (Main.projectile[num56].active && Main.projectile[num56].owner == this.owner && Main.projectile[num56].type == 642)
						{
							Main.projectile[num56].Kill();
						}
					}
				}
			}
			else if (this.type == 643)
			{
				if (this.owner == Main.myPlayer)
				{
					for (int num57 = 0; num57 < 1000; num57++)
					{
						if (Main.projectile[num57].active && Main.projectile[num57].owner == this.owner && Main.projectile[num57].type == 644)
						{
							Main.projectile[num57].Kill();
						}
					}
				}
			}
			else if (this.type == 645)
			{
				bool flag = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
				for (int num58 = 0; num58 < 4; num58++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num59 = 0; num59 < 4; num59++)
				{
					int num60 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num60].noGravity = true;
					Main.dust[num60].velocity *= 3f;
					if (flag)
					{
						Main.dust[num60].noLight = true;
					}
					num60 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num60].velocity *= 2f;
					Main.dust[num60].noGravity = true;
					if (flag)
					{
						Main.dust[num60].noLight = true;
					}
				}
				for (int num61 = 0; num61 < 1; num61++)
				{
					int num62 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num62].velocity *= 0.3f;
					Gore expr_2525_cp_0 = Main.gore[num62];
					expr_2525_cp_0.velocity.X = expr_2525_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_2553_cp_0 = Main.gore[num62];
					expr_2553_cp_0.velocity.Y = expr_2553_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			else if (this.type == 636)
			{
				Rectangle hitbox2 = base.Hitbox;
				for (int num63 = 0; num63 < 6; num63 += 3)
				{
					hitbox2.X = (int)this.oldPos[num63].X;
					hitbox2.Y = (int)this.oldPos[num63].Y;
					for (int num64 = 0; num64 < 5; num64++)
					{
						int num65 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							259,
							158
						});
						int num66 = Dust.NewDust(hitbox2.TopLeft(), this.width, this.height, num65, 2.5f * (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num66].alpha = 200;
						Main.dust[num66].velocity *= 2.4f;
						Main.dust[num66].scale += Main.rand.NextFloat();
					}
				}
			}
			else if (this.type == 614)
			{
				for (int num67 = 0; num67 < 10; num67++)
				{
					Dust dust9 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0f, 0f, 0, default(Color), 1f)];
					dust9.noGravity = true;
					dust9.velocity *= 3f;
				}
			}
			if (this.type == 644)
			{
				Vector2 spinningpoint = new Vector2(0f, -3f).RotatedByRandom(3.1415927410125732);
				float num68 = (float)Main.rand.Next(7, 13);
				Vector2 value6 = new Vector2(2.1f, 2f);
				Color newColor = Main.hslToRgb(this.ai[0], 1f, 0.5f);
				newColor.A = 255;
				for (float num69 = 0f; num69 < num68; num69 += 1f)
				{
					int num70 = Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 0, newColor, 1f);
					Main.dust[num70].position = base.Center;
					Main.dust[num70].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num69 / num68), default(Vector2)) * value6 * (0.8f + Main.rand.NextFloat() * 0.4f);
					Main.dust[num70].noGravity = true;
					Main.dust[num70].scale = 2f;
					Main.dust[num70].fadeIn = Main.rand.NextFloat() * 2f;
					Dust dust10 = Dust.CloneDust(num70);
					dust10.scale /= 2f;
					dust10.fadeIn /= 2f;
					dust10.color = new Color(255, 255, 255, 255);
				}
				for (float num71 = 0f; num71 < num68; num71 += 1f)
				{
					int num72 = Dust.NewDust(base.Center, 0, 0, 267, 0f, 0f, 0, newColor, 1f);
					Main.dust[num72].position = base.Center;
					Main.dust[num72].velocity = spinningpoint.RotatedBy((double)(6.28318548f * num71 / num68), default(Vector2)) * value6 * (0.8f + Main.rand.NextFloat() * 0.4f);
					Main.dust[num72].velocity *= Main.rand.NextFloat() * 0.8f;
					Main.dust[num72].noGravity = true;
					Main.dust[num72].scale = Main.rand.NextFloat() * 1f;
					Main.dust[num72].fadeIn = Main.rand.NextFloat() * 2f;
					Dust dust11 = Dust.CloneDust(num72);
					dust11.scale /= 2f;
					dust11.fadeIn /= 2f;
					dust11.color = new Color(255, 255, 255, 255);
				}
				if (Main.myPlayer == this.owner)
				{
					this.friendly = true;
					int width = this.width;
					int height2 = this.height;
					int num73 = this.penetrate;
					this.position = base.Center;
					this.width = (this.height = 60);
					base.Center = this.position;
					this.penetrate = -1;
					this.maxPenetrate = -1;
					this.Damage();
					this.penetrate = num73;
					this.position = base.Center;
					this.width = width;
					this.height = height2;
					base.Center = this.position;
				}
			}
			if (this.type == 608)
			{
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int num74 = 0; num74 < 4; num74++)
				{
					int num75 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num75].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num76 = 0; num76 < 30; num76++)
				{
					int num77 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num77].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num77].noGravity = true;
					Main.dust[num77].velocity *= 3f;
					Main.dust[num77].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
					num77 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num77].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num77].velocity *= 2f;
					Main.dust[num77].noGravity = true;
					Main.dust[num77].fadeIn = 2.5f;
					Main.dust[num77].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
				}
				for (int num78 = 0; num78 < 10; num78++)
				{
					int num79 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num79].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num79].noGravity = true;
					Main.dust[num79].velocity *= 3f;
					Main.dust[num79].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
				}
				for (int num80 = 0; num80 < 10; num80++)
				{
					int num81 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num81].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num81].noGravity = true;
					Main.dust[num81].velocity *= 3f;
				}
				for (int num82 = 0; num82 < 2; num82++)
				{
					int num83 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num83].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num83].velocity *= 0.3f;
					Gore expr_3121_cp_0 = Main.gore[num83];
					expr_3121_cp_0.velocity.X = expr_3121_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_314F_cp_0 = Main.gore[num83];
					expr_314F_cp_0.velocity.Y = expr_314F_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			else if (this.type == 661)
			{
				this.position = base.Center;
				this.width = (this.height = 160);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				Vector2 position = base.Center + Vector2.One * -20f;
				int num84 = 40;
				int height3 = num84;
				for (int num85 = 0; num85 < 4; num85++)
				{
					int num86 = Dust.NewDust(position, num84, height3, 240, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num86].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num84 / 2f;
				}
				for (int num87 = 0; num87 < 20; num87++)
				{
					int num88 = Dust.NewDust(position, num84, height3, 62, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num88].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num84 / 2f;
					Main.dust[num88].noGravity = true;
					Main.dust[num88].noLight = true;
					Main.dust[num88].velocity *= 3f;
					Main.dust[num88].velocity += base.DirectionTo(Main.dust[num88].position) * (2f + Main.rand.NextFloat() * 4f);
					num88 = Dust.NewDust(position, num84, height3, 62, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num88].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)num84 / 2f;
					Main.dust[num88].velocity *= 2f;
					Main.dust[num88].noGravity = true;
					Main.dust[num88].fadeIn = 1f;
					Main.dust[num88].color = Color.Crimson * 0.5f;
					Main.dust[num88].noLight = true;
					Main.dust[num88].velocity += base.DirectionTo(Main.dust[num88].position) * 8f;
				}
				for (int num89 = 0; num89 < 20; num89++)
				{
					int num90 = Dust.NewDust(position, num84, height3, 62, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num90].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)num84 / 2f;
					Main.dust[num90].noGravity = true;
					Main.dust[num90].noLight = true;
					Main.dust[num90].velocity *= 3f;
					Main.dust[num90].velocity += base.DirectionTo(Main.dust[num90].position) * 2f;
				}
				for (int num91 = 0; num91 < 70; num91++)
				{
					int num92 = Dust.NewDust(position, num84, height3, 240, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num92].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)num84 / 2f;
					Main.dust[num92].noGravity = true;
					Main.dust[num92].velocity *= 3f;
					Main.dust[num92].velocity += base.DirectionTo(Main.dust[num92].position) * 3f;
				}
			}
			else if (this.type == 617)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.maxPenetrate = -1;
				this.penetrate = -1;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int num93 = 0; num93 < 4; num93++)
				{
					int num94 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num94].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num95 = 0; num95 < 30; num95++)
				{
					int num96 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num96].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num96].noGravity = true;
					Main.dust[num96].velocity *= 3f;
					num96 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 90, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num96].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num96].velocity *= 2f;
					Main.dust[num96].noGravity = true;
					Main.dust[num96].fadeIn = 1f;
					Main.dust[num96].color = Color.Crimson * 0.5f;
				}
				for (int num97 = 0; num97 < 10; num97++)
				{
					int num98 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num98].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num98].noGravity = true;
					Main.dust[num98].velocity *= 3f;
				}
				for (int num99 = 0; num99 < 10; num99++)
				{
					int num100 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num100].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num100].noGravity = true;
					Main.dust[num100].velocity *= 3f;
				}
				for (int num101 = 0; num101 < 2; num101++)
				{
					int num102 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num102].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num102].velocity *= 0.3f;
					Gore expr_3CC7_cp_0 = Main.gore[num102];
					expr_3CC7_cp_0.velocity.X = expr_3CC7_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_3CF5_cp_0 = Main.gore[num102];
					expr_3CF5_cp_0.velocity.Y = expr_3CF5_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				if (Main.myPlayer == this.owner)
				{
					for (int num103 = 0; num103 < 1000; num103++)
					{
						if (Main.projectile[num103].active && Main.projectile[num103].type == 618 && Main.projectile[num103].ai[1] == (float)this.whoAmI)
						{
							Main.projectile[num103].Kill();
						}
					}
					int num104 = Main.rand.Next(5, 9);
					int num105 = Main.rand.Next(5, 9);
					int num106 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						86,
						90
					});
					int num107 = (num106 == 86) ? 90 : 86;
					for (int num108 = 0; num108 < num104; num108++)
					{
						Vector2 vector3 = base.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
						Vector2 value7 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value7.X == 0f && value7.Y == 0f)
						{
							value7 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value7.Normalize();
						if (value7.Y > 0.2f)
						{
							value7.Y *= -1f;
						}
						value7 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(vector3.X, vector3.Y, value7.X, value7.Y, 620, (int)((double)this.damage * 0.65), this.knockBack * 0.8f, this.owner, (float)num106, 0f);
					}
					for (int num109 = 0; num109 < num105; num109++)
					{
						Vector2 vector4 = base.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
						Vector2 value8 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value8.X == 0f && value8.Y == 0f)
						{
							value8 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value8.Normalize();
						if (value8.Y > 0.4f)
						{
							value8.Y *= -1f;
						}
						value8 *= (float)Main.rand.Next(40, 81) * 0.1f;
						Projectile.NewProjectile(vector4.X, vector4.Y, value8.X, value8.Y, 620, (int)((double)this.damage * 0.65), this.knockBack * 0.8f, this.owner, (float)num107, 0f);
					}
				}
			}
			else if (this.type == 658)
			{
				for (int num110 = 0; num110 < 10; num110++)
				{
					int num111 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 269, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num111].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num111].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num111].type++;
					}
					else
					{
						Main.dust[num111].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num111].noGravity = true;
					Main.dust[num111].velocity *= 1.25f;
					Main.dust[num111].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 620 || this.type == 618)
			{
				if (this.type == 618)
				{
					this.ai[0] = 86f;
				}
				for (int num112 = 0; num112 < 10; num112++)
				{
					int num113 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num113].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num113].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num113].type++;
					}
					else
					{
						Main.dust[num113].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num113].noGravity = true;
					Main.dust[num113].velocity *= 1.25f;
					Main.dust[num113].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 619)
			{
				Main.PlaySound(SoundID.Item50, this.position);
				for (int num114 = 0; num114 < 20; num114++)
				{
					int num115 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num115].fadeIn = 1.1f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num115].scale = 0.35f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num115].type++;
					}
					else
					{
						Main.dust[num115].scale = 1.2f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num115].noGravity = true;
					Main.dust[num115].velocity *= 2.5f;
					Main.dust[num115].velocity -= this.oldVelocity / 10f;
				}
				if (Main.myPlayer == this.owner)
				{
					int num116 = Main.rand.Next(3, 6);
					for (int num117 = 0; num117 < num116; num117++)
					{
						Vector2 value9 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value9.X == 0f && value9.Y == 0f)
						{
							value9 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value9.Normalize();
						value9 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), value9.X, value9.Y, 620, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, this.ai[0], 0f);
					}
				}
			}
			if (this.type == 601)
			{
				Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				Color color = portalColor;
				color.A = 255;
				for (int num118 = 0; num118 < 6; num118++)
				{
					Vector2 value10 = Vector2.UnitY.RotatedByRandom(6.2831854820251465) * (3f * Main.rand.NextFloat());
					Dust dust12 = Main.dust[Dust.NewDust(base.Center, 0, 0, 263, 0f, 0f, 0, default(Color), 1f)];
					dust12.position = base.Center;
					dust12.velocity = value10 + this.velocity / 5f;
					dust12.color = color;
					dust12.scale = 2f;
					dust12.noLight = true;
					dust12.noGravity = true;
				}
			}
			if (this.type == 596)
			{
				this.position = base.Center;
				this.width = (this.height = 60);
				base.Center = this.position;
				int num119 = 40;
				if (Main.expertMode)
				{
					num119 = 30;
				}
				this.damage = num119;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int num120 = 0; num120 < 4; num120++)
				{
					int num121 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num121].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num122 = 0; num122 < 20; num122++)
				{
					int num123 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num123].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num123].noGravity = true;
					Main.dust[num123].velocity *= 2f;
				}
				for (int num124 = 0; num124 < 10; num124++)
				{
					int num125 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num125].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num125].noGravity = true;
					Main.dust[num125].velocity *= 2f;
				}
			}
			if (this.type == 659)
			{
				if (this.ai[0] >= 0f)
				{
					this.position = base.Center;
					this.width = (this.height = 40);
					base.Center = this.position;
					this.Damage();
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num126 = 0; num126 < 2; num126++)
					{
						int num127 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num127].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					}
					for (int num128 = 0; num128 < 10; num128++)
					{
						int num129 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.5f);
						Main.dust[num129].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
						Main.dust[num129].noGravity = true;
						Main.dust[num129].velocity *= 2f;
					}
					for (int num130 = 0; num130 < 5; num130++)
					{
						int num131 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num131].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
						Main.dust[num131].noGravity = true;
						Main.dust[num131].velocity *= 2f;
					}
				}
			}
			else if (this.type >= 625 && this.type <= 628)
			{
				for (int num132 = 0; num132 < 6; num132++)
				{
					int num133 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num133].noGravity = true;
					Main.dust[num133].noLight = true;
				}
			}
			if (this.type == 631)
			{
				int num134 = Main.rand.Next(5, 10);
				for (int num135 = 0; num135 < num134; num135++)
				{
					int num136 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num136].velocity *= 1.6f;
					Dust expr_4E46_cp_0 = Main.dust[num136];
					expr_4E46_cp_0.velocity.Y = expr_4E46_cp_0.velocity.Y - 1f;
					Main.dust[num136].position -= Vector2.One * 4f;
					Main.dust[num136].position = Vector2.Lerp(Main.dust[num136].position, base.Center, 0.5f);
					Main.dust[num136].noGravity = true;
				}
			}
			if (this.type == 539)
			{
				this.position = base.Center;
				this.width = (this.height = 80);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7, 1f, 0f);
				for (int num137 = 0; num137 < 4; num137++)
				{
					int num138 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num138].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num139 = 0; num139 < 20; num139++)
				{
					int num140 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 176, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num140].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num140].noGravity = true;
					Main.dust[num140].velocity *= 3f;
				}
				for (int num141 = 0; num141 < 20; num141++)
				{
					int num142 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 180, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num142].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num142].noGravity = true;
					Main.dust[num142].velocity *= 3f;
				}
				for (int num143 = 0; num143 < 10; num143++)
				{
					int num144 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num144].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num144].noGravity = true;
					Main.dust[num144].velocity *= 3f;
				}
			}
			else if (this.type == 585)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27, 1f, 0f);
				for (int num145 = 0; num145 < 20; num145++)
				{
					int num146 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
					Main.dust[num146].noGravity = true;
					Main.dust[num146].velocity *= 1.2f;
					Main.dust[num146].scale = 1.3f;
					Main.dust[num146].velocity -= this.oldVelocity * 0.3f;
					num146 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, 0f, 0f, 100, default(Color), 2f);
					Main.dust[num146].noGravity = true;
					Main.dust[num146].velocity *= 3f;
				}
			}
			else if (this.type == 590)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27, 1f, 0f);
				for (int num147 = 0; num147 < 10; num147++)
				{
					int num148 = Dust.NewDust(this.position, this.width, this.height, 165, 0f, 0f, 50, default(Color), 1.5f);
					Main.dust[num148].velocity *= 2f;
					Main.dust[num148].noGravity = true;
				}
				float num149 = 0.6f + Main.rand.NextFloat() * 0.4f;
				int num150 = Gore.NewGore(this.position, Vector2.Zero, 375, num149);
				Main.gore[num150].velocity *= 0.3f;
				num150 = Gore.NewGore(this.position, Vector2.Zero, 376, num149);
				Main.gore[num150].velocity *= 0.3f;
				num150 = Gore.NewGore(this.position, Vector2.Zero, 377, num149);
				Main.gore[num150].velocity *= 0.3f;
			}
			else if (this.type == 587)
			{
				Color newColor2 = Main.hslToRgb(this.ai[1], 1f, 0.5f);
				newColor2.A = 200;
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num151 = 0; num151 < 10; num151++)
				{
					int num152 = Dust.NewDust(this.position, this.width, this.height, 76, 0f, 0f, 0, newColor2, 1f);
					Main.dust[num152].noGravity = true;
					Main.dust[num152].velocity *= 1.2f;
					Main.dust[num152].scale = 0.9f;
					Main.dust[num152].velocity -= this.oldVelocity * 0.3f;
					num152 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, 0f, 0f, 0, newColor2, 1.1f);
					Main.dust[num152].noGravity = true;
					Main.dust[num152].velocity *= 2f;
				}
			}
			else if (this.type == 572)
			{
				for (int num153 = 0; num153 < 15; num153++)
				{
					int num154 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 1f);
					Main.dust[num154].velocity *= 3f;
					Main.dust[num154].noGravity = true;
					Main.dust[num154].scale = 1.25f;
					Main.dust[num154].position = (base.Center + this.position) / 2f;
				}
			}
			else if (this.type == 581)
			{
				for (int num155 = 0; num155 < 30; num155++)
				{
					int num156 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						229,
						229,
						161
					});
					Dust dust13 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num156, 0f, 0f, 0, default(Color), 1f)];
					dust13.noGravity = true;
					dust13.scale = 1.25f + Main.rand.NextFloat();
					dust13.fadeIn = 0.25f;
					dust13.velocity *= 2f;
					dust13.noLight = true;
				}
			}
			else if (this.type == 671)
			{
				for (int num157 = 0; num157 < 30; num157++)
				{
					int num158 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						27,
						27,
						62
					});
					Dust dust14 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num158, 0f, 0f, 0, default(Color), 1f)];
					dust14.noGravity = true;
					dust14.scale = 1.25f + Main.rand.NextFloat();
					dust14.fadeIn = 0.25f;
					dust14.velocity *= 2f;
					dust14.noLight = true;
				}
			}
			else if (this.type == 675)
			{
				for (int num159 = 0; num159 < 40; num159++)
				{
					int num160 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						27,
						242,
						73,
						72,
						71,
						255,
						255,
						255
					});
					Dust dust15 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num160, 0f, 0f, 0, default(Color), 1f)];
					dust15.noGravity = true;
					dust15.scale = 1.25f + Main.rand.NextFloat();
					dust15.fadeIn = 0.25f;
					dust15.velocity *= 3f;
					dust15.noLight = true;
				}
			}
			else if (this.type == 676)
			{
				for (int num161 = 0; num161 < 120; num161++)
				{
					int num162 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						4,
						256
					});
					Dust dust16 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num162, 0f, 0f, 100, default(Color), 1f)];
					dust16.scale = 0.8f + Main.rand.NextFloat() * 0.6f;
					dust16.fadeIn = 0.5f;
					dust16.velocity *= 4.5f;
					dust16.noLight = true;
					if (dust16.velocity.Y > 0f)
					{
						dust16.velocity *= -0.5f;
					}
					if (dust16.type == 4)
					{
						dust16.color = new Color(80, 170, 40, 120);
					}
				}
				for (int num163 = 0; num163 < 10; num163++)
				{
					Gore.NewGoreDirect(base.Center, new Vector2(MathHelper.Lerp(-5f, 5f, Main.rand.NextFloat()), -Main.rand.NextFloat() * 5f), 1024, 1f);
				}
				for (int num164 = 0; num164 < 10; num164++)
				{
					Gore.NewGoreDirect(base.Center, new Vector2(MathHelper.Lerp(-5f, 5f, Main.rand.NextFloat()), -Main.rand.NextFloat() * 5f), 1025, 1f);
				}
				for (int num165 = 0; num165 < 10; num165++)
				{
					Gore.NewGoreDirect(base.Center, new Vector2(MathHelper.Lerp(-5f, 5f, Main.rand.NextFloat()), -Main.rand.NextFloat() * 5f), 1026, 1f);
				}
				for (int num166 = 0; num166 < 20; num166++)
				{
					Gore.NewGoreDirect(base.Center, new Vector2(MathHelper.Lerp(-0.5f, 0.5f, Main.rand.NextFloat()), -Main.rand.NextFloat() * 2f), 1026, 1f);
				}
				if (Main.netMode != 2)
				{
					Player player = Main.player[Main.myPlayer];
					if (!player.dead && player.active && (player.Center - base.Center).Length() < 300f)
					{
						player.AddBuff(197, 900, false);
					}
				}
			}
			else if (this.type == 686)
			{
				Rectangle hitbox3 = base.Hitbox;
				for (int num167 = 0; num167 < this.oldPos.Length / 2; num167 += 2)
				{
					hitbox3.X = (int)this.oldPos[num167].X;
					hitbox3.Y = (int)this.oldPos[num167].Y;
					for (int num168 = 0; num168 < 3; num168++)
					{
						int num169 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							6,
							55,
							158
						});
						int num170 = Dust.NewDust(hitbox3.TopLeft(), this.width, this.height, num169, (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num170].alpha = 200;
						Main.dust[num170].velocity *= 2.4f;
						Main.dust[num170].scale += Main.rand.NextFloat();
						Main.dust[num170].scale -= 0.5f;
						if (Main.dust[num170].type == 55)
						{
							Main.dust[num170].color = Color.Lerp(Color.Red, Color.Gold, Main.rand.NextFloat());
						}
						Main.dust[num170].noLight = true;
					}
				}
				for (int num171 = 10; num171 < this.oldPos.Length; num171 += 2)
				{
					hitbox3.X = (int)this.oldPos[num171].X;
					hitbox3.Y = (int)this.oldPos[num171].Y;
					for (int num172 = 0; num172 < 2; num172++)
					{
						int num173 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							55
						});
						int num174 = Dust.NewDust(hitbox3.TopLeft(), this.width, this.height, num173, (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num174].alpha = 120;
						Main.dust[num174].velocity *= 2.4f;
						Main.dust[num174].scale += Main.rand.NextFloat() * 0.7f;
						Main.dust[num174].scale -= 0.5f;
						if (Main.dust[num174].type == 55)
						{
							Main.dust[num174].color = Color.Lerp(Color.Purple, Color.Black, Main.rand.NextFloat());
						}
						Main.dust[num174].noLight = true;
					}
				}
				for (int num175 = 5; num175 < this.oldPos.Length; num175++)
				{
					hitbox3.X = (int)this.oldPos[num175].X;
					hitbox3.Y = (int)this.oldPos[num175].Y;
					for (int num176 = 0; num176 < 1; num176++)
					{
						int num177 = Utils.SelectRandom<int>(Main.rand, new int[]
						{
							55
						});
						int num178 = Dust.NewDust(hitbox3.TopLeft(), this.width, this.height, num177, (float)this.direction, -2.5f, 0, default(Color), 1f);
						Main.dust[num178].alpha = 80;
						Main.dust[num178].velocity *= 0.3f;
						Main.dust[num178].velocity += this.velocity * 0.5f;
						Main.dust[num178].scale += Main.rand.NextFloat() * 0.7f;
						Main.dust[num178].scale -= 0.5f;
						if (Main.dust[num178].type == 55)
						{
							Main.dust[num178].color = Color.Lerp(Color.Purple, Color.Black, Main.rand.NextFloat());
						}
						Main.dust[num178].noLight = true;
					}
				}
				for (int num179 = 0; num179 < 30; num179++)
				{
					int num180 = 228;
					Dust dust17 = Main.dust[Dust.NewDust(this.position, this.width, this.height, num180, 0f, 0f, 0, default(Color), 1f)];
					dust17.noGravity = true;
					dust17.scale = 1.25f + Main.rand.NextFloat();
					dust17.fadeIn = 1.5f;
					dust17.velocity *= 6f;
					dust17.noLight = true;
				}
			}
			if (this.type == 405)
			{
				Main.PlaySound(SoundID.Item54, this.position);
				Vector2 arg_6384_0 = base.Center;
				for (int num181 = 0; num181 < 20; num181++)
				{
					int num182 = 10;
					int num183 = Dust.NewDust(base.Center - Vector2.One * (float)num182, num182 * 2, num182 * 2, 212, 0f, 0f, 0, default(Color), 1f);
					Dust dust18 = Main.dust[num183];
					Vector2 value11 = Vector2.Normalize(dust18.position - base.Center);
					dust18.position = base.Center + value11 * (float)num182 * this.scale;
					if (num181 < 30)
					{
						dust18.velocity = value11 * dust18.velocity.Length();
					}
					else
					{
						dust18.velocity = value11 * (float)Main.rand.Next(45, 91) / 10f;
					}
					dust18.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
					dust18.color = Color.Lerp(dust18.color, Color.White, 0.3f);
					dust18.noGravity = true;
					dust18.scale = 0.7f;
				}
			}
			if (this.type == 501)
			{
				Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				int num184 = 20;
				this.position.X = this.position.X - (float)num184;
				this.position.Y = this.position.Y - (float)num184;
				this.width += num184 * 2;
				this.height += num184 * 2;
				num184 += 20;
				for (int num185 = 0; num185 < 20; num185++)
				{
					int num186 = Dust.NewDust(this.position, this.width, this.height, 188, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num186].velocity *= 0.5f;
				}
				for (int num187 = 0; num187 < 5; num187++)
				{
					int num188 = Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), default(Vector2), Main.rand.Next(435, 438), 1f);
					Main.gore[num188].velocity *= 0.5f;
					if (num187 == 0)
					{
						Gore expr_6683_cp_0 = Main.gore[num188];
						expr_6683_cp_0.velocity.X = expr_6683_cp_0.velocity.X + 1f;
						Gore expr_66A1_cp_0 = Main.gore[num188];
						expr_66A1_cp_0.velocity.Y = expr_66A1_cp_0.velocity.Y + 1f;
					}
					else if (num187 == 1)
					{
						Gore expr_66C9_cp_0 = Main.gore[num188];
						expr_66C9_cp_0.velocity.X = expr_66C9_cp_0.velocity.X - 1f;
						Gore expr_66E7_cp_0 = Main.gore[num188];
						expr_66E7_cp_0.velocity.Y = expr_66E7_cp_0.velocity.Y + 1f;
					}
					else if (num187 == 2)
					{
						Gore expr_670C_cp_0 = Main.gore[num188];
						expr_670C_cp_0.velocity.X = expr_670C_cp_0.velocity.X + 1f;
						Gore expr_672A_cp_0 = Main.gore[num188];
						expr_672A_cp_0.velocity.Y = expr_672A_cp_0.velocity.Y - 1f;
					}
					else
					{
						Gore expr_674A_cp_0 = Main.gore[num188];
						expr_674A_cp_0.velocity.X = expr_674A_cp_0.velocity.X - 1f;
						Gore expr_6768_cp_0 = Main.gore[num188];
						expr_6768_cp_0.velocity.Y = expr_6768_cp_0.velocity.Y - 1f;
					}
					Main.gore[num188].velocity *= 0.5f;
				}
				this.position.X = this.position.X - (float)num184;
				this.position.Y = this.position.Y - (float)num184;
				this.width += num184 * 2;
				this.height += num184 * 2;
				this.Damage();
			}
			if (this.type == 410)
			{
				Main.PlaySound(SoundID.Item54, this.position);
				Vector2 arg_681D_0 = base.Center;
				for (int num189 = 0; num189 < 10; num189++)
				{
					int num190 = (int)(10f * this.ai[1]);
					int num191 = Dust.NewDust(base.Center - Vector2.One * (float)num190, num190 * 2, num190 * 2, 212, 0f, 0f, 0, default(Color), 1f);
					Dust dust19 = Main.dust[num191];
					Vector2 value12 = Vector2.Normalize(dust19.position - base.Center);
					dust19.position = base.Center + value12 * (float)num190 * this.scale;
					if (num189 < 30)
					{
						dust19.velocity = value12 * dust19.velocity.Length();
					}
					else
					{
						dust19.velocity = value12 * (float)Main.rand.Next(45, 91) / 10f;
					}
					dust19.color = Main.hslToRgb((float)(0.40000000596046448 + Main.rand.NextDouble() * 0.20000000298023224), 0.9f, 0.5f);
					dust19.color = Color.Lerp(dust19.color, Color.White, 0.3f);
					dust19.noGravity = true;
					dust19.scale = 0.7f;
				}
			}
			if (this.type == 629 && Main.netMode != 1)
			{
				int num192 = Main.npc[(int)this.ai[0]].type;
				if (num192 <= 493)
				{
					if (num192 != 422)
					{
						if (num192 == 493)
						{
							if (NPC.ShieldStrengthTowerStardust != 0)
							{
								Main.npc[(int)this.ai[0]].ai[3] = 1f;
							}
							NPC.ShieldStrengthTowerStardust = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerStardust - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
						}
					}
					else
					{
						if (NPC.ShieldStrengthTowerVortex != 0)
						{
							Main.npc[(int)this.ai[0]].ai[3] = 1f;
						}
						NPC.ShieldStrengthTowerVortex = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerVortex - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
					}
				}
				else if (num192 != 507)
				{
					if (num192 == 517)
					{
						if (NPC.ShieldStrengthTowerSolar != 0)
						{
							Main.npc[(int)this.ai[0]].ai[3] = 1f;
						}
						NPC.ShieldStrengthTowerSolar = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerSolar - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
					}
				}
				else
				{
					if (NPC.ShieldStrengthTowerNebula != 0)
					{
						Main.npc[(int)this.ai[0]].ai[3] = 1f;
					}
					NPC.ShieldStrengthTowerNebula = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerNebula - 1), 0f, (float)NPC.ShieldStrengthTowerMax);
				}
				Main.npc[(int)this.ai[0]].netUpdate = true;
				NetMessage.SendData(101, -1, -1, "", 0, 0f, 0f, 0f, 0, 0, 0);
			}
			if (this.aiStyle == 105 && this.owner == Main.myPlayer && this.ai[1] == 0f)
			{
				Vector2 value13 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
				value13.Normalize();
				value13 *= 0.3f;
				Projectile.NewProjectile(base.Center.X, base.Center.Y, value13.X, value13.Y, Main.rand.Next(569, 572), this.damage, 0f, this.owner, 0f, 0f);
			}
			if (this.type == 452)
			{
				Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 103, 1f, 0f);
				this.position = base.Center;
				this.width = (this.height = 144);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num193 = 0; num193 < 4; num193++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num194 = 0; num194 < 40; num194++)
				{
					int num195 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num195].noGravity = true;
					Main.dust[num195].velocity *= 3f;
					num195 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num195].velocity *= 2f;
					Main.dust[num195].noGravity = true;
				}
				for (int num196 = 0; num196 < 1; num196++)
				{
					int num197 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num197].velocity *= 0.3f;
					Gore expr_6EC5_cp_0 = Main.gore[num197];
					expr_6EC5_cp_0.velocity.X = expr_6EC5_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_6EF5_cp_0 = Main.gore[num197];
					expr_6EF5_cp_0.velocity.Y = expr_6EF5_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 454)
			{
				Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6, 1f, 0f);
				this.position = base.Center;
				this.width = (this.height = 208);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num198 = 0; num198 < 7; num198++)
				{
					int num199 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num199].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
				}
				for (int num200 = 0; num200 < 60; num200++)
				{
					int num201 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num201].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num201].noGravity = true;
					Main.dust[num201].velocity *= 1f;
					num201 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num201].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num201].velocity *= 1f;
					Main.dust[num201].noGravity = true;
				}
				for (int num202 = 0; num202 < 3; num202++)
				{
					int num203 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num203].velocity *= 0.3f;
					Gore expr_733F_cp_0 = Main.gore[num203];
					expr_733F_cp_0.velocity.X = expr_733F_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_736F_cp_0 = Main.gore[num203];
					expr_736F_cp_0.velocity.Y = expr_736F_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 467)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int num204 = 0; num204 < 4; num204++)
				{
					int num205 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num205].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num206 = 0; num206 < 30; num206++)
				{
					int num207 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num207].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num207].noGravity = true;
					Main.dust[num207].velocity *= 3f;
					num207 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num207].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num207].velocity *= 2f;
					Main.dust[num207].noGravity = true;
					Main.dust[num207].fadeIn = 2.5f;
				}
				for (int num208 = 0; num208 < 10; num208++)
				{
					int num209 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num209].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num209].noGravity = true;
					Main.dust[num209].velocity *= 3f;
				}
				for (int num210 = 0; num210 < 10; num210++)
				{
					int num211 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num211].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num211].noGravity = true;
					Main.dust[num211].velocity *= 3f;
				}
				for (int num212 = 0; num212 < 2; num212++)
				{
					int num213 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num213].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num213].velocity *= 0.3f;
					Gore expr_79AB_cp_0 = Main.gore[num213];
					expr_79AB_cp_0.velocity.X = expr_79AB_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_79DB_cp_0 = Main.gore[num213];
					expr_79DB_cp_0.velocity.Y = expr_79DB_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			if (this.type == 468)
			{
				this.position = base.Center;
				this.width = (this.height = 176);
				base.Center = this.position;
				this.Damage();
				Main.PlaySound(SoundID.Item14, this.position);
				for (int num214 = 0; num214 < 4; num214++)
				{
					int num215 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num215].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
				}
				for (int num216 = 0; num216 < 20; num216++)
				{
					int num217 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 200, default(Color), 3.7f);
					Main.dust[num217].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num217].noGravity = true;
					Main.dust[num217].velocity *= 3f;
					num217 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num217].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.dust[num217].velocity *= 2f;
					Main.dust[num217].noGravity = true;
					Main.dust[num217].fadeIn = 2.5f;
				}
				for (int num218 = 0; num218 < 10; num218++)
				{
					int num219 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0f, 0f, 0, default(Color), 2.7f);
					Main.dust[num219].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num219].noGravity = true;
					Main.dust[num219].velocity *= 3f;
				}
				for (int num220 = 0; num220 < 10; num220++)
				{
					int num221 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num221].position = base.Center + Vector2.UnitX.RotatedByRandom(3.1415927410125732).RotatedBy((double)this.velocity.ToRotation(), default(Vector2)) * (float)this.width / 2f;
					Main.dust[num221].noGravity = true;
					Main.dust[num221].velocity *= 3f;
				}
				for (int num222 = 0; num222 < 2; num222++)
				{
					int num223 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num223].position = base.Center + Vector2.UnitY.RotatedByRandom(3.1415927410125732) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
					Main.gore[num223].velocity *= 0.3f;
					Gore expr_8014_cp_0 = Main.gore[num223];
					expr_8014_cp_0.velocity.X = expr_8014_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_8044_cp_0 = Main.gore[num223];
					expr_8044_cp_0.velocity.Y = expr_8044_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
			}
			if (this.type == 485)
			{
				for (int num224 = 0; num224 < 15; num224++)
				{
					int num225 = Dust.NewDust(this.position, this.width, this.height, 6, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num225].noGravity = true;
					Main.dust[num225].velocity -= this.oldVelocity * (float)Main.rand.Next(20, 60) * 0.01f;
				}
			}
			else if (this.type == 484)
			{
				for (int num226 = 0; num226 < 5; num226++)
				{
					int num227 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num227].noGravity = true;
					Main.dust[num227].velocity -= this.oldVelocity / 5f;
					Main.dust[num227].scale = 0.85f;
				}
			}
			else if (this.type == 483)
			{
				Main.PlaySound(SoundID.Item14, this.position);
				if (this.owner == Main.myPlayer)
				{
					int num228 = Main.rand.Next(4, 8);
					int[] array = new int[num228];
					int num229 = 0;
					for (int num230 = 0; num230 < 200; num230++)
					{
						if (Main.npc[num230].CanBeChasedBy(this, true) && Collision.CanHitLine(this.position, this.width, this.height, Main.npc[num230].position, Main.npc[num230].width, Main.npc[num230].height))
						{
							array[num229] = num230;
							num229++;
							if (num229 == num228)
							{
								break;
							}
						}
					}
					if (num229 > 1)
					{
						for (int num231 = 0; num231 < 100; num231++)
						{
							int num232 = Main.rand.Next(num229);
							int num233;
							for (num233 = num232; num233 == num232; num233 = Main.rand.Next(num229))
							{
							}
							int num234 = array[num232];
							array[num232] = array[num233];
							array[num233] = num234;
						}
					}
					Vector2 vector5 = new Vector2(-1f, -1f);
					for (int num235 = 0; num235 < num229; num235++)
					{
						Vector2 value14 = Main.npc[array[num235]].Center - base.Center;
						value14.Normalize();
						vector5 += value14;
					}
					vector5.Normalize();
					for (int num236 = 0; num236 < num228; num236++)
					{
						float scaleFactor = (float)Main.rand.Next(8, 15);
						Vector2 vector6 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						vector6.Normalize();
						if (num229 > 0)
						{
							vector6 += vector5;
							vector6.Normalize();
						}
						vector6 *= scaleFactor;
						if (num229 > 0)
						{
							num229--;
							vector6 = Main.npc[array[num229]].Center - base.Center;
							vector6.Normalize();
							vector6 *= scaleFactor;
						}
						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector6.X, vector6.Y, 484, (int)((double)this.damage * 0.7), this.knockBack * 0.7f, this.owner, 0f, 0f);
					}
				}
				for (int num237 = 0; num237 < 20; num237++)
				{
					int num238 = Dust.NewDust(this.position, this.width, this.height, 78, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num238].noGravity = true;
					Main.dust[num238].velocity *= 4f;
				}
				for (int num239 = 0; num239 < 7; num239++)
				{
					int num240 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num240].velocity *= 0.9f;
					Main.dust[num240].scale = 0.9f;
				}
				for (int num241 = 0; num241 < 3; num241++)
				{
					int num242 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num242].noGravity = true;
					Main.dust[num242].velocity *= 3f;
					num242 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num242].velocity *= 2f;
				}
				int num243 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
				Main.gore[num243].velocity *= 0.3f;
				Gore expr_87C0_cp_0 = Main.gore[num243];
				expr_87C0_cp_0.velocity.X = expr_87C0_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
				Gore expr_87E8_cp_0 = Main.gore[num243];
				expr_87E8_cp_0.velocity.Y = expr_87E8_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
				if (this.owner == Main.myPlayer)
				{
					int num244 = 100;
					this.position.X = this.position.X - (float)(num244 / 2);
					this.position.Y = this.position.Y - (float)(num244 / 2);
					this.width += num244;
					this.height++;
					this.penetrate = -1;
					this.Damage();
				}
			}
			if (this.type == 523)
			{
				Main.PlaySound(SoundID.Item54, this.position);
				for (int num245 = 0; num245 < 25; num245++)
				{
					int num246 = Dust.NewDust(this.position, this.width, this.height, 256, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num246].noGravity = true;
					Main.dust[num246].position = (Main.dust[num246].position + this.position) / 2f;
					Main.dust[num246].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
					Main.dust[num246].velocity.Normalize();
					Main.dust[num246].velocity *= (float)Main.rand.Next(1, 30) * 0.1f;
					Main.dust[num246].alpha = this.alpha;
				}
			}
			else if (this.type == 522)
			{
				Main.PlaySound(SoundID.Item118, this.position);
				for (int num247 = 0; num247 < 10; num247++)
				{
					int num248 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num248].fadeIn = 0.75f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num248].scale = 0.25f + (float)Main.rand.Next(-10, 11) * 0.005f;
						Main.dust[num248].type++;
					}
					else
					{
						Main.dust[num248].scale = 1f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num248].noGravity = true;
					Main.dust[num248].velocity *= 1.25f;
					Main.dust[num248].velocity -= this.oldVelocity / 10f;
				}
			}
			else if (this.type == 521)
			{
				Main.PlaySound(SoundID.Item110, this.position);
				for (int num249 = 0; num249 < 20; num249++)
				{
					int num250 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.5f);
					if (Main.rand.Next(3) == 0)
					{
						Main.dust[num250].fadeIn = 1.1f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num250].scale = 0.35f + (float)Main.rand.Next(-10, 11) * 0.01f;
						Main.dust[num250].type++;
					}
					else
					{
						Main.dust[num250].scale = 1.2f + (float)Main.rand.Next(-10, 11) * 0.01f;
					}
					Main.dust[num250].noGravity = true;
					Main.dust[num250].velocity *= 2.5f;
					Main.dust[num250].velocity -= this.oldVelocity / 10f;
				}
				if (Main.myPlayer == this.owner)
				{
					int num251 = Main.rand.Next(3, 6);
					for (int num252 = 0; num252 < num251; num252++)
					{
						Vector2 value15 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						while (value15.X == 0f && value15.Y == 0f)
						{
							value15 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						}
						value15.Normalize();
						value15 *= (float)Main.rand.Next(70, 101) * 0.1f;
						Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), value15.X, value15.Y, 522, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, 0f, 0f);
					}
				}
			}
			if (this.type == 520)
			{
				Main.PlaySound(SoundID.Item50, this.position);
				for (int num253 = 0; num253 < 10; num253++)
				{
					int num254 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 252, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					Main.dust[num254].noGravity = true;
					Main.dust[num254].velocity -= this.oldVelocity / 3f;
				}
			}
			if (this.type == 459 || this.type == 709)
			{
				int num255 = 3;
				int num256 = 10;
				int num257 = 0;
				if (this.scale >= 1f)
				{
					this.position = base.Center;
					this.width = (this.height = 144);
					base.Center = this.position;
					num255 = 7;
					num256 = 30;
					num257 = 2;
					this.Damage();
				}
				for (int num258 = 0; num258 < num255; num258++)
				{
					int num259 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num259].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
				}
				for (int num260 = 0; num260 < num256; num260++)
				{
					int num261 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 226, 0f, 0f, 0, default(Color), 1.5f);
					Main.dust[num261].position = new Vector2((float)(this.width / 2), 0f).RotatedBy(6.2831854820251465 * Main.rand.NextDouble(), default(Vector2)) * (float)Main.rand.NextDouble() + base.Center;
					Main.dust[num261].noGravity = true;
					Main.dust[num261].velocity *= 1f;
				}
				for (int num262 = 0; num262 < num257; num262++)
				{
					int num263 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num263].velocity *= 0.3f;
					Gore expr_9265_cp_0 = Main.gore[num263];
					expr_9265_cp_0.velocity.X = expr_9265_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_9295_cp_0 = Main.gore[num263];
					expr_9295_cp_0.velocity.Y = expr_9295_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				if (this.type == 709 && Main.myPlayer == this.owner)
				{
					Rectangle value16 = new Rectangle((int)base.Center.X - 40, (int)base.Center.Y - 40, 80, 80);
					for (int num264 = 0; num264 < 1000; num264++)
					{
						if (num264 != this.whoAmI && Main.projectile[num264].active && Main.projectile[num264].owner == this.owner && Main.projectile[num264].type == 443 && Main.projectile[num264].getRect().Intersects(value16))
						{
							Main.projectile[num264].ai[1] = 1f;
							Main.projectile[num264].velocity = (base.Center - Main.projectile[num264].Center) / 5f;
							Main.projectile[num264].netUpdate = true;
						}
					}
					int num265 = Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 443, this.damage, 0f, this.owner, 0f, 0f);
					Main.projectile[num265].timeLeft = 30 * Main.rand.Next(2, 6);
					Main.projectile[num265].localAI[0] = Main.PlayTrackedSound(SoundID.DD2_SkyDragonsFuryCircle, base.Center).ToFloat();
				}
			}
			if (this.owner != Main.myPlayer && this.type == 453 && Main.player[this.owner].mount.AbilityActive)
			{
				Main.player[this.owner].mount.UseAbility(Main.player[this.owner], this.position, false);
			}
			if (this.type == 441)
			{
				Main.player[this.owner].mount.StopAbilityCharge();
			}
			if (this.type == 444)
			{
				Main.PlaySound(SoundID.Item96, this.position);
				int num266 = Main.rand.Next(5, 9);
				for (int num267 = 0; num267 < num266; num267++)
				{
					int num268 = Dust.NewDust(base.Center, 0, 0, 171, 0f, 0f, 100, default(Color), 1.4f);
					Main.dust[num268].velocity *= 0.8f;
					Main.dust[num268].position = Vector2.Lerp(Main.dust[num268].position, base.Center, 0.5f);
					Main.dust[num268].noGravity = true;
				}
				if (this.owner == Main.myPlayer)
				{
					Vector2 value17 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY);
					if (Main.player[this.owner].gravDir == -1f)
					{
						value17.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
					}
					Vector2 value18 = Vector2.Normalize(value17 - base.Center);
					value18 *= this.localAI[1];
					Projectile.NewProjectile(base.Center.X, base.Center.Y, value18.X, value18.Y, (int)this.localAI[0], this.damage, this.knockBack, this.owner, 0f, 0f);
				}
			}
			if (this.type == 472)
			{
				for (int num269 = 0; num269 < 20; num269++)
				{
					int num270 = Dust.NewDust(this.position, this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num270].noGravity = true;
					Main.dust[num270].velocity *= 0.45f;
					Main.dust[num270].velocity += this.velocity * 0.9f;
				}
			}
			if (this.type == 639 || this.type == 640)
			{
				int num271 = Main.rand.Next(5, 10);
				for (int num272 = 0; num272 < num271; num272++)
				{
					int num273 = Dust.NewDust(base.Center, 0, 0, 220, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num273].velocity *= 1.6f;
					Dust expr_9845_cp_0 = Main.dust[num273];
					expr_9845_cp_0.velocity.Y = expr_9845_cp_0.velocity.Y - 1f;
					Main.dust[num273].position = Vector2.Lerp(Main.dust[num273].position, base.Center, 0.5f);
					Main.dust[num273].noGravity = true;
				}
				if (this.owner == Main.myPlayer && this.type == 639)
				{
					int num274 = num + 1;
					int nextSlot = Projectile.GetNextSlot();
					if (Main.ProjectileUpdateLoopIndex < nextSlot && Main.ProjectileUpdateLoopIndex != -1)
					{
						num274++;
					}
					Vector2 vector7 = new Vector2(this.ai[0], this.ai[1]);
					Projectile.NewProjectile(this.localAI[0], this.localAI[1], vector7.X, vector7.Y, 640, this.damage, this.knockBack, this.owner, 0f, (float)num274);
				}
			}
			if (this.type == 684)
			{
				int num275 = Main.rand.Next(15, 25);
				for (int num276 = 0; num276 < num275; num276++)
				{
					int num277 = Dust.NewDust(base.Center, 0, 0, 60, 0f, 0f, 100, new Color(255, 255, 255, 0), 1.3f);
					Main.dust[num277].velocity *= 8f * (0.3f + 0.7f * Main.rand.NextFloat());
					Main.dust[num277].fadeIn = 1.3f + Main.rand.NextFloat() * 0.2f;
					Main.dust[num277].noLight = true;
					Main.dust[num277].noGravity = true;
					Main.dust[num277].position += Main.dust[num277].velocity * 4f;
				}
			}
			if (this.type == 435)
			{
				int num278 = Main.rand.Next(5, 10);
				for (int num279 = 0; num279 < num278; num279++)
				{
					int num280 = Dust.NewDust(base.Center, 0, 0, 226, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num280].velocity *= 1.6f;
					Dust expr_9B12_cp_0 = Main.dust[num280];
					expr_9B12_cp_0.velocity.Y = expr_9B12_cp_0.velocity.Y - 1f;
					Main.dust[num280].position = Vector2.Lerp(Main.dust[num280].position, base.Center, 0.5f);
					Main.dust[num280].noGravity = true;
				}
			}
			if (this.type == 682)
			{
				int num281 = 22;
				for (int num282 = 0; num282 < num281; num282++)
				{
					int num283 = Dust.NewDust(base.Center, 0, 0, 272, 0f, 0f, 0, default(Color), 0.5f);
					Main.dust[num283].velocity *= 1.6f;
					Dust expr_9BFA_cp_0 = Main.dust[num283];
					expr_9BFA_cp_0.velocity.Y = expr_9BFA_cp_0.velocity.Y - 1f;
					Main.dust[num283].position = Vector2.Lerp(Main.dust[num283].position, base.Center, 0.5f);
				}
			}
			if (this.type == 436)
			{
				int num284 = Main.rand.Next(5, 10);
				for (int num285 = 0; num285 < num284; num285++)
				{
					int num286 = Dust.NewDust(base.Center, 0, 0, 220, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num286].velocity *= 1.6f;
					Dust expr_9CDE_cp_0 = Main.dust[num286];
					expr_9CDE_cp_0.velocity.Y = expr_9CDE_cp_0.velocity.Y - 1f;
					Main.dust[num286].position = Vector2.Lerp(Main.dust[num286].position, base.Center, 0.5f);
					Main.dust[num286].noGravity = true;
				}
			}
			if (this.type == 462)
			{
				int num287 = Main.rand.Next(5, 10);
				for (int num288 = 0; num288 < num287; num288++)
				{
					int num289 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 0.5f);
					Main.dust[num289].velocity *= 1.6f;
					Dust expr_9DD2_cp_0 = Main.dust[num289];
					expr_9DD2_cp_0.velocity.Y = expr_9DD2_cp_0.velocity.Y - 1f;
					Main.dust[num289].position -= Vector2.One * 4f;
					Main.dust[num289].position = Vector2.Lerp(Main.dust[num289].position, base.Center, 0.5f);
					Main.dust[num289].noGravity = true;
				}
			}
			if (this.type == 442)
			{
				Main.PlaySound(SoundID.Item94, this.position);
				int num290 = Main.rand.Next(3, 7);
				for (int num291 = 0; num291 < num290; num291++)
				{
					int num292 = Dust.NewDust(this.position, this.width, this.height, 135, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num292].velocity *= 2f;
					Main.dust[num292].noGravity = true;
				}
				if (Main.myPlayer == this.owner)
				{
					Rectangle value19 = new Rectangle((int)base.Center.X - 40, (int)base.Center.Y - 40, 80, 80);
					for (int num293 = 0; num293 < 1000; num293++)
					{
						if (num293 != this.whoAmI && Main.projectile[num293].active && Main.projectile[num293].owner == this.owner && Main.projectile[num293].type == 443 && Main.projectile[num293].getRect().Intersects(value19))
						{
							Main.projectile[num293].ai[1] = 1f;
							Main.projectile[num293].velocity = (base.Center - Main.projectile[num293].Center) / 5f;
							Main.projectile[num293].netUpdate = true;
						}
					}
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 443, this.damage, 0f, this.owner, 0f, 0f);
				}
			}
			if (this.type == 440)
			{
				int num294 = Main.rand.Next(3, 7);
				for (int num295 = 0; num295 < num294; num295++)
				{
					int num296 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 135, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num296].velocity *= 2f;
					Main.dust[num296].noGravity = true;
				}
			}
			if (this.type == 606)
			{
				int num297 = Main.rand.Next(3, 7);
				for (int num298 = 0; num298 < num297; num298++)
				{
					int num299 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 182, 0f, 0f, 100, default(Color), 1.6f);
					Main.dust[num299].velocity *= 1.5f;
					Main.dust[num299].noGravity = true;
				}
			}
			if (this.type == 449)
			{
				int num300 = Main.rand.Next(3, 7);
				for (int num301 = 0; num301 < num300; num301++)
				{
					int num302 = Dust.NewDust(base.Center - this.velocity / 2f, 0, 0, 228, 0f, 0f, 100, default(Color), 2.1f);
					Main.dust[num302].velocity *= 2f;
					Main.dust[num302].noGravity = true;
				}
			}
			if (this.type == 495)
			{
				for (int num303 = 0; num303 < 15; num303++)
				{
					int num304 = Dust.NewDust(base.Center, 10, 10, 27, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num304].noGravity = true;
					Main.dust[num304].velocity -= this.oldVelocity * 0.3f;
				}
			}
			if (this.type == 497)
			{
				for (int num305 = 0; num305 < 15; num305++)
				{
					int num306 = Dust.NewDust(base.Center, 10, 10, 27, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num306].noGravity = true;
					Main.dust[num306].velocity *= 2f;
					Main.dust[num306].velocity -= this.oldVelocity * 0.3f;
					Main.dust[num306].scale += (float)Main.rand.Next(150) * 0.001f;
				}
			}
			if (this.type == 448)
			{
				Main.PlaySound(SoundID.Item14, this.position);
				this.position = base.Center;
				this.width = (this.height = 112);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num307 = 0; num307 < 4; num307++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num308 = 0; num308 < 40; num308++)
				{
					int num309 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 0, default(Color), 2.5f);
					Main.dust[num309].noGravity = true;
					Main.dust[num309].velocity *= 3f;
					num309 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num309].velocity *= 2f;
					Main.dust[num309].noGravity = true;
				}
				for (int num310 = 0; num310 < 1; num310++)
				{
					int num311 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num311].velocity *= 0.3f;
					Gore expr_A6F8_cp_0 = Main.gore[num311];
					expr_A6F8_cp_0.velocity.X = expr_A6F8_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_A728_cp_0 = Main.gore[num311];
					expr_A728_cp_0.velocity.Y = expr_A728_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 616)
			{
				Main.PlaySound(SoundID.Item14, this.position);
				this.position = base.Center;
				this.width = (this.height = 80);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num312 = 0; num312 < 4; num312++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num313 = 0; num313 < 40; num313++)
				{
					int num314 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 200, default(Color), 2.5f);
					Main.dust[num314].noGravity = true;
					Main.dust[num314].velocity *= 2f;
					num314 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0f, 0f, 200, default(Color), 1.5f);
					Main.dust[num314].velocity *= 1.2f;
					Main.dust[num314].noGravity = true;
				}
				for (int num315 = 0; num315 < 1; num315++)
				{
					int num316 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num316].velocity *= 0.3f;
					Gore expr_AA28_cp_0 = Main.gore[num316];
					expr_AA28_cp_0.velocity.X = expr_AA28_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_AA58_cp_0 = Main.gore[num316];
					expr_AA58_cp_0.velocity.Y = expr_AA58_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				this.Damage();
			}
			if (this.type == 502)
			{
				Vector2 value20 = new Vector2((float)this.width, (float)this.height) / 2f;
				for (int num317 = 0; num317 < this.oldPos.Length; num317++)
				{
					if (!(this.oldPos[num317] == Vector2.Zero))
					{
						int num318 = Dust.NewDust(this.oldPos[num317] + value20, 0, 0, 66, 0f, 0f, 150, Color.Transparent, 0.7f);
						Main.dust[num318].color = Main.hslToRgb(Main.rand.NextFloat(), 1f, 0.5f);
						Main.dust[num318].noGravity = true;
					}
				}
			}
			if (this.type == 510)
			{
				Main.PlaySound(SoundID.Item107, this.position);
				Gore.NewGore(base.Center, -this.oldVelocity * 0.2f, 704, 1f);
				Gore.NewGore(base.Center, -this.oldVelocity * 0.2f, 705, 1f);
				if (this.owner == Main.myPlayer)
				{
					int num319 = Main.rand.Next(20, 31);
					for (int num320 = 0; num320 < num319; num320++)
					{
						Vector2 value21 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
						value21.Normalize();
						value21 *= (float)Main.rand.Next(10, 201) * 0.01f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, value21.X, value21.Y, 511 + Main.rand.Next(3), this.damage, 1f, this.owner, 0f, (float)Main.rand.Next(-45, 1));
					}
				}
			}
			if (this.type == 408)
			{
				for (int num321 = 0; num321 < 15; num321++)
				{
					int num322 = Dust.NewDust(base.Center - Vector2.One * 10f, 50, 50, 5, 0f, -2f, 0, default(Color), 1f);
					Main.dust[num322].velocity /= 2f;
				}
				int num323 = 10;
				int num324 = Gore.NewGore(base.Center, this.velocity * 0.8f, 584, 1f);
				Main.gore[num324].timeLeft /= num323;
				num324 = Gore.NewGore(base.Center, this.velocity * 0.9f, 585, 1f);
				Main.gore[num324].timeLeft /= num323;
				num324 = Gore.NewGore(base.Center, this.velocity * 1f, 586, 1f);
				Main.gore[num324].timeLeft /= num323;
			}
			if (this.type == 385)
			{
				Main.PlaySound(4, (int)base.Center.X, (int)base.Center.Y, 19, 1f, 0f);
				int num325 = 36;
				for (int num326 = 0; num326 < num325; num326++)
				{
					Vector2 vector8 = Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f;
					vector8 = vector8.RotatedBy((double)((float)(num326 - (num325 / 2 - 1)) * 6.28318548f / (float)num325), default(Vector2)) + base.Center;
					Vector2 vector9 = vector8 - base.Center;
					int num327 = Dust.NewDust(vector8 + vector9, 0, 0, 172, vector9.X * 2f, vector9.Y * 2f, 100, default(Color), 1.4f);
					Main.dust[num327].noGravity = true;
					Main.dust[num327].noLight = true;
					Main.dust[num327].velocity = vector9;
				}
				if (this.owner == Main.myPlayer)
				{
					if (this.ai[1] < 1f)
					{
						int num328 = Main.expertMode ? 25 : 40;
						int num329 = Projectile.NewProjectile(base.Center.X - (float)(this.direction * 30), base.Center.Y - 4f, (float)(-(float)this.direction) * 0.01f, 0f, 384, num328, 4f, this.owner, 16f, 15f);
						Main.projectile[num329].netUpdate = true;
					}
					else
					{
						int num330 = (int)(base.Center.Y / 16f);
						int num331 = (int)(base.Center.X / 16f);
						int num332 = 100;
						if (num331 < 10)
						{
							num331 = 10;
						}
						if (num331 > Main.maxTilesX - 10)
						{
							num331 = Main.maxTilesX - 10;
						}
						if (num330 < 10)
						{
							num330 = 10;
						}
						if (num330 > Main.maxTilesY - num332 - 10)
						{
							num330 = Main.maxTilesY - num332 - 10;
						}
						for (int num333 = num330; num333 < num330 + num332; num333++)
						{
							Tile tile = Main.tile[num331, num333];
							if (tile.active() && (Main.tileSolid[(int)tile.type] || tile.liquid != 0))
							{
								num330 = num333;
								break;
							}
						}
						int num334 = Main.expertMode ? 50 : 80;
						int num335 = Projectile.NewProjectile((float)(num331 * 16 + 8), (float)(num330 * 16 - 24), 0f, 0f, 386, num334, 4f, Main.myPlayer, 16f, 24f);
						Main.projectile[num335].netUpdate = true;
					}
				}
			}
			else if (this.type >= 424 && this.type <= 426)
			{
				Main.PlaySound(SoundID.Item89, this.position);
				this.position.X = this.position.X + (float)(this.width / 2);
				this.position.Y = this.position.Y + (float)(this.height / 2);
				this.width = (int)(128f * this.scale);
				this.height = (int)(128f * this.scale);
				this.position.X = this.position.X - (float)(this.width / 2);
				this.position.Y = this.position.Y - (float)(this.height / 2);
				for (int num336 = 0; num336 < 8; num336++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
				}
				for (int num337 = 0; num337 < 32; num337++)
				{
					int num338 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num338].noGravity = true;
					Main.dust[num338].velocity *= 3f;
					num338 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num338].velocity *= 2f;
					Main.dust[num338].noGravity = true;
				}
				for (int num339 = 0; num339 < 2; num339++)
				{
					int num340 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num340].velocity *= 0.3f;
					Gore expr_B4D2_cp_0 = Main.gore[num340];
					expr_B4D2_cp_0.velocity.X = expr_B4D2_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_B502_cp_0 = Main.gore[num340];
					expr_B502_cp_0.velocity.Y = expr_B502_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
				}
				if (this.owner == Main.myPlayer)
				{
					this.localAI[1] = -1f;
					this.maxPenetrate = 0;
					this.Damage();
				}
				for (int num341 = 0; num341 < 5; num341++)
				{
					int num342 = Utils.SelectRandom<int>(Main.rand, new int[]
					{
						6,
						259,
						158
					});
					int num343 = Dust.NewDust(this.position, this.width, this.height, num342, 2.5f * (float)this.direction, -2.5f, 0, default(Color), 1f);
					Main.dust[num343].alpha = 200;
					Main.dust[num343].velocity *= 2.4f;
					Main.dust[num343].scale += Main.rand.NextFloat();
				}
			}
			if (this.type == 399)
			{
				Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 value22 = new Vector2(20f, 20f);
				for (int num344 = 0; num344 < 5; num344++)
				{
					Dust.NewDust(base.Center - value22 / 2f, (int)value22.X, (int)value22.Y, 12, 0f, 0f, 0, Color.Red, 1f);
				}
				for (int num345 = 0; num345 < 10; num345++)
				{
					int num346 = Dust.NewDust(base.Center - value22 / 2f, (int)value22.X, (int)value22.Y, 31, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num346].velocity *= 1.4f;
				}
				for (int num347 = 0; num347 < 20; num347++)
				{
					int num348 = Dust.NewDust(base.Center - value22 / 2f, (int)value22.X, (int)value22.Y, 6, 0f, 0f, 100, default(Color), 2.5f);
					Main.dust[num348].noGravity = true;
					Main.dust[num348].velocity *= 5f;
					num348 = Dust.NewDust(base.Center - value22 / 2f, (int)value22.X, (int)value22.Y, 6, 0f, 0f, 100, default(Color), 1.5f);
					Main.dust[num348].velocity *= 3f;
				}
				if (Main.myPlayer == this.owner)
				{
					for (int num349 = 0; num349 < 6; num349++)
					{
						float num350 = -this.velocity.X * (float)Main.rand.Next(20, 50) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
						float num351 = -Math.Abs(this.velocity.Y) * (float)Main.rand.Next(30, 50) * 0.01f + (float)Main.rand.Next(-20, 5) * 0.4f;
						Projectile.NewProjectile(base.Center.X + num350, base.Center.Y + num351, num350, num351, 400 + Main.rand.Next(3), (int)((double)this.damage * 0.5), 0f, this.owner, 0f, 0f);
					}
				}
			}
			if (this.type == 384 || this.type == 386)
			{
				for (int num352 = 0; num352 < 20; num352++)
				{
					int num353 = Dust.NewDust(this.position, this.width, this.height, 212, (float)(this.direction * 2), 0f, 100, default(Color), 1.4f);
					Dust dust20 = Main.dust[num353];
					dust20.color = Color.CornflowerBlue;
					dust20.color = Color.Lerp(dust20.color, Color.White, 0.3f);
					dust20.noGravity = true;
				}
			}
			if (this.type == 507 || this.type == 508)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 vector10 = this.position;
				Vector2 oldVelocity = this.oldVelocity;
				oldVelocity.Normalize();
				vector10 += oldVelocity * 16f;
				for (int num354 = 0; num354 < 20; num354++)
				{
					int num355 = Dust.NewDust(vector10, this.width, this.height, 81, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num355].position = (Main.dust[num355].position + base.Center) / 2f;
					Main.dust[num355].velocity += this.oldVelocity * 0.4f;
					Main.dust[num355].velocity *= 0.5f;
					Main.dust[num355].noGravity = true;
					vector10 -= oldVelocity * 8f;
				}
			}
			if (this.type == 598)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				Vector2 vector11 = this.position;
				Vector2 value23 = (this.rotation - 1.57079637f).ToRotationVector2();
				vector11 += value23 * 16f;
				for (int num356 = 0; num356 < 20; num356++)
				{
					int num357 = Dust.NewDust(vector11, this.width, this.height, 81, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num357].position = (Main.dust[num357].position + base.Center) / 2f;
					Main.dust[num357].velocity += value23 * 2f;
					Main.dust[num357].velocity *= 0.5f;
					Main.dust[num357].noGravity = true;
					vector11 -= value23 * 8f;
				}
			}
			if (this.type == 1 || this.type == 81 || this.type == 98)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num358 = 0; num358 < 10; num358++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			if (this.type == 336 || this.type == 345)
			{
				for (int num359 = 0; num359 < 6; num359++)
				{
					int num360 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 196, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num360].noGravity = true;
					Main.dust[num360].scale = this.scale;
				}
			}
			if (this.type == 358)
			{
				this.velocity = this.oldVelocity * 0.2f;
				for (int num361 = 0; num361 < 100; num361++)
				{
					int num362 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 211, 0f, 0f, 75, default(Color), 1.2f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num362].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num362].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num362].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num362].scale = 0.6f;
					}
					else
					{
						Main.dust[num362].noGravity = true;
					}
					Main.dust[num362].velocity *= 0.3f;
					Main.dust[num362].velocity += this.velocity;
					Main.dust[num362].velocity *= 1f + (float)Main.rand.Next(-100, 101) * 0.01f;
					Dust expr_C07B_cp_0 = Main.dust[num362];
					expr_C07B_cp_0.velocity.X = expr_C07B_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.015f;
					Dust expr_C0AB_cp_0 = Main.dust[num362];
					expr_C0AB_cp_0.velocity.Y = expr_C0AB_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.015f;
					Main.dust[num362].position = base.Center;
				}
			}
			if (this.type == 406)
			{
				int num363 = 175;
				Color newColor3 = new Color(0, 80, 255, 100);
				this.velocity = this.oldVelocity * 0.2f;
				for (int num364 = 0; num364 < 40; num364++)
				{
					int num365 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, num363, newColor3, 1.6f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num365].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num365].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num365].alpha += 25;
					}
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num365].scale = 0.6f;
					}
					else
					{
						Main.dust[num365].noGravity = true;
					}
					Main.dust[num365].velocity *= 0.3f;
					Main.dust[num365].velocity += this.velocity;
					Main.dust[num365].velocity *= 1f + (float)Main.rand.Next(-100, 101) * 0.01f;
					Dust expr_C2AF_cp_0 = Main.dust[num365];
					expr_C2AF_cp_0.velocity.X = expr_C2AF_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.015f;
					Dust expr_C2DF_cp_0 = Main.dust[num365];
					expr_C2DF_cp_0.velocity.Y = expr_C2DF_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.015f;
					Main.dust[num365].position = base.Center;
				}
			}
			if (this.type == 344)
			{
				for (int num366 = 0; num366 < 3; num366++)
				{
					int num367 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num367].noGravity = true;
					Main.dust[num367].scale = this.scale;
				}
			}
			else if (this.type == 343)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				for (int num368 = 4; num368 < 31; num368++)
				{
					float num369 = this.oldVelocity.X * (30f / (float)num368);
					float num370 = this.oldVelocity.Y * (30f / (float)num368);
					int num371 = Dust.NewDust(new Vector2(this.oldPosition.X - num369, this.oldPosition.Y - num370), 8, 8, 197, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.2f);
					Main.dust[num371].noGravity = true;
					Main.dust[num371].velocity *= 0.5f;
				}
			}
			else if (this.type == 349)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				for (int num372 = 0; num372 < 3; num372++)
				{
					int num373 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num373].noGravity = true;
					Main.dust[num373].noLight = true;
					Main.dust[num373].scale = 0.7f;
				}
			}
			if (this.type == 323)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num374 = 0; num374 < 20; num374++)
				{
					int num375 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num375].noGravity = true;
						Main.dust[num375].scale = 1.3f;
						Main.dust[num375].velocity *= 1.5f;
						Main.dust[num375].velocity -= this.oldVelocity * 0.5f;
						Main.dust[num375].velocity *= 1.5f;
					}
					else
					{
						Main.dust[num375].velocity *= 0.75f;
						Main.dust[num375].velocity -= this.oldVelocity * 0.25f;
						Main.dust[num375].scale = 0.8f;
					}
				}
			}
			if (this.type == 589)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				Color newColor4 = Color.Red;
				if (this.ai[1] == 1f)
				{
					newColor4 = Color.Green;
				}
				if (this.ai[1] == 2f)
				{
					newColor4 = Color.Purple;
				}
				if (this.ai[1] == 3f)
				{
					newColor4 = Color.Gold;
				}
				if (this.ai[1] == 4f)
				{
					newColor4 = Color.White;
				}
				newColor4.A = 100;
				for (int num376 = 0; num376 < 30; num376++)
				{
					int num377 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, newColor4, 1f);
					Main.dust[num377].velocity *= 1f + Main.rand.NextFloat() * 1f;
					if (num376 < 10)
					{
						Main.dust[num377].noGravity = true;
						Main.dust[num377].velocity *= 0.5f;
					}
				}
			}
			if (this.type == 346)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				for (int num378 = 0; num378 < 10; num378++)
				{
					int num379 = 10;
					if (this.ai[1] == 1f)
					{
						num379 = 4;
					}
					int num380 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num379, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num380].noGravity = true;
				}
			}
			if (this.type == 335)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				for (int num381 = 0; num381 < 10; num381++)
				{
					int num382 = 90 - (int)this.ai[1];
					int num383 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num382, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num383].noLight = true;
					Main.dust[num383].scale = 0.8f;
				}
			}
			if (this.type == 318)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num384 = 0; num384 < 10; num384++)
				{
					int num385 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num385].noGravity = true;
					}
				}
			}
			if (this.type == 378)
			{
				for (int num386 = 0; num386 < 10; num386++)
				{
					int num387 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0f, 0f, 0, default(Color), 1f);
					if (Main.rand.Next(2) == 0)
					{
						Main.dust[num387].noGravity = true;
					}
				}
			}
			else if (this.type == 311)
			{
				for (int num388 = 0; num388 < 5; num388++)
				{
					int num389 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 189, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num389].scale = 0.85f;
					Main.dust[num389].noGravity = true;
					Main.dust[num389].velocity += this.velocity * 0.5f;
				}
			}
			else if (this.type == 316)
			{
				for (int num390 = 0; num390 < 5; num390++)
				{
					int num391 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 195, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num391].scale = 0.85f;
					Main.dust[num391].noGravity = true;
					Main.dust[num391].velocity += this.velocity * 0.5f;
				}
			}
			else if (this.type == 184 || this.type == 195)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num392 = 0; num392 < 5; num392++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 275 || this.type == 276)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num393 = 0; num393 < 5; num393++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 291)
			{
				if (this.owner == Main.myPlayer)
				{
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 292, this.damage, this.knockBack, this.owner, 0f, 0f);
				}
			}
			else if (this.type == 295)
			{
				if (this.owner == Main.myPlayer)
				{
					Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 296, (int)((double)this.damage * 0.65), this.knockBack, this.owner, 0f, 0f);
				}
			}
			else if (this.type == 270)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27, 1f, 0f);
				if (this.ai[0] < 0f)
				{
					for (int num394 = 0; num394 < 20; num394++)
					{
						int num395 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num395].noGravity = true;
						Main.dust[num395].velocity *= 1.2f;
						Main.dust[num395].scale = 1.3f;
						Main.dust[num395].velocity -= this.oldVelocity * 0.3f;
						num395 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num395].noGravity = true;
						Main.dust[num395].velocity *= 3f;
					}
				}
				else
				{
					for (int num396 = 0; num396 < 20; num396++)
					{
						int num397 = Dust.NewDust(this.position, this.width, this.height, 26, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num397].noGravity = true;
						Main.dust[num397].velocity *= 1.2f;
						Main.dust[num397].scale = 1.3f;
						Main.dust[num397].velocity -= this.oldVelocity * 0.3f;
						num397 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num397].noGravity = true;
						Main.dust[num397].velocity *= 3f;
					}
				}
			}
			else if (this.type == 265)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27, 1f, 0f);
				for (int num398 = 0; num398 < 15; num398++)
				{
					int num399 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0f, 0f, 100, default(Color), 1.2f);
					Main.dust[num399].noGravity = true;
					Main.dust[num399].velocity *= 1.2f;
					Main.dust[num399].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 355)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27, 1f, 0f);
				for (int num400 = 0; num400 < 15; num400++)
				{
					int num401 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, 0f, 0f, 100, default(Color), 1.2f);
					Main.dust[num401].noGravity = true;
					Main.dust[num401].velocity *= 1.2f;
					Main.dust[num401].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 304)
			{
				for (int num402 = 0; num402 < 3; num402++)
				{
					int num403 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 182, 0f, 0f, 100, default(Color), 0.8f);
					Main.dust[num403].noGravity = true;
					Main.dust[num403].velocity *= 1.2f;
					Main.dust[num403].velocity -= this.oldVelocity * 0.3f;
				}
			}
			else if (this.type == 263)
			{
				Main.PlaySound(SoundID.Item27, this.position);
				for (int num404 = 0; num404 < 15; num404++)
				{
					int num405 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(40) * 0.01f);
					Main.dust[num405].noGravity = true;
					Main.dust[num405].velocity *= 2f;
				}
			}
			else if (this.type == 261)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num406 = 0; num406 < 5; num406++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 148, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 229)
			{
				for (int num407 = 0; num407 < 25; num407++)
				{
					int num408 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num408].noGravity = true;
					Main.dust[num408].velocity *= 1.5f;
					Main.dust[num408].scale = 1.5f;
				}
			}
			else if (this.type == 239)
			{
				int num409 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 154, 0f, 0f, 0, default(Color), 1f);
				Dust expr_D83D_cp_0 = Main.dust[num409];
				expr_D83D_cp_0.position.X = expr_D83D_cp_0.position.X - 2f;
				Main.dust[num409].alpha = 38;
				Main.dust[num409].velocity *= 0.1f;
				Main.dust[num409].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num409].scale = 0.95f;
			}
			else if (this.type == 245)
			{
				int num410 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 114, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num410].noGravity = true;
				Dust expr_D949_cp_0 = Main.dust[num410];
				expr_D949_cp_0.position.X = expr_D949_cp_0.position.X - 2f;
				Main.dust[num410].alpha = 38;
				Main.dust[num410].velocity *= 0.1f;
				Main.dust[num410].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num410].scale = 0.95f;
			}
			else if (this.type == 264)
			{
				int num411 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (float)this.height - 2f), 2, 2, 54, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num411].noGravity = true;
				Dust expr_DA55_cp_0 = Main.dust[num411];
				expr_DA55_cp_0.position.X = expr_DA55_cp_0.position.X - 2f;
				Main.dust[num411].alpha = 38;
				Main.dust[num411].velocity *= 0.1f;
				Main.dust[num411].velocity += -this.oldVelocity * 0.25f;
				Main.dust[num411].scale = 0.95f;
			}
			else if (this.type == 206 || this.type == 225)
			{
				Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num412 = 0; num412 < 5; num412++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 227)
			{
				Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num413 = 0; num413 < 15; num413++)
				{
					int num414 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num414].noGravity = true;
					Main.dust[num414].velocity += this.oldVelocity;
					Main.dust[num414].scale = 1.5f;
				}
			}
			else if (this.type == 237 && this.owner == Main.myPlayer)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 238, this.damage, this.knockBack, this.owner, 0f, 0f);
			}
			else if (this.type == 243 && this.owner == Main.myPlayer)
			{
				Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 244, this.damage, this.knockBack, this.owner, 0f, 0f);
			}
			else if (this.type == 120)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num415 = 0; num415 < 10; num415++)
				{
					int num416 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					if (num415 < 5)
					{
						Main.dust[num416].noGravity = true;
					}
					Main.dust[num416].velocity *= 0.2f;
				}
			}
			else if (this.type == 181 || this.type == 189 || this.type == 566)
			{
				for (int num417 = 0; num417 < 6; num417++)
				{
					int num418 = Dust.NewDust(this.position, this.width, this.height, 150, this.velocity.X, this.velocity.Y, 50, default(Color), 1f);
					Main.dust[num418].noGravity = true;
					Main.dust[num418].scale = 1f;
				}
			}
			else if (this.type == 178)
			{
				for (int num419 = 0; num419 < 85; num419++)
				{
					int num420 = Main.rand.Next(139, 143);
					int num421 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num420, this.velocity.X, this.velocity.Y, 0, default(Color), 1.2f);
					Dust expr_DFAB_cp_0 = Main.dust[num421];
					expr_DFAB_cp_0.velocity.X = expr_DFAB_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_DFDB_cp_0 = Main.dust[num421];
					expr_DFDB_cp_0.velocity.Y = expr_DFDB_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_E00B_cp_0 = Main.dust[num421];
					expr_E00B_cp_0.velocity.X = expr_E00B_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_E041_cp_0 = Main.dust[num421];
					expr_E041_cp_0.velocity.Y = expr_E041_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_E077_cp_0 = Main.dust[num421];
					expr_E077_cp_0.velocity.X = expr_E077_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Dust expr_E0A7_cp_0 = Main.dust[num421];
					expr_E0A7_cp_0.velocity.Y = expr_E0A7_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					Main.dust[num421].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
				}
				for (int num422 = 0; num422 < 40; num422++)
				{
					int num423 = Main.rand.Next(276, 283);
					int num424 = Gore.NewGore(this.position, this.velocity, num423, 1f);
					Gore expr_E15D_cp_0 = Main.gore[num424];
					expr_E15D_cp_0.velocity.X = expr_E15D_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_E18D_cp_0 = Main.gore[num424];
					expr_E18D_cp_0.velocity.Y = expr_E18D_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_E1BD_cp_0 = Main.gore[num424];
					expr_E1BD_cp_0.velocity.X = expr_E1BD_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Gore expr_E1F3_cp_0 = Main.gore[num424];
					expr_E1F3_cp_0.velocity.Y = expr_E1F3_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Main.gore[num424].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
					Gore expr_E25A_cp_0 = Main.gore[num424];
					expr_E25A_cp_0.velocity.X = expr_E25A_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Gore expr_E28A_cp_0 = Main.gore[num424];
					expr_E28A_cp_0.velocity.Y = expr_E28A_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
				}
			}
			else if (this.type == 289)
			{
				for (int num425 = 0; num425 < 30; num425++)
				{
					int num426 = Main.rand.Next(139, 143);
					int num427 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num426, this.velocity.X, this.velocity.Y, 0, default(Color), 1.2f);
					Dust expr_E364_cp_0 = Main.dust[num427];
					expr_E364_cp_0.velocity.X = expr_E364_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_E394_cp_0 = Main.dust[num427];
					expr_E394_cp_0.velocity.Y = expr_E394_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Dust expr_E3C4_cp_0 = Main.dust[num427];
					expr_E3C4_cp_0.velocity.X = expr_E3C4_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_E3FA_cp_0 = Main.dust[num427];
					expr_E3FA_cp_0.velocity.Y = expr_E3FA_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Dust expr_E430_cp_0 = Main.dust[num427];
					expr_E430_cp_0.velocity.X = expr_E430_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Dust expr_E460_cp_0 = Main.dust[num427];
					expr_E460_cp_0.velocity.Y = expr_E460_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					Main.dust[num427].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
				}
				for (int num428 = 0; num428 < 15; num428++)
				{
					int num429 = Main.rand.Next(276, 283);
					int num430 = Gore.NewGore(this.position, this.velocity, num429, 1f);
					Gore expr_E516_cp_0 = Main.gore[num430];
					expr_E516_cp_0.velocity.X = expr_E516_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_E546_cp_0 = Main.gore[num430];
					expr_E546_cp_0.velocity.Y = expr_E546_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
					Gore expr_E576_cp_0 = Main.gore[num430];
					expr_E576_cp_0.velocity.X = expr_E576_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Gore expr_E5AC_cp_0 = Main.gore[num430];
					expr_E5AC_cp_0.velocity.Y = expr_E5AC_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
					Main.gore[num430].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
					Gore expr_E613_cp_0 = Main.gore[num430];
					expr_E613_cp_0.velocity.X = expr_E613_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
					Gore expr_E643_cp_0 = Main.gore[num430];
					expr_E643_cp_0.velocity.Y = expr_E643_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
				}
			}
			else if (this.type == 475 || this.type == 505 || this.type == 506)
			{
				if (this.ai[1] == 0f)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				}
				if (this.ai[1] < 10f)
				{
					Vector2 position2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num431 = -this.velocity.X;
					float num432 = -this.velocity.Y;
					float num433 = 1f;
					if (this.ai[0] <= 17f)
					{
						num433 = this.ai[0] / 17f;
					}
					int num434 = (int)(30f * num433);
					float num435 = 1f;
					if (this.ai[0] <= 30f)
					{
						num435 = this.ai[0] / 30f;
					}
					float num436 = 0.4f * num435;
					float num437 = num436;
					num432 += num437;
					for (int num438 = 0; num438 < num434; num438++)
					{
						float num439 = (float)Math.Sqrt((double)(num431 * num431 + num432 * num432));
						float num440 = 5.6f;
						if (Math.Abs(num431) + Math.Abs(num432) < 1f)
						{
							num440 *= Math.Abs(num431) + Math.Abs(num432) / 1f;
						}
						num439 = num440 / num439;
						num431 *= num439;
						num432 *= num439;
						Math.Atan2((double)num432, (double)num431);
						int num441 = 3;
						if (this.type == 506)
						{
							num441 = 30;
						}
						if (this.type == 505)
						{
							num441 = 239;
						}
						if ((float)num438 > this.ai[1])
						{
							for (int num442 = 0; num442 < 4; num442++)
							{
								int num443 = Dust.NewDust(position2, this.width, this.height, num441, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num443].noGravity = true;
								Main.dust[num443].velocity *= 0.3f;
							}
						}
						position2.X += num431;
						position2.Y += num432;
						num431 = -this.velocity.X;
						num432 = -this.velocity.Y;
						num437 += num436;
						num432 += num437;
					}
				}
			}
			else if (this.type == 171)
			{
				if (this.ai[1] == 0f)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				}
				if (this.ai[1] < 10f)
				{
					Vector2 position3 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
					float num444 = -this.velocity.X;
					float num445 = -this.velocity.Y;
					float num446 = 1f;
					if (this.ai[0] <= 17f)
					{
						num446 = this.ai[0] / 17f;
					}
					int num447 = (int)(30f * num446);
					float num448 = 1f;
					if (this.ai[0] <= 30f)
					{
						num448 = this.ai[0] / 30f;
					}
					float num449 = 0.4f * num448;
					float num450 = num449;
					num445 += num450;
					for (int num451 = 0; num451 < num447; num451++)
					{
						float num452 = (float)Math.Sqrt((double)(num444 * num444 + num445 * num445));
						float num453 = 5.6f;
						if (Math.Abs(num444) + Math.Abs(num445) < 1f)
						{
							num453 *= Math.Abs(num444) + Math.Abs(num445) / 1f;
						}
						num452 = num453 / num452;
						num444 *= num452;
						num445 *= num452;
						Math.Atan2((double)num445, (double)num444);
						if ((float)num451 > this.ai[1])
						{
							for (int num454 = 0; num454 < 4; num454++)
							{
								int num455 = Dust.NewDust(position3, this.width, this.height, 129, 0f, 0f, 0, default(Color), 1f);
								Main.dust[num455].noGravity = true;
								Main.dust[num455].velocity *= 0.3f;
							}
						}
						position3.X += num444;
						position3.Y += num445;
						num444 = -this.velocity.X;
						num445 = -this.velocity.Y;
						num450 += num449;
						num445 += num450;
					}
				}
			}
			else if (this.type == 117)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num456 = 0; num456 < 10; num456++)
				{
					Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 1f);
				}
			}
			else if (this.type == 166)
			{
				Main.PlaySound(SoundID.Item51, this.position);
				for (int num457 = 0; num457 < 10; num457++)
				{
					int num458 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num458].noGravity = true;
					Main.dust[num458].velocity -= this.oldVelocity * 0.25f;
				}
			}
			else if (this.type == 158)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num459 = 0; num459 < 10; num459++)
				{
					int num460 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 9, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num460].noGravity = true;
					Main.dust[num460].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 159)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num461 = 0; num461 < 10; num461++)
				{
					int num462 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num462].noGravity = true;
					Main.dust[num462].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 160)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num463 = 0; num463 < 10; num463++)
				{
					int num464 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 19, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num464].noGravity = true;
					Main.dust[num464].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type == 161)
			{
				Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
				for (int num465 = 0; num465 < 10; num465++)
				{
					int num466 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0f, 0f, 0, default(Color), 1f);
					Main.dust[num466].noGravity = true;
					Main.dust[num466].velocity -= this.velocity * 0.5f;
				}
			}
			else if (this.type >= 191 && this.type <= 194)
			{
				int num467 = Gore.NewGore(new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2)), new Vector2(0f, 0f), Main.rand.Next(61, 64), this.scale);
				Main.gore[num467].velocity *= 0.1f;
			}
			else if (!Main.projPet[this.type])
			{
				if (this.type == 93)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num468 = 0; num468 < 10; num468++)
					{
						int num469 = Dust.NewDust(this.position, this.width, this.height, 57, 0f, 0f, 100, default(Color), 0.5f);
						Dust expr_F2F5_cp_0 = Main.dust[num469];
						expr_F2F5_cp_0.velocity.X = expr_F2F5_cp_0.velocity.X * 2f;
						Dust expr_F315_cp_0 = Main.dust[num469];
						expr_F315_cp_0.velocity.Y = expr_F315_cp_0.velocity.Y * 2f;
					}
				}
				else if (this.type == 99)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num470 = 0; num470 < 30; num470++)
					{
						int num471 = Dust.NewDust(this.position, this.width, this.height, 1, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num471].scale *= 1.4f;
						}
						this.velocity *= 1.9f;
					}
				}
				else if (this.type == 655)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num472 = 0; num472 < 30; num472++)
					{
						int num473 = Dust.NewDust(this.position, this.width, this.height, 147, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num473].scale *= 1.4f;
						}
						this.velocity *= 1.9f;
					}
					if (Main.netMode != 1 && !this.wet)
					{
						int num474 = 2;
						if (Main.rand.Next(3) == 0)
						{
							num474++;
						}
						if (Main.rand.Next(3) == 0)
						{
							num474++;
						}
						if (Main.rand.Next(3) == 0)
						{
							num474++;
						}
						for (int num475 = 0; num475 < num474; num475++)
						{
							int num476 = Main.rand.Next(210, 212);
							int num477 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, num476, 1, 0f, 0f, 0f, 0f, 255);
							Main.npc[num477].velocity.X = (float)Main.rand.Next(-200, 201) * 0.002f;
							Main.npc[num477].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.002f;
							Main.npc[num477].netUpdate = true;
						}
						if (Main.rand.Next(4) == 0)
						{
							int num478 = NPC.NewNPC((int)base.Center.X, (int)base.Center.Y, 42, 1, 0f, 0f, 0f, 0f, 255);
							Main.npc[num478].netDefaults(-16);
							Main.npc[num478].velocity.X = (float)Main.rand.Next(-200, 201) * 0.001f;
							Main.npc[num478].velocity.Y = (float)Main.rand.Next(-200, 201) * 0.001f;
							Main.npc[num478].netUpdate = true;
						}
					}
				}
				else if (this.type == 91 || this.type == 92)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num479 = 0; num479 < 10; num479++)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
					}
					for (int num480 = 0; num480 < 3; num480++)
					{
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
					}
					if (this.type == 12 && this.damage < 500)
					{
						for (int num481 = 0; num481 < 10; num481++)
						{
							Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
						}
						for (int num482 = 0; num482 < 3; num482++)
						{
							Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
						}
					}
					if ((this.type == 91 || (this.type == 92 && this.ai[0] > 0f)) && this.owner == Main.myPlayer)
					{
						float x = this.position.X + (float)Main.rand.Next(-400, 400);
						float y = this.position.Y - (float)Main.rand.Next(600, 900);
						Vector2 vector12 = new Vector2(x, y);
						float num483 = this.position.X + (float)(this.width / 2) - vector12.X;
						float num484 = this.position.Y + (float)(this.height / 2) - vector12.Y;
						int num485 = 22;
						float num486 = (float)Math.Sqrt((double)(num483 * num483 + num484 * num484));
						num486 = (float)num485 / num486;
						num483 *= num486;
						num484 *= num486;
						int num487 = this.damage;
						int num488 = Projectile.NewProjectile(x, y, num483, num484, 92, num487, this.knockBack, this.owner, 0f, 0f);
						if (this.type == 91)
						{
							Main.projectile[num488].ai[1] = this.position.Y;
							Main.projectile[num488].ai[0] = 1f;
						}
						else
						{
							Main.projectile[num488].ai[1] = this.position.Y;
						}
					}
				}
				else if (this.type == 89)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num489 = 0; num489 < 5; num489++)
					{
						int num490 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 68, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num490].noGravity = true;
						Main.dust[num490].velocity *= 1.5f;
						Main.dust[num490].scale *= 0.9f;
					}
					if (this.type == 89 && this.owner == Main.myPlayer)
					{
						for (int num491 = 0; num491 < 3; num491++)
						{
							float num492 = -this.velocity.X * (float)Main.rand.Next(40, 70) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
							float num493 = -this.velocity.Y * (float)Main.rand.Next(40, 70) * 0.01f + (float)Main.rand.Next(-20, 21) * 0.4f;
							Projectile.NewProjectile(this.position.X + num492, this.position.Y + num493, num492, num493, 90, (int)((double)this.damage * 0.5), 0f, this.owner, 0f, 0f);
						}
					}
				}
				else if (this.type == 177)
				{
					for (int num494 = 0; num494 < 20; num494++)
					{
						int num495 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 137, 0f, 0f, Main.rand.Next(0, 101), default(Color), 1f + (float)Main.rand.Next(-20, 40) * 0.01f);
						Main.dust[num495].velocity -= this.oldVelocity * 0.2f;
						if (Main.rand.Next(3) == 0)
						{
							Main.dust[num495].scale *= 0.8f;
							Main.dust[num495].velocity *= 0.5f;
						}
						else
						{
							Main.dust[num495].noGravity = true;
						}
					}
				}
				else if (this.type == 119 || this.type == 118 || this.type == 128 || this.type == 359)
				{
					int num496 = 10;
					if (this.type == 119 || this.type == 359)
					{
						num496 = 20;
					}
					Main.PlaySound(SoundID.Item27, this.position);
					for (int num497 = 0; num497 < num496; num497++)
					{
						int num498 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(3) != 0)
						{
							Main.dust[num498].velocity *= 2f;
							Main.dust[num498].noGravity = true;
							Main.dust[num498].scale *= 1.75f;
						}
						else
						{
							Main.dust[num498].scale *= 0.5f;
						}
					}
				}
				else if (this.type == 309)
				{
					int num499 = 10;
					Main.PlaySound(SoundID.Item27, this.position);
					for (int num500 = 0; num500 < num499; num500++)
					{
						int num501 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 185, 0f, 0f, 0, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num501].velocity *= 2f;
							Main.dust[num501].noGravity = true;
							Main.dust[num501].scale *= 1.75f;
						}
					}
				}
				else if (this.type == 308)
				{
					int num502 = 80;
					Main.PlaySound(SoundID.Item27, this.position);
					for (int num503 = 0; num503 < num502; num503++)
					{
						int num504 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), this.width, this.height - 16, 185, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num504].velocity *= 2f;
						Main.dust[num504].noGravity = true;
						Main.dust[num504].scale *= 1.15f;
					}
				}
				else if (this.aiStyle == 29 && this.type <= 126)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					int num505 = this.type - 121 + 86;
					for (int num506 = 0; num506 < 15; num506++)
					{
						int num507 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num505, this.oldVelocity.X, this.oldVelocity.Y, 50, default(Color), 1.2f);
						Main.dust[num507].noGravity = true;
						Main.dust[num507].scale *= 1.25f;
						Main.dust[num507].velocity *= 0.5f;
					}
				}
				else if (this.type == 597)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num508 = 0; num508 < 15; num508++)
					{
						int num509 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 262, this.oldVelocity.X, this.oldVelocity.Y, 50, default(Color), 1.2f);
						Main.dust[num509].noGravity = true;
						Main.dust[num509].scale *= 1.25f;
						Main.dust[num509].velocity *= 0.5f;
					}
				}
				else if (this.type == 337)
				{
					Main.PlaySound(SoundID.Item27, this.position);
					for (int num510 = 0; num510 < 10; num510++)
					{
						int num511 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num511].noGravity = true;
					}
				}
				else if (this.type == 379 || this.type == 377)
				{
					for (int num512 = 0; num512 < 5; num512++)
					{
						int num513 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num513].scale = (float)Main.rand.Next(1, 10) * 0.1f;
						Main.dust[num513].noGravity = true;
						Main.dust[num513].fadeIn = 1.5f;
						Main.dust[num513].velocity *= 0.75f;
					}
				}
				else if (this.type == 80)
				{
					if (this.ai[0] >= 0f)
					{
						Main.PlaySound(SoundID.Item27, this.position);
						for (int num514 = 0; num514 < 10; num514++)
						{
							Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0f, 0f, 0, default(Color), 1f);
						}
					}
					int num515 = (int)this.position.X / 16;
					int num516 = (int)this.position.Y / 16;
					if (Main.tile[num515, num516] == null)
					{
						Main.tile[num515, num516] = new Tile();
					}
					if (Main.tile[num515, num516].type == 127 && Main.tile[num515, num516].active())
					{
						WorldGen.KillTile(num515, num516, false, false, false);
					}
				}
				else if (this.type == 76 || this.type == 77 || this.type == 78)
				{
					for (int num517 = 0; num517 < 5; num517++)
					{
						int num518 = Dust.NewDust(this.position, this.width, this.height, 27, 0f, 0f, 80, default(Color), 1.5f);
						Main.dust[num518].noGravity = true;
					}
				}
				else if (this.type == 55)
				{
					for (int num519 = 0; num519 < 5; num519++)
					{
						int num520 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0f, 0f, 0, default(Color), 1.5f);
						Main.dust[num520].noGravity = true;
					}
				}
				else if (this.type == 51 || this.type == 267)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num521 = 0; num521 < 5; num521++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 0.7f);
					}
				}
				else if (this.type == 478)
				{
					if (this.owner == Main.myPlayer)
					{
						Projectile.NewProjectile(base.Center.X, base.Center.Y, 0f, 0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0f, 0f);
					}
				}
				else if (this.type == 477 || this.type == 479)
				{
					for (int num522 = 0; num522 < 5; num522++)
					{
					}
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
				}
				else if (this.type == 2 || this.type == 82)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num523 = 0; num523 < 10; num523++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 474)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num524 = 0; num524 < 20; num524++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 0.9f);
					}
				}
				else if (this.type == 172)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num525 = 0; num525 < 20; num525++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 103)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num526 = 0; num526 < 20; num526++)
					{
						int num527 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0f, 0f, 100, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num527].scale *= 2.5f;
							Main.dust[num527].noGravity = true;
							Main.dust[num527].velocity *= 5f;
						}
					}
				}
				else if (this.type == 278)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num528 = 0; num528 < 20; num528++)
					{
						int num529 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0f, 0f, 100, default(Color), 1f);
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num529].scale *= 1.5f;
							Main.dust[num529].noGravity = true;
							Main.dust[num529].velocity *= 5f;
						}
					}
				}
				else if (this.type == 3 || this.type == 48 || this.type == 54 || this.type == 599)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num530 = 0; num530 < 10; num530++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 330)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num531 = 0; num531 < 10; num531++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 4)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num532 = 0; num532 < 10; num532++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0f, 0f, 150, default(Color), 1.1f);
					}
				}
				else if (this.type == 5)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num533 = 0; num533 < 60; num533++)
					{
						int num534 = Main.rand.Next(3);
						if (num534 == 0)
						{
							num534 = 15;
						}
						else if (num534 == 1)
						{
							num534 = 57;
						}
						else
						{
							num534 = 58;
						}
						Dust.NewDust(this.position, this.width, this.height, num534, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, default(Color), 1.5f);
					}
				}
				else if (this.type == 9 || this.type == 12 || this.type == 503)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					int num535 = 10;
					int num536 = 3;
					if (this.type == 503)
					{
						num535 = 40;
						num536 = 2;
						this.velocity /= 2f;
					}
					for (int num537 = 0; num537 < num535; num537++)
					{
						Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
					}
					for (int num538 = 0; num538 < num536; num538++)
					{
						int num539 = Main.rand.Next(16, 18);
						if (this.type == 503)
						{
							num539 = 16;
						}
						Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), num539, 1f);
					}
					if (this.type == 12 && this.damage < 100)
					{
						for (int num540 = 0; num540 < 10; num540++)
						{
							Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, default(Color), 1.2f);
						}
						for (int num541 = 0; num541 < 3; num541++)
						{
							Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
						}
					}
				}
				else if (this.type == 281)
				{
					Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					int num542 = Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 76, 1f);
					Main.gore[num542].velocity -= this.velocity * 0.5f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 77, 1f);
					Main.gore[num542].velocity -= this.velocity * 0.5f;
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num543 = 0; num543 < 20; num543++)
					{
						int num544 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num544].velocity *= 1.4f;
					}
					for (int num545 = 0; num545 < 10; num545++)
					{
						int num546 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num546].noGravity = true;
						Main.dust[num546].velocity *= 5f;
						num546 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num546].velocity *= 3f;
					}
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num542].velocity *= 0.4f;
					Gore expr_11506_cp_0 = Main.gore[num542];
					expr_11506_cp_0.velocity.X = expr_11506_cp_0.velocity.X + 1f;
					Gore expr_11526_cp_0 = Main.gore[num542];
					expr_11526_cp_0.velocity.Y = expr_11526_cp_0.velocity.Y + 1f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num542].velocity *= 0.4f;
					Gore expr_115AA_cp_0 = Main.gore[num542];
					expr_115AA_cp_0.velocity.X = expr_115AA_cp_0.velocity.X - 1f;
					Gore expr_115CA_cp_0 = Main.gore[num542];
					expr_115CA_cp_0.velocity.Y = expr_115CA_cp_0.velocity.Y + 1f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num542].velocity *= 0.4f;
					Gore expr_1164E_cp_0 = Main.gore[num542];
					expr_1164E_cp_0.velocity.X = expr_1164E_cp_0.velocity.X + 1f;
					Gore expr_1166E_cp_0 = Main.gore[num542];
					expr_1166E_cp_0.velocity.Y = expr_1166E_cp_0.velocity.Y - 1f;
					num542 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num542].velocity *= 0.4f;
					Gore expr_116F2_cp_0 = Main.gore[num542];
					expr_116F2_cp_0.velocity.X = expr_116F2_cp_0.velocity.X - 1f;
					Gore expr_11712_cp_0 = Main.gore[num542];
					expr_11712_cp_0.velocity.Y = expr_11712_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 162)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num547 = 0; num547 < 20; num547++)
					{
						int num548 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num548].velocity *= 1.4f;
					}
					for (int num549 = 0; num549 < 10; num549++)
					{
						int num550 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num550].noGravity = true;
						Main.dust[num550].velocity *= 5f;
						num550 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num550].velocity *= 3f;
					}
					int num551 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num551].velocity *= 0.4f;
					Gore expr_119DD_cp_0 = Main.gore[num551];
					expr_119DD_cp_0.velocity.X = expr_119DD_cp_0.velocity.X + 1f;
					Gore expr_119FD_cp_0 = Main.gore[num551];
					expr_119FD_cp_0.velocity.Y = expr_119FD_cp_0.velocity.Y + 1f;
					num551 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num551].velocity *= 0.4f;
					Gore expr_11A81_cp_0 = Main.gore[num551];
					expr_11A81_cp_0.velocity.X = expr_11A81_cp_0.velocity.X - 1f;
					Gore expr_11AA1_cp_0 = Main.gore[num551];
					expr_11AA1_cp_0.velocity.Y = expr_11AA1_cp_0.velocity.Y + 1f;
					num551 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num551].velocity *= 0.4f;
					Gore expr_11B25_cp_0 = Main.gore[num551];
					expr_11B25_cp_0.velocity.X = expr_11B25_cp_0.velocity.X + 1f;
					Gore expr_11B45_cp_0 = Main.gore[num551];
					expr_11B45_cp_0.velocity.Y = expr_11B45_cp_0.velocity.Y - 1f;
					num551 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num551].velocity *= 0.4f;
					Gore expr_11BC9_cp_0 = Main.gore[num551];
					expr_11BC9_cp_0.velocity.X = expr_11BC9_cp_0.velocity.X - 1f;
					Gore expr_11BE9_cp_0 = Main.gore[num551];
					expr_11BE9_cp_0.velocity.Y = expr_11BE9_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 240)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num552 = 0; num552 < 20; num552++)
					{
						int num553 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num553].velocity *= 1.4f;
					}
					for (int num554 = 0; num554 < 10; num554++)
					{
						int num555 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num555].noGravity = true;
						Main.dust[num555].velocity *= 5f;
						num555 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num555].velocity *= 3f;
					}
					int num556 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num556].velocity *= 0.4f;
					Gore expr_11EB4_cp_0 = Main.gore[num556];
					expr_11EB4_cp_0.velocity.X = expr_11EB4_cp_0.velocity.X + 1f;
					Gore expr_11ED4_cp_0 = Main.gore[num556];
					expr_11ED4_cp_0.velocity.Y = expr_11ED4_cp_0.velocity.Y + 1f;
					num556 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num556].velocity *= 0.4f;
					Gore expr_11F58_cp_0 = Main.gore[num556];
					expr_11F58_cp_0.velocity.X = expr_11F58_cp_0.velocity.X - 1f;
					Gore expr_11F78_cp_0 = Main.gore[num556];
					expr_11F78_cp_0.velocity.Y = expr_11F78_cp_0.velocity.Y + 1f;
					num556 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num556].velocity *= 0.4f;
					Gore expr_11FFC_cp_0 = Main.gore[num556];
					expr_11FFC_cp_0.velocity.X = expr_11FFC_cp_0.velocity.X + 1f;
					Gore expr_1201C_cp_0 = Main.gore[num556];
					expr_1201C_cp_0.velocity.Y = expr_1201C_cp_0.velocity.Y - 1f;
					num556 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num556].velocity *= 0.4f;
					Gore expr_120A0_cp_0 = Main.gore[num556];
					expr_120A0_cp_0.velocity.X = expr_120A0_cp_0.velocity.X - 1f;
					Gore expr_120C0_cp_0 = Main.gore[num556];
					expr_120C0_cp_0.velocity.Y = expr_120C0_cp_0.velocity.Y - 1f;
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 96;
					this.height = 96;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 283 || this.type == 282)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num557 = 0; num557 < 10; num557++)
					{
						int num558 = Dust.NewDust(this.position, this.width, this.height, 171, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num558].scale = (float)Main.rand.Next(1, 10) * 0.1f;
						Main.dust[num558].noGravity = true;
						Main.dust[num558].fadeIn = 1.5f;
						Main.dust[num558].velocity *= 0.75f;
					}
				}
				else if (this.type == 284)
				{
					for (int num559 = 0; num559 < 10; num559++)
					{
						int num560 = Main.rand.Next(139, 143);
						int num561 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num560, -this.velocity.X * 0.3f, -this.velocity.Y * 0.3f, 0, default(Color), 1.2f);
						Dust expr_122FC_cp_0 = Main.dust[num561];
						expr_122FC_cp_0.velocity.X = expr_122FC_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
						Dust expr_1232C_cp_0 = Main.dust[num561];
						expr_1232C_cp_0.velocity.Y = expr_1232C_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
						Dust expr_1235C_cp_0 = Main.dust[num561];
						expr_1235C_cp_0.velocity.X = expr_1235C_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_12392_cp_0 = Main.dust[num561];
						expr_12392_cp_0.velocity.Y = expr_12392_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Dust expr_123C8_cp_0 = Main.dust[num561];
						expr_123C8_cp_0.velocity.X = expr_123C8_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
						Dust expr_123F8_cp_0 = Main.dust[num561];
						expr_123F8_cp_0.velocity.Y = expr_123F8_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
						Main.dust[num561].scale *= 1f + (float)Main.rand.Next(-30, 31) * 0.01f;
					}
					for (int num562 = 0; num562 < 5; num562++)
					{
						int num563 = Main.rand.Next(276, 283);
						int num564 = Gore.NewGore(this.position, -this.velocity * 0.3f, num563, 1f);
						Gore expr_124BD_cp_0 = Main.gore[num564];
						expr_124BD_cp_0.velocity.X = expr_124BD_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.01f;
						Gore expr_124ED_cp_0 = Main.gore[num564];
						expr_124ED_cp_0.velocity.Y = expr_124ED_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.01f;
						Gore expr_1251D_cp_0 = Main.gore[num564];
						expr_1251D_cp_0.velocity.X = expr_1251D_cp_0.velocity.X * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Gore expr_12553_cp_0 = Main.gore[num564];
						expr_12553_cp_0.velocity.Y = expr_12553_cp_0.velocity.Y * (1f + (float)Main.rand.Next(-50, 51) * 0.01f);
						Main.gore[num564].scale *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						Gore expr_125BA_cp_0 = Main.gore[num564];
						expr_125BA_cp_0.velocity.X = expr_125BA_cp_0.velocity.X + (float)Main.rand.Next(-50, 51) * 0.05f;
						Gore expr_125EA_cp_0 = Main.gore[num564];
						expr_125EA_cp_0.velocity.Y = expr_125EA_cp_0.velocity.Y + (float)Main.rand.Next(-50, 51) * 0.05f;
					}
				}
				else if (this.type == 286)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num565 = 0; num565 < 7; num565++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					}
					for (int num566 = 0; num566 < 3; num566++)
					{
						int num567 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num567].noGravity = true;
						Main.dust[num567].velocity *= 3f;
						num567 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num567].velocity *= 2f;
					}
					int num568 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num568].velocity *= 0.3f;
					Gore expr_12836_cp_0 = Main.gore[num568];
					expr_12836_cp_0.velocity.X = expr_12836_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.05f;
					Gore expr_12866_cp_0 = Main.gore[num568];
					expr_12866_cp_0.velocity.Y = expr_12866_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.05f;
					if (this.owner == Main.myPlayer)
					{
						this.localAI[1] = -1f;
						this.maxPenetrate = 0;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 80;
						this.height = 80;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.Damage();
					}
				}
				else if (this.type == 14 || this.type == 20 || this.type == 36 || this.type == 83 || this.type == 84 || this.type == 389 || this.type == 104 || this.type == 279 || this.type == 100 || this.type == 110 || this.type == 180 || this.type == 207 || this.type == 357 || this.type == 242 || this.type == 302 || this.type == 257 || this.type == 259 || this.type == 285 || this.type == 287 || this.type == 576 || this.type == 577)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(SoundID.Item10, this.position);
				}
				else if (this.type == 660)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(SoundID.Item10, this.position);
					int num569 = Main.rand.Next(4, 10);
					for (int num570 = 0; num570 < num569; num570++)
					{
						int num571 = Dust.NewDust(base.Center, 0, 0, 180, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num571].velocity *= 1.6f;
						Dust expr_12B3B_cp_0 = Main.dust[num571];
						expr_12B3B_cp_0.velocity.Y = expr_12B3B_cp_0.velocity.Y - 1f;
						Main.dust[num571].velocity += -this.velocity * (Main.rand.NextFloat() * 2f - 1f) * 0.5f;
						Main.dust[num571].scale = 2f;
						Main.dust[num571].fadeIn = 0.5f;
						Main.dust[num571].noGravity = true;
					}
				}
				else if (this.type == 712)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(SoundID.Item10, this.position);
					int num572 = Main.rand.Next(6, 12);
					for (int num573 = 0; num573 < num572; num573++)
					{
						int num574 = Dust.NewDust(base.Center, 0, 0, 15, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num574].velocity *= 1.6f;
						Dust expr_12CA3_cp_0 = Main.dust[num574];
						expr_12CA3_cp_0.velocity.Y = expr_12CA3_cp_0.velocity.Y - 1f;
						Main.dust[num574].velocity += -this.velocity * (Main.rand.NextFloat() * 2f - 1f) * 0.5f;
						Main.dust[num574].scale = 1f;
						Main.dust[num574].fadeIn = 1.5f;
						Main.dust[num574].noGravity = true;
						Main.dust[num574].color = new Color(255, 255, 255, 0) * 0.3f;
						Main.dust[num574].velocity *= 0.7f;
						Main.dust[num574].position += Main.dust[num574].velocity * 5f;
					}
					for (int num575 = 0; num575 < 3; num575++)
					{
						Gore gore = Gore.NewGoreDirect(this.position, Vector2.Zero, 1008, 1f + Main.rand.NextFloatDirection() * 0.2f);
						gore.velocity *= 4f;
					}
				}
				else if (this.type == 638)
				{
					Collision.HitTiles(this.position, this.velocity, this.width, this.height);
					Main.PlaySound(SoundID.Item10, this.position);
					int num576 = Main.rand.Next(2, 5);
					for (int num577 = 0; num577 < num576; num577++)
					{
						int num578 = Dust.NewDust(base.Center, 0, 0, 229, 0f, 0f, 100, default(Color), 1f);
						Main.dust[num578].velocity *= 1.6f;
						Dust expr_12EED_cp_0 = Main.dust[num578];
						expr_12EED_cp_0.velocity.Y = expr_12EED_cp_0.velocity.Y - 1f;
						Main.dust[num578].position -= Vector2.One * 4f;
						Main.dust[num578].position = Vector2.Lerp(Main.dust[num578].position, base.Center, 0.5f);
						Main.dust[num578].noGravity = true;
					}
				}
				else if (this.type == 15 || this.type == 34 || this.type == 321)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num579 = 0; num579 < 20; num579++)
					{
						int num580 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num580].noGravity = true;
						Main.dust[num580].velocity *= 2f;
						num580 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num580].velocity *= 2f;
					}
				}
				else if (this.type == 253)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num581 = 0; num581 < 20; num581++)
					{
						int num582 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f);
						Main.dust[num582].noGravity = true;
						Main.dust[num582].velocity *= 2f;
						num582 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f);
						Main.dust[num582].velocity *= 2f;
					}
				}
				else if (this.type == 95 || this.type == 96)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num583 = 0; num583 < 20; num583++)
					{
						int num584 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 2f * this.scale);
						Main.dust[num584].noGravity = true;
						Main.dust[num584].velocity *= 2f;
						num584 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, default(Color), 1f * this.scale);
						Main.dust[num584].velocity *= 2f;
					}
				}
				else if (this.type == 79)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num585 = 0; num585 < 20; num585++)
					{
						int num586 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 66, 0f, 0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2f);
						Main.dust[num586].noGravity = true;
						Main.dust[num586].velocity *= 4f;
					}
				}
				else if (this.type == 16)
				{
					if (this.type == 16 && this.penetrate == 1)
					{
						this.maxPenetrate = -1;
						this.penetrate = -1;
						int num587 = 60;
						this.position.X = this.position.X - (float)(num587 / 2);
						this.position.Y = this.position.Y - (float)(num587 / 2);
						this.width += num587;
						this.height += num587;
						this.tileCollide = false;
						this.velocity *= 0.01f;
						this.Damage();
						this.scale = 0.01f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.width = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.height = 10;
					this.position.Y = this.position.Y - (float)(this.height / 2);
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num588 = 0; num588 < 20; num588++)
					{
						int num589 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num589].noGravity = true;
						Main.dust[num589].velocity *= 2f;
						num589 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0f, 0f, 100, default(Color), 1f);
					}
				}
				else if (this.type == 17)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num590 = 0; num590 < 5; num590++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0f, 0f, 0, default(Color), 1f);
					}
				}
				else if (this.type == 31 || this.type == 42)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num591 = 0; num591 < 5; num591++)
					{
						int num592 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num592].velocity *= 0.6f;
					}
				}
				else if (this.type >= 411 && this.type <= 414)
				{
					int num593 = 9;
					if (this.type == 412 || this.type == 414)
					{
						num593 = 11;
					}
					if (this.type == 413)
					{
						num593 = 19;
					}
					for (int num594 = 0; num594 < 5; num594++)
					{
						int num595 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, num593, 0f, this.velocity.Y / 2f, 0, default(Color), 1f);
						Main.dust[num595].noGravity = true;
						Main.dust[num595].velocity -= this.velocity * 0.5f;
					}
				}
				else if (this.type == 109)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num596 = 0; num596 < 5; num596++)
					{
						int num597 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 51, 0f, 0f, 0, default(Color), 0.6f);
						Main.dust[num597].velocity *= 0.6f;
					}
				}
				else if (this.type == 39)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num598 = 0; num598 < 5; num598++)
					{
						int num599 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 38, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num599].velocity *= 0.6f;
					}
				}
				else if (this.type == 71)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num600 = 0; num600 < 5; num600++)
					{
						int num601 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 53, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num601].velocity *= 0.6f;
					}
				}
				else if (this.type == 40)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num602 = 0; num602 < 5; num602++)
					{
						int num603 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num603].velocity *= 0.6f;
					}
				}
				else if (this.type == 21 || this.type == 471 || this.type == 532)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num604 = 0; num604 < 10; num604++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0f, 0f, 0, default(Color), 0.8f);
					}
				}
				else if (this.type == 583)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num605 = 0; num605 < 10; num605++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, 100, new Color(20, 250, 20, 240), 0.8f);
					}
				}
				else if (this.type == 584)
				{
					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num606 = 0; num606 < 10; num606++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0f, 0f, 100, new Color(250, 20, 120, 240), 0.8f);
					}
				}
				else if (this.type == 24)
				{
					for (int num607 = 0; num607 < 10; num607++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 0.75f);
					}
				}
				else if (this.type == 27)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num608 = 0; num608 < 30; num608++)
					{
						int num609 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 1f);
						Main.dust[num609].noGravity = true;
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, default(Color), 0.5f);
					}
				}
				else if (this.type == 38)
				{
					for (int num610 = 0; num610 < 10; num610++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 42, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, default(Color), 1f);
					}
				}
				else if (this.type == 44 || this.type == 45)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num611 = 0; num611 < 30; num611++)
					{
						int num612 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1.7f);
						Main.dust[num612].noGravity = true;
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, default(Color), 1f);
					}
				}
				else if (this.type == 41)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num613 = 0; num613 < 10; num613++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
					}
					for (int num614 = 0; num614 < 5; num614++)
					{
						int num615 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num615].noGravity = true;
						Main.dust[num615].velocity *= 3f;
						num615 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num615].velocity *= 2f;
					}
					int num616 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num616].velocity *= 0.4f;
					Gore expr_14419_cp_0 = Main.gore[num616];
					expr_14419_cp_0.velocity.X = expr_14419_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.1f;
					Gore expr_14449_cp_0 = Main.gore[num616];
					expr_14449_cp_0.velocity.Y = expr_14449_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.1f;
					num616 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num616].velocity *= 0.4f;
					Gore expr_144DD_cp_0 = Main.gore[num616];
					expr_144DD_cp_0.velocity.X = expr_144DD_cp_0.velocity.X + (float)Main.rand.Next(-10, 11) * 0.1f;
					Gore expr_1450D_cp_0 = Main.gore[num616];
					expr_1450D_cp_0.velocity.Y = expr_1450D_cp_0.velocity.Y + (float)Main.rand.Next(-10, 11) * 0.1f;
					if (this.owner == Main.myPlayer)
					{
						this.penetrate = -1;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 64;
						this.height = 64;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.Damage();
					}
				}
				else if (this.type == 514)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num617 = 0; num617 < 10; num617++)
					{
						int num618 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.3f);
						Main.dust[num618].velocity *= 1.4f;
					}
					for (int num619 = 0; num619 < 6; num619++)
					{
						int num620 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.1f);
						Main.dust[num620].noGravity = true;
						Main.dust[num620].velocity *= 4.6f;
						num620 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.3f);
						Main.dust[num620].velocity *= 3.3f;
						if (Main.rand.Next(2) == 0)
						{
							num620 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.1f);
							Main.dust[num620].velocity *= 2.7f;
						}
					}
					if (this.owner == Main.myPlayer)
					{
						this.penetrate = -1;
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 112;
						this.height = 112;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.ai[0] = 2f;
						this.Damage();
					}
				}
				else if (this.type == 306)
				{
					Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num621 = 0; num621 < 20; num621++)
					{
						int num622 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num622].scale *= 1.1f;
						Main.dust[num622].noGravity = true;
					}
					for (int num623 = 0; num623 < 30; num623++)
					{
						int num624 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0f, 0f, 0, default(Color), 1f);
						Main.dust[num624].velocity *= 2.5f;
						Main.dust[num624].scale *= 0.8f;
						Main.dust[num624].noGravity = true;
					}
					if (this.owner == Main.myPlayer)
					{
						int num625 = 2;
						if (Main.rand.Next(10) == 0)
						{
							num625++;
						}
						if (Main.rand.Next(10) == 0)
						{
							num625++;
						}
						if (Main.rand.Next(10) == 0)
						{
							num625++;
						}
						for (int num626 = 0; num626 < num625; num626++)
						{
							float num627 = (float)Main.rand.Next(-35, 36) * 0.02f;
							float num628 = (float)Main.rand.Next(-35, 36) * 0.02f;
							num627 *= 10f;
							num628 *= 10f;
							Projectile.NewProjectile(this.position.X, this.position.Y, num627, num628, 307, (int)((double)this.damage * 0.7), (float)((int)((double)this.knockBack * 0.35)), Main.myPlayer, 0f, 0f);
						}
					}
				}
				else if (this.type == 469)
				{
					if (this.owner == Main.myPlayer)
					{
						int num629 = 6;
						for (int num630 = 0; num630 < num629; num630++)
						{
							if (num630 % 2 != 1 || Main.rand.Next(3) == 0)
							{
								Vector2 value24 = this.position;
								Vector2 value25 = this.oldVelocity;
								value25.Normalize();
								value25 *= 8f;
								float num631 = (float)Main.rand.Next(-35, 36) * 0.01f;
								float num632 = (float)Main.rand.Next(-35, 36) * 0.01f;
								value24 -= value25 * (float)num630;
								num631 += this.oldVelocity.X / 6f;
								num632 += this.oldVelocity.Y / 6f;
								int num633 = Projectile.NewProjectile(value24.X, value24.Y, num631, num632, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage / 3), Main.player[this.owner].beeKB(0f), Main.myPlayer, 0f, 0f);
								Main.projectile[num633].magic = false;
								Main.projectile[num633].ranged = true;
								Main.projectile[num633].penetrate = 2;
							}
						}
					}
				}
				else if (this.type == 183)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num634 = 0; num634 < 20; num634++)
					{
						int num635 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num635].velocity *= 1f;
					}
					int num636 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_14E24_cp_0 = Main.gore[num636];
					expr_14E24_cp_0.velocity.X = expr_14E24_cp_0.velocity.X + 1f;
					Gore expr_14E44_cp_0 = Main.gore[num636];
					expr_14E44_cp_0.velocity.Y = expr_14E44_cp_0.velocity.Y + 1f;
					Main.gore[num636].velocity *= 0.3f;
					num636 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_14EC8_cp_0 = Main.gore[num636];
					expr_14EC8_cp_0.velocity.X = expr_14EC8_cp_0.velocity.X - 1f;
					Gore expr_14EE8_cp_0 = Main.gore[num636];
					expr_14EE8_cp_0.velocity.Y = expr_14EE8_cp_0.velocity.Y + 1f;
					Main.gore[num636].velocity *= 0.3f;
					num636 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_14F6C_cp_0 = Main.gore[num636];
					expr_14F6C_cp_0.velocity.X = expr_14F6C_cp_0.velocity.X + 1f;
					Gore expr_14F8C_cp_0 = Main.gore[num636];
					expr_14F8C_cp_0.velocity.Y = expr_14F8C_cp_0.velocity.Y - 1f;
					Main.gore[num636].velocity *= 0.3f;
					num636 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Gore expr_15010_cp_0 = Main.gore[num636];
					expr_15010_cp_0.velocity.X = expr_15010_cp_0.velocity.X - 1f;
					Gore expr_15030_cp_0 = Main.gore[num636];
					expr_15030_cp_0.velocity.Y = expr_15030_cp_0.velocity.Y - 1f;
					Main.gore[num636].velocity *= 0.3f;
					if (this.owner == Main.myPlayer)
					{
						int num637 = Main.rand.Next(15, 25);
						for (int num638 = 0; num638 < num637; num638++)
						{
							float speedX = (float)Main.rand.Next(-35, 36) * 0.02f;
							float speedY = (float)Main.rand.Next(-35, 36) * 0.02f;
							Projectile.NewProjectile(this.position.X, this.position.Y, speedX, speedY, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage), Main.player[this.owner].beeKB(0f), Main.myPlayer, 0f, 0f);
						}
					}
				}
				else if (this.aiStyle == 34)
				{
					if (this.owner != Main.myPlayer)
					{
						this.timeLeft = 60;
					}
					Main.PlaySound(SoundID.Item14, this.position);
					if (this.type == 167)
					{
						for (int num639 = 0; num639 < 400; num639++)
						{
							float num640 = 16f;
							if (num639 < 300)
							{
								num640 = 12f;
							}
							if (num639 < 200)
							{
								num640 = 8f;
							}
							if (num639 < 100)
							{
								num640 = 4f;
							}
							int num641 = 130;
							int num642 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num641, 0f, 0f, 100, default(Color), 1f);
							float num643 = Main.dust[num642].velocity.X;
							float num644 = Main.dust[num642].velocity.Y;
							if (num643 == 0f && num644 == 0f)
							{
								num643 = 1f;
							}
							float num645 = (float)Math.Sqrt((double)(num643 * num643 + num644 * num644));
							num645 = num640 / num645;
							num643 *= num645;
							num644 *= num645;
							Main.dust[num642].velocity *= 0.5f;
							Dust expr_152EE_cp_0 = Main.dust[num642];
							expr_152EE_cp_0.velocity.X = expr_152EE_cp_0.velocity.X + num643;
							Dust expr_1530D_cp_0 = Main.dust[num642];
							expr_1530D_cp_0.velocity.Y = expr_1530D_cp_0.velocity.Y + num644;
							Main.dust[num642].scale = 1.3f;
							Main.dust[num642].noGravity = true;
						}
					}
					if (this.type == 168)
					{
						for (int num646 = 0; num646 < 400; num646++)
						{
							float num647 = 2f * ((float)num646 / 100f);
							if (num646 > 100)
							{
								num647 = 10f;
							}
							if (num646 > 250)
							{
								num647 = 13f;
							}
							int num648 = 131;
							int num649 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num648, 0f, 0f, 100, default(Color), 1f);
							float num650 = Main.dust[num649].velocity.X;
							float num651 = Main.dust[num649].velocity.Y;
							if (num650 == 0f && num651 == 0f)
							{
								num650 = 1f;
							}
							float num652 = (float)Math.Sqrt((double)(num650 * num650 + num651 * num651));
							num652 = num647 / num652;
							if (num646 <= 200)
							{
								num650 *= num652;
								num651 *= num652;
							}
							else
							{
								num650 = num650 * num652 * 1.25f;
								num651 = num651 * num652 * 0.75f;
							}
							Main.dust[num649].velocity *= 0.5f;
							Dust expr_154F4_cp_0 = Main.dust[num649];
							expr_154F4_cp_0.velocity.X = expr_154F4_cp_0.velocity.X + num650;
							Dust expr_15513_cp_0 = Main.dust[num649];
							expr_15513_cp_0.velocity.Y = expr_15513_cp_0.velocity.Y + num651;
							if (num646 > 100)
							{
								Main.dust[num649].scale = 1.3f;
								Main.dust[num649].noGravity = true;
							}
						}
					}
					if (this.type == 169)
					{
						Vector2 vector13 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num653 = (float)Main.rand.Next(5, 9);
						float num654 = (float)Main.rand.Next(12, 17);
						float value26 = (float)Main.rand.Next(3, 7);
						float num655 = 20f;
						for (float num656 = 0f; num656 < num653; num656 += 1f)
						{
							for (int num657 = 0; num657 < 2; num657++)
							{
								Vector2 value27 = vector13.RotatedBy((double)(((num657 == 0) ? 1f : -1f) * 6.28318548f / (num653 * 2f)), default(Vector2));
								for (float num658 = 0f; num658 < num655; num658 += 1f)
								{
									Vector2 value28 = Vector2.Lerp(vector13, value27, num658 / num655);
									float scaleFactor2 = MathHelper.Lerp(num654, value26, num658 / num655);
									int num659 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num659].velocity *= 0.1f;
									Main.dust[num659].noGravity = true;
									Main.dust[num659].velocity += value28 * scaleFactor2;
								}
							}
							vector13 = vector13.RotatedBy((double)(6.28318548f / num653), default(Vector2));
						}
						for (float num660 = 0f; num660 < num653; num660 += 1f)
						{
							for (int num661 = 0; num661 < 2; num661++)
							{
								Vector2 value29 = vector13.RotatedBy((double)(((num661 == 0) ? 1f : -1f) * 6.28318548f / (num653 * 2f)), default(Vector2));
								for (float num662 = 0f; num662 < num655; num662 += 1f)
								{
									Vector2 value30 = Vector2.Lerp(vector13, value29, num662 / num655);
									float scaleFactor3 = MathHelper.Lerp(num654, value26, num662 / num655) / 2f;
									int num663 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num663].velocity *= 0.1f;
									Main.dust[num663].noGravity = true;
									Main.dust[num663].velocity += value30 * scaleFactor3;
								}
							}
							vector13 = vector13.RotatedBy((double)(6.28318548f / num653), default(Vector2));
						}
						for (int num664 = 0; num664 < 100; num664++)
						{
							float num665 = num654;
							int num666 = 132;
							int num667 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num666, 0f, 0f, 100, default(Color), 1f);
							float num668 = Main.dust[num667].velocity.X;
							float num669 = Main.dust[num667].velocity.Y;
							if (num668 == 0f && num669 == 0f)
							{
								num668 = 1f;
							}
							float num670 = (float)Math.Sqrt((double)(num668 * num668 + num669 * num669));
							num670 = num665 / num670;
							num668 *= num670;
							num669 *= num670;
							Main.dust[num667].velocity *= 0.5f;
							Dust expr_15A4E_cp_0 = Main.dust[num667];
							expr_15A4E_cp_0.velocity.X = expr_15A4E_cp_0.velocity.X + num668;
							Dust expr_15A6D_cp_0 = Main.dust[num667];
							expr_15A6D_cp_0.velocity.Y = expr_15A6D_cp_0.velocity.Y + num669;
							Main.dust[num667].scale = 1.3f;
							Main.dust[num667].noGravity = true;
						}
					}
					if (this.type == 170)
					{
						for (int num671 = 0; num671 < 400; num671++)
						{
							int num672 = 133;
							float num673 = 16f;
							if (num671 > 100)
							{
								num673 = 11f;
							}
							if (num671 > 100)
							{
								num672 = 134;
							}
							if (num671 > 200)
							{
								num673 = 8f;
							}
							if (num671 > 200)
							{
								num672 = 133;
							}
							if (num671 > 300)
							{
								num673 = 5f;
							}
							if (num671 > 300)
							{
								num672 = 134;
							}
							int num674 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num672, 0f, 0f, 100, default(Color), 1f);
							float num675 = Main.dust[num674].velocity.X;
							float num676 = Main.dust[num674].velocity.Y;
							if (num675 == 0f && num676 == 0f)
							{
								num675 = 1f;
							}
							float num677 = (float)Math.Sqrt((double)(num675 * num675 + num676 * num676));
							num677 = num673 / num677;
							if (num671 > 300)
							{
								num675 = num675 * num677 * 0.7f;
								num676 *= num677;
							}
							else if (num671 > 200)
							{
								num675 *= num677;
								num676 = num676 * num677 * 0.7f;
							}
							else if (num671 > 100)
							{
								num675 = num675 * num677 * 0.7f;
								num676 *= num677;
							}
							else
							{
								num675 *= num677;
								num676 = num676 * num677 * 0.7f;
							}
							Main.dust[num674].velocity *= 0.5f;
							Dust expr_15CE9_cp_0 = Main.dust[num674];
							expr_15CE9_cp_0.velocity.X = expr_15CE9_cp_0.velocity.X + num675;
							Dust expr_15D08_cp_0 = Main.dust[num674];
							expr_15D08_cp_0.velocity.Y = expr_15D08_cp_0.velocity.Y + num676;
							if (Main.rand.Next(3) != 0)
							{
								Main.dust[num674].scale = 1.3f;
								Main.dust[num674].noGravity = true;
							}
						}
					}
					if (this.type == 415)
					{
						Vector2 vector14 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num678 = (float)Main.rand.Next(5, 9);
						float num679 = (float)Main.rand.Next(10, 15) * 0.66f;
						float num680 = (float)Main.rand.Next(4, 7) / 2f;
						int num681 = 30;
						int num682 = 0;
						while ((float)num682 < (float)num681 * num678)
						{
							if (num682 % num681 == 0)
							{
								vector14 = vector14.RotatedBy((double)(6.28318548f / num678), default(Vector2));
							}
							float scaleFactor4 = MathHelper.Lerp(num680, num679, (float)(num682 % num681) / (float)num681);
							int num683 = 130;
							int num684 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num683, 0f, 0f, 100, default(Color), 1f);
							Main.dust[num684].velocity *= 0.1f;
							Main.dust[num684].velocity += vector14 * scaleFactor4;
							Main.dust[num684].scale = 1.3f;
							Main.dust[num684].noGravity = true;
							num682++;
						}
						for (int num685 = 0; num685 < 100; num685++)
						{
							float num686 = num679;
							if (num685 < 30)
							{
								num686 = (num680 + num679) / 2f;
							}
							int num687 = 130;
							int num688 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num687, 0f, 0f, 100, default(Color), 1f);
							float num689 = Main.dust[num688].velocity.X;
							float num690 = Main.dust[num688].velocity.Y;
							if (num689 == 0f && num690 == 0f)
							{
								num689 = 1f;
							}
							float num691 = (float)Math.Sqrt((double)(num689 * num689 + num690 * num690));
							num691 = num686 / num691;
							num689 *= num691;
							num690 *= num691;
							Main.dust[num688].velocity *= 0.5f;
							Dust expr_1604F_cp_0 = Main.dust[num688];
							expr_1604F_cp_0.velocity.X = expr_1604F_cp_0.velocity.X + num689;
							Dust expr_1606E_cp_0 = Main.dust[num688];
							expr_1606E_cp_0.velocity.Y = expr_1606E_cp_0.velocity.Y + num690;
							Main.dust[num688].scale = 1.3f;
							Main.dust[num688].noGravity = true;
						}
					}
					if (this.type == 416)
					{
						Vector2 vector15 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						Vector2 vector16 = vector15;
						float num692 = (float)(Main.rand.Next(3, 6) * 2);
						int num693 = 20;
						float num694 = (Main.rand.Next(2) == 0) ? 1f : -1f;
						bool flag2 = true;
						int num695 = 0;
						while ((float)num695 < (float)num693 * num692)
						{
							if (num695 % num693 == 0)
							{
								vector16 = vector16.RotatedBy((double)(num694 * (6.28318548f / num692)), default(Vector2));
								vector15 = vector16;
								flag2 = !flag2;
							}
							else
							{
								float num696 = 6.28318548f / ((float)num693 * num692);
								vector15 = vector15.RotatedBy((double)(num696 * num694 * 3f), default(Vector2));
							}
							float scaleFactor5 = MathHelper.Lerp(1f, 8f, (float)(num695 % num693) / (float)num693);
							int num697 = 131;
							int num698 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num697, 0f, 0f, 100, default(Color), 1.4f);
							Main.dust[num698].velocity *= 0.1f;
							Main.dust[num698].velocity += vector15 * scaleFactor5;
							if (flag2)
							{
								Main.dust[num698].scale = 0.9f;
							}
							Main.dust[num698].noGravity = true;
							num695++;
						}
					}
					if (this.type == 417)
					{
						float num699 = (float)Main.rand.NextDouble() * 6.28318548f;
						float num700 = (float)Main.rand.NextDouble() * 6.28318548f;
						float num701 = 4f + (float)Main.rand.NextDouble() * 3f;
						float num702 = 4f + (float)Main.rand.NextDouble() * 3f;
						float num703 = num701;
						if (num702 > num703)
						{
							num703 = num702;
						}
						for (int num704 = 0; num704 < 150; num704++)
						{
							int num705 = 132;
							float scaleFactor6 = num703;
							if (num704 > 50)
							{
								scaleFactor6 = num702;
							}
							if (num704 > 50)
							{
								num705 = 133;
							}
							if (num704 > 100)
							{
								scaleFactor6 = num701;
							}
							if (num704 > 100)
							{
								num705 = 132;
							}
							int num706 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num705, 0f, 0f, 100, default(Color), 1f);
							Vector2 vector17 = Main.dust[num706].velocity;
							vector17.Normalize();
							vector17 *= scaleFactor6;
							if (num704 > 100)
							{
								vector17.X *= 0.5f;
								vector17 = vector17.RotatedBy((double)num699, default(Vector2));
							}
							else if (num704 > 50)
							{
								vector17.Y *= 0.5f;
								vector17 = vector17.RotatedBy((double)num700, default(Vector2));
							}
							Main.dust[num706].velocity *= 0.2f;
							Main.dust[num706].velocity += vector17;
							if (num704 <= 200)
							{
								Main.dust[num706].scale = 1.3f;
								Main.dust[num706].noGravity = true;
							}
						}
					}
					if (this.type == 418)
					{
						Vector2 vector18 = ((float)Main.rand.NextDouble() * 6.28318548f).ToRotationVector2();
						float num707 = (float)Main.rand.Next(5, 12);
						float num708 = (float)Main.rand.Next(9, 14) * 0.66f;
						float num709 = (float)Main.rand.Next(2, 4) * 0.66f;
						float num710 = 15f;
						for (float num711 = 0f; num711 < num707; num711 += 1f)
						{
							for (int num712 = 0; num712 < 2; num712++)
							{
								Vector2 value31 = vector18.RotatedBy((double)(((num712 == 0) ? 1f : -1f) * 6.28318548f / (num707 * 2f)), default(Vector2));
								for (float num713 = 0f; num713 < num710; num713 += 1f)
								{
									Vector2 value32 = Vector2.SmoothStep(vector18, value31, num713 / num710);
									float scaleFactor7 = MathHelper.SmoothStep(num708, num709, num713 / num710);
									int num714 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 134, 0f, 0f, 100, default(Color), 1.3f);
									Main.dust[num714].velocity *= 0.1f;
									Main.dust[num714].noGravity = true;
									Main.dust[num714].velocity += value32 * scaleFactor7;
								}
							}
							vector18 = vector18.RotatedBy((double)(6.28318548f / num707), default(Vector2));
						}
						for (int num715 = 0; num715 < 120; num715++)
						{
							float num716 = num708;
							int num717 = 133;
							if (num715 < 80)
							{
								num716 = num709 - 0.5f;
							}
							else
							{
								num717 = 131;
							}
							int num718 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, num717, 0f, 0f, 100, default(Color), 1f);
							float num719 = Main.dust[num718].velocity.X;
							float num720 = Main.dust[num718].velocity.Y;
							if (num719 == 0f && num720 == 0f)
							{
								num719 = 1f;
							}
							float num721 = (float)Math.Sqrt((double)(num719 * num719 + num720 * num720));
							num721 = num716 / num721;
							num719 *= num721;
							num720 *= num721;
							Main.dust[num718].velocity *= 0.2f;
							Dust expr_1687E_cp_0 = Main.dust[num718];
							expr_1687E_cp_0.velocity.X = expr_1687E_cp_0.velocity.X + num719;
							Dust expr_1689D_cp_0 = Main.dust[num718];
							expr_1689D_cp_0.velocity.Y = expr_1689D_cp_0.velocity.Y + num720;
							Main.dust[num718].scale = 1.3f;
							Main.dust[num718].noGravity = true;
						}
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 192;
					this.height = 192;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.Damage();
				}
				else if (this.type == 312)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num722 = 0; num722 < 30; num722++)
					{
						int num723 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num723].velocity *= 1.4f;
					}
					for (int num724 = 0; num724 < 20; num724++)
					{
						int num725 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3.5f);
						Main.dust[num725].noGravity = true;
						Main.dust[num725].velocity *= 7f;
						num725 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num725].velocity *= 3f;
					}
					for (int num726 = 0; num726 < 2; num726++)
					{
						float scaleFactor8 = 0.4f;
						if (num726 == 1)
						{
							scaleFactor8 = 0.8f;
						}
						int num727 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num727].velocity *= scaleFactor8;
						Gore expr_16C45_cp_0 = Main.gore[num727];
						expr_16C45_cp_0.velocity.X = expr_16C45_cp_0.velocity.X + 1f;
						Gore expr_16C65_cp_0 = Main.gore[num727];
						expr_16C65_cp_0.velocity.Y = expr_16C65_cp_0.velocity.Y + 1f;
						num727 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num727].velocity *= scaleFactor8;
						Gore expr_16CE8_cp_0 = Main.gore[num727];
						expr_16CE8_cp_0.velocity.X = expr_16CE8_cp_0.velocity.X - 1f;
						Gore expr_16D08_cp_0 = Main.gore[num727];
						expr_16D08_cp_0.velocity.Y = expr_16D08_cp_0.velocity.Y + 1f;
						num727 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num727].velocity *= scaleFactor8;
						Gore expr_16D8B_cp_0 = Main.gore[num727];
						expr_16D8B_cp_0.velocity.X = expr_16D8B_cp_0.velocity.X + 1f;
						Gore expr_16DAB_cp_0 = Main.gore[num727];
						expr_16DAB_cp_0.velocity.Y = expr_16DAB_cp_0.velocity.Y - 1f;
						num727 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num727].velocity *= scaleFactor8;
						Gore expr_16E2E_cp_0 = Main.gore[num727];
						expr_16E2E_cp_0.velocity.X = expr_16E2E_cp_0.velocity.X - 1f;
						Gore expr_16E4E_cp_0 = Main.gore[num727];
						expr_16E4E_cp_0.velocity.Y = expr_16E4E_cp_0.velocity.Y - 1f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 128;
					this.height = 128;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.Damage();
				}
				else if (this.type == 133 || this.type == 134 || this.type == 135 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 303 || this.type == 338 || this.type == 339)
				{
					if (this.type == 30 || this.type == 133 || this.type == 136 || this.type == 139)
					{
						Main.PlaySound(SoundID.Item62, this.position);
					}
					else
					{
						Main.PlaySound(SoundID.Item14, this.position);
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num728 = 0; num728 < 30; num728++)
					{
						int num729 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num729].velocity *= 1.4f;
					}
					for (int num730 = 0; num730 < 20; num730++)
					{
						int num731 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3.5f);
						Main.dust[num731].noGravity = true;
						Main.dust[num731].velocity *= 7f;
						num731 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num731].velocity *= 3f;
					}
					for (int num732 = 0; num732 < 2; num732++)
					{
						float scaleFactor9 = 0.4f;
						if (num732 == 1)
						{
							scaleFactor9 = 0.8f;
						}
						int num733 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num733].velocity *= scaleFactor9;
						Gore expr_17277_cp_0 = Main.gore[num733];
						expr_17277_cp_0.velocity.X = expr_17277_cp_0.velocity.X + 1f;
						Gore expr_17297_cp_0 = Main.gore[num733];
						expr_17297_cp_0.velocity.Y = expr_17297_cp_0.velocity.Y + 1f;
						num733 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num733].velocity *= scaleFactor9;
						Gore expr_1731A_cp_0 = Main.gore[num733];
						expr_1731A_cp_0.velocity.X = expr_1731A_cp_0.velocity.X - 1f;
						Gore expr_1733A_cp_0 = Main.gore[num733];
						expr_1733A_cp_0.velocity.Y = expr_1733A_cp_0.velocity.Y + 1f;
						num733 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num733].velocity *= scaleFactor9;
						Gore expr_173BD_cp_0 = Main.gore[num733];
						expr_173BD_cp_0.velocity.X = expr_173BD_cp_0.velocity.X + 1f;
						Gore expr_173DD_cp_0 = Main.gore[num733];
						expr_173DD_cp_0.velocity.Y = expr_173DD_cp_0.velocity.Y - 1f;
						num733 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num733].velocity *= scaleFactor9;
						Gore expr_17460_cp_0 = Main.gore[num733];
						expr_17460_cp_0.velocity.X = expr_17460_cp_0.velocity.X - 1f;
						Gore expr_17480_cp_0 = Main.gore[num733];
						expr_17480_cp_0.velocity.Y = expr_17480_cp_0.velocity.Y - 1f;
					}
				}
				else if (this.type == 139 || this.type == 140 || this.type == 141 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 340 || this.type == 341)
				{
					if (this.type == 30 || this.type == 133 || this.type == 136 || this.type == 139)
					{
						Main.PlaySound(SoundID.Item62, this.position);
					}
					else
					{
						Main.PlaySound(SoundID.Item14, this.position);
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 80;
					this.height = 80;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num734 = 0; num734 < 40; num734++)
					{
						int num735 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num735].velocity *= 3f;
						if (Main.rand.Next(2) == 0)
						{
							Main.dust[num735].scale = 0.5f;
							Main.dust[num735].fadeIn = 1f + (float)Main.rand.Next(10) * 0.1f;
						}
					}
					for (int num736 = 0; num736 < 70; num736++)
					{
						int num737 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3f);
						Main.dust[num737].noGravity = true;
						Main.dust[num737].velocity *= 5f;
						num737 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num737].velocity *= 2f;
					}
					for (int num738 = 0; num738 < 3; num738++)
					{
						float scaleFactor10 = 0.33f;
						if (num738 == 1)
						{
							scaleFactor10 = 0.66f;
						}
						if (num738 == 2)
						{
							scaleFactor10 = 1f;
						}
						int num739 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num739].velocity *= scaleFactor10;
						Gore expr_17890_cp_0 = Main.gore[num739];
						expr_17890_cp_0.velocity.X = expr_17890_cp_0.velocity.X + 1f;
						Gore expr_178B0_cp_0 = Main.gore[num739];
						expr_178B0_cp_0.velocity.Y = expr_178B0_cp_0.velocity.Y + 1f;
						num739 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num739].velocity *= scaleFactor10;
						Gore expr_17953_cp_0 = Main.gore[num739];
						expr_17953_cp_0.velocity.X = expr_17953_cp_0.velocity.X - 1f;
						Gore expr_17973_cp_0 = Main.gore[num739];
						expr_17973_cp_0.velocity.Y = expr_17973_cp_0.velocity.Y + 1f;
						num739 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num739].velocity *= scaleFactor10;
						Gore expr_17A16_cp_0 = Main.gore[num739];
						expr_17A16_cp_0.velocity.X = expr_17A16_cp_0.velocity.X + 1f;
						Gore expr_17A36_cp_0 = Main.gore[num739];
						expr_17A36_cp_0.velocity.Y = expr_17A36_cp_0.velocity.Y - 1f;
						num739 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num739].velocity *= scaleFactor10;
						Gore expr_17AD9_cp_0 = Main.gore[num739];
						expr_17AD9_cp_0.velocity.X = expr_17AD9_cp_0.velocity.X - 1f;
						Gore expr_17AF9_cp_0 = Main.gore[num739];
						expr_17AF9_cp_0.velocity.Y = expr_17AF9_cp_0.velocity.Y - 1f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 10;
					this.height = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				else if (this.type == 246)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num740 = 0; num740 < 10; num740++)
					{
						int num741 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num741].velocity *= 0.9f;
					}
					for (int num742 = 0; num742 < 5; num742++)
					{
						int num743 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num743].noGravity = true;
						Main.dust[num743].velocity *= 3f;
						num743 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num743].velocity *= 2f;
					}
					int num744 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num744].velocity *= 0.3f;
					Gore expr_17DCB_cp_0 = Main.gore[num744];
					expr_17DCB_cp_0.velocity.X = expr_17DCB_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
					Gore expr_17DF3_cp_0 = Main.gore[num744];
					expr_17DF3_cp_0.velocity.Y = expr_17DF3_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 150;
					this.height = 150;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.maxPenetrate = 0;
					this.Damage();
					if (this.owner == Main.myPlayer)
					{
						int num745 = Main.rand.Next(2, 6);
						for (int num746 = 0; num746 < num745; num746++)
						{
							float num747 = (float)Main.rand.Next(-100, 101);
							num747 += 0.01f;
							float num748 = (float)Main.rand.Next(-100, 101);
							num747 -= 0.01f;
							float num749 = (float)Math.Sqrt((double)(num747 * num747 + num748 * num748));
							num749 = 8f / num749;
							num747 *= num749;
							num748 *= num749;
							int num750 = Projectile.NewProjectile(base.Center.X - this.oldVelocity.X, base.Center.Y - this.oldVelocity.Y, num747, num748, 249, this.damage, this.knockBack, this.owner, 0f, 0f);
							Main.projectile[num750].maxPenetrate = 0;
						}
					}
				}
				else if (this.type == 249)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					for (int num751 = 0; num751 < 7; num751++)
					{
						int num752 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num752].velocity *= 0.8f;
					}
					for (int num753 = 0; num753 < 2; num753++)
					{
						int num754 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num754].noGravity = true;
						Main.dust[num754].velocity *= 2.5f;
						num754 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num754].velocity *= 1.5f;
					}
					int num755 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num755].velocity *= 0.2f;
					Gore expr_1820B_cp_0 = Main.gore[num755];
					expr_1820B_cp_0.velocity.X = expr_1820B_cp_0.velocity.X + (float)Main.rand.Next(-1, 2);
					Gore expr_18233_cp_0 = Main.gore[num755];
					expr_18233_cp_0.velocity.Y = expr_18233_cp_0.velocity.Y + (float)Main.rand.Next(-1, 2);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 100;
					this.height = 100;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					this.penetrate = -1;
					this.Damage();
				}
				else if (this.type == 588)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					this.position = base.Center;
					this.width = (this.height = 22);
					base.Center = this.position;
					for (int num756 = 0; num756 < 8; num756++)
					{
						int num757 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 219 + Main.rand.Next(5), 0f, 0f, 0, default(Color), 1f);
						Main.dust[num757].velocity *= 1.4f;
						Main.dust[num757].fadeIn = 1f;
						Main.dust[num757].noGravity = true;
					}
					for (int num758 = 0; num758 < 15; num758++)
					{
						int num759 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0f, 0f, 0, default(Color), 1.6f);
						Main.dust[num759].noGravity = true;
						Main.dust[num759].velocity *= 5f;
						num759 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0f, 0f, 0, default(Color), 1.9f);
						Main.dust[num759].velocity *= 3f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num760 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num760].velocity *= 0.4f;
						Gore expr_1859E_cp_0 = Main.gore[num760];
						expr_1859E_cp_0.velocity.X = expr_1859E_cp_0.velocity.X + 1f;
						Gore expr_185BE_cp_0 = Main.gore[num760];
						expr_185BE_cp_0.velocity.Y = expr_185BE_cp_0.velocity.Y + 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num760 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num760].velocity *= 0.4f;
						Gore expr_18658_cp_0 = Main.gore[num760];
						expr_18658_cp_0.velocity.X = expr_18658_cp_0.velocity.X - 1f;
						Gore expr_18678_cp_0 = Main.gore[num760];
						expr_18678_cp_0.velocity.Y = expr_18678_cp_0.velocity.Y + 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num760 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num760].velocity *= 0.4f;
						Gore expr_18712_cp_0 = Main.gore[num760];
						expr_18712_cp_0.velocity.X = expr_18712_cp_0.velocity.X + 1f;
						Gore expr_18732_cp_0 = Main.gore[num760];
						expr_18732_cp_0.velocity.Y = expr_18732_cp_0.velocity.Y - 1f;
					}
					if (Main.rand.Next(2) == 0)
					{
						int num760 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(276, 283), 1f);
						Main.gore[num760].velocity *= 0.4f;
						Gore expr_187CC_cp_0 = Main.gore[num760];
						expr_187CC_cp_0.velocity.X = expr_187CC_cp_0.velocity.X - 1f;
						Gore expr_187EC_cp_0 = Main.gore[num760];
						expr_187EC_cp_0.velocity.Y = expr_187EC_cp_0.velocity.Y - 1f;
					}
				}
				else if (this.type == 28 || this.type == 30 || this.type == 37 || this.type == 75 || this.type == 102 || this.type == 164 || this.type == 397 || this.type == 517 || this.type == 516 || this.type == 519)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 22;
					this.height = 22;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
					for (int num761 = 0; num761 < 20; num761++)
					{
						int num762 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num762].velocity *= 1.4f;
					}
					for (int num763 = 0; num763 < 10; num763++)
					{
						int num764 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2.5f);
						Main.dust[num764].noGravity = true;
						Main.dust[num764].velocity *= 5f;
						num764 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 1.5f);
						Main.dust[num764].velocity *= 3f;
					}
					int num765 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num765].velocity *= 0.4f;
					Gore expr_18B11_cp_0 = Main.gore[num765];
					expr_18B11_cp_0.velocity.X = expr_18B11_cp_0.velocity.X + 1f;
					Gore expr_18B31_cp_0 = Main.gore[num765];
					expr_18B31_cp_0.velocity.Y = expr_18B31_cp_0.velocity.Y + 1f;
					num765 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num765].velocity *= 0.4f;
					Gore expr_18BB5_cp_0 = Main.gore[num765];
					expr_18BB5_cp_0.velocity.X = expr_18BB5_cp_0.velocity.X - 1f;
					Gore expr_18BD5_cp_0 = Main.gore[num765];
					expr_18BD5_cp_0.velocity.Y = expr_18BD5_cp_0.velocity.Y + 1f;
					num765 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num765].velocity *= 0.4f;
					Gore expr_18C59_cp_0 = Main.gore[num765];
					expr_18C59_cp_0.velocity.X = expr_18C59_cp_0.velocity.X + 1f;
					Gore expr_18C79_cp_0 = Main.gore[num765];
					expr_18C79_cp_0.velocity.Y = expr_18C79_cp_0.velocity.Y - 1f;
					num765 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), default(Vector2), Main.rand.Next(61, 64), 1f);
					Main.gore[num765].velocity *= 0.4f;
					Gore expr_18CFD_cp_0 = Main.gore[num765];
					expr_18CFD_cp_0.velocity.X = expr_18CFD_cp_0.velocity.X - 1f;
					Gore expr_18D1D_cp_0 = Main.gore[num765];
					expr_18D1D_cp_0.velocity.Y = expr_18D1D_cp_0.velocity.Y - 1f;
					if (this.type == 102)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 128;
						this.height = 128;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
						this.damage = 40;
						this.Damage();
					}
				}
				else if (this.type == 29 || this.type == 108 || this.type == 470 || this.type == 637)
				{
					Main.PlaySound(SoundID.Item14, this.position);
					if (this.type == 29)
					{
						this.position.X = this.position.X + (float)(this.width / 2);
						this.position.Y = this.position.Y + (float)(this.height / 2);
						this.width = 200;
						this.height = 200;
						this.position.X = this.position.X - (float)(this.width / 2);
						this.position.Y = this.position.Y - (float)(this.height / 2);
					}
					for (int num766 = 0; num766 < 50; num766++)
					{
						int num767 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num767].velocity *= 1.4f;
					}
					for (int num768 = 0; num768 < 80; num768++)
					{
						int num769 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 3f);
						Main.dust[num769].noGravity = true;
						Main.dust[num769].velocity *= 5f;
						num769 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, default(Color), 2f);
						Main.dust[num769].velocity *= 3f;
					}
					for (int num770 = 0; num770 < 2; num770++)
					{
						int num771 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num771].scale = 1.5f;
						Gore expr_190CC_cp_0 = Main.gore[num771];
						expr_190CC_cp_0.velocity.X = expr_190CC_cp_0.velocity.X + 1.5f;
						Gore expr_190EC_cp_0 = Main.gore[num771];
						expr_190EC_cp_0.velocity.Y = expr_190EC_cp_0.velocity.Y + 1.5f;
						num771 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num771].scale = 1.5f;
						Gore expr_19185_cp_0 = Main.gore[num771];
						expr_19185_cp_0.velocity.X = expr_19185_cp_0.velocity.X - 1.5f;
						Gore expr_191A5_cp_0 = Main.gore[num771];
						expr_191A5_cp_0.velocity.Y = expr_191A5_cp_0.velocity.Y + 1.5f;
						num771 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num771].scale = 1.5f;
						Gore expr_1923E_cp_0 = Main.gore[num771];
						expr_1923E_cp_0.velocity.X = expr_1923E_cp_0.velocity.X + 1.5f;
						Gore expr_1925E_cp_0 = Main.gore[num771];
						expr_1925E_cp_0.velocity.Y = expr_1925E_cp_0.velocity.Y - 1.5f;
						num771 = Gore.NewGore(new Vector2(this.position.X + (float)(this.width / 2) - 24f, this.position.Y + (float)(this.height / 2) - 24f), default(Vector2), Main.rand.Next(61, 64), 1f);
						Main.gore[num771].scale = 1.5f;
						Gore expr_192F7_cp_0 = Main.gore[num771];
						expr_192F7_cp_0.velocity.X = expr_192F7_cp_0.velocity.X - 1.5f;
						Gore expr_19317_cp_0 = Main.gore[num771];
						expr_19317_cp_0.velocity.Y = expr_19317_cp_0.velocity.Y - 1.5f;
					}
					this.position.X = this.position.X + (float)(this.width / 2);
					this.position.Y = this.position.Y + (float)(this.height / 2);
					this.width = 10;
					this.height = 10;
					this.position.X = this.position.X - (float)(this.width / 2);
					this.position.Y = this.position.Y - (float)(this.height / 2);
				}
				else if (this.type == 69)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num772 = 0; num772 < 5; num772++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num773 = 0; num773 < 30; num773++)
					{
						int num774 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 33, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num774].alpha = 100;
						Dust expr_194D4_cp_0 = Main.dust[num774];
						expr_194D4_cp_0.velocity.X = expr_194D4_cp_0.velocity.X * 1.5f;
						Main.dust[num774].velocity *= 3f;
					}
				}
				else if (this.type == 70)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num775 = 0; num775 < 5; num775++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num776 = 0; num776 < 30; num776++)
					{
						int num777 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 52, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num777].alpha = 100;
						Dust expr_19635_cp_0 = Main.dust[num777];
						expr_19635_cp_0.velocity.X = expr_19635_cp_0.velocity.X * 1.5f;
						Main.dust[num777].velocity *= 3f;
					}
				}
				else if (this.type == 621)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					for (int num778 = 0; num778 < 5; num778++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num779 = 0; num779 < 30; num779++)
					{
						int num780 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 266, 0f, -2f, 0, default(Color), 1.1f);
						Main.dust[num780].alpha = 100;
						Dust expr_1979C_cp_0 = Main.dust[num780];
						expr_1979C_cp_0.velocity.X = expr_1979C_cp_0.velocity.X * 1.5f;
						Main.dust[num780].velocity *= 3f;
					}
				}
				else if (this.type == 114 || this.type == 115)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num781 = 4; num781 < 31; num781++)
					{
						float num782 = this.oldVelocity.X * (30f / (float)num781);
						float num783 = this.oldVelocity.Y * (30f / (float)num781);
						int num784 = Dust.NewDust(new Vector2(this.position.X - num782, this.position.Y - num783), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num784].noGravity = true;
						Main.dust[num784].velocity *= 0.5f;
						num784 = Dust.NewDust(new Vector2(this.position.X - num782, this.position.Y - num783), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 0.9f);
						Main.dust[num784].velocity *= 0.5f;
					}
				}
				else if (this.type == 116)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num785 = 4; num785 < 31; num785++)
					{
						float num786 = this.oldVelocity.X * (30f / (float)num785);
						float num787 = this.oldVelocity.Y * (30f / (float)num785);
						int num788 = Dust.NewDust(new Vector2(this.position.X - num786, this.position.Y - num787), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num788].noGravity = true;
						num788 = Dust.NewDust(new Vector2(this.position.X - num786, this.position.Y - num787), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num788].noGravity = true;
					}
				}
				else if (this.type == 173)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num789 = 4; num789 < 24; num789++)
					{
						float num790 = this.oldVelocity.X * (30f / (float)num789);
						float num791 = this.oldVelocity.Y * (30f / (float)num789);
						int num792 = Main.rand.Next(3);
						if (num792 == 0)
						{
							num792 = 15;
						}
						else if (num792 == 1)
						{
							num792 = 57;
						}
						else
						{
							num792 = 58;
						}
						int num793 = Dust.NewDust(new Vector2(this.position.X - num790, this.position.Y - num791), 8, 8, num792, this.oldVelocity.X * 0.2f, this.oldVelocity.Y * 0.2f, 100, default(Color), 1.8f);
						Main.dust[num793].velocity *= 1.5f;
						Main.dust[num793].noGravity = true;
					}
				}
				else if (this.type == 132)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num794 = 4; num794 < 31; num794++)
					{
						float num795 = this.oldVelocity.X * (30f / (float)num794);
						float num796 = this.oldVelocity.Y * (30f / (float)num794);
						int num797 = Dust.NewDust(new Vector2(this.oldPosition.X - num795, this.oldPosition.Y - num796), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num797].noGravity = true;
						Main.dust[num797].velocity *= 0.5f;
						num797 = Dust.NewDust(new Vector2(this.oldPosition.X - num795, this.oldPosition.Y - num796), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.4f);
						Main.dust[num797].velocity *= 0.05f;
					}
				}
				else if (this.type == 156)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num798 = 4; num798 < 31; num798++)
					{
						float num799 = this.oldVelocity.X * (30f / (float)num798);
						float num800 = this.oldVelocity.Y * (30f / (float)num798);
						int num801 = Dust.NewDust(new Vector2(this.oldPosition.X - num799, this.oldPosition.Y - num800), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, 255, default(Color), 1.8f);
						Main.dust[num801].noGravity = true;
						Main.dust[num801].velocity *= 0.5f;
						num801 = Dust.NewDust(new Vector2(this.oldPosition.X - num799, this.oldPosition.Y - num800), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, 255, default(Color), 1.4f);
						Main.dust[num801].velocity *= 0.05f;
						Main.dust[num801].noGravity = true;
					}
				}
				else if (this.type == 157)
				{
					Main.PlaySound(SoundID.Item10, this.position);
					for (int num802 = 4; num802 < 31; num802++)
					{
						int num803 = Dust.NewDust(this.position, this.width, this.height, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, default(Color), 1.8f);
						Main.dust[num803].noGravity = true;
						Main.dust[num803].velocity *= 0.5f;
					}
				}
				else if (this.type == 370)
				{
					Main.PlaySound(SoundID.Item4, this.position);
					for (int num804 = 0; num804 < 5; num804++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num805 = 0; num805 < 30; num805++)
					{
						Vector2 value33 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
						value33.Normalize();
						int num806 = Gore.NewGore(base.Center + value33 * 10f, value33 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, 331, (float)Main.rand.Next(40, 141) * 0.01f);
						Main.gore[num806].sticky = false;
					}
				}
				else if (this.type == 371)
				{
					Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					Main.PlaySound(SoundID.Item16, this.position);
					for (int num807 = 0; num807 < 5; num807++)
					{
						Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0f, 0f, 0, default(Color), 1f);
					}
					for (int num808 = 0; num808 < 30; num808++)
					{
						Vector2 value34 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
						value34.Normalize();
						value34 *= 0.4f;
						int num809 = Gore.NewGore(base.Center + value34 * 10f, value34 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, Main.rand.Next(435, 438), (float)Main.rand.Next(20, 100) * 0.01f);
						Main.gore[num809].sticky = false;
					}
				}
			}
			if (this.owner == Main.myPlayer && (this.type == 370 || this.type == 371))
			{
				float num810 = 80f;
				int num811 = 119;
				if (this.type == 371)
				{
					num811 = 120;
				}
				for (int num812 = 0; num812 < 255; num812++)
				{
					Player player2 = Main.player[num812];
					if (player2.active && !player2.dead && Vector2.Distance(base.Center, player2.Center) < num810)
					{
						player2.AddBuff(num811, 1800, false);
					}
				}
				for (int num813 = 0; num813 < 200; num813++)
				{
					NPC nPC = Main.npc[num813];
					if (nPC.active && nPC.life > 0 && Vector2.Distance(base.Center, nPC.Center) < num810)
					{
						nPC.AddBuff(num811, 1800, false);
					}
				}
			}
			if (this.owner == Main.myPlayer)
			{
				if (this.type == 28 || this.type == 29 || this.type == 37 || this.type == 108 || this.type == 136 || this.type == 137 || this.type == 138 || this.type == 142 || this.type == 143 || this.type == 144 || this.type == 339 || this.type == 341 || this.type == 470 || this.type == 516 || this.type == 519 || this.type == 637)
				{
					int num814 = 3;
					if (this.type == 28 || this.type == 37 || this.type == 516 || this.type == 519)
					{
						num814 = 4;
					}
					if (this.type == 29 || this.type == 470 || this.type == 637)
					{
						num814 = 7;
					}
					if (this.type == 142 || this.type == 143 || this.type == 144 || this.type == 341)
					{
						num814 = 5;
					}
					if (this.type == 108)
					{
						num814 = 10;
					}
					int num815 = (int)(this.position.X / 16f - (float)num814);
					int num816 = (int)(this.position.X / 16f + (float)num814);
					int num817 = (int)(this.position.Y / 16f - (float)num814);
					int num818 = (int)(this.position.Y / 16f + (float)num814);
					if (num815 < 0)
					{
						num815 = 0;
					}
					if (num816 > Main.maxTilesX)
					{
						num816 = Main.maxTilesX;
					}
					if (num817 < 0)
					{
						num817 = 0;
					}
					if (num818 > Main.maxTilesY)
					{
						num818 = Main.maxTilesY;
					}
					bool flag3 = false;
					for (int num819 = num815; num819 <= num816; num819++)
					{
						for (int num820 = num817; num820 <= num818; num820++)
						{
							float num821 = Math.Abs((float)num819 - this.position.X / 16f);
							float num822 = Math.Abs((float)num820 - this.position.Y / 16f);
							double num823 = Math.Sqrt((double)(num821 * num821 + num822 * num822));
							if (num823 < (double)num814 && Main.tile[num819, num820] != null && Main.tile[num819, num820].wall == 0)
							{
								flag3 = true;
								break;
							}
						}
					}
					AchievementsHelper.CurrentlyMining = true;
					for (int num824 = num815; num824 <= num816; num824++)
					{
						for (int num825 = num817; num825 <= num818; num825++)
						{
							float num826 = Math.Abs((float)num824 - this.position.X / 16f);
							float num827 = Math.Abs((float)num825 - this.position.Y / 16f);
							double num828 = Math.Sqrt((double)(num826 * num826 + num827 * num827));
							if (num828 < (double)num814)
							{
								bool flag4 = true;
								if (Main.tile[num824, num825] != null && Main.tile[num824, num825].active())
								{
									flag4 = true;
									if (Main.tileDungeon[(int)Main.tile[num824, num825].type] || Main.tile[num824, num825].type == 88 || Main.tile[num824, num825].type == 21 || Main.tile[num824, num825].type == 26 || Main.tile[num824, num825].type == 107 || Main.tile[num824, num825].type == 108 || Main.tile[num824, num825].type == 111 || Main.tile[num824, num825].type == 226 || Main.tile[num824, num825].type == 237 || Main.tile[num824, num825].type == 221 || Main.tile[num824, num825].type == 222 || Main.tile[num824, num825].type == 223 || Main.tile[num824, num825].type == 211 || Main.tile[num824, num825].type == 404)
									{
										flag4 = false;
									}
									if (!Main.hardMode && Main.tile[num824, num825].type == 58)
									{
										flag4 = false;
									}
									if (flag4)
									{
										WorldGen.KillTile(num824, num825, false, false, false);
										if (!Main.tile[num824, num825].active() && Main.netMode != 0)
										{
											NetMessage.SendData(17, -1, -1, "", 0, (float)num824, (float)num825, 0f, 0, 0, 0);
										}
									}
								}
								if (flag4)
								{
									for (int num829 = num824 - 1; num829 <= num824 + 1; num829++)
									{
										for (int num830 = num825 - 1; num830 <= num825 + 1; num830++)
										{
											if (Main.tile[num829, num830] != null && Main.tile[num829, num830].wall > 0 && flag3)
											{
												WorldGen.KillWall(num829, num830, false);
												if (Main.tile[num829, num830].wall == 0 && Main.netMode != 0)
												{
													NetMessage.SendData(17, -1, -1, "", 2, (float)num829, (float)num830, 0f, 0, 0, 0);
												}
											}
										}
									}
								}
							}
						}
					}
					AchievementsHelper.CurrentlyMining = false;
				}
				if (Main.netMode != 0)
				{
					NetMessage.SendData(29, -1, -1, "", this.identity, (float)this.owner, 0f, 0f, 0, 0, 0);
				}
				if (!this.noDropItem)
				{
					int num831 = -1;
					if (this.aiStyle == 10)
					{
						int num832 = (int)(this.position.X + (float)(this.width / 2)) / 16;
						int num833 = (int)(this.position.Y + (float)(this.width / 2)) / 16;
						int num834 = 0;
						int num835 = 2;
						if (this.type == 109)
						{
							num834 = 147;
							num835 = 0;
						}
						if (this.type == 31)
						{
							num834 = 53;
							num835 = 0;
						}
						if (this.type == 42)
						{
							num834 = 53;
							num835 = 0;
						}
						if (this.type == 56)
						{
							num834 = 112;
							num835 = 0;
						}
						if (this.type == 65)
						{
							num834 = 112;
							num835 = 0;
						}
						if (this.type == 67)
						{
							num834 = 116;
							num835 = 0;
						}
						if (this.type == 68)
						{
							num834 = 116;
							num835 = 0;
						}
						if (this.type == 71)
						{
							num834 = 123;
							num835 = 0;
						}
						if (this.type == 39)
						{
							num834 = 59;
							num835 = 176;
						}
						if (this.type == 40)
						{
							num834 = 57;
							num835 = 172;
						}
						if (this.type == 179)
						{
							num834 = 224;
							num835 = 0;
						}
						if (this.type == 241)
						{
							num834 = 234;
							num835 = 0;
						}
						if (this.type == 354)
						{
							num834 = 234;
							num835 = 0;
						}
						if (this.type == 411)
						{
							num834 = 330;
							num835 = 71;
						}
						if (this.type == 412)
						{
							num834 = 331;
							num835 = 72;
						}
						if (this.type == 413)
						{
							num834 = 332;
							num835 = 73;
						}
						if (this.type == 414)
						{
							num834 = 333;
							num835 = 74;
						}
						if (this.type == 109)
						{
							int num836 = (int)Player.FindClosest(this.position, this.width, this.height);
							if ((double)(base.Center - Main.player[num836].Center).Length() > (double)Main.maxScreenW * 0.75)
							{
								num834 = -1;
								num835 = 593;
							}
						}
						if (Main.tile[num832, num833].halfBrick() && this.velocity.Y > 0f && Math.Abs(this.velocity.Y) > Math.Abs(this.velocity.X))
						{
							num833--;
						}
						if (!Main.tile[num832, num833].active() && num834 >= 0)
						{
							bool flag5 = false;
							if (num833 < Main.maxTilesY - 2 && Main.tile[num832, num833 + 1] != null && Main.tile[num832, num833 + 1].active() && Main.tile[num832, num833 + 1].type == 314)
							{
								flag5 = true;
							}
							if (!flag5)
							{
								WorldGen.PlaceTile(num832, num833, num834, false, true, -1, 0);
							}
							if (!flag5 && Main.tile[num832, num833].active() && (int)Main.tile[num832, num833].type == num834)
							{
								if (Main.tile[num832, num833 + 1].halfBrick() || Main.tile[num832, num833 + 1].slope() != 0)
								{
									WorldGen.SlopeTile(num832, num833 + 1, 0);
									if (Main.netMode == 2)
									{
										NetMessage.SendData(17, -1, -1, "", 14, (float)num832, (float)(num833 + 1), 0f, 0, 0, 0);
									}
								}
								if (Main.netMode != 0)
								{
									NetMessage.SendData(17, -1, -1, "", 1, (float)num832, (float)num833, (float)num834, 0, 0, 0);
								}
							}
							else if (num835 > 0)
							{
								num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num835, 1, false, 0, false, false);
							}
						}
						else if (num835 > 0)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num835, 1, false, 0, false, false);
						}
					}
					if (this.type == 1 && Main.rand.Next(3) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
					}
					if (this.type == 474 && Main.rand.Next(3) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3003, 1, false, 0, false, false);
					}
					if (this.type == 103 && Main.rand.Next(6) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 545, 1, false, 0, false, false);
						}
						else
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 2 && Main.rand.Next(3) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 41, 1, false, 0, false, false);
						}
						else
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 172 && Main.rand.Next(3) == 0)
					{
						if (Main.rand.Next(3) == 0)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 988, 1, false, 0, false, false);
						}
						else
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false, false);
						}
					}
					if (this.type == 171)
					{
						if (this.ai[1] == 0f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 985, 1, false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 965, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
					}
					if (this.type == 475)
					{
						if (this.ai[1] == 0f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3005, 1, false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2996, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
					}
					if (this.type == 505)
					{
						if (this.ai[1] == 0f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3079, 1, false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3077, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
					}
					if (this.type == 506)
					{
						if (this.ai[1] == 0f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3080, 1, false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
						else if (this.ai[1] < 10f)
						{
							num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3078, (int)(10f - this.ai[1]), false, 0, false, false);
							Main.item[num831].noGrabDelay = 0;
						}
					}
					if (this.type == 91 && Main.rand.Next(6) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 516, 1, false, 0, false, false);
					}
					if (this.type == 50 && Main.rand.Next(3) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, 1, false, 0, false, false);
					}
					if (this.type == 515 && Main.rand.Next(3) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3112, 1, false, 0, false, false);
					}
					if (this.type == 53 && Main.rand.Next(3) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 286, 1, false, 0, false, false);
					}
					if (this.type == 48 && Main.rand.Next(2) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 279, 1, false, 0, false, false);
					}
					if (this.type == 54 && Main.rand.Next(2) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 287, 1, false, 0, false, false);
					}
					if (this.type == 3 && Main.rand.Next(2) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 42, 1, false, 0, false, false);
					}
					if (this.type == 4 && Main.rand.Next(4) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, 1, false, 0, false, false);
					}
					if (this.type == 12 && this.damage > 500)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 75, 1, false, 0, false, false);
					}
					if (this.type == 155)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 859, 1, false, 0, false, false);
					}
					if (this.type == 598 && Main.rand.Next(4) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3378, 1, false, 0, false, false);
					}
					if (this.type == 599 && Main.rand.Next(4) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3379, 1, false, 0, false, false);
					}
					if (this.type == 21 && Main.rand.Next(2) == 0)
					{
						num831 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, 1, false, 0, false, false);
					}
					if (Main.netMode == 1 && num831 >= 0)
					{
						NetMessage.SendData(21, -1, -1, "", num831, 1f, 0f, 0f, 0, 0, 0);
					}
				}
				if (this.type == 69 || this.type == 70 || this.type == 621)
				{
					int i2 = (int)(this.position.X + (float)(this.width / 2)) / 16;
					int j2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
					if (this.type == 69)
					{
						WorldGen.Convert(i2, j2, 2, 4);
					}
					if (this.type == 70)
					{
						WorldGen.Convert(i2, j2, 1, 4);
					}
					if (this.type == 621)
					{
						WorldGen.Convert(i2, j2, 4, 4);
					}
				}
				if (this.type == 378)
				{
					int num837 = Main.rand.Next(2, 4);
					if (Main.rand.Next(5) == 0)
					{
						num837++;
					}
					for (int num838 = 0; num838 < num837; num838++)
					{
						float num839 = this.velocity.X;
						float num840 = this.velocity.Y;
						num839 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						num840 *= 1f + (float)Main.rand.Next(-20, 21) * 0.01f;
						Projectile.NewProjectile(base.Center.X, base.Center.Y, num839, num840, 379, this.damage, this.knockBack, this.owner, 0f, 0f);
					}
				}
			}
			this.active = false;
		}

		public Color GetAlpha(Color newColor)
		{
			if (this.type == 270)
			{
				return new Color(255, 255, 255, Main.rand.Next(0, 255));
			}
			int num;
			int num2;
			int num3;
			if (this.type == 650)
			{
				num = (int)((double)newColor.R * 1.5);
				num2 = (int)((double)newColor.G * 1.5);
				num3 = (int)((double)newColor.B * 1.5);
				if (num > 255)
				{
				}
				if (num2 > 255)
				{
				}
				if (num3 > 255)
				{
				}
			}
			else
			{
				if (this.type == 604 || this.type == 631)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 636)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 64 - this.alpha / 4);
				}
				if (this.type == 673 || this.type == 706)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 180 - this.alpha / 2 - this.alpha / 4);
				}
				if (this.type == 603 || this.type == 633)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 623 || (this.type >= 625 && this.type <= 628) || this.type == 710)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 645 || this.type == 643)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 127 - this.alpha / 2);
				}
				if (this.type == 611)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 640 || this.type == 644 || this.type == 658)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 612)
				{
					return new Color(255, 255, 255, 127);
				}
				if (this.aiStyle == 105)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 554)
				{
					return new Color(200, 200, 200, 200);
				}
				if (this.type == 601)
				{
					return PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
				}
				if (this.type == 602)
				{
					Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
					portalColor.A = 227;
					return portalColor;
				}
				if (this.type == 585)
				{
					byte a = newColor.A;
					newColor = Color.Lerp(newColor, Color.White, 0.5f);
					newColor.A = a;
					return newColor;
				}
				if (this.type == 573 || this.type == 578 || this.type == 579 || this.type == 617 || this.type == 641 || this.type == 707)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 9 || this.type == 490)
				{
					return Color.White;
				}
				if (this.type == 575 || this.type == 596 || this.type == 659)
				{
					if (this.timeLeft < 30)
					{
						float num4 = (float)this.timeLeft / 30f;
						this.alpha = (int)(255f - 255f * num4);
					}
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 128 - this.alpha / 2);
				}
				if (this.type == 546)
				{
					return new Color(255, 200, 255, 200);
				}
				if (this.type == 553)
				{
					return new Color(255, 255, 200, 200);
				}
				if (this.type == 540)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
				}
				if (this.type == 498)
				{
					return new Color(255, 100, 20, 200);
				}
				if (this.type == 538)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 518)
				{
					float num5 = 1f - (float)this.alpha / 255f;
					return new Color((int)(200f * num5), (int)(200f * num5), (int)(200f * num5), (int)(100f * num5));
				}
				if (this.type == 518 || this.type == 595)
				{
					Color value = Color.Lerp(newColor, Color.White, 0.85f);
					value.A = 128;
					return value * (1f - (float)this.alpha / 255f);
				}
				if (this.type == 536 || this.type == 607)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 63 - this.alpha / 4);
				}
				if (this.type == 591)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 63 - this.alpha / 4);
				}
				if (this.type == 493 || this.type == 494)
				{
					return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
				}
				if (this.type == 492)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 491)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 485 || this.type == 502)
				{
					return new Color(255, 255, 255, 200);
				}
				if (this.type == 488)
				{
					return new Color(255, 255, 255, 255);
				}
				if (this.type == 477 || this.type == 478 || this.type == 479)
				{
					if (this.alpha == 0)
					{
						return new Color(255, 255, 255, 200);
					}
					return new Color(0, 0, 0, 0);
				}
				else
				{
					if (this.type == 473)
					{
						return new Color(255, 255, 255, 255);
					}
					if (this.type == 50 || this.type == 53 || this.type == 515)
					{
						return new Color(255, 255, 255, 0);
					}
					if (this.type == 92)
					{
						return new Color(255, 255, 255, 0);
					}
					if (this.type == 91)
					{
						return new Color(200, 200, 200, 0);
					}
					if (this.type == 34 || this.type == 15 || this.type == 93 || this.type == 94 || this.type == 95 || this.type == 96 || this.type == 253 || this.type == 258 || (this.type == 102 && this.alpha < 255))
					{
						return new Color(200, 200, 200, 25);
					}
					if (this.type == 465)
					{
						return new Color(255, 255, 255, 0) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 503)
					{
						Color value2 = Color.Lerp(newColor, Color.White, 0.5f) * (1f - (float)this.alpha / 255f);
						Color value3 = Color.Lerp(Color.Purple, Color.White, 0.33f);
						float amount = 0.25f + (float)Math.Cos((double)this.localAI[0]) * 0.25f;
						return Color.Lerp(value2, value3, amount);
					}
					if (this.type == 467)
					{
						return new Color(255, 255, 255, 255) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 694 || this.type == 695 || this.type == 696)
					{
						return new Color(255, 255, 255, 127) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 634 || this.type == 635)
					{
						return new Color(255, 255, 255, 127) * this.Opacity;
					}
					if (this.type == 671)
					{
						return new Color(255, 255, 255, 255) * this.Opacity;
					}
					if (this.type == 664 || this.type == 666 || this.type == 668)
					{
						newColor = Color.Lerp(newColor, Color.White, 0.5f);
						return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 200) * this.Opacity;
					}
					if (this.type == 451)
					{
						return new Color(255, 255, 255, 200) * ((255f - (float)this.alpha) / 255f);
					}
					if (this.type == 684)
					{
						return new Color(255, 255, 255, 200) * ((255f - (float)this.alpha) / 255f);
					}
					if (this.type == 454 || this.type == 452)
					{
						return new Color(255, 255, 255, 255) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 464)
					{
						return new Color(255, 255, 255, 255) * ((255f - (float)this.alpha) / 255f);
					}
					if (this.type == 450)
					{
						return new Color(200, 200, 200, 255 - this.alpha);
					}
					if (this.type == 459 || this.type == 709)
					{
						return new Color(255, 255, 255, 200);
					}
					if (this.type == 447)
					{
						return new Color(255, 255, 255, 200);
					}
					if (this.type == 446)
					{
						Color value4 = Color.Lerp(newColor, Color.White, 0.8f);
						return value4 * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 691 || this.type == 692 || this.type == 693)
					{
						Color value5 = Color.Lerp(newColor, Color.White, 0.4f);
						return value5 * (1f - (float)this.alpha / 255f);
					}
					if (this.type >= 646 && this.type <= 649)
					{
						Color value6 = Color.Lerp(newColor, Color.White, 0.8f);
						return value6 * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 445)
					{
						return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
					}
					if (this.type == 440 || this.type == 449 || this.type == 606)
					{
						num = 255 - this.alpha;
						num2 = 255 - this.alpha;
						num3 = 255 - this.alpha;
					}
					else
					{
						if (this.type == 444)
						{
							return newColor * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 443 || this.type == 675 || this.type == 686 || this.type == 711)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 676)
						{
							return newColor * this.Opacity;
						}
						if (this.type == 438)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 592)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 437 || this.type == 700)
						{
							return new Color(255, 255, 255, 0) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 462)
						{
							return new Color(255, 255, 255, 128) * (1f - (float)this.alpha / 255f);
						}
						if (this.type == 352)
						{
							return new Color(250, 250, 250, this.alpha);
						}
						if (this.type == 435)
						{
							newColor = Color.Lerp(newColor, Color.White, 0.8f);
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
						}
						if (this.type == 682)
						{
							newColor = Color.Lerp(newColor, Color.White, 0.8f);
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 127);
						}
						if (this.type == 436)
						{
							newColor = Color.Lerp(newColor, Color.White, 0.8f);
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
						}
						if (this.type == 409)
						{
							return new Color(250, 250, 250, 200);
						}
						if (this.type == 348 || this.type == 349)
						{
							return new Color(200, 200, 200, this.alpha);
						}
						if (this.type == 337)
						{
							return new Color(250, 250, 250, 150);
						}
						if (this.type >= 424 && this.type <= 426)
						{
							byte b = 150;
							if (newColor.R < b)
							{
								newColor.R = b;
							}
							if (newColor.G < b)
							{
								newColor.G = b;
							}
							if (newColor.B < b)
							{
								newColor.B = b;
							}
							return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 255);
						}
						if (this.type == 431 || this.type == 432)
						{
							return new Color(250, 250, 250, 255 - this.alpha);
						}
						if (this.type == 343 || this.type == 344)
						{
							float num6 = 1f - (float)this.alpha / 255f;
							return new Color((int)(250f * num6), (int)(250f * num6), (int)(250f * num6), (int)(100f * num6));
						}
						if (this.type == 332)
						{
							return new Color(255, 255, 255, 255);
						}
						if (this.type == 329)
						{
							return new Color(200, 200, 200, 50);
						}
						if (this.type >= 326 && this.type <= 328)
						{
							return Color.Transparent;
						}
						if (this.type >= 400 && this.type <= 402)
						{
							return Color.Transparent;
						}
						if (this.type == 324 && this.frame >= 6 && this.frame <= 9)
						{
							return new Color(255, 255, 255, 255);
						}
						if (this.type == 16)
						{
							return new Color(255, 255, 255, 0);
						}
						if (this.type == 321)
						{
							return new Color(200, 200, 200, 0);
						}
						if (this.type == 76 || this.type == 77 || this.type == 78)
						{
							return new Color(255, 255, 255, 0);
						}
						if (this.type == 308)
						{
							return new Color(200, 200, 255, 125);
						}
						if (this.type == 263)
						{
							if (this.timeLeft < 255)
							{
								return new Color(255, 255, 255, (int)((byte)this.timeLeft));
							}
							return new Color(255, 255, 255, 255);
						}
						else if (this.type == 274)
						{
							if (this.timeLeft < 85)
							{
								byte b2 = (byte)(this.timeLeft * 3);
								byte a2 = (byte)(100f * ((float)b2 / 255f));
								return new Color((int)b2, (int)b2, (int)b2, (int)a2);
							}
							return new Color(255, 255, 255, 100);
						}
						else
						{
							if (this.type == 5)
							{
								return new Color(255, 255, 255, 0);
							}
							if (this.type == 300 || this.type == 301)
							{
								return new Color(250, 250, 250, 50);
							}
							if (this.type == 712)
							{
								return Color.Lerp(newColor, Color.White, 0.4f) * this.Opacity;
							}
							if (this.type == 304)
							{
								return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, (int)((byte)((float)(255 - this.alpha) / 3f)));
							}
							if (this.type == 116 || this.type == 132 || this.type == 156 || this.type == 157 || this.type == 157 || this.type == 173)
							{
								if (this.localAI[1] >= 15f)
								{
									return new Color(255, 255, 255, this.alpha);
								}
								if (this.localAI[1] < 5f)
								{
									return Color.Transparent;
								}
								int num7 = (int)((this.localAI[1] - 5f) / 10f * 255f);
								return new Color(num7, num7, num7, num7);
							}
							else
							{
								if (this.type == 254)
								{
									if (this.timeLeft < 30)
									{
										float num8 = (float)this.timeLeft / 30f;
										this.alpha = (int)(255f - 255f * num8);
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								if (this.type == 265 || this.type == 355)
								{
									if (this.alpha > 0)
									{
										return Color.Transparent;
									}
									return new Color(255, 255, 255, 0);
								}
								else if (this.type == 270 && this.ai[0] >= 0f)
								{
									if (this.alpha > 0)
									{
										return Color.Transparent;
									}
									return new Color(255, 255, 255, 200);
								}
								else if (this.type == 257)
								{
									if (this.alpha > 200)
									{
										return Color.Transparent;
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								else if (this.type == 259)
								{
									if (this.alpha > 200)
									{
										return Color.Transparent;
									}
									return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
								}
								else
								{
									if (this.type >= 150 && this.type <= 152)
									{
										return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 255 - this.alpha);
									}
									if (this.type == 250)
									{
										return Color.Transparent;
									}
									if (this.type == 251)
									{
										num = 255 - this.alpha;
										num2 = 255 - this.alpha;
										num3 = 255 - this.alpha;
										return new Color(num, num2, num3, 0);
									}
									if (this.type == 131)
									{
										return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
									}
									if (this.type == 211)
									{
										return new Color(255, 255, 255, 0);
									}
									if (this.type == 229)
									{
										return new Color(255, 255, 255, 50);
									}
									if (this.type == 221)
									{
										return new Color(255, 255, 255, 200);
									}
									if (this.type == 20)
									{
										if (this.alpha <= 150)
										{
											return new Color(255, 255, 255, 0);
										}
										return new Color(0, 0, 0, 0);
									}
									else if (this.type == 207)
									{
										num = 255 - this.alpha;
										num2 = 255 - this.alpha;
										num3 = 255 - this.alpha;
									}
									else if (this.type == 242)
									{
										if (this.alpha < 140)
										{
											return new Color(255, 255, 255, 100);
										}
										return Color.Transparent;
									}
									else
									{
										if (this.type == 638)
										{
											return new Color(255, 255, 255, 100) * this.Opacity;
										}
										if (this.type == 660)
										{
											return new Color(150, 255, 255, 0) * this.Opacity;
										}
										if (this.type == 209)
										{
											num = (int)newColor.R - this.alpha;
											num2 = (int)newColor.G - this.alpha;
											num3 = (int)newColor.B - this.alpha / 2;
										}
										else
										{
											if (this.type == 130)
											{
												return new Color(255, 255, 255, 175);
											}
											if (this.type == 182)
											{
												return new Color(255, 255, 255, 200);
											}
											if (this.type == 226)
											{
												num = 255;
												num2 = 255;
												num3 = 255;
												float num9 = (float)Main.mouseTextColor / 200f - 0.3f;
												num = (int)((float)num * num9);
												num2 = (int)((float)num2 * num9);
												num3 = (int)((float)num3 * num9);
												num += 50;
												if (num > 255)
												{
													num = 255;
												}
												num2 += 50;
												if (num2 > 255)
												{
													num2 = 255;
												}
												num3 += 50;
												if (num3 > 255)
												{
													num3 = 255;
												}
												return new Color(num, num2, num3, 200);
											}
											if (this.type == 227)
											{
												num2 = (num = (num3 = 255));
												float num10 = (float)Main.mouseTextColor / 100f - 1.6f;
												num = (int)((float)num * num10);
												num2 = (int)((float)num2 * num10);
												num3 = (int)((float)num3 * num10);
												int a3 = (int)(100f * num10);
												num += 50;
												if (num > 255)
												{
													num = 255;
												}
												num2 += 50;
												if (num2 > 255)
												{
													num2 = 255;
												}
												num3 += 50;
												if (num3 > 255)
												{
													num3 = 255;
												}
												return new Color(num, num2, num3, a3);
											}
											if (this.type == 114 || this.type == 115)
											{
												if (this.localAI[1] >= 15f)
												{
													return new Color(255, 255, 255, this.alpha);
												}
												if (this.localAI[1] < 5f)
												{
													return Color.Transparent;
												}
												int num11 = (int)((this.localAI[1] - 5f) / 10f * 255f);
												return new Color(num11, num11, num11, num11);
											}
											else if (this.type == 83 || this.type == 88 || this.type == 89 || this.type == 90 || this.type == 100 || this.type == 104 || this.type == 279 || (this.type >= 283 && this.type <= 287))
											{
												if (this.alpha < 200)
												{
													return new Color(255 - this.alpha, 255 - this.alpha, 255 - this.alpha, 0);
												}
												return Color.Transparent;
											}
											else
											{
												if (this.type == 34 || this.type == 35 || this.type == 15 || this.type == 19 || this.type == 44 || this.type == 45)
												{
													return Color.White;
												}
												if (this.type == 79)
												{
													num = Main.DiscoR;
													num2 = Main.DiscoG;
													num3 = Main.DiscoB;
													return default(Color);
												}
												if (this.type == 9 || this.type == 15 || this.type == 34 || this.type == 50 || this.type == 53 || this.type == 76 || this.type == 77 || this.type == 78 || this.type == 92 || this.type == 91)
												{
													num = (int)newColor.R - this.alpha / 3;
													num2 = (int)newColor.G - this.alpha / 3;
													num3 = (int)newColor.B - this.alpha / 3;
												}
												else
												{
													if (this.type == 18)
													{
														return new Color(255, 255, 255, 50);
													}
													if (this.type == 16 || this.type == 44 || this.type == 45)
													{
														num = (int)newColor.R;
														num2 = (int)newColor.G;
														num3 = (int)newColor.B;
													}
													else if (this.type == 12 || this.type == 72 || this.type == 86 || this.type == 87)
													{
														return new Color(255, 255, 255, (int)newColor.A - this.alpha);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			float num12 = (float)(255 - this.alpha) / 255f;
			num = (int)((float)newColor.R * num12);
			num2 = (int)((float)newColor.G * num12);
			num3 = (int)((float)newColor.B * num12);
			int num13 = (int)newColor.A - this.alpha;
			if (num13 < 0)
			{
				num13 = 0;
			}
			if (num13 > 255)
			{
				num13 = 255;
			}
			return new Color(num, num2, num3, num13);
		}

		public override string ToString()
		{
			return string.Concat(new object[]
			{
				"type:",
				this.type,
				"name:",
				this.name,
				", active:",
				this.active,
				", whoAmI:",
				this.whoAmI,
				", identity:",
				this.identity,
				", ai0:",
				this.ai[0],
				" , uuid:",
				this.projUUID
			});
		}
	}
}
